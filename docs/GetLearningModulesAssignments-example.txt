config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)

apiInstance := platformclientv2.NewLearningApiWithConfig(config)

var userIds []string // The IDs of the users to include
var pageSize int // Page size
var pageNumber int // Page number
var searchTerm string // Search Term (searches by name and description)
var overdue string // Specifies if only modules with overdue/not overdue (overdue is \"True\" or \"False\") assignments are returned. If overdue is \"Any\" or omitted, both are returned and can including modules that are unassigned.
var assignmentStates []string // Specifies the assignment states to return.
var expand []string // Fields to expand in response(case insensitive)
// Get all learning modules of an organization including assignments for a specific user
data, response, err := apiInstance.GetLearningModulesAssignments(userIds, pageSize, pageNumber, searchTerm, overdue, assignmentStates, expand)
fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
if err != nil {
	fmt.Printf("Error calling GetLearningModulesAssignments: %v\n", err)
}