{
    "DELETE /api/v2/integrations/{integrationId}": {
        "operationId": "deleteintegration",
        "functionName": "DeleteIntegration",
        "signature": "DeleteIntegration(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Integration"
    },
    "DELETE /api/v2/integrations/actions/{actionId}": {
        "operationId": "deleteintegrationsaction",
        "functionName": "DeleteIntegrationsAction",
        "signature": "DeleteIntegrationsAction(actionId)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "deleteintegrationsactiondraft",
        "functionName": "DeleteIntegrationsActionDraft",
        "signature": "DeleteIntegrationsActionDraft(actionId)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/integrations/credentials/{credentialId}": {
        "operationId": "deleteintegrationscredential",
        "functionName": "DeleteIntegrationsCredential",
        "signature": "DeleteIntegrationsCredential(credentialId)",
        "parameters": [
            {
                "name": "credentialId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/integrations/{integrationId}": {
        "operationId": "getintegration",
        "functionName": "GetIntegration",
        "signature": "GetIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Integration"
    },
    "GET /api/v2/integrations/{integrationId}/config/current": {
        "operationId": "getintegrationconfigcurrent",
        "functionName": "GetIntegrationConfigCurrent",
        "signature": "GetIntegrationConfigCurrent(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Integrationconfiguration"
    },
    "GET /api/v2/integrations": {
        "operationId": "getintegrations",
        "functionName": "GetIntegrations",
        "signature": "GetIntegrations(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Integrationentitylisting"
    },
    "GET /api/v2/integrations/actions/{actionId}": {
        "operationId": "getintegrationsaction",
        "functionName": "GetIntegrationsAction",
        "signature": "GetIntegrationsAction(actionId, expand, includeConfig)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            },
            {
                "name": "includeConfig",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Action"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "getintegrationsactiondraft",
        "functionName": "GetIntegrationsActionDraft",
        "signature": "GetIntegrationsActionDraft(actionId, expand, includeConfig)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            },
            {
                "name": "includeConfig",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Action"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft/schemas/{fileName}": {
        "operationId": "getintegrationsactiondraftschema",
        "functionName": "GetIntegrationsActionDraftSchema",
        "signature": "GetIntegrationsActionDraftSchema(actionId, fileName)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "fileName",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Jsonschemadocument"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft/templates/{fileName}": {
        "operationId": "getintegrationsactiondrafttemplate",
        "functionName": "GetIntegrationsActionDraftTemplate",
        "signature": "GetIntegrationsActionDraftTemplate(actionId, fileName)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "fileName",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft/validation": {
        "operationId": "getintegrationsactiondraftvalidation",
        "functionName": "GetIntegrationsActionDraftValidation",
        "signature": "GetIntegrationsActionDraftValidation(actionId)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Draftvalidationresult"
    },
    "GET /api/v2/integrations/actions/{actionId}/schemas/{fileName}": {
        "operationId": "getintegrationsactionschema",
        "functionName": "GetIntegrationsActionSchema",
        "signature": "GetIntegrationsActionSchema(actionId, fileName)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "fileName",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Jsonschemadocument"
    },
    "GET /api/v2/integrations/actions/{actionId}/templates/{fileName}": {
        "operationId": "getintegrationsactiontemplate",
        "functionName": "GetIntegrationsActionTemplate",
        "signature": "GetIntegrationsActionTemplate(actionId, fileName)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "fileName",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "GET /api/v2/integrations/actions": {
        "operationId": "getintegrationsactions",
        "functionName": "GetIntegrationsActions",
        "signature": "GetIntegrationsActions(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            },
            {
                "name": "category",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "ids",
                "type": "string",
                "required": "false"
            },
            {
                "name": "secure",
                "type": "string",
                "required": "false"
            },
            {
                "name": "includeAuthActions",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Actionentitylisting"
    },
    "GET /api/v2/integrations/actions/categories": {
        "operationId": "getintegrationsactionscategories",
        "functionName": "GetIntegrationsActionsCategories",
        "signature": "GetIntegrationsActionsCategories(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, secure)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            },
            {
                "name": "secure",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Categoryentitylisting"
    },
    "GET /api/v2/integrations/actions/drafts": {
        "operationId": "getintegrationsactionsdrafts",
        "functionName": "GetIntegrationsActionsDrafts",
        "signature": "GetIntegrationsActionsDrafts(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            },
            {
                "name": "category",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "ids",
                "type": "string",
                "required": "false"
            },
            {
                "name": "secure",
                "type": "string",
                "required": "false"
            },
            {
                "name": "includeAuthActions",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Actionentitylisting"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots/{botId}": {
        "operationId": "getintegrationsbotconnectorintegrationidbot",
        "functionName": "GetIntegrationsBotconnectorIntegrationIdBot",
        "signature": "GetIntegrationsBotconnectorIntegrationIdBot(integrationId, botId, version)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "version",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Botconnectorbot"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots/{botId}/versions": {
        "operationId": "getintegrationsbotconnectorintegrationidbotversions",
        "functionName": "GetIntegrationsBotconnectorIntegrationIdBotVersions",
        "signature": "GetIntegrationsBotconnectorIntegrationIdBotVersions(integrationId, botId, pageNumber, pageSize)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Botconnectorbotversionsummaryentitylisting"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots": {
        "operationId": "getintegrationsbotconnectorintegrationidbots",
        "functionName": "GetIntegrationsBotconnectorIntegrationIdBots",
        "signature": "GetIntegrationsBotconnectorIntegrationIdBots(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Botlist"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots/summaries": {
        "operationId": "getintegrationsbotconnectorintegrationidbotssummaries",
        "functionName": "GetIntegrationsBotconnectorIntegrationIdBotsSummaries",
        "signature": "GetIntegrationsBotconnectorIntegrationIdBotsSummaries(integrationId, pageNumber, pageSize)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Botconnectorbotsummaryentitylisting"
    },
    "GET /api/v2/integrations/clientapps": {
        "operationId": "getintegrationsclientapps",
        "functionName": "GetIntegrationsClientapps",
        "signature": "GetIntegrationsClientapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Clientappentitylisting"
    },
    "GET /api/v2/integrations/clientapps/unifiedcommunications": {
        "operationId": "getintegrationsclientappsunifiedcommunications",
        "functionName": "GetIntegrationsClientappsUnifiedcommunications",
        "signature": "GetIntegrationsClientappsUnifiedcommunications(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Ucintegrationlisting"
    },
    "GET /api/v2/integrations/credentials/{credentialId}": {
        "operationId": "getintegrationscredential",
        "functionName": "GetIntegrationsCredential",
        "signature": "GetIntegrationsCredential(credentialId)",
        "parameters": [
            {
                "name": "credentialId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Credential"
    },
    "GET /api/v2/integrations/credentials": {
        "operationId": "getintegrationscredentials",
        "functionName": "GetIntegrationsCredentials",
        "signature": "GetIntegrationsCredentials(pageNumber, pageSize)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Credentialinfolisting"
    },
    "GET /api/v2/integrations/credentials/types": {
        "operationId": "getintegrationscredentialstypes",
        "functionName": "GetIntegrationsCredentialsTypes",
        "signature": "GetIntegrationsCredentialsTypes()",
        
        "return": "Credentialtypelisting"
    },
    "GET /api/v2/integrations/speech/dialogflow/agents/{agentId}": {
        "operationId": "getintegrationsspeechdialogflowagent",
        "functionName": "GetIntegrationsSpeechDialogflowAgent",
        "signature": "GetIntegrationsSpeechDialogflowAgent(agentId)",
        "parameters": [
            {
                "name": "agentId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Dialogflowagent"
    },
    "GET /api/v2/integrations/speech/dialogflow/agents": {
        "operationId": "getintegrationsspeechdialogflowagents",
        "functionName": "GetIntegrationsSpeechDialogflowAgents",
        "signature": "GetIntegrationsSpeechDialogflowAgents(pageNumber, pageSize, name)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Dialogflowagentsummaryentitylisting"
    },
    "GET /api/v2/integrations/speech/lex/bot/alias/{aliasId}": {
        "operationId": "getintegrationsspeechlexbotalias",
        "functionName": "GetIntegrationsSpeechLexBotAlias",
        "signature": "GetIntegrationsSpeechLexBotAlias(aliasId)",
        "parameters": [
            {
                "name": "aliasId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Lexbotalias"
    },
    "GET /api/v2/integrations/speech/lex/bot/{botId}/aliases": {
        "operationId": "getintegrationsspeechlexbotbotidaliases",
        "functionName": "GetIntegrationsSpeechLexBotBotIdAliases",
        "signature": "GetIntegrationsSpeechLexBotBotIdAliases(botId, pageNumber, pageSize, status, name)",
        "parameters": [
            {
                "name": "botId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "status",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Lexbotaliasentitylisting"
    },
    "GET /api/v2/integrations/speech/lex/bots": {
        "operationId": "getintegrationsspeechlexbots",
        "functionName": "GetIntegrationsSpeechLexBots",
        "signature": "GetIntegrationsSpeechLexBots(pageNumber, pageSize, name)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Lexbotentitylisting"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbot",
        "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBot",
        "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBot(nuanceIntegrationId, botId, expand, targetChannel)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "targetChannel",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Nuancebot"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs/{jobId}": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbotjob",
        "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJob",
        "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJob(nuanceIntegrationId, botId, jobId)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncjob"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs/{jobId}/results": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbotjobresults",
        "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults",
        "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults(nuanceIntegrationId, botId, jobId)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Nuancebot"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbots",
        "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBots",
        "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBots(nuanceIntegrationId, pageNumber, pageSize, onlyRegisteredBots)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "onlyRegisteredBots",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Nuancebotentitylisting"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs/{jobId}": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbotsjob",
        "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob",
        "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob(nuanceIntegrationId, jobId)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncjob"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs/{jobId}/results": {
        "operationId": "getintegrationsspeechnuancenuanceintegrationidbotsjobresults",
        "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults",
        "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults(nuanceIntegrationId, jobId)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Nuancebotentitylisting"
    },
    "GET /api/v2/integrations/speech/tts/engines/{engineId}": {
        "operationId": "getintegrationsspeechttsengine",
        "functionName": "GetIntegrationsSpeechTtsEngine",
        "signature": "GetIntegrationsSpeechTtsEngine(engineId, includeVoices)",
        "parameters": [
            {
                "name": "engineId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "includeVoices",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Ttsengineentity"
    },
    "GET /api/v2/integrations/speech/tts/engines/{engineId}/voices/{voiceId}": {
        "operationId": "getintegrationsspeechttsenginevoice",
        "functionName": "GetIntegrationsSpeechTtsEngineVoice",
        "signature": "GetIntegrationsSpeechTtsEngineVoice(engineId, voiceId)",
        "parameters": [
            {
                "name": "engineId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "voiceId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Ttsvoiceentity"
    },
    "GET /api/v2/integrations/speech/tts/engines/{engineId}/voices": {
        "operationId": "getintegrationsspeechttsenginevoices",
        "functionName": "GetIntegrationsSpeechTtsEngineVoices",
        "signature": "GetIntegrationsSpeechTtsEngineVoices(engineId, pageNumber, pageSize)",
        "parameters": [
            {
                "name": "engineId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Ttsvoiceentitylisting"
    },
    "GET /api/v2/integrations/speech/tts/engines": {
        "operationId": "getintegrationsspeechttsengines",
        "functionName": "GetIntegrationsSpeechTtsEngines",
        "signature": "GetIntegrationsSpeechTtsEngines(pageNumber, pageSize, includeVoices, name, language)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "includeVoices",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "language",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Ttsengineentitylisting"
    },
    "GET /api/v2/integrations/speech/tts/settings": {
        "operationId": "getintegrationsspeechttssettings",
        "functionName": "GetIntegrationsSpeechTtsSettings",
        "signature": "GetIntegrationsSpeechTtsSettings()",
        
        "return": "Ttssettings"
    },
    "GET /api/v2/integrations/types/{typeId}": {
        "operationId": "getintegrationstype",
        "functionName": "GetIntegrationsType",
        "signature": "GetIntegrationsType(typeId)",
        "parameters": [
            {
                "name": "typeId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Integrationtype"
    },
    "GET /api/v2/integrations/types/{typeId}/configschemas/{configType}": {
        "operationId": "getintegrationstypeconfigschema",
        "functionName": "GetIntegrationsTypeConfigschema",
        "signature": "GetIntegrationsTypeConfigschema(typeId, configType)",
        "parameters": [
            {
                "name": "typeId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "configType",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Jsonschemadocument"
    },
    "GET /api/v2/integrations/types": {
        "operationId": "getintegrationstypes",
        "functionName": "GetIntegrationsTypes",
        "signature": "GetIntegrationsTypes(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Integrationtypeentitylisting"
    },
    "GET /api/v2/integrations/userapps": {
        "operationId": "getintegrationsuserapps",
        "functionName": "GetIntegrationsUserapps",
        "signature": "GetIntegrationsUserapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, appHost)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "appHost",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Userappentitylisting"
    },
    "PATCH /api/v2/integrations/{integrationId}": {
        "operationId": "patchintegration",
        "functionName": "PatchIntegration",
        "signature": "PatchIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "nextPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "previousPage",
                "type": "string",
                "required": "false"
            },
            {
                "name": "body",
                "type": "Integration",
                "required": "false"
            }
        ],
        "return": "Integration"
    },
    "PATCH /api/v2/integrations/actions/{actionId}": {
        "operationId": "patchintegrationsaction",
        "functionName": "PatchIntegrationsAction",
        "signature": "PatchIntegrationsAction(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Updateactioninput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "PATCH /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "patchintegrationsactiondraft",
        "functionName": "PatchIntegrationsActionDraft",
        "signature": "PatchIntegrationsActionDraft(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Updatedraftinput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations": {
        "operationId": "postintegrations",
        "functionName": "PostIntegrations",
        "signature": "PostIntegrations(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Createintegrationrequest",
                "required": "false"
            }
        ],
        "return": "Integration"
    },
    "POST /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "postintegrationsactiondraft",
        "functionName": "PostIntegrationsActionDraft",
        "signature": "PostIntegrationsActionDraft(actionId)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/actions/{actionId}/draft/publish": {
        "operationId": "postintegrationsactiondraftpublish",
        "functionName": "PostIntegrationsActionDraftPublish",
        "signature": "PostIntegrationsActionDraftPublish(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Publishdraftinput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/actions/{actionId}/draft/test": {
        "operationId": "postintegrationsactiondrafttest",
        "functionName": "PostIntegrationsActionDraftTest",
        "signature": "PostIntegrationsActionDraftTest(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "interface{}",
                "required": "true"
            }
        ],
        "return": "Testexecutionresult"
    },
    "POST /api/v2/integrations/actions/{actionId}/execute": {
        "operationId": "postintegrationsactionexecute",
        "functionName": "PostIntegrationsActionExecute",
        "signature": "PostIntegrationsActionExecute(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "interface{}",
                "required": "true"
            }
        ],
        "return": "interface{}"
    },
    "POST /api/v2/integrations/actions/{actionId}/test": {
        "operationId": "postintegrationsactiontest",
        "functionName": "PostIntegrationsActionTest",
        "signature": "PostIntegrationsActionTest(actionId, body)",
        "parameters": [
            {
                "name": "actionId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "interface{}",
                "required": "true"
            }
        ],
        "return": "Testexecutionresult"
    },
    "POST /api/v2/integrations/actions": {
        "operationId": "postintegrationsactions",
        "functionName": "PostIntegrationsActions",
        "signature": "PostIntegrationsActions(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Postactioninput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/actions/drafts": {
        "operationId": "postintegrationsactionsdrafts",
        "functionName": "PostIntegrationsActionsDrafts",
        "signature": "PostIntegrationsActionsDrafts(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Postactioninput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/credentials": {
        "operationId": "postintegrationscredentials",
        "functionName": "PostIntegrationsCredentials",
        "signature": "PostIntegrationsCredentials(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Credential",
                "required": "false"
            }
        ],
        "return": "Credentialinfo"
    },
    "POST /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs": {
        "operationId": "postintegrationsspeechnuancenuanceintegrationidbotjobs",
        "functionName": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs",
        "signature": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs(nuanceIntegrationId, botId, expand, body)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "botId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "body",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Asyncjob"
    },
    "POST /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs": {
        "operationId": "postintegrationsspeechnuancenuanceintegrationidbotsjobs",
        "functionName": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs",
        "signature": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs(nuanceIntegrationId, pageNumber, pageSize, onlyRegisteredBots)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "onlyRegisteredBots",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Asyncjob"
    },
    "POST /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/launch/validate": {
        "operationId": "postintegrationsspeechnuancenuanceintegrationidbotslaunchvalidate",
        "functionName": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate",
        "signature": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate(nuanceIntegrationId, settings)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "settings",
                "type": "Botexecutionconfiguration",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/integrations/{integrationId}/config/current": {
        "operationId": "putintegrationconfigcurrent",
        "functionName": "PutIntegrationConfigCurrent",
        "signature": "PutIntegrationConfigCurrent(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Integrationconfiguration",
                "required": "false"
            }
        ],
        "return": "Integrationconfiguration"
    },
    "PUT /api/v2/integrations/botconnector/{integrationId}/bots": {
        "operationId": "putintegrationsbotconnectorintegrationidbots",
        "functionName": "PutIntegrationsBotconnectorIntegrationIdBots",
        "signature": "PutIntegrationsBotconnectorIntegrationIdBots(integrationId, botList)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "botList",
                "type": "Botlist",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/integrations/credentials/{credentialId}": {
        "operationId": "putintegrationscredential",
        "functionName": "PutIntegrationsCredential",
        "signature": "PutIntegrationsCredential(credentialId, body)",
        "parameters": [
            {
                "name": "credentialId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Credential",
                "required": "false"
            }
        ],
        "return": "Credentialinfo"
    },
    "PUT /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/launch/settings": {
        "operationId": "putintegrationsspeechnuancenuanceintegrationidbotslaunchsettings",
        "functionName": "PutIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings",
        "signature": "PutIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings(nuanceIntegrationId, settings)",
        "parameters": [
            {
                "name": "nuanceIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "settings",
                "type": "Nuancebotlaunchsettings",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/integrations/speech/tts/settings": {
        "operationId": "putintegrationsspeechttssettings",
        "functionName": "PutIntegrationsSpeechTtsSettings",
        "signature": "PutIntegrationsSpeechTtsSettings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Ttssettings",
                "required": "true"
            }
        ],
        "return": "Ttssettings"
    },
    "PUT /api/v2/integrations/unifiedcommunications/{ucIntegrationId}/thirdpartypresences": {
        "operationId": "putintegrationsunifiedcommunicationthirdpartypresences",
        "functionName": "PutIntegrationsUnifiedcommunicationThirdpartypresences",
        "signature": "PutIntegrationsUnifiedcommunicationThirdpartypresences(ucIntegrationId, body)",
        "parameters": [
            {
                "name": "ucIntegrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "[]Ucthirdpartypresence",
                "required": "true"
            }
        ],
        "return": "string"
    }
    
}