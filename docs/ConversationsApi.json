{
    "DELETE /api/v2/analytics/conversations/details/jobs/{jobId}": {
        "operationId": "deleteanalyticsconversationsdetailsjob",
        "functionName": "DeleteAnalyticsConversationsDetailsJob",
        "signature": "DeleteAnalyticsConversationsDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/codes/{addCommunicationCode}": {
        "operationId": "deleteconversationparticipantcode",
        "functionName": "DeleteConversationParticipantCode",
        "signature": "DeleteConversationParticipantCode(conversationId, participantId, addCommunicationCode)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "addCommunicationCode",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason": {
        "operationId": "deleteconversationparticipantflaggedreason",
        "functionName": "DeleteConversationParticipantFlaggedreason",
        "signature": "DeleteConversationParticipantFlaggedreason(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult": {
        "operationId": "deleteconversationscallparticipantconsult",
        "functionName": "DeleteConversationsCallParticipantConsult",
        "signature": "DeleteConversationsCallParticipantConsult(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/emails/{conversationId}/messages/draft/attachments/{attachmentId}": {
        "operationId": "deleteconversationsemailmessagesdraftattachment",
        "functionName": "DeleteConversationsEmailMessagesDraftAttachment",
        "signature": "DeleteConversationsEmailMessagesDraftAttachment(conversationId, attachmentId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "attachmentId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/messages/cachedmedia/{cachedMediaItemId}": {
        "operationId": "deleteconversationsmessagescachedmediacachedmediaitemid",
        "functionName": "DeleteConversationsMessagesCachedmediaCachedMediaItemId",
        "signature": "DeleteConversationsMessagesCachedmediaCachedMediaItemId(cachedMediaItemId)",
        "parameters": [
            {
                "name": "cachedMediaItemId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/messaging/integrations/facebook/{integrationId}": {
        "operationId": "deleteconversationsmessagingintegrationsfacebookintegrationid",
        "functionName": "DeleteConversationsMessagingIntegrationsFacebookIntegrationId",
        "signature": "DeleteConversationsMessagingIntegrationsFacebookIntegrationId(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/messaging/integrations/instagram/{integrationId}": {
        "operationId": "deleteconversationsmessagingintegrationsinstagramintegrationid",
        "functionName": "DeleteConversationsMessagingIntegrationsInstagramIntegrationId",
        "signature": "DeleteConversationsMessagingIntegrationsInstagramIntegrationId(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/messaging/integrations/line/{integrationId}": {
        "operationId": "deleteconversationsmessagingintegrationslineintegrationid",
        "functionName": "DeleteConversationsMessagingIntegrationsLineIntegrationId",
        "signature": "DeleteConversationsMessagingIntegrationsLineIntegrationId(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/messaging/integrations/open/{integrationId}": {
        "operationId": "deleteconversationsmessagingintegrationsopenintegrationid",
        "functionName": "DeleteConversationsMessagingIntegrationsOpenIntegrationId",
        "signature": "DeleteConversationsMessagingIntegrationsOpenIntegrationId(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/messaging/integrations/twitter/{integrationId}": {
        "operationId": "deleteconversationsmessagingintegrationstwitterintegrationid",
        "functionName": "DeleteConversationsMessagingIntegrationsTwitterIntegrationId",
        "signature": "DeleteConversationsMessagingIntegrationsTwitterIntegrationId(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/messaging/integrations/whatsapp/{integrationId}": {
        "operationId": "deleteconversationsmessagingintegrationswhatsappintegrationid",
        "functionName": "DeleteConversationsMessagingIntegrationsWhatsappIntegrationId",
        "signature": "DeleteConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Whatsappintegration"
    },
    "DELETE /api/v2/conversations/messaging/settings/{messageSettingId}": {
        "operationId": "deleteconversationsmessagingsetting",
        "functionName": "DeleteConversationsMessagingSetting",
        "signature": "DeleteConversationsMessagingSetting(messageSettingId)",
        "parameters": [
            {
                "name": "messageSettingId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/conversations/messaging/settings/default": {
        "operationId": "deleteconversationsmessagingsettingsdefault",
        "functionName": "DeleteConversationsMessagingSettingsDefault",
        "signature": "DeleteConversationsMessagingSettingsDefault()"
        
    },
    "DELETE /api/v2/conversations/messaging/supportedcontent/{supportedContentId}": {
        "operationId": "deleteconversationsmessagingsupportedcontentsupportedcontentid",
        "functionName": "DeleteConversationsMessagingSupportedcontentSupportedContentId",
        "signature": "DeleteConversationsMessagingSupportedcontentSupportedContentId(supportedContentId)",
        "parameters": [
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/analytics/conversations/{conversationId}/details": {
        "operationId": "getanalyticsconversationdetails",
        "functionName": "GetAnalyticsConversationDetails",
        "signature": "GetAnalyticsConversationDetails(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Analyticsconversationwithoutattributes"
    },
    "GET /api/v2/analytics/conversations/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsconversationsaggregatesjob",
        "functionName": "GetAnalyticsConversationsAggregatesJob",
        "signature": "GetAnalyticsConversationsAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/conversations/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsconversationsaggregatesjobresults",
        "functionName": "GetAnalyticsConversationsAggregatesJobResults",
        "signature": "GetAnalyticsConversationsAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Conversationasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/conversations/details": {
        "operationId": "getanalyticsconversationsdetails",
        "functionName": "GetAnalyticsConversationsDetails",
        "signature": "GetAnalyticsConversationsDetails(id)",
        "parameters": [
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            }
        ],
        "return": "Analyticsconversationwithoutattributesmultigetresponse"
    },
    "GET /api/v2/analytics/conversations/details/jobs/{jobId}": {
        "operationId": "getanalyticsconversationsdetailsjob",
        "functionName": "GetAnalyticsConversationsDetailsJob",
        "signature": "GetAnalyticsConversationsDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/conversations/details/jobs/{jobId}/results": {
        "operationId": "getanalyticsconversationsdetailsjobresults",
        "functionName": "GetAnalyticsConversationsDetailsJobResults",
        "signature": "GetAnalyticsConversationsDetailsJobResults(jobId, cursor, pageSize)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Analyticsconversationasyncqueryresponse"
    },
    "GET /api/v2/analytics/conversations/details/jobs/availability": {
        "operationId": "getanalyticsconversationsdetailsjobsavailability",
        "functionName": "GetAnalyticsConversationsDetailsJobsAvailability",
        "signature": "GetAnalyticsConversationsDetailsJobsAvailability()",
        
        "return": "Dataavailabilityresponse"
    },
    "GET /api/v2/conversations/{conversationId}": {
        "operationId": "getconversation",
        "functionName": "GetConversation",
        "signature": "GetConversation(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Conversation"
    },
    "GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions/{secureSessionId}": {
        "operationId": "getconversationparticipantsecureivrsession",
        "functionName": "GetConversationParticipantSecureivrsession",
        "signature": "GetConversationParticipantSecureivrsession(conversationId, participantId, secureSessionId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "secureSessionId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Securesession"
    },
    "GET /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions": {
        "operationId": "getconversationparticipantsecureivrsessions",
        "functionName": "GetConversationParticipantSecureivrsessions",
        "signature": "GetConversationParticipantSecureivrsessions(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Securesessionentitylisting"
    },
    "GET /api/v2/conversations/{conversationId}/participants/{participantId}/wrapup": {
        "operationId": "getconversationparticipantwrapup",
        "functionName": "GetConversationParticipantWrapup",
        "signature": "GetConversationParticipantWrapup(conversationId, participantId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/{conversationId}/participants/{participantId}/wrapupcodes": {
        "operationId": "getconversationparticipantwrapupcodes",
        "functionName": "GetConversationParticipantWrapupcodes",
        "signature": "GetConversationParticipantWrapupcodes(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "[]Wrapupcode"
    },
    "GET /api/v2/conversations/{conversationId}/secureattributes": {
        "operationId": "getconversationsecureattributes",
        "functionName": "GetConversationSecureattributes",
        "signature": "GetConversationSecureattributes(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Conversationsecureattributes"
    },
    "GET /api/v2/conversations": {
        "operationId": "getconversations",
        "functionName": "GetConversations",
        "signature": "GetConversations(communicationType)",
        "parameters": [
            {
                "name": "communicationType",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Conversationentitylisting"
    },
    "GET /api/v2/conversations/calls/{conversationId}": {
        "operationId": "getconversationscall",
        "functionName": "GetConversationsCall",
        "signature": "GetConversationsCall(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Callconversation"
    },
    "GET /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "getconversationscallparticipantcommunicationwrapup",
        "functionName": "GetConversationsCallParticipantCommunicationWrapup",
        "signature": "GetConversationsCallParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/calls/{conversationId}/participants/{participantId}/wrapup": {
        "operationId": "getconversationscallparticipantwrapup",
        "functionName": "GetConversationsCallParticipantWrapup",
        "signature": "GetConversationsCallParticipantWrapup(conversationId, participantId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/calls/{conversationId}/participants/{participantId}/wrapupcodes": {
        "operationId": "getconversationscallparticipantwrapupcodes",
        "functionName": "GetConversationsCallParticipantWrapupcodes",
        "signature": "GetConversationsCallParticipantWrapupcodes(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "[]Wrapupcode"
    },
    "GET /api/v2/conversations/callbacks/{conversationId}": {
        "operationId": "getconversationscallback",
        "functionName": "GetConversationsCallback",
        "signature": "GetConversationsCallback(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Callbackconversation"
    },
    "GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "getconversationscallbackparticipantcommunicationwrapup",
        "functionName": "GetConversationsCallbackParticipantCommunicationWrapup",
        "signature": "GetConversationsCallbackParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapup": {
        "operationId": "getconversationscallbackparticipantwrapup",
        "functionName": "GetConversationsCallbackParticipantWrapup",
        "signature": "GetConversationsCallbackParticipantWrapup(conversationId, participantId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/wrapupcodes": {
        "operationId": "getconversationscallbackparticipantwrapupcodes",
        "functionName": "GetConversationsCallbackParticipantWrapupcodes",
        "signature": "GetConversationsCallbackParticipantWrapupcodes(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "[]Wrapupcode"
    },
    "GET /api/v2/conversations/callbacks": {
        "operationId": "getconversationscallbacks",
        "functionName": "GetConversationsCallbacks",
        "signature": "GetConversationsCallbacks()",
        
        "return": "Callbackconversationentitylisting"
    },
    "GET /api/v2/conversations/calls": {
        "operationId": "getconversationscalls",
        "functionName": "GetConversationsCalls",
        "signature": "GetConversationsCalls()",
        
        "return": "Callconversationentitylisting"
    },
    "GET /api/v2/conversations/calls/history": {
        "operationId": "getconversationscallshistory",
        "functionName": "GetConversationsCallsHistory",
        "signature": "GetConversationsCallsHistory(pageSize, pageNumber, interval, expand)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "interval",
                "type": "string",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            }
        ],
        "return": "Callhistoryconversationentitylisting"
    },
    "GET /api/v2/conversations/calls/maximumconferenceparties": {
        "operationId": "getconversationscallsmaximumconferenceparties",
        "functionName": "GetConversationsCallsMaximumconferenceparties",
        "signature": "GetConversationsCallsMaximumconferenceparties()",
        
        "return": "Maxparticipants"
    },
    "GET /api/v2/conversations/chats/{conversationId}": {
        "operationId": "getconversationschat",
        "functionName": "GetConversationsChat",
        "signature": "GetConversationsChat(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Chatconversation"
    },
    "GET /api/v2/conversations/chats/{conversationId}/messages/{messageId}": {
        "operationId": "getconversationschatmessage",
        "functionName": "GetConversationsChatMessage",
        "signature": "GetConversationsChatMessage(conversationId, messageId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "messageId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Webchatmessage"
    },
    "GET /api/v2/conversations/chats/{conversationId}/messages": {
        "operationId": "getconversationschatmessages",
        "functionName": "GetConversationsChatMessages",
        "signature": "GetConversationsChatMessages(conversationId, after, before, sortOrder, maxResults)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "after",
                "type": "string",
                "required": "false"
            },
            {
                "name": "before",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            },
            {
                "name": "maxResults",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Webchatmessageentitylist"
    },
    "GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "getconversationschatparticipantcommunicationwrapup",
        "functionName": "GetConversationsChatParticipantCommunicationWrapup",
        "signature": "GetConversationsChatParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapup": {
        "operationId": "getconversationschatparticipantwrapup",
        "functionName": "GetConversationsChatParticipantWrapup",
        "signature": "GetConversationsChatParticipantWrapup(conversationId, participantId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/chats/{conversationId}/participants/{participantId}/wrapupcodes": {
        "operationId": "getconversationschatparticipantwrapupcodes",
        "functionName": "GetConversationsChatParticipantWrapupcodes",
        "signature": "GetConversationsChatParticipantWrapupcodes(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "[]Wrapupcode"
    },
    "GET /api/v2/conversations/chats": {
        "operationId": "getconversationschats",
        "functionName": "GetConversationsChats",
        "signature": "GetConversationsChats()",
        
        "return": "Chatconversationentitylisting"
    },
    "GET /api/v2/conversations/cobrowsesessions/{conversationId}": {
        "operationId": "getconversationscobrowsesession",
        "functionName": "GetConversationsCobrowsesession",
        "signature": "GetConversationsCobrowsesession(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Cobrowseconversation"
    },
    "GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "getconversationscobrowsesessionparticipantcommunicationwrapup",
        "functionName": "GetConversationsCobrowsesessionParticipantCommunicationWrapup",
        "signature": "GetConversationsCobrowsesessionParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapup": {
        "operationId": "getconversationscobrowsesessionparticipantwrapup",
        "functionName": "GetConversationsCobrowsesessionParticipantWrapup",
        "signature": "GetConversationsCobrowsesessionParticipantWrapup(conversationId, participantId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/wrapupcodes": {
        "operationId": "getconversationscobrowsesessionparticipantwrapupcodes",
        "functionName": "GetConversationsCobrowsesessionParticipantWrapupcodes",
        "signature": "GetConversationsCobrowsesessionParticipantWrapupcodes(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "[]Wrapupcode"
    },
    "GET /api/v2/conversations/cobrowsesessions": {
        "operationId": "getconversationscobrowsesessions",
        "functionName": "GetConversationsCobrowsesessions",
        "signature": "GetConversationsCobrowsesessions()",
        
        "return": "Cobrowseconversationentitylisting"
    },
    "GET /api/v2/conversations/emails/{conversationId}": {
        "operationId": "getconversationsemail",
        "functionName": "GetConversationsEmail",
        "signature": "GetConversationsEmail(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Emailconversation"
    },
    "GET /api/v2/conversations/emails/{conversationId}/messages/{messageId}": {
        "operationId": "getconversationsemailmessage",
        "functionName": "GetConversationsEmailMessage",
        "signature": "GetConversationsEmailMessage(conversationId, messageId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "messageId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Emailmessage"
    },
    "GET /api/v2/conversations/emails/{conversationId}/messages": {
        "operationId": "getconversationsemailmessages",
        "functionName": "GetConversationsEmailMessages",
        "signature": "GetConversationsEmailMessages(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Emailmessagepreviewlisting"
    },
    "GET /api/v2/conversations/emails/{conversationId}/messages/draft": {
        "operationId": "getconversationsemailmessagesdraft",
        "functionName": "GetConversationsEmailMessagesDraft",
        "signature": "GetConversationsEmailMessagesDraft(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Emailmessage"
    },
    "GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "getconversationsemailparticipantcommunicationwrapup",
        "functionName": "GetConversationsEmailParticipantCommunicationWrapup",
        "signature": "GetConversationsEmailParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapup": {
        "operationId": "getconversationsemailparticipantwrapup",
        "functionName": "GetConversationsEmailParticipantWrapup",
        "signature": "GetConversationsEmailParticipantWrapup(conversationId, participantId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/emails/{conversationId}/participants/{participantId}/wrapupcodes": {
        "operationId": "getconversationsemailparticipantwrapupcodes",
        "functionName": "GetConversationsEmailParticipantWrapupcodes",
        "signature": "GetConversationsEmailParticipantWrapupcodes(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "[]Wrapupcode"
    },
    "GET /api/v2/conversations/emails/{conversationId}/settings": {
        "operationId": "getconversationsemailsettings",
        "functionName": "GetConversationsEmailSettings",
        "signature": "GetConversationsEmailSettings(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Emailssettings"
    },
    "GET /api/v2/conversations/emails": {
        "operationId": "getconversationsemails",
        "functionName": "GetConversationsEmails",
        "signature": "GetConversationsEmails()",
        
        "return": "Emailconversationentitylisting"
    },
    "GET /api/v2/conversations/keyconfigurations/{keyconfigurationsId}": {
        "operationId": "getconversationskeyconfiguration",
        "functionName": "GetConversationsKeyconfiguration",
        "signature": "GetConversationsKeyconfiguration(keyconfigurationsId)",
        "parameters": [
            {
                "name": "keyconfigurationsId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Conversationencryptionconfiguration"
    },
    "GET /api/v2/conversations/keyconfigurations": {
        "operationId": "getconversationskeyconfigurations",
        "functionName": "GetConversationsKeyconfigurations",
        "signature": "GetConversationsKeyconfigurations()",
        
        "return": "Conversationencryptionconfigurationlisting"
    },
    "GET /api/v2/conversations/messages/{conversationId}": {
        "operationId": "getconversationsmessage",
        "functionName": "GetConversationsMessage",
        "signature": "GetConversationsMessage(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Messageconversation"
    },
    "GET /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media/{mediaId}": {
        "operationId": "getconversationsmessagecommunicationmessagesmediamediaid",
        "functionName": "GetConversationsMessageCommunicationMessagesMediaMediaId",
        "signature": "GetConversationsMessageCommunicationMessagesMediaMediaId(conversationId, communicationId, mediaId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "mediaId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Messagemediadata"
    },
    "GET /api/v2/conversations/messages/{messageId}/details": {
        "operationId": "getconversationsmessagedetails",
        "functionName": "GetConversationsMessageDetails",
        "signature": "GetConversationsMessageDetails(messageId, useNormalizedMessage)",
        "parameters": [
            {
                "name": "messageId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "useNormalizedMessage",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Messagedata"
    },
    "GET /api/v2/conversations/messages/{conversationId}/messages/{messageId}": {
        "operationId": "getconversationsmessagemessage",
        "functionName": "GetConversationsMessageMessage",
        "signature": "GetConversationsMessageMessage(conversationId, messageId, useNormalizedMessage)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "messageId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "useNormalizedMessage",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Messagedata"
    },
    "GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "getconversationsmessageparticipantcommunicationwrapup",
        "functionName": "GetConversationsMessageParticipantCommunicationWrapup",
        "signature": "GetConversationsMessageParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapup": {
        "operationId": "getconversationsmessageparticipantwrapup",
        "functionName": "GetConversationsMessageParticipantWrapup",
        "signature": "GetConversationsMessageParticipantWrapup(conversationId, participantId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/messages/{conversationId}/participants/{participantId}/wrapupcodes": {
        "operationId": "getconversationsmessageparticipantwrapupcodes",
        "functionName": "GetConversationsMessageParticipantWrapupcodes",
        "signature": "GetConversationsMessageParticipantWrapupcodes(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "[]Wrapupcode"
    },
    "GET /api/v2/conversations/messages": {
        "operationId": "getconversationsmessages",
        "functionName": "GetConversationsMessages",
        "signature": "GetConversationsMessages()",
        
        "return": "Messageconversationentitylisting"
    },
    "GET /api/v2/conversations/messages/cachedmedia": {
        "operationId": "getconversationsmessagescachedmedia",
        "functionName": "GetConversationsMessagesCachedmedia",
        "signature": "GetConversationsMessagesCachedmedia(pageSize, pageNumber, urlParam)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "urlParam",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Cachedmediaitementitylisting"
    },
    "GET /api/v2/conversations/messages/cachedmedia/{cachedMediaItemId}": {
        "operationId": "getconversationsmessagescachedmediacachedmediaitemid",
        "functionName": "GetConversationsMessagesCachedmediaCachedMediaItemId",
        "signature": "GetConversationsMessagesCachedmediaCachedMediaItemId(cachedMediaItemId)",
        "parameters": [
            {
                "name": "cachedMediaItemId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Cachedmediaitem"
    },
    "GET /api/v2/conversations/messaging/facebook/app": {
        "operationId": "getconversationsmessagingfacebookapp",
        "functionName": "GetConversationsMessagingFacebookApp",
        "signature": "GetConversationsMessagingFacebookApp()",
        
        "return": "Facebookappcredentials"
    },
    "GET /api/v2/conversations/messaging/integrations": {
        "operationId": "getconversationsmessagingintegrations",
        "functionName": "GetConversationsMessagingIntegrations",
        "signature": "GetConversationsMessagingIntegrations(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "messagingSettingId",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Messagingintegrationentitylisting"
    },
    "GET /api/v2/conversations/messaging/integrations/facebook": {
        "operationId": "getconversationsmessagingintegrationsfacebook",
        "functionName": "GetConversationsMessagingIntegrationsFacebook",
        "signature": "GetConversationsMessagingIntegrationsFacebook(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            },
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "messagingSettingId",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Facebookintegrationentitylisting"
    },
    "GET /api/v2/conversations/messaging/integrations/facebook/{integrationId}": {
        "operationId": "getconversationsmessagingintegrationsfacebookintegrationid",
        "functionName": "GetConversationsMessagingIntegrationsFacebookIntegrationId",
        "signature": "GetConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, expand)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Facebookintegration"
    },
    "GET /api/v2/conversations/messaging/integrations/instagram": {
        "operationId": "getconversationsmessagingintegrationsinstagram",
        "functionName": "GetConversationsMessagingIntegrationsInstagram",
        "signature": "GetConversationsMessagingIntegrationsInstagram(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            },
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "messagingSettingId",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Instagramintegrationentitylisting"
    },
    "GET /api/v2/conversations/messaging/integrations/instagram/{integrationId}": {
        "operationId": "getconversationsmessagingintegrationsinstagramintegrationid",
        "functionName": "GetConversationsMessagingIntegrationsInstagramIntegrationId",
        "signature": "GetConversationsMessagingIntegrationsInstagramIntegrationId(integrationId, expand)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Instagramintegration"
    },
    "GET /api/v2/conversations/messaging/integrations/line": {
        "operationId": "getconversationsmessagingintegrationsline",
        "functionName": "GetConversationsMessagingIntegrationsLine",
        "signature": "GetConversationsMessagingIntegrationsLine(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            },
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "messagingSettingId",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Lineintegrationentitylisting"
    },
    "GET /api/v2/conversations/messaging/integrations/line/{integrationId}": {
        "operationId": "getconversationsmessagingintegrationslineintegrationid",
        "functionName": "GetConversationsMessagingIntegrationsLineIntegrationId",
        "signature": "GetConversationsMessagingIntegrationsLineIntegrationId(integrationId, expand)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Lineintegration"
    },
    "GET /api/v2/conversations/messaging/integrations/open": {
        "operationId": "getconversationsmessagingintegrationsopen",
        "functionName": "GetConversationsMessagingIntegrationsOpen",
        "signature": "GetConversationsMessagingIntegrationsOpen(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            },
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "messagingSettingId",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Openintegrationentitylisting"
    },
    "GET /api/v2/conversations/messaging/integrations/open/{integrationId}": {
        "operationId": "getconversationsmessagingintegrationsopenintegrationid",
        "functionName": "GetConversationsMessagingIntegrationsOpenIntegrationId",
        "signature": "GetConversationsMessagingIntegrationsOpenIntegrationId(integrationId, expand)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Openintegration"
    },
    "GET /api/v2/conversations/messaging/integrations/twitter": {
        "operationId": "getconversationsmessagingintegrationstwitter",
        "functionName": "GetConversationsMessagingIntegrationsTwitter",
        "signature": "GetConversationsMessagingIntegrationsTwitter(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            },
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "messagingSettingId",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Twitterintegrationentitylisting"
    },
    "GET /api/v2/conversations/messaging/integrations/twitter/{integrationId}": {
        "operationId": "getconversationsmessagingintegrationstwitterintegrationid",
        "functionName": "GetConversationsMessagingIntegrationsTwitterIntegrationId",
        "signature": "GetConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, expand)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Twitterintegration"
    },
    "GET /api/v2/conversations/messaging/integrations/whatsapp": {
        "operationId": "getconversationsmessagingintegrationswhatsapp",
        "functionName": "GetConversationsMessagingIntegrationsWhatsapp",
        "signature": "GetConversationsMessagingIntegrationsWhatsapp(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            },
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "messagingSettingId",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Whatsappintegrationentitylisting"
    },
    "GET /api/v2/conversations/messaging/integrations/whatsapp/{integrationId}": {
        "operationId": "getconversationsmessagingintegrationswhatsappintegrationid",
        "functionName": "GetConversationsMessagingIntegrationsWhatsappIntegrationId",
        "signature": "GetConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, expand)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Whatsappintegration"
    },
    "GET /api/v2/conversations/messaging/settings/{messageSettingId}": {
        "operationId": "getconversationsmessagingsetting",
        "functionName": "GetConversationsMessagingSetting",
        "signature": "GetConversationsMessagingSetting(messageSettingId)",
        "parameters": [
            {
                "name": "messageSettingId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Messagingsetting"
    },
    "GET /api/v2/conversations/messaging/settings": {
        "operationId": "getconversationsmessagingsettings",
        "functionName": "GetConversationsMessagingSettings",
        "signature": "GetConversationsMessagingSettings(pageSize, pageNumber)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Messagingconfiglisting"
    },
    "GET /api/v2/conversations/messaging/settings/default": {
        "operationId": "getconversationsmessagingsettingsdefault",
        "functionName": "GetConversationsMessagingSettingsDefault",
        "signature": "GetConversationsMessagingSettingsDefault()",
        
        "return": "Messagingsetting"
    },
    "GET /api/v2/conversations/messaging/stickers/{messengerType}": {
        "operationId": "getconversationsmessagingsticker",
        "functionName": "GetConversationsMessagingSticker",
        "signature": "GetConversationsMessagingSticker(messengerType, pageSize, pageNumber)",
        "parameters": [
            {
                "name": "messengerType",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Messagingstickerentitylisting"
    },
    "GET /api/v2/conversations/messaging/supportedcontent": {
        "operationId": "getconversationsmessagingsupportedcontent",
        "functionName": "GetConversationsMessagingSupportedcontent",
        "signature": "GetConversationsMessagingSupportedcontent(pageSize, pageNumber)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Supportedcontentlisting"
    },
    "GET /api/v2/conversations/messaging/supportedcontent/default": {
        "operationId": "getconversationsmessagingsupportedcontentdefault",
        "functionName": "GetConversationsMessagingSupportedcontentDefault",
        "signature": "GetConversationsMessagingSupportedcontentDefault()",
        
        "return": "Supportedcontent"
    },
    "GET /api/v2/conversations/messaging/supportedcontent/{supportedContentId}": {
        "operationId": "getconversationsmessagingsupportedcontentsupportedcontentid",
        "functionName": "GetConversationsMessagingSupportedcontentSupportedContentId",
        "signature": "GetConversationsMessagingSupportedcontentSupportedContentId(supportedContentId)",
        "parameters": [
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Supportedcontent"
    },
    "GET /api/v2/conversations/messaging/threadingtimeline": {
        "operationId": "getconversationsmessagingthreadingtimeline",
        "functionName": "GetConversationsMessagingThreadingtimeline",
        "signature": "GetConversationsMessagingThreadingtimeline()",
        
        "return": "Conversationthreadingwindow"
    },
    "GET /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "getconversationsscreenshareparticipantcommunicationwrapup",
        "functionName": "GetConversationsScreenshareParticipantCommunicationWrapup",
        "signature": "GetConversationsScreenshareParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/settings": {
        "operationId": "getconversationssettings",
        "functionName": "GetConversationsSettings",
        "signature": "GetConversationsSettings()",
        
        "return": "Settings"
    },
    "GET /api/v2/conversations/socials/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "getconversationssocialparticipantcommunicationwrapup",
        "functionName": "GetConversationsSocialParticipantCommunicationWrapup",
        "signature": "GetConversationsSocialParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/videos/{conferenceId}/details": {
        "operationId": "getconversationsvideodetails",
        "functionName": "GetConversationsVideoDetails",
        "signature": "GetConversationsVideoDetails(conferenceId)",
        "parameters": [
            {
                "name": "conferenceId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Videoconferencedetails"
    },
    "GET /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "getconversationsvideoparticipantcommunicationwrapup",
        "functionName": "GetConversationsVideoParticipantCommunicationWrapup",
        "signature": "GetConversationsVideoParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "provisional",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Assignedwrapupcode"
    },
    "GET /api/v2/conversations/videos/meetings/{meetingId}": {
        "operationId": "getconversationsvideosmeeting",
        "functionName": "GetConversationsVideosMeeting",
        "signature": "GetConversationsVideosMeeting(meetingId)",
        "parameters": [
            {
                "name": "meetingId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Meetingidrecord"
    },
    "PATCH /api/v2/conversations/{conversationId}/participants/{participantId}": {
        "operationId": "patchconversationparticipant",
        "functionName": "PatchConversationParticipant",
        "signature": "PatchConversationParticipant(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ]
    },
    "PATCH /api/v2/conversations/{conversationId}/participants/{participantId}/attributes": {
        "operationId": "patchconversationparticipantattributes",
        "functionName": "PatchConversationParticipantAttributes",
        "signature": "PatchConversationParticipantAttributes(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Participantattributes",
                "required": "true"
            }
        ]
    },
    "PATCH /api/v2/conversations/{conversationId}/secureattributes": {
        "operationId": "patchconversationsecureattributes",
        "functionName": "PatchConversationSecureattributes",
        "signature": "PatchConversationSecureattributes(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversationsecureattributes",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PATCH /api/v2/conversations/aftercallwork/{conversationId}/participants/{participantId}/communications/{communicationId}": {
        "operationId": "patchconversationsaftercallworkconversationidparticipantcommunication",
        "functionName": "PatchConversationsAftercallworkConversationIdParticipantCommunication",
        "signature": "PatchConversationsAftercallworkConversationIdParticipantCommunication(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Aftercallworkupdate",
                "required": "true"
            }
        ],
        "return": "Aftercallworkupdate"
    },
    "PATCH /api/v2/conversations/calls/{conversationId}": {
        "operationId": "patchconversationscall",
        "functionName": "PatchConversationsCall",
        "signature": "PatchConversationsCall(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversation",
                "required": "true"
            }
        ],
        "return": "Conversation"
    },
    "PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}": {
        "operationId": "patchconversationscallparticipant",
        "functionName": "PatchConversationsCallParticipant",
        "signature": "PatchConversationsCallParticipant(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ]
    },
    "PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/attributes": {
        "operationId": "patchconversationscallparticipantattributes",
        "functionName": "PatchConversationsCallParticipantAttributes",
        "signature": "PatchConversationsCallParticipantAttributes(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Participantattributes",
                "required": "true"
            }
        ],
        "return": "Participantattributes"
    },
    "PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}": {
        "operationId": "patchconversationscallparticipantcommunication",
        "functionName": "PatchConversationsCallParticipantCommunication",
        "signature": "PatchConversationsCallParticipantCommunication(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ],
        "return": "interface{}"
    },
    "PATCH /api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult": {
        "operationId": "patchconversationscallparticipantconsult",
        "functionName": "PatchConversationsCallParticipantConsult",
        "signature": "PatchConversationsCallParticipantConsult(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Consulttransferupdate",
                "required": "true"
            }
        ],
        "return": "Consulttransferresponse"
    },
    "PATCH /api/v2/conversations/callbacks/{conversationId}": {
        "operationId": "patchconversationscallback",
        "functionName": "PatchConversationsCallback",
        "signature": "PatchConversationsCallback(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversation",
                "required": "true"
            }
        ],
        "return": "Conversation"
    },
    "PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}": {
        "operationId": "patchconversationscallbackparticipant",
        "functionName": "PatchConversationsCallbackParticipant",
        "signature": "PatchConversationsCallbackParticipant(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ]
    },
    "PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/attributes": {
        "operationId": "patchconversationscallbackparticipantattributes",
        "functionName": "PatchConversationsCallbackParticipantAttributes",
        "signature": "PatchConversationsCallbackParticipantAttributes(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Participantattributes",
                "required": "true"
            }
        ],
        "return": "Participantattributes"
    },
    "PATCH /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}": {
        "operationId": "patchconversationscallbackparticipantcommunication",
        "functionName": "PatchConversationsCallbackParticipantCommunication",
        "signature": "PatchConversationsCallbackParticipantCommunication(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ],
        "return": "interface{}"
    },
    "PATCH /api/v2/conversations/callbacks": {
        "operationId": "patchconversationscallbacks",
        "functionName": "PatchConversationsCallbacks",
        "signature": "PatchConversationsCallbacks(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Patchcallbackrequest",
                "required": "true"
            }
        ],
        "return": "Patchcallbackresponse"
    },
    "PATCH /api/v2/conversations/chats/{conversationId}": {
        "operationId": "patchconversationschat",
        "functionName": "PatchConversationsChat",
        "signature": "PatchConversationsChat(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversation",
                "required": "true"
            }
        ],
        "return": "Conversation"
    },
    "PATCH /api/v2/conversations/chats/{conversationId}/participants/{participantId}": {
        "operationId": "patchconversationschatparticipant",
        "functionName": "PatchConversationsChatParticipant",
        "signature": "PatchConversationsChatParticipant(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ]
    },
    "PATCH /api/v2/conversations/chats/{conversationId}/participants/{participantId}/attributes": {
        "operationId": "patchconversationschatparticipantattributes",
        "functionName": "PatchConversationsChatParticipantAttributes",
        "signature": "PatchConversationsChatParticipantAttributes(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Participantattributes",
                "required": "true"
            }
        ],
        "return": "Participantattributes"
    },
    "PATCH /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}": {
        "operationId": "patchconversationschatparticipantcommunication",
        "functionName": "PatchConversationsChatParticipantCommunication",
        "signature": "PatchConversationsChatParticipantCommunication(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ],
        "return": "interface{}"
    },
    "PATCH /api/v2/conversations/cobrowsesessions/{conversationId}": {
        "operationId": "patchconversationscobrowsesession",
        "functionName": "PatchConversationsCobrowsesession",
        "signature": "PatchConversationsCobrowsesession(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversation",
                "required": "true"
            }
        ],
        "return": "Conversation"
    },
    "PATCH /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}": {
        "operationId": "patchconversationscobrowsesessionparticipant",
        "functionName": "PatchConversationsCobrowsesessionParticipant",
        "signature": "PatchConversationsCobrowsesessionParticipant(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "false"
            }
        ]
    },
    "PATCH /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/attributes": {
        "operationId": "patchconversationscobrowsesessionparticipantattributes",
        "functionName": "PatchConversationsCobrowsesessionParticipantAttributes",
        "signature": "PatchConversationsCobrowsesessionParticipantAttributes(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Participantattributes",
                "required": "false"
            }
        ],
        "return": "Participantattributes"
    },
    "PATCH /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}": {
        "operationId": "patchconversationscobrowsesessionparticipantcommunication",
        "functionName": "PatchConversationsCobrowsesessionParticipantCommunication",
        "signature": "PatchConversationsCobrowsesessionParticipantCommunication(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ],
        "return": "interface{}"
    },
    "PATCH /api/v2/conversations/emails/{conversationId}": {
        "operationId": "patchconversationsemail",
        "functionName": "PatchConversationsEmail",
        "signature": "PatchConversationsEmail(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversation",
                "required": "true"
            }
        ],
        "return": "Conversation"
    },
    "PATCH /api/v2/conversations/emails/{conversationId}/messages/draft": {
        "operationId": "patchconversationsemailmessagesdraft",
        "functionName": "PatchConversationsEmailMessagesDraft",
        "signature": "PatchConversationsEmailMessagesDraft(conversationId, autoFill, discard, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "autoFill",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "discard",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "body",
                "type": "Draftmanipulationrequest",
                "required": "false"
            }
        ],
        "return": "Emailmessage"
    },
    "PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}": {
        "operationId": "patchconversationsemailparticipant",
        "functionName": "PatchConversationsEmailParticipant",
        "signature": "PatchConversationsEmailParticipant(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ]
    },
    "PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/attributes": {
        "operationId": "patchconversationsemailparticipantattributes",
        "functionName": "PatchConversationsEmailParticipantAttributes",
        "signature": "PatchConversationsEmailParticipantAttributes(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Participantattributes",
                "required": "true"
            }
        ],
        "return": "Participantattributes"
    },
    "PATCH /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}": {
        "operationId": "patchconversationsemailparticipantcommunication",
        "functionName": "PatchConversationsEmailParticipantCommunication",
        "signature": "PatchConversationsEmailParticipantCommunication(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ],
        "return": "interface{}"
    },
    "PATCH /api/v2/conversations/messages/{conversationId}": {
        "operationId": "patchconversationsmessage",
        "functionName": "PatchConversationsMessage",
        "signature": "PatchConversationsMessage(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversation",
                "required": "true"
            }
        ],
        "return": "Conversation"
    },
    "PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}": {
        "operationId": "patchconversationsmessageparticipant",
        "functionName": "PatchConversationsMessageParticipant",
        "signature": "PatchConversationsMessageParticipant(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "false"
            }
        ]
    },
    "PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/attributes": {
        "operationId": "patchconversationsmessageparticipantattributes",
        "functionName": "PatchConversationsMessageParticipantAttributes",
        "signature": "PatchConversationsMessageParticipantAttributes(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Participantattributes",
                "required": "false"
            }
        ],
        "return": "Participantattributes"
    },
    "PATCH /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}": {
        "operationId": "patchconversationsmessageparticipantcommunication",
        "functionName": "PatchConversationsMessageParticipantCommunication",
        "signature": "PatchConversationsMessageParticipantCommunication(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Mediaparticipantrequest",
                "required": "true"
            }
        ],
        "return": "interface{}"
    },
    "PATCH /api/v2/conversations/messaging/integrations/facebook/{integrationId}": {
        "operationId": "patchconversationsmessagingintegrationsfacebookintegrationid",
        "functionName": "PatchConversationsMessagingIntegrationsFacebookIntegrationId",
        "signature": "PatchConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Facebookintegrationupdaterequest",
                "required": "true"
            }
        ],
        "return": "Facebookintegration"
    },
    "PATCH /api/v2/conversations/messaging/integrations/instagram/{integrationId}": {
        "operationId": "patchconversationsmessagingintegrationsinstagramintegrationid",
        "functionName": "PatchConversationsMessagingIntegrationsInstagramIntegrationId",
        "signature": "PatchConversationsMessagingIntegrationsInstagramIntegrationId(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Instagramintegrationupdaterequest",
                "required": "true"
            }
        ],
        "return": "Instagramintegration"
    },
    "PATCH /api/v2/conversations/messaging/integrations/open/{integrationId}": {
        "operationId": "patchconversationsmessagingintegrationsopenintegrationid",
        "functionName": "PatchConversationsMessagingIntegrationsOpenIntegrationId",
        "signature": "PatchConversationsMessagingIntegrationsOpenIntegrationId(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Openintegrationupdaterequest",
                "required": "true"
            }
        ],
        "return": "Openintegration"
    },
    "PATCH /api/v2/conversations/messaging/integrations/twitter/{integrationId}": {
        "operationId": "patchconversationsmessagingintegrationstwitterintegrationid",
        "functionName": "PatchConversationsMessagingIntegrationsTwitterIntegrationId",
        "signature": "PatchConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Twitterintegrationrequest",
                "required": "true"
            }
        ],
        "return": "Twitterintegration"
    },
    "PATCH /api/v2/conversations/messaging/integrations/whatsapp/{integrationId}": {
        "operationId": "patchconversationsmessagingintegrationswhatsappintegrationid",
        "functionName": "PatchConversationsMessagingIntegrationsWhatsappIntegrationId",
        "signature": "PatchConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Whatsappintegrationupdaterequest",
                "required": "true"
            }
        ],
        "return": "Whatsappintegration"
    },
    "PATCH /api/v2/conversations/messaging/settings/{messageSettingId}": {
        "operationId": "patchconversationsmessagingsetting",
        "functionName": "PatchConversationsMessagingSetting",
        "signature": "PatchConversationsMessagingSetting(messageSettingId, body)",
        "parameters": [
            {
                "name": "messageSettingId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Messagingsettingpatchrequest",
                "required": "true"
            }
        ],
        "return": "Messagingsetting"
    },
    "PATCH /api/v2/conversations/messaging/supportedcontent/{supportedContentId}": {
        "operationId": "patchconversationsmessagingsupportedcontentsupportedcontentid",
        "functionName": "PatchConversationsMessagingSupportedcontentSupportedContentId",
        "signature": "PatchConversationsMessagingSupportedcontentSupportedContentId(supportedContentId, body)",
        "parameters": [
            {
                "name": "supportedContentId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Supportedcontent",
                "required": "true"
            }
        ],
        "return": "Supportedcontent"
    },
    "PATCH /api/v2/conversations/settings": {
        "operationId": "patchconversationssettings",
        "functionName": "PatchConversationsSettings",
        "signature": "PatchConversationsSettings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Settings",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/analytics/conversations/{conversationId}/details/properties": {
        "operationId": "postanalyticsconversationdetailsproperties",
        "functionName": "PostAnalyticsConversationDetailsProperties",
        "signature": "PostAnalyticsConversationDetailsProperties(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Propertyindexrequest",
                "required": "true"
            }
        ],
        "return": "Propertyindexrequest"
    },
    "POST /api/v2/analytics/conversations/activity/query": {
        "operationId": "postanalyticsconversationsactivityquery",
        "functionName": "PostAnalyticsConversationsActivityQuery",
        "signature": "PostAnalyticsConversationsActivityQuery(body, pageSize, pageNumber)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationactivityquery",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Conversationactivityresponse"
    },
    "POST /api/v2/analytics/conversations/aggregates/jobs": {
        "operationId": "postanalyticsconversationsaggregatesjobs",
        "functionName": "PostAnalyticsConversationsAggregatesJobs",
        "signature": "PostAnalyticsConversationsAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/conversations/aggregates/query": {
        "operationId": "postanalyticsconversationsaggregatesquery",
        "functionName": "PostAnalyticsConversationsAggregatesQuery",
        "signature": "PostAnalyticsConversationsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationaggregationquery",
                "required": "true"
            }
        ],
        "return": "Conversationaggregatequeryresponse"
    },
    "POST /api/v2/analytics/conversations/details/jobs": {
        "operationId": "postanalyticsconversationsdetailsjobs",
        "functionName": "PostAnalyticsConversationsDetailsJobs",
        "signature": "PostAnalyticsConversationsDetailsJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Asyncconversationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/conversations/details/query": {
        "operationId": "postanalyticsconversationsdetailsquery",
        "functionName": "PostAnalyticsConversationsDetailsQuery",
        "signature": "PostAnalyticsConversationsDetailsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationquery",
                "required": "true"
            }
        ],
        "return": "Analyticsconversationqueryresponse"
    },
    "POST /api/v2/conversations/{conversationId}/assign": {
        "operationId": "postconversationassign",
        "functionName": "PostConversationAssign",
        "signature": "PostConversationAssign(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversationuser",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "POST /api/v2/conversations/{conversationId}/barge": {
        "operationId": "postconversationbarge",
        "functionName": "PostConversationBarge",
        "signature": "PostConversationBarge(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/{conversationId}/cobrowse": {
        "operationId": "postconversationcobrowse",
        "functionName": "PostConversationCobrowse",
        "signature": "PostConversationCobrowse(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Cobrowsewebmessagingsession"
    },
    "POST /api/v2/conversations/{conversationId}/disconnect": {
        "operationId": "postconversationdisconnect",
        "functionName": "PostConversationDisconnect",
        "signature": "PostConversationDisconnect(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "POST /api/v2/conversations/{conversationId}/participants/{participantId}/callbacks": {
        "operationId": "postconversationparticipantcallbacks",
        "functionName": "PostConversationParticipantCallbacks",
        "signature": "PostConversationParticipantCallbacks(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Createcallbackonconversationcommand",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/{conversationId}/participants/{participantId}/digits": {
        "operationId": "postconversationparticipantdigits",
        "functionName": "PostConversationParticipantDigits",
        "signature": "PostConversationParticipantDigits(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Digits",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/{conversationId}/participants/{participantId}/replace": {
        "operationId": "postconversationparticipantreplace",
        "functionName": "PostConversationParticipantReplace",
        "signature": "PostConversationParticipantReplace(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transferrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/{conversationId}/participants/{participantId}/replace/agent": {
        "operationId": "postconversationparticipantreplaceagent",
        "functionName": "PostConversationParticipantReplaceAgent",
        "signature": "PostConversationParticipantReplaceAgent(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transfertoagentrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/{conversationId}/participants/{participantId}/replace/external": {
        "operationId": "postconversationparticipantreplaceexternal",
        "functionName": "PostConversationParticipantReplaceExternal",
        "signature": "PostConversationParticipantReplaceExternal(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transfertoexternalrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/{conversationId}/participants/{participantId}/replace/queue": {
        "operationId": "postconversationparticipantreplacequeue",
        "functionName": "PostConversationParticipantReplaceQueue",
        "signature": "PostConversationParticipantReplaceQueue(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transfertoqueuerequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/{conversationId}/participants/{participantId}/secureivrsessions": {
        "operationId": "postconversationparticipantsecureivrsessions",
        "functionName": "PostConversationParticipantSecureivrsessions",
        "signature": "PostConversationParticipantSecureivrsessions(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Createsecuresession",
                "required": "false"
            }
        ],
        "return": "Securesession"
    },
    "POST /api/v2/conversations/calls/{conversationId}": {
        "operationId": "postconversationscall",
        "functionName": "PostConversationsCall",
        "signature": "PostConversationsCall(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Callcommand",
                "required": "true"
            }
        ],
        "return": "Conversation"
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/barge": {
        "operationId": "postconversationscallparticipantbarge",
        "functionName": "PostConversationsCallParticipantBarge",
        "signature": "PostConversationsCallParticipantBarge(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/coach": {
        "operationId": "postconversationscallparticipantcoach",
        "functionName": "PostConversationsCallParticipantCoach",
        "signature": "PostConversationsCallParticipantCoach(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "postconversationscallparticipantcommunicationwrapup",
        "functionName": "PostConversationsCallParticipantCommunicationWrapup",
        "signature": "PostConversationsCallParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Wrapupinput",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult": {
        "operationId": "postconversationscallparticipantconsult",
        "functionName": "PostConversationsCallParticipantConsult",
        "signature": "PostConversationsCallParticipantConsult(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Consulttransfer",
                "required": "true"
            }
        ],
        "return": "Consulttransferresponse"
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult/agent": {
        "operationId": "postconversationscallparticipantconsultagent",
        "functionName": "PostConversationsCallParticipantConsultAgent",
        "signature": "PostConversationsCallParticipantConsultAgent(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Consulttransfertoagent",
                "required": "true"
            }
        ],
        "return": "Consulttransferresponse"
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult/external": {
        "operationId": "postconversationscallparticipantconsultexternal",
        "functionName": "PostConversationsCallParticipantConsultExternal",
        "signature": "PostConversationsCallParticipantConsultExternal(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Consulttransfertoexternal",
                "required": "true"
            }
        ],
        "return": "Consulttransferresponse"
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/consult/queue": {
        "operationId": "postconversationscallparticipantconsultqueue",
        "functionName": "PostConversationsCallParticipantConsultQueue",
        "signature": "PostConversationsCallParticipantConsultQueue(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Consulttransfertoqueue",
                "required": "true"
            }
        ],
        "return": "Consulttransferresponse"
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/monitor": {
        "operationId": "postconversationscallparticipantmonitor",
        "functionName": "PostConversationsCallParticipantMonitor",
        "signature": "PostConversationsCallParticipantMonitor(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants/{participantId}/replace": {
        "operationId": "postconversationscallparticipantreplace",
        "functionName": "PostConversationsCallParticipantReplace",
        "signature": "PostConversationsCallParticipantReplace(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transferrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/calls/{conversationId}/participants": {
        "operationId": "postconversationscallparticipants",
        "functionName": "PostConversationsCallParticipants",
        "signature": "PostConversationsCallParticipants(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversation",
                "required": "true"
            }
        ],
        "return": "Conversation"
    },
    "POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "postconversationscallbackparticipantcommunicationwrapup",
        "functionName": "PostConversationsCallbackParticipantCommunicationWrapup",
        "signature": "PostConversationsCallbackParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Wrapupinput",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/callbacks/{conversationId}/participants/{participantId}/replace": {
        "operationId": "postconversationscallbackparticipantreplace",
        "functionName": "PostConversationsCallbackParticipantReplace",
        "signature": "PostConversationsCallbackParticipantReplace(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transferrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/callbacks": {
        "operationId": "postconversationscallbacks",
        "functionName": "PostConversationsCallbacks",
        "signature": "PostConversationsCallbacks(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Createcallbackcommand",
                "required": "true"
            }
        ],
        "return": "Createcallbackresponse"
    },
    "POST /api/v2/conversations/callbacks/bulk/disconnect": {
        "operationId": "postconversationscallbacksbulkdisconnect",
        "functionName": "PostConversationsCallbacksBulkDisconnect",
        "signature": "PostConversationsCallbacksBulkDisconnect(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Bulkcallbackdisconnectrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/callbacks/bulk/update": {
        "operationId": "postconversationscallbacksbulkupdate",
        "functionName": "PostConversationsCallbacksBulkUpdate",
        "signature": "PostConversationsCallbacksBulkUpdate(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Bulkcallbackpatchrequest",
                "required": "true"
            }
        ],
        "return": "Bulkcallbackpatchresponse"
    },
    "POST /api/v2/conversations/calls": {
        "operationId": "postconversationscalls",
        "functionName": "PostConversationsCalls",
        "signature": "PostConversationsCalls(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Createcallrequest",
                "required": "true"
            }
        ],
        "return": "Createcallresponse"
    },
    "POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/messages": {
        "operationId": "postconversationschatcommunicationmessages",
        "functionName": "PostConversationsChatCommunicationMessages",
        "signature": "PostConversationsChatCommunicationMessages(conversationId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Createwebchatmessagerequest",
                "required": "true"
            }
        ],
        "return": "Webchatmessage"
    },
    "POST /api/v2/conversations/chats/{conversationId}/communications/{communicationId}/typing": {
        "operationId": "postconversationschatcommunicationtyping",
        "functionName": "PostConversationsChatCommunicationTyping",
        "signature": "PostConversationsChatCommunicationTyping(conversationId, communicationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Webchattyping"
    },
    "POST /api/v2/conversations/chats/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "postconversationschatparticipantcommunicationwrapup",
        "functionName": "PostConversationsChatParticipantCommunicationWrapup",
        "signature": "PostConversationsChatParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Wrapupinput",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/chats/{conversationId}/participants/{participantId}/replace": {
        "operationId": "postconversationschatparticipantreplace",
        "functionName": "PostConversationsChatParticipantReplace",
        "signature": "PostConversationsChatParticipantReplace(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transferrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/chats": {
        "operationId": "postconversationschats",
        "functionName": "PostConversationsChats",
        "signature": "PostConversationsChats(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Createwebchatrequest",
                "required": "true"
            }
        ],
        "return": "Chatconversation"
    },
    "POST /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "postconversationscobrowsesessionparticipantcommunicationwrapup",
        "functionName": "PostConversationsCobrowsesessionParticipantCommunicationWrapup",
        "signature": "PostConversationsCobrowsesessionParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Wrapupinput",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/cobrowsesessions/{conversationId}/participants/{participantId}/replace": {
        "operationId": "postconversationscobrowsesessionparticipantreplace",
        "functionName": "PostConversationsCobrowsesessionParticipantReplace",
        "signature": "PostConversationsCobrowsesessionParticipantReplace(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transferrequest",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/emails/{conversationId}/inboundmessages": {
        "operationId": "postconversationsemailinboundmessages",
        "functionName": "PostConversationsEmailInboundmessages",
        "signature": "PostConversationsEmailInboundmessages(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Inboundmessagerequest",
                "required": "true"
            }
        ],
        "return": "Emailconversation"
    },
    "POST /api/v2/conversations/emails/{conversationId}/messages": {
        "operationId": "postconversationsemailmessages",
        "functionName": "PostConversationsEmailMessages",
        "signature": "PostConversationsEmailMessages(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Emailmessage",
                "required": "true"
            }
        ],
        "return": "Emailmessagereply"
    },
    "POST /api/v2/conversations/emails/{conversationId}/messages/draft/attachments/copy": {
        "operationId": "postconversationsemailmessagesdraftattachmentscopy",
        "functionName": "PostConversationsEmailMessagesDraftAttachmentsCopy",
        "signature": "PostConversationsEmailMessagesDraftAttachmentsCopy(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Copyattachmentsrequest",
                "required": "true"
            }
        ],
        "return": "Emailmessage"
    },
    "POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "postconversationsemailparticipantcommunicationwrapup",
        "functionName": "PostConversationsEmailParticipantCommunicationWrapup",
        "signature": "PostConversationsEmailParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Wrapupinput",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/emails/{conversationId}/participants/{participantId}/replace": {
        "operationId": "postconversationsemailparticipantreplace",
        "functionName": "PostConversationsEmailParticipantReplace",
        "signature": "PostConversationsEmailParticipantReplace(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transferrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/emails": {
        "operationId": "postconversationsemails",
        "functionName": "PostConversationsEmails",
        "signature": "PostConversationsEmails(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Createemailrequest",
                "required": "true"
            }
        ],
        "return": "Emailconversation"
    },
    "POST /api/v2/conversations/emails/agentless": {
        "operationId": "postconversationsemailsagentless",
        "functionName": "PostConversationsEmailsAgentless",
        "signature": "PostConversationsEmailsAgentless(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Agentlessemailsendrequestdto",
                "required": "true"
            }
        ],
        "return": "Agentlessemailsendresponsedto"
    },
    "POST /api/v2/conversations/faxes": {
        "operationId": "postconversationsfaxes",
        "functionName": "PostConversationsFaxes",
        "signature": "PostConversationsFaxes(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Faxsendrequest",
                "required": "true"
            }
        ],
        "return": "Faxsendresponse"
    },
    "POST /api/v2/conversations/keyconfigurations": {
        "operationId": "postconversationskeyconfigurations",
        "functionName": "PostConversationsKeyconfigurations",
        "signature": "PostConversationsKeyconfigurations(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationencryptionconfiguration",
                "required": "true"
            }
        ],
        "return": "Conversationencryptionconfiguration"
    },
    "POST /api/v2/conversations/keyconfigurations/validate": {
        "operationId": "postconversationskeyconfigurationsvalidate",
        "functionName": "PostConversationsKeyconfigurationsValidate",
        "signature": "PostConversationsKeyconfigurationsValidate(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationencryptionconfiguration",
                "required": "true"
            }
        ],
        "return": "Conversationencryptionconfiguration"
    },
    "POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages": {
        "operationId": "postconversationsmessagecommunicationmessages",
        "functionName": "PostConversationsMessageCommunicationMessages",
        "signature": "PostConversationsMessageCommunicationMessages(conversationId, communicationId, body, useNormalizedMessage)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Additionalmessage",
                "required": "true"
            },
            {
                "name": "useNormalizedMessage",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Messagedata"
    },
    "POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/messages/media": {
        "operationId": "postconversationsmessagecommunicationmessagesmedia",
        "functionName": "PostConversationsMessageCommunicationMessagesMedia",
        "signature": "PostConversationsMessageCommunicationMessagesMedia(conversationId, communicationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Messagemediadata"
    },
    "POST /api/v2/conversations/messages/{conversationId}/communications/{communicationId}/typing": {
        "operationId": "postconversationsmessagecommunicationtyping",
        "functionName": "PostConversationsMessageCommunicationTyping",
        "signature": "PostConversationsMessageCommunicationTyping(conversationId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Messagetypingeventrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/messages/{integrationId}/inbound/open/event": {
        "operationId": "postconversationsmessageinboundopenevent",
        "functionName": "PostConversationsMessageInboundOpenEvent",
        "signature": "PostConversationsMessageInboundOpenEvent(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Openinboundnormalizedevent",
                "required": "true"
            }
        ],
        "return": "Openeventnormalizedmessage"
    },
    "POST /api/v2/conversations/messages/{integrationId}/inbound/open/message": {
        "operationId": "postconversationsmessageinboundopenmessage",
        "functionName": "PostConversationsMessageInboundOpenMessage",
        "signature": "PostConversationsMessageInboundOpenMessage(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Openinboundnormalizedmessage",
                "required": "true"
            }
        ],
        "return": "Openmessagenormalizedmessage"
    },
    "POST /api/v2/conversations/messages/{integrationId}/inbound/open/receipt": {
        "operationId": "postconversationsmessageinboundopenreceipt",
        "functionName": "PostConversationsMessageInboundOpenReceipt",
        "signature": "PostConversationsMessageInboundOpenReceipt(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Openinboundnormalizedreceipt",
                "required": "true"
            }
        ],
        "return": "Openreceiptnormalizedmessage"
    },
    "POST /api/v2/conversations/messages/{conversationId}/messages/bulk": {
        "operationId": "postconversationsmessagemessagesbulk",
        "functionName": "PostConversationsMessageMessagesBulk",
        "signature": "PostConversationsMessageMessagesBulk(conversationId, useNormalizedMessage, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "useNormalizedMessage",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "body",
                "type": "[]string",
                "required": "false"
            }
        ],
        "return": "Textmessagelisting"
    },
    "POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "postconversationsmessageparticipantcommunicationwrapup",
        "functionName": "PostConversationsMessageParticipantCommunicationWrapup",
        "signature": "PostConversationsMessageParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Wrapupinput",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/monitor": {
        "operationId": "postconversationsmessageparticipantmonitor",
        "functionName": "PostConversationsMessageParticipantMonitor",
        "signature": "PostConversationsMessageParticipantMonitor(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/messages/{conversationId}/participants/{participantId}/replace": {
        "operationId": "postconversationsmessageparticipantreplace",
        "functionName": "PostConversationsMessageParticipantReplace",
        "signature": "PostConversationsMessageParticipantReplace(conversationId, participantId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Transferrequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/conversations/messages": {
        "operationId": "postconversationsmessages",
        "functionName": "PostConversationsMessages",
        "signature": "PostConversationsMessages(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Createoutboundmessagingconversationrequest",
                "required": "true"
            }
        ],
        "return": "Messageconversation"
    },
    "POST /api/v2/conversations/messages/agentless": {
        "operationId": "postconversationsmessagesagentless",
        "functionName": "PostConversationsMessagesAgentless",
        "signature": "PostConversationsMessagesAgentless(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Sendagentlessoutboundmessagerequest",
                "required": "true"
            }
        ],
        "return": "Sendagentlessoutboundmessageresponse"
    },
    "POST /api/v2/conversations/messages/inbound/open": {
        "operationId": "postconversationsmessagesinboundopen",
        "functionName": "PostConversationsMessagesInboundOpen",
        "signature": "PostConversationsMessagesInboundOpen(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Opennormalizedmessage",
                "required": "true"
            }
        ],
        "return": "Opennormalizedmessage"
    },
    "POST /api/v2/conversations/messaging/integrations/facebook": {
        "operationId": "postconversationsmessagingintegrationsfacebook",
        "functionName": "PostConversationsMessagingIntegrationsFacebook",
        "signature": "PostConversationsMessagingIntegrationsFacebook(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Facebookintegrationrequest",
                "required": "true"
            }
        ],
        "return": "Facebookintegration"
    },
    "POST /api/v2/conversations/messaging/integrations/instagram": {
        "operationId": "postconversationsmessagingintegrationsinstagram",
        "functionName": "PostConversationsMessagingIntegrationsInstagram",
        "signature": "PostConversationsMessagingIntegrationsInstagram(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Instagramintegrationrequest",
                "required": "true"
            }
        ],
        "return": "Instagramintegration"
    },
    "POST /api/v2/conversations/messaging/integrations/line": {
        "operationId": "postconversationsmessagingintegrationsline",
        "functionName": "PostConversationsMessagingIntegrationsLine",
        "signature": "PostConversationsMessagingIntegrationsLine(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Lineintegrationrequest",
                "required": "true"
            }
        ],
        "return": "Lineintegration"
    },
    "POST /api/v2/conversations/messaging/integrations/open": {
        "operationId": "postconversationsmessagingintegrationsopen",
        "functionName": "PostConversationsMessagingIntegrationsOpen",
        "signature": "PostConversationsMessagingIntegrationsOpen(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Openintegrationrequest",
                "required": "true"
            }
        ],
        "return": "Openintegration"
    },
    "POST /api/v2/conversations/messaging/integrations/twitter": {
        "operationId": "postconversationsmessagingintegrationstwitter",
        "functionName": "PostConversationsMessagingIntegrationsTwitter",
        "signature": "PostConversationsMessagingIntegrationsTwitter(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Twitterintegrationrequest",
                "required": "true"
            }
        ],
        "return": "Twitterintegration"
    },
    "POST /api/v2/conversations/messaging/integrations/whatsapp": {
        "operationId": "postconversationsmessagingintegrationswhatsapp",
        "functionName": "PostConversationsMessagingIntegrationsWhatsapp",
        "signature": "PostConversationsMessagingIntegrationsWhatsapp(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Whatsappintegrationrequest",
                "required": "true"
            }
        ],
        "return": "Whatsappintegration"
    },
    "POST /api/v2/conversations/messaging/settings": {
        "operationId": "postconversationsmessagingsettings",
        "functionName": "PostConversationsMessagingSettings",
        "signature": "PostConversationsMessagingSettings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Messagingsettingrequest",
                "required": "true"
            }
        ],
        "return": "Messagingsetting"
    },
    "POST /api/v2/conversations/messaging/supportedcontent": {
        "operationId": "postconversationsmessagingsupportedcontent",
        "functionName": "PostConversationsMessagingSupportedcontent",
        "signature": "PostConversationsMessagingSupportedcontent(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Supportedcontent",
                "required": "true"
            }
        ],
        "return": "Supportedcontent"
    },
    "POST /api/v2/conversations/participants/attributes/search": {
        "operationId": "postconversationsparticipantsattributessearch",
        "functionName": "PostConversationsParticipantsAttributesSearch",
        "signature": "PostConversationsParticipantsAttributesSearch(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationparticipantsearchrequest",
                "required": "true"
            }
        ],
        "return": "Jsoncursorsearchresponse"
    },
    "POST /api/v2/conversations/screenshares/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "postconversationsscreenshareparticipantcommunicationwrapup",
        "functionName": "PostConversationsScreenshareParticipantCommunicationWrapup",
        "signature": "PostConversationsScreenshareParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Wrapupinput",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/socials/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "postconversationssocialparticipantcommunicationwrapup",
        "functionName": "PostConversationsSocialParticipantCommunicationWrapup",
        "signature": "PostConversationsSocialParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Wrapupinput",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/videos/{conversationId}/participants/{participantId}/communications/{communicationId}/wrapup": {
        "operationId": "postconversationsvideoparticipantcommunicationwrapup",
        "functionName": "PostConversationsVideoParticipantCommunicationWrapup",
        "signature": "PostConversationsVideoParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Wrapupinput",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/videos/meetings": {
        "operationId": "postconversationsvideosmeetings",
        "functionName": "PostConversationsVideosMeetings",
        "signature": "PostConversationsVideosMeetings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Generatemeetingidrequest",
                "required": "true"
            }
        ],
        "return": "Meetingidrecord"
    },
    "PUT /api/v2/conversations/{conversationId}/participants/{participantId}/flaggedreason": {
        "operationId": "putconversationparticipantflaggedreason",
        "functionName": "PutConversationParticipantFlaggedreason",
        "signature": "PutConversationParticipantFlaggedreason(conversationId, participantId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/conversations/{conversationId}/secureattributes": {
        "operationId": "putconversationsecureattributes",
        "functionName": "PutConversationSecureattributes",
        "signature": "PutConversationSecureattributes(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversationsecureattributes",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/{conversationId}/tags": {
        "operationId": "putconversationtags",
        "functionName": "PutConversationTags",
        "signature": "PutConversationTags(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversationtagsupdate",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/calls/{conversationId}/participants/{participantId}/communications/{communicationId}/uuidata": {
        "operationId": "putconversationscallparticipantcommunicationuuidata",
        "functionName": "PutConversationsCallParticipantCommunicationUuidata",
        "signature": "PutConversationsCallParticipantCommunicationUuidata(conversationId, participantId, communicationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "participantId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "communicationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setuuidatarequest",
                "required": "true"
            }
        ],
        "return": "interface{}"
    },
    "PUT /api/v2/conversations/calls/{conversationId}/recordingstate": {
        "operationId": "putconversationscallrecordingstate",
        "functionName": "PutConversationsCallRecordingstate",
        "signature": "PutConversationsCallRecordingstate(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setrecordingstate",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/callbacks/{conversationId}/recordingstate": {
        "operationId": "putconversationscallbackrecordingstate",
        "functionName": "PutConversationsCallbackRecordingstate",
        "signature": "PutConversationsCallbackRecordingstate(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setrecordingstate",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/chats/{conversationId}/recordingstate": {
        "operationId": "putconversationschatrecordingstate",
        "functionName": "PutConversationsChatRecordingstate",
        "signature": "PutConversationsChatRecordingstate(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setrecordingstate",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/cobrowsesessions/{conversationId}/recordingstate": {
        "operationId": "putconversationscobrowsesessionrecordingstate",
        "functionName": "PutConversationsCobrowsesessionRecordingstate",
        "signature": "PutConversationsCobrowsesessionRecordingstate(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setrecordingstate",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/emails/{conversationId}/messages/draft": {
        "operationId": "putconversationsemailmessagesdraft",
        "functionName": "PutConversationsEmailMessagesDraft",
        "signature": "PutConversationsEmailMessagesDraft(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Emailmessage",
                "required": "true"
            }
        ],
        "return": "Emailmessage"
    },
    "PUT /api/v2/conversations/emails/{conversationId}/recordingstate": {
        "operationId": "putconversationsemailrecordingstate",
        "functionName": "PutConversationsEmailRecordingstate",
        "signature": "PutConversationsEmailRecordingstate(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setrecordingstate",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/keyconfigurations/{keyconfigurationsId}": {
        "operationId": "putconversationskeyconfiguration",
        "functionName": "PutConversationsKeyconfiguration",
        "signature": "PutConversationsKeyconfiguration(keyconfigurationsId, body)",
        "parameters": [
            {
                "name": "keyconfigurationsId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Conversationencryptionconfiguration",
                "required": "true"
            }
        ],
        "return": "Conversationencryptionconfiguration"
    },
    "PUT /api/v2/conversations/messages/{conversationId}/recordingstate": {
        "operationId": "putconversationsmessagerecordingstate",
        "functionName": "PutConversationsMessageRecordingstate",
        "signature": "PutConversationsMessageRecordingstate(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setrecordingstate",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/messaging/integrations/line/{integrationId}": {
        "operationId": "putconversationsmessagingintegrationslineintegrationid",
        "functionName": "PutConversationsMessagingIntegrationsLineIntegrationId",
        "signature": "PutConversationsMessagingIntegrationsLineIntegrationId(integrationId, body)",
        "parameters": [
            {
                "name": "integrationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Lineintegrationrequest",
                "required": "true"
            }
        ],
        "return": "Lineintegration"
    },
    "PUT /api/v2/conversations/messaging/settings/default": {
        "operationId": "putconversationsmessagingsettingsdefault",
        "functionName": "PutConversationsMessagingSettingsDefault",
        "signature": "PutConversationsMessagingSettingsDefault(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Messagingsettingdefaultrequest",
                "required": "true"
            }
        ],
        "return": "Messagingsetting"
    },
    "PUT /api/v2/conversations/messaging/supportedcontent/default": {
        "operationId": "putconversationsmessagingsupportedcontentdefault",
        "functionName": "PutConversationsMessagingSupportedcontentDefault",
        "signature": "PutConversationsMessagingSupportedcontentDefault(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Supportedcontentreference",
                "required": "true"
            }
        ],
        "return": "Supportedcontent"
    },
    "PUT /api/v2/conversations/messaging/threadingtimeline": {
        "operationId": "putconversationsmessagingthreadingtimeline",
        "functionName": "PutConversationsMessagingThreadingtimeline",
        "signature": "PutConversationsMessagingThreadingtimeline(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationthreadingwindow",
                "required": "true"
            }
        ],
        "return": "Conversationthreadingwindow"
    },
    "PUT /api/v2/conversations/screenshares/{conversationId}/recordingstate": {
        "operationId": "putconversationsscreensharerecordingstate",
        "functionName": "PutConversationsScreenshareRecordingstate",
        "signature": "PutConversationsScreenshareRecordingstate(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setrecordingstate",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/socials/{conversationId}/recordingstate": {
        "operationId": "putconversationssocialrecordingstate",
        "functionName": "PutConversationsSocialRecordingstate",
        "signature": "PutConversationsSocialRecordingstate(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setrecordingstate",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/conversations/videos/{conversationId}/recordingstate": {
        "operationId": "putconversationsvideorecordingstate",
        "functionName": "PutConversationsVideoRecordingstate",
        "signature": "PutConversationsVideoRecordingstate(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Setrecordingstate",
                "required": "true"
            }
        ],
        "return": "string"
    }
    
}