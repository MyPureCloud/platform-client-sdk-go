config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: https://api.mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...), AuthorizeCodeGrant(...) or AuthorizePKCEGrant(...)

apiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)

var knowledgeBaseId string // Knowledge base ID
var before string // The cursor that points to the start of the set of entities that has been returned.
var after string // The cursor that points to the end of the set of entities that has been returned.
var pageSize string // Number of entities to return. Maximum of 200.
var userId []string // If specified, retrieves operations associated with user ids, comma separated values expected.
var varType []string // If specified, retrieves operations with specified operation type, comma separated values expected.
var status []string // If specified, retrieves operations with specified operation status, comma separated values expected.
var interval string // Retrieves the operations modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ
var sourceId []string // If specified, retrieves operations associated with source ids, comma separated values expected.
// Get operations
data, response, err := apiInstance.GetKnowledgeKnowledgebaseOperations(knowledgeBaseId, before, after, pageSize, userId, varType, status, interval, sourceId)
if err != nil {
	fmt.Printf("Error calling GetKnowledgeKnowledgebaseOperations: %v\n", err)
} else {
	fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
}