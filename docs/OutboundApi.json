{
    "DELETE /api/v2/outbound/attemptlimits/{attemptLimitsId}": {
        "operationId": "deleteoutboundattemptlimit",
        "functionName": "DeleteOutboundAttemptlimit",
        "signature": "DeleteOutboundAttemptlimit(attemptLimitsId)",
        "parameters": [
            {
                "name": "attemptLimitsId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/callabletimesets/{callableTimeSetId}": {
        "operationId": "deleteoutboundcallabletimeset",
        "functionName": "DeleteOutboundCallabletimeset",
        "signature": "DeleteOutboundCallabletimeset(callableTimeSetId)",
        "parameters": [
            {
                "name": "callableTimeSetId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}": {
        "operationId": "deleteoutboundcallanalysisresponseset",
        "functionName": "DeleteOutboundCallanalysisresponseset",
        "signature": "DeleteOutboundCallanalysisresponseset(callAnalysisSetId)",
        "parameters": [
            {
                "name": "callAnalysisSetId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/campaigns/{campaignId}": {
        "operationId": "deleteoutboundcampaign",
        "functionName": "DeleteOutboundCampaign",
        "signature": "DeleteOutboundCampaign(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaign"
    },
    "DELETE /api/v2/outbound/campaigns/{campaignId}/progress": {
        "operationId": "deleteoutboundcampaignprogress",
        "functionName": "DeleteOutboundCampaignProgress",
        "signature": "DeleteOutboundCampaignProgress(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/campaignrules/{campaignRuleId}": {
        "operationId": "deleteoutboundcampaignrule",
        "functionName": "DeleteOutboundCampaignrule",
        "signature": "DeleteOutboundCampaignrule(campaignRuleId)",
        "parameters": [
            {
                "name": "campaignRuleId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/contactlists/{contactListId}": {
        "operationId": "deleteoutboundcontactlist",
        "functionName": "DeleteOutboundContactlist",
        "signature": "DeleteOutboundContactlist(contactListId)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}": {
        "operationId": "deleteoutboundcontactlistcontact",
        "functionName": "DeleteOutboundContactlistContact",
        "signature": "DeleteOutboundContactlistContact(contactListId, contactId)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "contactId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/contactlists/{contactListId}/contacts": {
        "operationId": "deleteoutboundcontactlistcontacts",
        "functionName": "DeleteOutboundContactlistContacts",
        "signature": "DeleteOutboundContactlistContacts(contactListId, contactIds)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "contactIds",
                "type": "[]string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/contactlistfilters/{contactListFilterId}": {
        "operationId": "deleteoutboundcontactlistfilter",
        "functionName": "DeleteOutboundContactlistfilter",
        "signature": "DeleteOutboundContactlistfilter(contactListFilterId)",
        "parameters": [
            {
                "name": "contactListFilterId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/contactlists": {
        "operationId": "deleteoutboundcontactlists",
        "functionName": "DeleteOutboundContactlists",
        "signature": "DeleteOutboundContactlists(id)",
        "parameters": [
            {
                "name": "id",
                "type": "[]string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/digitalrulesets/{digitalRuleSetId}": {
        "operationId": "deleteoutbounddigitalruleset",
        "functionName": "DeleteOutboundDigitalruleset",
        "signature": "DeleteOutboundDigitalruleset(digitalRuleSetId)",
        "parameters": [
            {
                "name": "digitalRuleSetId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/dnclists/{dncListId}": {
        "operationId": "deleteoutbounddnclist",
        "functionName": "DeleteOutboundDnclist",
        "signature": "DeleteOutboundDnclist(dncListId)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns": {
        "operationId": "deleteoutbounddnclistcustomexclusioncolumns",
        "functionName": "DeleteOutboundDnclistCustomexclusioncolumns",
        "signature": "DeleteOutboundDnclistCustomexclusioncolumns(dncListId, expiredOnly)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expiredOnly",
                "type": "bool",
                "required": "false"
            }
        ]
    },
    "DELETE /api/v2/outbound/dnclists/{dncListId}/emailaddresses": {
        "operationId": "deleteoutbounddnclistemailaddresses",
        "functionName": "DeleteOutboundDnclistEmailaddresses",
        "signature": "DeleteOutboundDnclistEmailaddresses(dncListId, expiredOnly)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expiredOnly",
                "type": "bool",
                "required": "false"
            }
        ]
    },
    "DELETE /api/v2/outbound/dnclists/{dncListId}/phonenumbers": {
        "operationId": "deleteoutbounddnclistphonenumbers",
        "functionName": "DeleteOutboundDnclistPhonenumbers",
        "signature": "DeleteOutboundDnclistPhonenumbers(dncListId, expiredOnly)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "expiredOnly",
                "type": "bool",
                "required": "false"
            }
        ]
    },
    "DELETE /api/v2/outbound/messagingcampaigns/{messagingCampaignId}": {
        "operationId": "deleteoutboundmessagingcampaign",
        "functionName": "DeleteOutboundMessagingcampaign",
        "signature": "DeleteOutboundMessagingcampaign(messagingCampaignId)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Messagingcampaign"
    },
    "DELETE /api/v2/outbound/messagingcampaigns/{messagingCampaignId}/progress": {
        "operationId": "deleteoutboundmessagingcampaignprogress",
        "functionName": "DeleteOutboundMessagingcampaignProgress",
        "signature": "DeleteOutboundMessagingcampaignProgress(messagingCampaignId)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/rulesets/{ruleSetId}": {
        "operationId": "deleteoutboundruleset",
        "functionName": "DeleteOutboundRuleset",
        "signature": "DeleteOutboundRuleset(ruleSetId)",
        "parameters": [
            {
                "name": "ruleSetId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/schedules/campaigns/{campaignId}": {
        "operationId": "deleteoutboundschedulescampaign",
        "functionName": "DeleteOutboundSchedulesCampaign",
        "signature": "DeleteOutboundSchedulesCampaign(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}": {
        "operationId": "deleteoutboundschedulesemailcampaign",
        "functionName": "DeleteOutboundSchedulesEmailcampaign",
        "signature": "DeleteOutboundSchedulesEmailcampaign(emailCampaignId)",
        "parameters": [
            {
                "name": "emailCampaignId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/schedules/messagingcampaigns/{messagingCampaignId}": {
        "operationId": "deleteoutboundschedulesmessagingcampaign",
        "functionName": "DeleteOutboundSchedulesMessagingcampaign",
        "signature": "DeleteOutboundSchedulesMessagingcampaign(messagingCampaignId)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/schedules/sequences/{sequenceId}": {
        "operationId": "deleteoutboundschedulessequence",
        "functionName": "DeleteOutboundSchedulesSequence",
        "signature": "DeleteOutboundSchedulesSequence(sequenceId)",
        "parameters": [
            {
                "name": "sequenceId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/outbound/sequences/{sequenceId}": {
        "operationId": "deleteoutboundsequence",
        "functionName": "DeleteOutboundSequence",
        "signature": "DeleteOutboundSequence(sequenceId)",
        "parameters": [
            {
                "name": "sequenceId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/outbound/attemptlimits/{attemptLimitsId}": {
        "operationId": "getoutboundattemptlimit",
        "functionName": "GetOutboundAttemptlimit",
        "signature": "GetOutboundAttemptlimit(attemptLimitsId)",
        "parameters": [
            {
                "name": "attemptLimitsId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Attemptlimits"
    },
    "GET /api/v2/outbound/attemptlimits": {
        "operationId": "getoutboundattemptlimits",
        "functionName": "GetOutboundAttemptlimits",
        "signature": "GetOutboundAttemptlimits(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "allowEmptyResult",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Attemptlimitsentitylisting"
    },
    "GET /api/v2/outbound/callabletimesets/{callableTimeSetId}": {
        "operationId": "getoutboundcallabletimeset",
        "functionName": "GetOutboundCallabletimeset",
        "signature": "GetOutboundCallabletimeset(callableTimeSetId)",
        "parameters": [
            {
                "name": "callableTimeSetId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Callabletimeset"
    },
    "GET /api/v2/outbound/callabletimesets": {
        "operationId": "getoutboundcallabletimesets",
        "functionName": "GetOutboundCallabletimesets",
        "signature": "GetOutboundCallabletimesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "allowEmptyResult",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Callabletimesetentitylisting"
    },
    "GET /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}": {
        "operationId": "getoutboundcallanalysisresponseset",
        "functionName": "GetOutboundCallanalysisresponseset",
        "signature": "GetOutboundCallanalysisresponseset(callAnalysisSetId)",
        "parameters": [
            {
                "name": "callAnalysisSetId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Responseset"
    },
    "GET /api/v2/outbound/callanalysisresponsesets": {
        "operationId": "getoutboundcallanalysisresponsesets",
        "functionName": "GetOutboundCallanalysisresponsesets",
        "signature": "GetOutboundCallanalysisresponsesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "allowEmptyResult",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Responsesetentitylisting"
    },
    "GET /api/v2/outbound/campaigns/{campaignId}": {
        "operationId": "getoutboundcampaign",
        "functionName": "GetOutboundCampaign",
        "signature": "GetOutboundCampaign(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaign"
    },
    "GET /api/v2/outbound/campaigns/{campaignId}/agentownedmappingpreview/results": {
        "operationId": "getoutboundcampaignagentownedmappingpreviewresults",
        "functionName": "GetOutboundCampaignAgentownedmappingpreviewResults",
        "signature": "GetOutboundCampaignAgentownedmappingpreviewResults(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Agentownedmappingpreviewlisting"
    },
    "GET /api/v2/outbound/campaigns/{campaignId}/diagnostics": {
        "operationId": "getoutboundcampaigndiagnostics",
        "functionName": "GetOutboundCampaignDiagnostics",
        "signature": "GetOutboundCampaignDiagnostics(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaigndiagnostics"
    },
    "GET /api/v2/outbound/campaigns/{campaignId}/interactions": {
        "operationId": "getoutboundcampaigninteractions",
        "functionName": "GetOutboundCampaignInteractions",
        "signature": "GetOutboundCampaignInteractions(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaigninteractions"
    },
    "GET /api/v2/outbound/campaigns/{campaignId}/progress": {
        "operationId": "getoutboundcampaignprogress",
        "functionName": "GetOutboundCampaignProgress",
        "signature": "GetOutboundCampaignProgress(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaignprogress"
    },
    "GET /api/v2/outbound/campaigns/{campaignId}/stats": {
        "operationId": "getoutboundcampaignstats",
        "functionName": "GetOutboundCampaignStats",
        "signature": "GetOutboundCampaignStats(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaignstats"
    },
    "GET /api/v2/outbound/campaignrules/{campaignRuleId}": {
        "operationId": "getoutboundcampaignrule",
        "functionName": "GetOutboundCampaignrule",
        "signature": "GetOutboundCampaignrule(campaignRuleId)",
        "parameters": [
            {
                "name": "campaignRuleId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaignrule"
    },
    "GET /api/v2/outbound/campaignrules": {
        "operationId": "getoutboundcampaignrules",
        "functionName": "GetOutboundCampaignrules",
        "signature": "GetOutboundCampaignrules(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "allowEmptyResult",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Campaignruleentitylisting"
    },
    "GET /api/v2/outbound/campaigns": {
        "operationId": "getoutboundcampaigns",
        "functionName": "GetOutboundCampaigns",
        "signature": "GetOutboundCampaigns(pageSize, pageNumber, filterType, name, id, contactListId, dncListIds, distributionQueueId, edgeGroupId, callAnalysisResponseSetId, divisionId, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "contactListId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "dncListIds",
                "type": "string",
                "required": "false"
            },
            {
                "name": "distributionQueueId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "edgeGroupId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "callAnalysisResponseSetId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "divisionId",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Campaignentitylisting"
    },
    "GET /api/v2/outbound/campaigns/all": {
        "operationId": "getoutboundcampaignsall",
        "functionName": "GetOutboundCampaignsAll",
        "signature": "GetOutboundCampaignsAll(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "divisionId",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "mediaType",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Commoncampaignentitylisting"
    },
    "GET /api/v2/outbound/campaigns/all/divisionviews": {
        "operationId": "getoutboundcampaignsalldivisionviews",
        "functionName": "GetOutboundCampaignsAllDivisionviews",
        "signature": "GetOutboundCampaignsAllDivisionviews(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "divisionId",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "mediaType",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Commoncampaigndivisionviewentitylisting"
    },
    "GET /api/v2/outbound/campaigns/divisionviews/{campaignId}": {
        "operationId": "getoutboundcampaignsdivisionview",
        "functionName": "GetOutboundCampaignsDivisionview",
        "signature": "GetOutboundCampaignsDivisionview(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaigndivisionview"
    },
    "GET /api/v2/outbound/campaigns/divisionviews": {
        "operationId": "getoutboundcampaignsdivisionviews",
        "functionName": "GetOutboundCampaignsDivisionviews",
        "signature": "GetOutboundCampaignsDivisionviews(pageSize, pageNumber, filterType, name, id, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Campaigndivisionviewlisting"
    },
    "GET /api/v2/outbound/contactlists/{contactListId}": {
        "operationId": "getoutboundcontactlist",
        "functionName": "GetOutboundContactlist",
        "signature": "GetOutboundContactlist(contactListId, includeImportStatus, includeSize)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "includeImportStatus",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "includeSize",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Contactlist"
    },
    "GET /api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}": {
        "operationId": "getoutboundcontactlistcontact",
        "functionName": "GetOutboundContactlistContact",
        "signature": "GetOutboundContactlistContact(contactListId, contactId)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "contactId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Dialercontact"
    },
    "GET /api/v2/outbound/contactlists/{contactListId}/export": {
        "operationId": "getoutboundcontactlistexport",
        "functionName": "GetOutboundContactlistExport",
        "signature": "GetOutboundContactlistExport(contactListId, download)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "download",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Exporturi"
    },
    "GET /api/v2/outbound/contactlists/{contactListId}/importstatus": {
        "operationId": "getoutboundcontactlistimportstatus",
        "functionName": "GetOutboundContactlistImportstatus",
        "signature": "GetOutboundContactlistImportstatus(contactListId)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Importstatus"
    },
    "GET /api/v2/outbound/contactlists/{contactListId}/timezonemappingpreview": {
        "operationId": "getoutboundcontactlisttimezonemappingpreview",
        "functionName": "GetOutboundContactlistTimezonemappingpreview",
        "signature": "GetOutboundContactlistTimezonemappingpreview(contactListId)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Timezonemappingpreview"
    },
    "GET /api/v2/outbound/contactlistfilters/{contactListFilterId}": {
        "operationId": "getoutboundcontactlistfilter",
        "functionName": "GetOutboundContactlistfilter",
        "signature": "GetOutboundContactlistfilter(contactListFilterId)",
        "parameters": [
            {
                "name": "contactListFilterId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Contactlistfilter"
    },
    "GET /api/v2/outbound/contactlistfilters": {
        "operationId": "getoutboundcontactlistfilters",
        "functionName": "GetOutboundContactlistfilters",
        "signature": "GetOutboundContactlistfilters(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder, contactListId)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "allowEmptyResult",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            },
            {
                "name": "contactListId",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Contactlistfilterentitylisting"
    },
    "GET /api/v2/outbound/contactlists": {
        "operationId": "getoutboundcontactlists",
        "functionName": "GetOutboundContactlists",
        "signature": "GetOutboundContactlists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, id, divisionId, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "includeImportStatus",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "includeSize",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "allowEmptyResult",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "divisionId",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Contactlistentitylisting"
    },
    "GET /api/v2/outbound/contactlists/divisionviews/{contactListId}": {
        "operationId": "getoutboundcontactlistsdivisionview",
        "functionName": "GetOutboundContactlistsDivisionview",
        "signature": "GetOutboundContactlistsDivisionview(contactListId, includeImportStatus, includeSize)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "includeImportStatus",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "includeSize",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Contactlistdivisionview"
    },
    "GET /api/v2/outbound/contactlists/divisionviews": {
        "operationId": "getoutboundcontactlistsdivisionviews",
        "functionName": "GetOutboundContactlistsDivisionviews",
        "signature": "GetOutboundContactlistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, id, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "includeImportStatus",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "includeSize",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Contactlistdivisionviewlisting"
    },
    "GET /api/v2/outbound/digitalrulesets/{digitalRuleSetId}": {
        "operationId": "getoutbounddigitalruleset",
        "functionName": "GetOutboundDigitalruleset",
        "signature": "GetOutboundDigitalruleset(digitalRuleSetId)",
        "parameters": [
            {
                "name": "digitalRuleSetId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Digitalruleset"
    },
    "GET /api/v2/outbound/digitalrulesets": {
        "operationId": "getoutbounddigitalrulesets",
        "functionName": "GetOutboundDigitalrulesets",
        "signature": "GetOutboundDigitalrulesets(pageSize, pageNumber, sortBy, sortOrder, name, id)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            }
        ],
        "return": "Digitalrulesetentitylisting"
    },
    "GET /api/v2/outbound/dnclists/{dncListId}": {
        "operationId": "getoutbounddnclist",
        "functionName": "GetOutboundDnclist",
        "signature": "GetOutboundDnclist(dncListId, includeImportStatus, includeSize)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "includeImportStatus",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "includeSize",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Dnclist"
    },
    "GET /api/v2/outbound/dnclists/{dncListId}/export": {
        "operationId": "getoutbounddnclistexport",
        "functionName": "GetOutboundDnclistExport",
        "signature": "GetOutboundDnclistExport(dncListId, download)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "download",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Exporturi"
    },
    "GET /api/v2/outbound/dnclists/{dncListId}/importstatus": {
        "operationId": "getoutbounddnclistimportstatus",
        "functionName": "GetOutboundDnclistImportstatus",
        "signature": "GetOutboundDnclistImportstatus(dncListId)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Importstatus"
    },
    "GET /api/v2/outbound/dnclists": {
        "operationId": "getoutbounddnclists",
        "functionName": "GetOutboundDnclists",
        "signature": "GetOutboundDnclists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, dncSourceType, divisionId, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "includeImportStatus",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "includeSize",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "allowEmptyResult",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "dncSourceType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "divisionId",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Dnclistentitylisting"
    },
    "GET /api/v2/outbound/dnclists/divisionviews/{dncListId}": {
        "operationId": "getoutbounddnclistsdivisionview",
        "functionName": "GetOutboundDnclistsDivisionview",
        "signature": "GetOutboundDnclistsDivisionview(dncListId, includeImportStatus, includeSize)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "includeImportStatus",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "includeSize",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Dnclistdivisionview"
    },
    "GET /api/v2/outbound/dnclists/divisionviews": {
        "operationId": "getoutbounddnclistsdivisionviews",
        "functionName": "GetOutboundDnclistsDivisionviews",
        "signature": "GetOutboundDnclistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, dncSourceType, id, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "includeImportStatus",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "includeSize",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "dncSourceType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Dnclistdivisionviewlisting"
    },
    "GET /api/v2/outbound/events/{eventId}": {
        "operationId": "getoutboundevent",
        "functionName": "GetOutboundEvent",
        "signature": "GetOutboundEvent(eventId)",
        "parameters": [
            {
                "name": "eventId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Eventlog"
    },
    "GET /api/v2/outbound/events": {
        "operationId": "getoutboundevents",
        "functionName": "GetOutboundEvents",
        "signature": "GetOutboundEvents(pageSize, pageNumber, filterType, category, level, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "category",
                "type": "string",
                "required": "false"
            },
            {
                "name": "level",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Dialerevententitylisting"
    },
    "GET /api/v2/outbound/messagingcampaigns/{messagingCampaignId}": {
        "operationId": "getoutboundmessagingcampaign",
        "functionName": "GetOutboundMessagingcampaign",
        "signature": "GetOutboundMessagingcampaign(messagingCampaignId)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Messagingcampaign"
    },
    "GET /api/v2/outbound/messagingcampaigns/{messagingCampaignId}/diagnostics": {
        "operationId": "getoutboundmessagingcampaigndiagnostics",
        "functionName": "GetOutboundMessagingcampaignDiagnostics",
        "signature": "GetOutboundMessagingcampaignDiagnostics(messagingCampaignId)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Messagingcampaigndiagnostics"
    },
    "GET /api/v2/outbound/messagingcampaigns/{messagingCampaignId}/progress": {
        "operationId": "getoutboundmessagingcampaignprogress",
        "functionName": "GetOutboundMessagingcampaignProgress",
        "signature": "GetOutboundMessagingcampaignProgress(messagingCampaignId)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaignprogress"
    },
    "GET /api/v2/outbound/messagingcampaigns": {
        "operationId": "getoutboundmessagingcampaigns",
        "functionName": "GetOutboundMessagingcampaigns",
        "signature": "GetOutboundMessagingcampaigns(pageSize, pageNumber, sortBy, sortOrder, name, contactListId, divisionId, varType, senderSmsPhoneNumber, id)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "contactListId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "divisionId",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "varType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "senderSmsPhoneNumber",
                "type": "string",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            }
        ],
        "return": "Messagingcampaignentitylisting"
    },
    "GET /api/v2/outbound/messagingcampaigns/divisionviews/{messagingCampaignId}": {
        "operationId": "getoutboundmessagingcampaignsdivisionview",
        "functionName": "GetOutboundMessagingcampaignsDivisionview",
        "signature": "GetOutboundMessagingcampaignsDivisionview(messagingCampaignId)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Messagingcampaigndivisionview"
    },
    "GET /api/v2/outbound/messagingcampaigns/divisionviews": {
        "operationId": "getoutboundmessagingcampaignsdivisionviews",
        "functionName": "GetOutboundMessagingcampaignsDivisionviews",
        "signature": "GetOutboundMessagingcampaignsDivisionviews(pageSize, pageNumber, sortOrder, name, varType, id, senderSmsPhoneNumber)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "varType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            },
            {
                "name": "senderSmsPhoneNumber",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Messagingcampaigndivisionviewentitylisting"
    },
    "GET /api/v2/outbound/rulesets/{ruleSetId}": {
        "operationId": "getoutboundruleset",
        "functionName": "GetOutboundRuleset",
        "signature": "GetOutboundRuleset(ruleSetId)",
        "parameters": [
            {
                "name": "ruleSetId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Ruleset"
    },
    "GET /api/v2/outbound/rulesets": {
        "operationId": "getoutboundrulesets",
        "functionName": "GetOutboundRulesets",
        "signature": "GetOutboundRulesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "allowEmptyResult",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Rulesetentitylisting"
    },
    "GET /api/v2/outbound/schedules/campaigns/{campaignId}": {
        "operationId": "getoutboundschedulescampaign",
        "functionName": "GetOutboundSchedulesCampaign",
        "signature": "GetOutboundSchedulesCampaign(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaignschedule"
    },
    "GET /api/v2/outbound/schedules/campaigns": {
        "operationId": "getoutboundschedulescampaigns",
        "functionName": "GetOutboundSchedulesCampaigns",
        "signature": "GetOutboundSchedulesCampaigns()",
        
        "return": "[]Campaignschedule"
    },
    "GET /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}": {
        "operationId": "getoutboundschedulesemailcampaign",
        "functionName": "GetOutboundSchedulesEmailcampaign",
        "signature": "GetOutboundSchedulesEmailcampaign(emailCampaignId)",
        "parameters": [
            {
                "name": "emailCampaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Emailcampaignschedule"
    },
    "GET /api/v2/outbound/schedules/emailcampaigns": {
        "operationId": "getoutboundschedulesemailcampaigns",
        "functionName": "GetOutboundSchedulesEmailcampaigns",
        "signature": "GetOutboundSchedulesEmailcampaigns()",
        
        "return": "Messagingcampaignscheduleentitylisting"
    },
    "GET /api/v2/outbound/schedules/messagingcampaigns/{messagingCampaignId}": {
        "operationId": "getoutboundschedulesmessagingcampaign",
        "functionName": "GetOutboundSchedulesMessagingcampaign",
        "signature": "GetOutboundSchedulesMessagingcampaign(messagingCampaignId)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Messagingcampaignschedule"
    },
    "GET /api/v2/outbound/schedules/messagingcampaigns": {
        "operationId": "getoutboundschedulesmessagingcampaigns",
        "functionName": "GetOutboundSchedulesMessagingcampaigns",
        "signature": "GetOutboundSchedulesMessagingcampaigns()",
        
        "return": "Messagingcampaignscheduleentitylisting"
    },
    "GET /api/v2/outbound/schedules/sequences/{sequenceId}": {
        "operationId": "getoutboundschedulessequence",
        "functionName": "GetOutboundSchedulesSequence",
        "signature": "GetOutboundSchedulesSequence(sequenceId)",
        "parameters": [
            {
                "name": "sequenceId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Sequenceschedule"
    },
    "GET /api/v2/outbound/schedules/sequences": {
        "operationId": "getoutboundschedulessequences",
        "functionName": "GetOutboundSchedulesSequences",
        "signature": "GetOutboundSchedulesSequences()",
        
        "return": "[]Sequenceschedule"
    },
    "GET /api/v2/outbound/sequences/{sequenceId}": {
        "operationId": "getoutboundsequence",
        "functionName": "GetOutboundSequence",
        "signature": "GetOutboundSequence(sequenceId)",
        "parameters": [
            {
                "name": "sequenceId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Campaignsequence"
    },
    "GET /api/v2/outbound/sequences": {
        "operationId": "getoutboundsequences",
        "functionName": "GetOutboundSequences",
        "signature": "GetOutboundSequences(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
        "parameters": [
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "allowEmptyResult",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "filterType",
                "type": "string",
                "required": "false"
            },
            {
                "name": "name",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Campaignsequenceentitylisting"
    },
    "GET /api/v2/outbound/settings": {
        "operationId": "getoutboundsettings",
        "functionName": "GetOutboundSettings",
        "signature": "GetOutboundSettings()",
        
        "return": "Outboundsettings"
    },
    "GET /api/v2/outbound/wrapupcodemappings": {
        "operationId": "getoutboundwrapupcodemappings",
        "functionName": "GetOutboundWrapupcodemappings",
        "signature": "GetOutboundWrapupcodemappings()",
        
        "return": "Wrapupcodemapping"
    },
    "PATCH /api/v2/outbound/dnclists/{dncListId}/customexclusioncolumns": {
        "operationId": "patchoutbounddnclistcustomexclusioncolumns",
        "functionName": "PatchOutboundDnclistCustomexclusioncolumns",
        "signature": "PatchOutboundDnclistCustomexclusioncolumns(dncListId, body)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Dncpatchcustomexclusioncolumnsrequest",
                "required": "true"
            }
        ]
    },
    "PATCH /api/v2/outbound/dnclists/{dncListId}/emailaddresses": {
        "operationId": "patchoutbounddnclistemailaddresses",
        "functionName": "PatchOutboundDnclistEmailaddresses",
        "signature": "PatchOutboundDnclistEmailaddresses(dncListId, body)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Dncpatchemailsrequest",
                "required": "true"
            }
        ]
    },
    "PATCH /api/v2/outbound/dnclists/{dncListId}/phonenumbers": {
        "operationId": "patchoutbounddnclistphonenumbers",
        "functionName": "PatchOutboundDnclistPhonenumbers",
        "signature": "PatchOutboundDnclistPhonenumbers(dncListId, body)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Dncpatchphonenumbersrequest",
                "required": "true"
            }
        ]
    },
    "PATCH /api/v2/outbound/settings": {
        "operationId": "patchoutboundsettings",
        "functionName": "PatchOutboundSettings",
        "signature": "PatchOutboundSettings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Outboundsettings",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/outbound/attemptlimits": {
        "operationId": "postoutboundattemptlimits",
        "functionName": "PostOutboundAttemptlimits",
        "signature": "PostOutboundAttemptlimits(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Attemptlimits",
                "required": "true"
            }
        ],
        "return": "Attemptlimits"
    },
    "POST /api/v2/outbound/audits": {
        "operationId": "postoutboundaudits",
        "functionName": "PostOutboundAudits",
        "signature": "PostOutboundAudits(body, pageSize, pageNumber, sortBy, sortOrder, facetsOnly)",
        "parameters": [
            {
                "name": "body",
                "type": "Dialerauditrequest",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sortBy",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sortOrder",
                "type": "string",
                "required": "false"
            },
            {
                "name": "facetsOnly",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Auditsearchresult"
    },
    "POST /api/v2/outbound/callabletimesets": {
        "operationId": "postoutboundcallabletimesets",
        "functionName": "PostOutboundCallabletimesets",
        "signature": "PostOutboundCallabletimesets(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Callabletimeset",
                "required": "true"
            }
        ],
        "return": "Callabletimeset"
    },
    "POST /api/v2/outbound/callanalysisresponsesets": {
        "operationId": "postoutboundcallanalysisresponsesets",
        "functionName": "PostOutboundCallanalysisresponsesets",
        "signature": "PostOutboundCallanalysisresponsesets(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Responseset",
                "required": "true"
            }
        ],
        "return": "Responseset"
    },
    "POST /api/v2/outbound/campaigns/{campaignId}/agentownedmappingpreview": {
        "operationId": "postoutboundcampaignagentownedmappingpreview",
        "functionName": "PostOutboundCampaignAgentownedmappingpreview",
        "signature": "PostOutboundCampaignAgentownedmappingpreview(campaignId)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "interface{}"
    },
    "POST /api/v2/outbound/campaigns/{campaignId}/callback/schedule": {
        "operationId": "postoutboundcampaigncallbackschedule",
        "functionName": "PostOutboundCampaignCallbackSchedule",
        "signature": "PostOutboundCampaignCallbackSchedule(campaignId, body)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Contactcallbackrequest",
                "required": "true"
            }
        ],
        "return": "Contactcallbackrequest"
    },
    "POST /api/v2/outbound/campaignrules": {
        "operationId": "postoutboundcampaignrules",
        "functionName": "PostOutboundCampaignrules",
        "signature": "PostOutboundCampaignrules(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Campaignrule",
                "required": "true"
            }
        ],
        "return": "Campaignrule"
    },
    "POST /api/v2/outbound/campaigns": {
        "operationId": "postoutboundcampaigns",
        "functionName": "PostOutboundCampaigns",
        "signature": "PostOutboundCampaigns(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Campaign",
                "required": "true"
            }
        ],
        "return": "Campaign"
    },
    "POST /api/v2/outbound/campaigns/progress": {
        "operationId": "postoutboundcampaignsprogress",
        "functionName": "PostOutboundCampaignsProgress",
        "signature": "PostOutboundCampaignsProgress(body)",
        "parameters": [
            {
                "name": "body",
                "type": "[]string",
                "required": "true"
            }
        ],
        "return": "[]Campaignprogress"
    },
    "POST /api/v2/outbound/contactlists/{contactListId}/clear": {
        "operationId": "postoutboundcontactlistclear",
        "functionName": "PostOutboundContactlistClear",
        "signature": "PostOutboundContactlistClear(contactListId)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/outbound/contactlists/{contactListId}/contacts": {
        "operationId": "postoutboundcontactlistcontacts",
        "functionName": "PostOutboundContactlistContacts",
        "signature": "PostOutboundContactlistContacts(contactListId, body, priority, clearSystemData, doNotQueue)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "[]Writabledialercontact",
                "required": "true"
            },
            {
                "name": "priority",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "clearSystemData",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "doNotQueue",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "[]Dialercontact"
    },
    "POST /api/v2/outbound/contactlists/{contactListId}/contacts/bulk": {
        "operationId": "postoutboundcontactlistcontactsbulk",
        "functionName": "PostOutboundContactlistContactsBulk",
        "signature": "PostOutboundContactlistContactsBulk(contactListId, body)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "[]string",
                "required": "true"
            }
        ],
        "return": "[]Dialercontact"
    },
    "POST /api/v2/outbound/contactlists/{contactListId}/export": {
        "operationId": "postoutboundcontactlistexport",
        "functionName": "PostOutboundContactlistExport",
        "signature": "PostOutboundContactlistExport(contactListId)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Domainentityref"
    },
    "POST /api/v2/outbound/contactlistfilters": {
        "operationId": "postoutboundcontactlistfilters",
        "functionName": "PostOutboundContactlistfilters",
        "signature": "PostOutboundContactlistfilters(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Contactlistfilter",
                "required": "true"
            }
        ],
        "return": "Contactlistfilter"
    },
    "POST /api/v2/outbound/contactlistfilters/preview": {
        "operationId": "postoutboundcontactlistfilterspreview",
        "functionName": "PostOutboundContactlistfiltersPreview",
        "signature": "PostOutboundContactlistfiltersPreview(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Contactlistfilter",
                "required": "true"
            }
        ],
        "return": "Filterpreviewresponse"
    },
    "POST /api/v2/outbound/contactlists": {
        "operationId": "postoutboundcontactlists",
        "functionName": "PostOutboundContactlists",
        "signature": "PostOutboundContactlists(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Contactlist",
                "required": "true"
            }
        ],
        "return": "Contactlist"
    },
    "POST /api/v2/outbound/conversations/{conversationId}/dnc": {
        "operationId": "postoutboundconversationdnc",
        "functionName": "PostOutboundConversationDnc",
        "signature": "PostOutboundConversationDnc(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/outbound/digitalrulesets": {
        "operationId": "postoutbounddigitalrulesets",
        "functionName": "PostOutboundDigitalrulesets",
        "signature": "PostOutboundDigitalrulesets(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Digitalruleset",
                "required": "true"
            }
        ],
        "return": "Digitalruleset"
    },
    "POST /api/v2/outbound/dnclists/{dncListId}/emailaddresses": {
        "operationId": "postoutbounddnclistemailaddresses",
        "functionName": "PostOutboundDnclistEmailaddresses",
        "signature": "PostOutboundDnclistEmailaddresses(dncListId, body)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "[]string",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/outbound/dnclists/{dncListId}/export": {
        "operationId": "postoutbounddnclistexport",
        "functionName": "PostOutboundDnclistExport",
        "signature": "PostOutboundDnclistExport(dncListId)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Domainentityref"
    },
    "POST /api/v2/outbound/dnclists/{dncListId}/phonenumbers": {
        "operationId": "postoutbounddnclistphonenumbers",
        "functionName": "PostOutboundDnclistPhonenumbers",
        "signature": "PostOutboundDnclistPhonenumbers(dncListId, body, expirationDateTime)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "[]string",
                "required": "true"
            },
            {
                "name": "expirationDateTime",
                "type": "string",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/outbound/dnclists": {
        "operationId": "postoutbounddnclists",
        "functionName": "PostOutboundDnclists",
        "signature": "PostOutboundDnclists(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Dnclistcreate",
                "required": "true"
            }
        ],
        "return": "Dnclist"
    },
    "POST /api/v2/outbound/messagingcampaigns": {
        "operationId": "postoutboundmessagingcampaigns",
        "functionName": "PostOutboundMessagingcampaigns",
        "signature": "PostOutboundMessagingcampaigns(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Messagingcampaign",
                "required": "true"
            }
        ],
        "return": "Messagingcampaign"
    },
    "POST /api/v2/outbound/messagingcampaigns/progress": {
        "operationId": "postoutboundmessagingcampaignsprogress",
        "functionName": "PostOutboundMessagingcampaignsProgress",
        "signature": "PostOutboundMessagingcampaignsProgress(body)",
        "parameters": [
            {
                "name": "body",
                "type": "[]string",
                "required": "true"
            }
        ],
        "return": "[]Campaignprogress"
    },
    "POST /api/v2/outbound/rulesets": {
        "operationId": "postoutboundrulesets",
        "functionName": "PostOutboundRulesets",
        "signature": "PostOutboundRulesets(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Ruleset",
                "required": "true"
            }
        ],
        "return": "Ruleset"
    },
    "POST /api/v2/outbound/sequences": {
        "operationId": "postoutboundsequences",
        "functionName": "PostOutboundSequences",
        "signature": "PostOutboundSequences(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Campaignsequence",
                "required": "true"
            }
        ],
        "return": "Campaignsequence"
    },
    "PUT /api/v2/outbound/attemptlimits/{attemptLimitsId}": {
        "operationId": "putoutboundattemptlimit",
        "functionName": "PutOutboundAttemptlimit",
        "signature": "PutOutboundAttemptlimit(attemptLimitsId, body)",
        "parameters": [
            {
                "name": "attemptLimitsId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Attemptlimits",
                "required": "true"
            }
        ],
        "return": "Attemptlimits"
    },
    "PUT /api/v2/outbound/callabletimesets/{callableTimeSetId}": {
        "operationId": "putoutboundcallabletimeset",
        "functionName": "PutOutboundCallabletimeset",
        "signature": "PutOutboundCallabletimeset(callableTimeSetId, body)",
        "parameters": [
            {
                "name": "callableTimeSetId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Callabletimeset",
                "required": "true"
            }
        ],
        "return": "Callabletimeset"
    },
    "PUT /api/v2/outbound/callanalysisresponsesets/{callAnalysisSetId}": {
        "operationId": "putoutboundcallanalysisresponseset",
        "functionName": "PutOutboundCallanalysisresponseset",
        "signature": "PutOutboundCallanalysisresponseset(callAnalysisSetId, body)",
        "parameters": [
            {
                "name": "callAnalysisSetId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Responseset",
                "required": "true"
            }
        ],
        "return": "Responseset"
    },
    "PUT /api/v2/outbound/campaigns/{campaignId}": {
        "operationId": "putoutboundcampaign",
        "functionName": "PutOutboundCampaign",
        "signature": "PutOutboundCampaign(campaignId, body)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Campaign",
                "required": "true"
            }
        ],
        "return": "Campaign"
    },
    "PUT /api/v2/outbound/campaigns/{campaignId}/agents/{userId}": {
        "operationId": "putoutboundcampaignagent",
        "functionName": "PutOutboundCampaignAgent",
        "signature": "PutOutboundCampaignAgent(campaignId, userId, body)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "userId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Agent",
                "required": "true"
            }
        ],
        "return": "string"
    },
    "PUT /api/v2/outbound/campaignrules/{campaignRuleId}": {
        "operationId": "putoutboundcampaignrule",
        "functionName": "PutOutboundCampaignrule",
        "signature": "PutOutboundCampaignrule(campaignRuleId, body)",
        "parameters": [
            {
                "name": "campaignRuleId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Campaignrule",
                "required": "true"
            }
        ],
        "return": "Campaignrule"
    },
    "PUT /api/v2/outbound/contactlists/{contactListId}": {
        "operationId": "putoutboundcontactlist",
        "functionName": "PutOutboundContactlist",
        "signature": "PutOutboundContactlist(contactListId, body)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Contactlist",
                "required": "true"
            }
        ],
        "return": "Contactlist"
    },
    "PUT /api/v2/outbound/contactlists/{contactListId}/contacts/{contactId}": {
        "operationId": "putoutboundcontactlistcontact",
        "functionName": "PutOutboundContactlistContact",
        "signature": "PutOutboundContactlistContact(contactListId, contactId, body)",
        "parameters": [
            {
                "name": "contactListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "contactId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Dialercontact",
                "required": "true"
            }
        ],
        "return": "Dialercontact"
    },
    "PUT /api/v2/outbound/contactlistfilters/{contactListFilterId}": {
        "operationId": "putoutboundcontactlistfilter",
        "functionName": "PutOutboundContactlistfilter",
        "signature": "PutOutboundContactlistfilter(contactListFilterId, body)",
        "parameters": [
            {
                "name": "contactListFilterId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Contactlistfilter",
                "required": "true"
            }
        ],
        "return": "Contactlistfilter"
    },
    "PUT /api/v2/outbound/digitalrulesets/{digitalRuleSetId}": {
        "operationId": "putoutbounddigitalruleset",
        "functionName": "PutOutboundDigitalruleset",
        "signature": "PutOutboundDigitalruleset(digitalRuleSetId, body)",
        "parameters": [
            {
                "name": "digitalRuleSetId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Digitalruleset",
                "required": "true"
            }
        ],
        "return": "Digitalruleset"
    },
    "PUT /api/v2/outbound/dnclists/{dncListId}": {
        "operationId": "putoutbounddnclist",
        "functionName": "PutOutboundDnclist",
        "signature": "PutOutboundDnclist(dncListId, body)",
        "parameters": [
            {
                "name": "dncListId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Dnclist",
                "required": "true"
            }
        ],
        "return": "Dnclist"
    },
    "PUT /api/v2/outbound/messagingcampaigns/{messagingCampaignId}": {
        "operationId": "putoutboundmessagingcampaign",
        "functionName": "PutOutboundMessagingcampaign",
        "signature": "PutOutboundMessagingcampaign(messagingCampaignId, body)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Messagingcampaign",
                "required": "true"
            }
        ],
        "return": "Messagingcampaign"
    },
    "PUT /api/v2/outbound/rulesets/{ruleSetId}": {
        "operationId": "putoutboundruleset",
        "functionName": "PutOutboundRuleset",
        "signature": "PutOutboundRuleset(ruleSetId, body)",
        "parameters": [
            {
                "name": "ruleSetId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Ruleset",
                "required": "true"
            }
        ],
        "return": "Ruleset"
    },
    "PUT /api/v2/outbound/schedules/campaigns/{campaignId}": {
        "operationId": "putoutboundschedulescampaign",
        "functionName": "PutOutboundSchedulesCampaign",
        "signature": "PutOutboundSchedulesCampaign(campaignId, body)",
        "parameters": [
            {
                "name": "campaignId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Campaignschedule",
                "required": "true"
            }
        ],
        "return": "Campaignschedule"
    },
    "PUT /api/v2/outbound/schedules/emailcampaigns/{emailCampaignId}": {
        "operationId": "putoutboundschedulesemailcampaign",
        "functionName": "PutOutboundSchedulesEmailcampaign",
        "signature": "PutOutboundSchedulesEmailcampaign(emailCampaignId, body)",
        "parameters": [
            {
                "name": "emailCampaignId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Emailcampaignschedule",
                "required": "true"
            }
        ],
        "return": "Emailcampaignschedule"
    },
    "PUT /api/v2/outbound/schedules/messagingcampaigns/{messagingCampaignId}": {
        "operationId": "putoutboundschedulesmessagingcampaign",
        "functionName": "PutOutboundSchedulesMessagingcampaign",
        "signature": "PutOutboundSchedulesMessagingcampaign(messagingCampaignId, body)",
        "parameters": [
            {
                "name": "messagingCampaignId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Messagingcampaignschedule",
                "required": "true"
            }
        ],
        "return": "Messagingcampaignschedule"
    },
    "PUT /api/v2/outbound/schedules/sequences/{sequenceId}": {
        "operationId": "putoutboundschedulessequence",
        "functionName": "PutOutboundSchedulesSequence",
        "signature": "PutOutboundSchedulesSequence(sequenceId, body)",
        "parameters": [
            {
                "name": "sequenceId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Sequenceschedule",
                "required": "true"
            }
        ],
        "return": "Sequenceschedule"
    },
    "PUT /api/v2/outbound/sequences/{sequenceId}": {
        "operationId": "putoutboundsequence",
        "functionName": "PutOutboundSequence",
        "signature": "PutOutboundSequence(sequenceId, body)",
        "parameters": [
            {
                "name": "sequenceId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Campaignsequence",
                "required": "true"
            }
        ],
        "return": "Campaignsequence"
    },
    "PUT /api/v2/outbound/wrapupcodemappings": {
        "operationId": "putoutboundwrapupcodemappings",
        "functionName": "PutOutboundWrapupcodemappings",
        "signature": "PutOutboundWrapupcodemappings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Wrapupcodemapping",
                "required": "true"
            }
        ],
        "return": "Wrapupcodemapping"
    }
    
}