config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: https://api.mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...), AuthorizeCodeGrant(...) or AuthorizePKCEGrant(...)

apiInstance := platformclientv2.NewOutboundApiWithConfig(config)

var campaignId string // Campaign ID
var includeOnlyActiveCampaigns bool // If true will return only active Campaigns
var edgeGroupId string // Edge group to be used in line distribution calculations instead of current Campaign's Edge Group. Campaign's Site and Edge Group are mutually exclusive.
var siteId string // Site to be used in line distribution calculations instead of current Campaign's Site.  Campaign's Site and Edge Group are mutually exclusive.
var useWeight bool // Enable usage of weight, this value overrides current Campaign's setting in line distribution calculations
var relativeWeight int // Relative weight to be used in line distribution calculations instead of current Campaign's relative weight
var outboundLineCount int // The number of outbound lines to be used in line distribution calculations, instead of current Campaign's Outbound Lines Count
// Get line distribution information for campaigns using same Edge Group or Site as given campaign
data, response, err := apiInstance.GetOutboundCampaignLinedistribution(campaignId, includeOnlyActiveCampaigns, edgeGroupId, siteId, useWeight, relativeWeight, outboundLineCount)
if err != nil {
	fmt.Printf("Error calling GetOutboundCampaignLinedistribution: %v\n", err)
} else {
	fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
}