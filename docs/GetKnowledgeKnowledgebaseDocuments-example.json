config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: https://api.mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...), AuthorizeCodeGrant(...) or AuthorizePKCEGrant(...)

apiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)

var knowledgeBaseId string // Knowledge base ID
var before string // The cursor that points to the start of the set of entities that has been returned.
var after string // The cursor that points to the end of the set of entities that has been returned.
var pageSize string // Number of entities to return. Maximum of 200.
var interval string // Retrieves the documents modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ
var documentId []string // Retrieves the specified documents, comma separated values expected.
var categoryId []string // If specified, retrieves documents associated with category ids, comma separated values expected.
var includeSubcategories bool // Works along with 'categoryId' query parameter. If specified, retrieves documents associated with category ids and its children categories.
var includeDrafts bool // If includeDrafts is true, Documents in the draft state are also returned in the response.
var labelIds []string // If specified, retrieves documents associated with label ids, comma separated values expected.
var expand []string // The specified entity attributes will be filled. Comma separated values expected.
var externalIds []string // If specified, retrieves documents associated with external ids, comma separated values expected.
// Get documents.
data, response, err := apiInstance.GetKnowledgeKnowledgebaseDocuments(knowledgeBaseId, before, after, pageSize, interval, documentId, categoryId, includeSubcategories, includeDrafts, labelIds, expand, externalIds)
if err != nil {
	fmt.Printf("Error calling GetKnowledgeKnowledgebaseDocuments: %v\n", err)
} else {
	fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
}