config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: https://api.mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...), AuthorizeCodeGrant(...) or AuthorizePKCEGrant(...)

apiInstance := platformclientv2.NewSCIMApiWithConfig(config)

var userId string // The ID of a user. Returned with GET /api/v2/scim/v2/users.
var attributes []string // Indicates which attributes to include. Returns these attributes and the \"id\", \"userName\", \"active\", and \"meta\" attributes. Use \"attributes\" to avoid expensive secondary calls for the default attributes.
var excludedAttributes []string // Indicates which attributes to exclude. Returns the default attributes minus \"excludedAttributes\". Always returns the \"id\", \"userName\", \"active\", and \"meta\" attributes. Use \"excludedAttributes\" to avoid expensive secondary calls for the default attributes.
var ifNoneMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \"42\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.
// Get a user
data, response, err := apiInstance.GetScimV2User(userId, attributes, excludedAttributes, ifNoneMatch)
if err != nil {
	fmt.Printf("Error calling GetScimV2User: %v\n", err)
} else {
	fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
}