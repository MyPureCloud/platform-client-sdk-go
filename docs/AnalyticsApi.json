{
    "DELETE /api/v2/analytics/conversations/details/jobs/{jobId}": {
        "operationId": "deleteanalyticsconversationsdetailsjob",
        "functionName": "DeleteAnalyticsConversationsDetailsJob",
        "signature": "DeleteAnalyticsConversationsDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/analytics/reporting/schedules/{scheduleId}": {
        "operationId": "deleteanalyticsreportingschedule",
        "functionName": "DeleteAnalyticsReportingSchedule",
        "signature": "DeleteAnalyticsReportingSchedule(scheduleId)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/analytics/users/details/jobs/{jobId}": {
        "operationId": "deleteanalyticsusersdetailsjob",
        "functionName": "DeleteAnalyticsUsersDetailsJob",
        "signature": "DeleteAnalyticsUsersDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/analytics/actions/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsactionsaggregatesjob",
        "functionName": "GetAnalyticsActionsAggregatesJob",
        "signature": "GetAnalyticsActionsAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/actions/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsactionsaggregatesjobresults",
        "functionName": "GetAnalyticsActionsAggregatesJobResults",
        "signature": "GetAnalyticsActionsAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Actionasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/botflows/{botFlowId}/reportingturns": {
        "operationId": "getanalyticsbotflowreportingturns",
        "functionName": "GetAnalyticsBotflowReportingturns",
        "signature": "GetAnalyticsBotflowReportingturns(botFlowId, after, pageSize, interval, actionId, sessionId, language, askActionResults)",
        "parameters": [
            {
                "name": "botFlowId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "after",
                "type": "string",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "string",
                "required": "false"
            },
            {
                "name": "interval",
                "type": "string",
                "required": "false"
            },
            {
                "name": "actionId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "sessionId",
                "type": "string",
                "required": "false"
            },
            {
                "name": "language",
                "type": "string",
                "required": "false"
            },
            {
                "name": "askActionResults",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Reportingturnsresponse"
    },
    "GET /api/v2/analytics/bots/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsbotsaggregatesjob",
        "functionName": "GetAnalyticsBotsAggregatesJob",
        "signature": "GetAnalyticsBotsAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/bots/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsbotsaggregatesjobresults",
        "functionName": "GetAnalyticsBotsAggregatesJobResults",
        "signature": "GetAnalyticsBotsAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Botasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/conversations/{conversationId}/details": {
        "operationId": "getanalyticsconversationdetails",
        "functionName": "GetAnalyticsConversationDetails",
        "signature": "GetAnalyticsConversationDetails(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Analyticsconversationwithoutattributes"
    },
    "GET /api/v2/analytics/conversations/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsconversationsaggregatesjob",
        "functionName": "GetAnalyticsConversationsAggregatesJob",
        "signature": "GetAnalyticsConversationsAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/conversations/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsconversationsaggregatesjobresults",
        "functionName": "GetAnalyticsConversationsAggregatesJobResults",
        "signature": "GetAnalyticsConversationsAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Conversationasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/conversations/details": {
        "operationId": "getanalyticsconversationsdetails",
        "functionName": "GetAnalyticsConversationsDetails",
        "signature": "GetAnalyticsConversationsDetails(id)",
        "parameters": [
            {
                "name": "id",
                "type": "[]string",
                "required": "false"
            }
        ],
        "return": "Analyticsconversationwithoutattributesmultigetresponse"
    },
    "GET /api/v2/analytics/conversations/details/jobs/{jobId}": {
        "operationId": "getanalyticsconversationsdetailsjob",
        "functionName": "GetAnalyticsConversationsDetailsJob",
        "signature": "GetAnalyticsConversationsDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/conversations/details/jobs/{jobId}/results": {
        "operationId": "getanalyticsconversationsdetailsjobresults",
        "functionName": "GetAnalyticsConversationsDetailsJobResults",
        "signature": "GetAnalyticsConversationsDetailsJobResults(jobId, cursor, pageSize)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Analyticsconversationasyncqueryresponse"
    },
    "GET /api/v2/analytics/conversations/details/jobs/availability": {
        "operationId": "getanalyticsconversationsdetailsjobsavailability",
        "functionName": "GetAnalyticsConversationsDetailsJobsAvailability",
        "signature": "GetAnalyticsConversationsDetailsJobsAvailability()",
        
        "return": "Dataavailabilityresponse"
    },
    "GET /api/v2/analytics/dataretention/settings": {
        "operationId": "getanalyticsdataretentionsettings",
        "functionName": "GetAnalyticsDataretentionSettings",
        "signature": "GetAnalyticsDataretentionSettings()",
        
        "return": "Analyticsdataretentionresponse"
    },
    "GET /api/v2/analytics/evaluations/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsevaluationsaggregatesjob",
        "functionName": "GetAnalyticsEvaluationsAggregatesJob",
        "signature": "GetAnalyticsEvaluationsAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/evaluations/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsevaluationsaggregatesjobresults",
        "functionName": "GetAnalyticsEvaluationsAggregatesJobResults",
        "signature": "GetAnalyticsEvaluationsAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Evaluationasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/flows/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsflowsaggregatesjob",
        "functionName": "GetAnalyticsFlowsAggregatesJob",
        "signature": "GetAnalyticsFlowsAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/flows/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsflowsaggregatesjobresults",
        "functionName": "GetAnalyticsFlowsAggregatesJobResults",
        "signature": "GetAnalyticsFlowsAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Flowasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/journeys/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsjourneysaggregatesjob",
        "functionName": "GetAnalyticsJourneysAggregatesJob",
        "signature": "GetAnalyticsJourneysAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/journeys/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsjourneysaggregatesjobresults",
        "functionName": "GetAnalyticsJourneysAggregatesJobResults",
        "signature": "GetAnalyticsJourneysAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Journeyasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/knowledge/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsknowledgeaggregatesjob",
        "functionName": "GetAnalyticsKnowledgeAggregatesJob",
        "signature": "GetAnalyticsKnowledgeAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/knowledge/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsknowledgeaggregatesjobresults",
        "functionName": "GetAnalyticsKnowledgeAggregatesJobResults",
        "signature": "GetAnalyticsKnowledgeAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Knowledgeasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/reporting/exports": {
        "operationId": "getanalyticsreportingexports",
        "functionName": "GetAnalyticsReportingExports",
        "signature": "GetAnalyticsReportingExports(pageNumber, pageSize)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Reportingexportjoblisting"
    },
    "GET /api/v2/analytics/reporting/exports/metadata": {
        "operationId": "getanalyticsreportingexportsmetadata",
        "functionName": "GetAnalyticsReportingExportsMetadata",
        "signature": "GetAnalyticsReportingExportsMetadata()",
        
        "return": "Reportingexportmetadatajoblisting"
    },
    "GET /api/v2/analytics/reporting/metadata": {
        "operationId": "getanalyticsreportingmetadata",
        "functionName": "GetAnalyticsReportingMetadata",
        "signature": "GetAnalyticsReportingMetadata(pageNumber, pageSize, locale)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "locale",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Reportmetadataentitylisting"
    },
    "GET /api/v2/analytics/reporting/{reportId}/metadata": {
        "operationId": "getanalyticsreportingreportidmetadata",
        "functionName": "GetAnalyticsReportingReportIdMetadata",
        "signature": "GetAnalyticsReportingReportIdMetadata(reportId, locale)",
        "parameters": [
            {
                "name": "reportId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "locale",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Reportmetadata"
    },
    "GET /api/v2/analytics/reporting/reportformats": {
        "operationId": "getanalyticsreportingreportformats",
        "functionName": "GetAnalyticsReportingReportformats",
        "signature": "GetAnalyticsReportingReportformats()",
        
        "return": "[]string"
    },
    "GET /api/v2/analytics/reporting/schedules/{scheduleId}": {
        "operationId": "getanalyticsreportingschedule",
        "functionName": "GetAnalyticsReportingSchedule",
        "signature": "GetAnalyticsReportingSchedule(scheduleId)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Reportschedule"
    },
    "GET /api/v2/analytics/reporting/schedules/{scheduleId}/history": {
        "operationId": "getanalyticsreportingschedulehistory",
        "functionName": "GetAnalyticsReportingScheduleHistory",
        "signature": "GetAnalyticsReportingScheduleHistory(scheduleId, pageNumber, pageSize)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Reportrunentryentitydomainlisting"
    },
    "GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest": {
        "operationId": "getanalyticsreportingschedulehistorylatest",
        "functionName": "GetAnalyticsReportingScheduleHistoryLatest",
        "signature": "GetAnalyticsReportingScheduleHistoryLatest(scheduleId)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Reportrunentry"
    },
    "GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/{runId}": {
        "operationId": "getanalyticsreportingschedulehistoryrunid",
        "functionName": "GetAnalyticsReportingScheduleHistoryRunId",
        "signature": "GetAnalyticsReportingScheduleHistoryRunId(runId, scheduleId)",
        "parameters": [
            {
                "name": "runId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "scheduleId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Reportrunentry"
    },
    "GET /api/v2/analytics/reporting/schedules": {
        "operationId": "getanalyticsreportingschedules",
        "functionName": "GetAnalyticsReportingSchedules",
        "signature": "GetAnalyticsReportingSchedules(pageNumber, pageSize)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Reportscheduleentitylisting"
    },
    "GET /api/v2/analytics/reporting/settings": {
        "operationId": "getanalyticsreportingsettings",
        "functionName": "GetAnalyticsReportingSettings",
        "signature": "GetAnalyticsReportingSettings()",
        
        "return": "Analyticsreportingsettings"
    },
    "GET /api/v2/analytics/reporting/timeperiods": {
        "operationId": "getanalyticsreportingtimeperiods",
        "functionName": "GetAnalyticsReportingTimeperiods",
        "signature": "GetAnalyticsReportingTimeperiods()",
        
        "return": "[]string"
    },
    "GET /api/v2/analytics/resolutions/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsresolutionsaggregatesjob",
        "functionName": "GetAnalyticsResolutionsAggregatesJob",
        "signature": "GetAnalyticsResolutionsAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/resolutions/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsresolutionsaggregatesjobresults",
        "functionName": "GetAnalyticsResolutionsAggregatesJobResults",
        "signature": "GetAnalyticsResolutionsAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Resolutionasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/surveys/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticssurveysaggregatesjob",
        "functionName": "GetAnalyticsSurveysAggregatesJob",
        "signature": "GetAnalyticsSurveysAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/surveys/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticssurveysaggregatesjobresults",
        "functionName": "GetAnalyticsSurveysAggregatesJobResults",
        "signature": "GetAnalyticsSurveysAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Surveyasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/taskmanagement/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticstaskmanagementaggregatesjob",
        "functionName": "GetAnalyticsTaskmanagementAggregatesJob",
        "signature": "GetAnalyticsTaskmanagementAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/taskmanagement/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticstaskmanagementaggregatesjobresults",
        "functionName": "GetAnalyticsTaskmanagementAggregatesJobResults",
        "signature": "GetAnalyticsTaskmanagementAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Taskmanagementasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/transcripts/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticstranscriptsaggregatesjob",
        "functionName": "GetAnalyticsTranscriptsAggregatesJob",
        "signature": "GetAnalyticsTranscriptsAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/transcripts/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticstranscriptsaggregatesjobresults",
        "functionName": "GetAnalyticsTranscriptsAggregatesJobResults",
        "signature": "GetAnalyticsTranscriptsAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Transcriptasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/users/aggregates/jobs/{jobId}": {
        "operationId": "getanalyticsusersaggregatesjob",
        "functionName": "GetAnalyticsUsersAggregatesJob",
        "signature": "GetAnalyticsUsersAggregatesJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/users/aggregates/jobs/{jobId}/results": {
        "operationId": "getanalyticsusersaggregatesjobresults",
        "functionName": "GetAnalyticsUsersAggregatesJobResults",
        "signature": "GetAnalyticsUsersAggregatesJobResults(jobId, cursor)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            }
        ],
        "return": "Userasyncaggregatequeryresponse"
    },
    "GET /api/v2/analytics/users/details/jobs/{jobId}": {
        "operationId": "getanalyticsusersdetailsjob",
        "functionName": "GetAnalyticsUsersDetailsJob",
        "signature": "GetAnalyticsUsersDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Asyncquerystatus"
    },
    "GET /api/v2/analytics/users/details/jobs/{jobId}/results": {
        "operationId": "getanalyticsusersdetailsjobresults",
        "functionName": "GetAnalyticsUsersDetailsJobResults",
        "signature": "GetAnalyticsUsersDetailsJobResults(jobId, cursor, pageSize)",
        "parameters": [
            {
                "name": "jobId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "string",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Analyticsuserdetailsasyncqueryresponse"
    },
    "GET /api/v2/analytics/users/details/jobs/availability": {
        "operationId": "getanalyticsusersdetailsjobsavailability",
        "functionName": "GetAnalyticsUsersDetailsJobsAvailability",
        "signature": "GetAnalyticsUsersDetailsJobsAvailability()",
        
        "return": "Dataavailabilityresponse"
    },
    "PATCH /api/v2/analytics/reporting/settings": {
        "operationId": "patchanalyticsreportingsettings",
        "functionName": "PatchAnalyticsReportingSettings",
        "signature": "PatchAnalyticsReportingSettings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Analyticsreportingsettings",
                "required": "true"
            }
        ],
        "return": "Analyticsreportingsettings"
    },
    "POST /api/v2/analytics/actions/aggregates/jobs": {
        "operationId": "postanalyticsactionsaggregatesjobs",
        "functionName": "PostAnalyticsActionsAggregatesJobs",
        "signature": "PostAnalyticsActionsAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Actionasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/actions/aggregates/query": {
        "operationId": "postanalyticsactionsaggregatesquery",
        "functionName": "PostAnalyticsActionsAggregatesQuery",
        "signature": "PostAnalyticsActionsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Actionaggregationquery",
                "required": "true"
            }
        ],
        "return": "Actionaggregatequeryresponse"
    },
    "POST /api/v2/analytics/bots/aggregates/jobs": {
        "operationId": "postanalyticsbotsaggregatesjobs",
        "functionName": "PostAnalyticsBotsAggregatesJobs",
        "signature": "PostAnalyticsBotsAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Botasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/bots/aggregates/query": {
        "operationId": "postanalyticsbotsaggregatesquery",
        "functionName": "PostAnalyticsBotsAggregatesQuery",
        "signature": "PostAnalyticsBotsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Botaggregationquery",
                "required": "true"
            }
        ],
        "return": "Botaggregatequeryresponse"
    },
    "POST /api/v2/analytics/conversations/{conversationId}/details/properties": {
        "operationId": "postanalyticsconversationdetailsproperties",
        "functionName": "PostAnalyticsConversationDetailsProperties",
        "signature": "PostAnalyticsConversationDetailsProperties(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Propertyindexrequest",
                "required": "true"
            }
        ],
        "return": "Propertyindexrequest"
    },
    "POST /api/v2/analytics/conversations/activity/query": {
        "operationId": "postanalyticsconversationsactivityquery",
        "functionName": "PostAnalyticsConversationsActivityQuery",
        "signature": "PostAnalyticsConversationsActivityQuery(body, pageSize, pageNumber)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationactivityquery",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Conversationactivityresponse"
    },
    "POST /api/v2/analytics/conversations/aggregates/jobs": {
        "operationId": "postanalyticsconversationsaggregatesjobs",
        "functionName": "PostAnalyticsConversationsAggregatesJobs",
        "signature": "PostAnalyticsConversationsAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/conversations/aggregates/query": {
        "operationId": "postanalyticsconversationsaggregatesquery",
        "functionName": "PostAnalyticsConversationsAggregatesQuery",
        "signature": "PostAnalyticsConversationsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationaggregationquery",
                "required": "true"
            }
        ],
        "return": "Conversationaggregatequeryresponse"
    },
    "POST /api/v2/analytics/conversations/details/jobs": {
        "operationId": "postanalyticsconversationsdetailsjobs",
        "functionName": "PostAnalyticsConversationsDetailsJobs",
        "signature": "PostAnalyticsConversationsDetailsJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Asyncconversationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/conversations/details/query": {
        "operationId": "postanalyticsconversationsdetailsquery",
        "functionName": "PostAnalyticsConversationsDetailsQuery",
        "signature": "PostAnalyticsConversationsDetailsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Conversationquery",
                "required": "true"
            }
        ],
        "return": "Analyticsconversationqueryresponse"
    },
    "POST /api/v2/analytics/conversations/transcripts/query": {
        "operationId": "postanalyticsconversationstranscriptsquery",
        "functionName": "PostAnalyticsConversationsTranscriptsQuery",
        "signature": "PostAnalyticsConversationsTranscriptsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Transcriptconversationdetailsearchrequest",
                "required": "true"
            }
        ],
        "return": "Analyticsconversationwithoutattributesmultigetresponse"
    },
    "POST /api/v2/analytics/evaluations/aggregates/jobs": {
        "operationId": "postanalyticsevaluationsaggregatesjobs",
        "functionName": "PostAnalyticsEvaluationsAggregatesJobs",
        "signature": "PostAnalyticsEvaluationsAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Evaluationasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/evaluations/aggregates/query": {
        "operationId": "postanalyticsevaluationsaggregatesquery",
        "functionName": "PostAnalyticsEvaluationsAggregatesQuery",
        "signature": "PostAnalyticsEvaluationsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Evaluationaggregationquery",
                "required": "true"
            }
        ],
        "return": "Evaluationaggregatequeryresponse"
    },
    "POST /api/v2/analytics/flows/activity/query": {
        "operationId": "postanalyticsflowsactivityquery",
        "functionName": "PostAnalyticsFlowsActivityQuery",
        "signature": "PostAnalyticsFlowsActivityQuery(body, pageSize, pageNumber)",
        "parameters": [
            {
                "name": "body",
                "type": "Flowactivityquery",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Flowactivityresponse"
    },
    "POST /api/v2/analytics/flows/aggregates/jobs": {
        "operationId": "postanalyticsflowsaggregatesjobs",
        "functionName": "PostAnalyticsFlowsAggregatesJobs",
        "signature": "PostAnalyticsFlowsAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Flowasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/flows/aggregates/query": {
        "operationId": "postanalyticsflowsaggregatesquery",
        "functionName": "PostAnalyticsFlowsAggregatesQuery",
        "signature": "PostAnalyticsFlowsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Flowaggregationquery",
                "required": "true"
            }
        ],
        "return": "Flowaggregatequeryresponse"
    },
    "POST /api/v2/analytics/flows/observations/query": {
        "operationId": "postanalyticsflowsobservationsquery",
        "functionName": "PostAnalyticsFlowsObservationsQuery",
        "signature": "PostAnalyticsFlowsObservationsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Flowobservationquery",
                "required": "true"
            }
        ],
        "return": "Flowobservationqueryresponse"
    },
    "POST /api/v2/analytics/journeys/aggregates/jobs": {
        "operationId": "postanalyticsjourneysaggregatesjobs",
        "functionName": "PostAnalyticsJourneysAggregatesJobs",
        "signature": "PostAnalyticsJourneysAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Journeyasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/journeys/aggregates/query": {
        "operationId": "postanalyticsjourneysaggregatesquery",
        "functionName": "PostAnalyticsJourneysAggregatesQuery",
        "signature": "PostAnalyticsJourneysAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Journeyaggregationquery",
                "required": "true"
            }
        ],
        "return": "Journeyaggregatequeryresponse"
    },
    "POST /api/v2/analytics/knowledge/aggregates/jobs": {
        "operationId": "postanalyticsknowledgeaggregatesjobs",
        "functionName": "PostAnalyticsKnowledgeAggregatesJobs",
        "signature": "PostAnalyticsKnowledgeAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Knowledgeasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/knowledge/aggregates/query": {
        "operationId": "postanalyticsknowledgeaggregatesquery",
        "functionName": "PostAnalyticsKnowledgeAggregatesQuery",
        "signature": "PostAnalyticsKnowledgeAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Knowledgeaggregationquery",
                "required": "true"
            }
        ],
        "return": "Knowledgeaggregatequeryresponse"
    },
    "POST /api/v2/analytics/queues/observations/query": {
        "operationId": "postanalyticsqueuesobservationsquery",
        "functionName": "PostAnalyticsQueuesObservationsQuery",
        "signature": "PostAnalyticsQueuesObservationsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Queueobservationquery",
                "required": "true"
            }
        ],
        "return": "Queueobservationqueryresponse"
    },
    "POST /api/v2/analytics/reporting/exports": {
        "operationId": "postanalyticsreportingexports",
        "functionName": "PostAnalyticsReportingExports",
        "signature": "PostAnalyticsReportingExports(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Reportingexportjobrequest",
                "required": "true"
            }
        ],
        "return": "Reportingexportjobresponse"
    },
    "POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport": {
        "operationId": "postanalyticsreportingschedulerunreport",
        "functionName": "PostAnalyticsReportingScheduleRunreport",
        "signature": "PostAnalyticsReportingScheduleRunreport(scheduleId)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "string",
                "required": "true"
            }
        ],
        "return": "Runnowresponse"
    },
    "POST /api/v2/analytics/reporting/schedules": {
        "operationId": "postanalyticsreportingschedules",
        "functionName": "PostAnalyticsReportingSchedules",
        "signature": "PostAnalyticsReportingSchedules(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Reportschedule",
                "required": "true"
            }
        ],
        "return": "Reportschedule"
    },
    "POST /api/v2/analytics/resolutions/aggregates/jobs": {
        "operationId": "postanalyticsresolutionsaggregatesjobs",
        "functionName": "PostAnalyticsResolutionsAggregatesJobs",
        "signature": "PostAnalyticsResolutionsAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Resolutionasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/routing/activity/query": {
        "operationId": "postanalyticsroutingactivityquery",
        "functionName": "PostAnalyticsRoutingActivityQuery",
        "signature": "PostAnalyticsRoutingActivityQuery(body, pageSize, pageNumber)",
        "parameters": [
            {
                "name": "body",
                "type": "Routingactivityquery",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Routingactivityresponse"
    },
    "POST /api/v2/analytics/surveys/aggregates/jobs": {
        "operationId": "postanalyticssurveysaggregatesjobs",
        "functionName": "PostAnalyticsSurveysAggregatesJobs",
        "signature": "PostAnalyticsSurveysAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Surveyasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/surveys/aggregates/query": {
        "operationId": "postanalyticssurveysaggregatesquery",
        "functionName": "PostAnalyticsSurveysAggregatesQuery",
        "signature": "PostAnalyticsSurveysAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Surveyaggregationquery",
                "required": "true"
            }
        ],
        "return": "Surveyaggregatequeryresponse"
    },
    "POST /api/v2/analytics/taskmanagement/aggregates/jobs": {
        "operationId": "postanalyticstaskmanagementaggregatesjobs",
        "functionName": "PostAnalyticsTaskmanagementAggregatesJobs",
        "signature": "PostAnalyticsTaskmanagementAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Taskmanagementasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/taskmanagement/aggregates/query": {
        "operationId": "postanalyticstaskmanagementaggregatesquery",
        "functionName": "PostAnalyticsTaskmanagementAggregatesQuery",
        "signature": "PostAnalyticsTaskmanagementAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Taskmanagementaggregationquery",
                "required": "true"
            }
        ],
        "return": "Taskmanagementaggregatequeryresponse"
    },
    "POST /api/v2/analytics/teams/activity/query": {
        "operationId": "postanalyticsteamsactivityquery",
        "functionName": "PostAnalyticsTeamsActivityQuery",
        "signature": "PostAnalyticsTeamsActivityQuery(body, pageSize, pageNumber)",
        "parameters": [
            {
                "name": "body",
                "type": "Teamactivityquery",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Teamactivityresponse"
    },
    "POST /api/v2/analytics/transcripts/aggregates/jobs": {
        "operationId": "postanalyticstranscriptsaggregatesjobs",
        "functionName": "PostAnalyticsTranscriptsAggregatesJobs",
        "signature": "PostAnalyticsTranscriptsAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Transcriptasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/transcripts/aggregates/query": {
        "operationId": "postanalyticstranscriptsaggregatesquery",
        "functionName": "PostAnalyticsTranscriptsAggregatesQuery",
        "signature": "PostAnalyticsTranscriptsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Transcriptaggregationquery",
                "required": "true"
            }
        ],
        "return": "Transcriptaggregatequeryresponse"
    },
    "POST /api/v2/analytics/users/activity/query": {
        "operationId": "postanalyticsusersactivityquery",
        "functionName": "PostAnalyticsUsersActivityQuery",
        "signature": "PostAnalyticsUsersActivityQuery(body, pageSize, pageNumber)",
        "parameters": [
            {
                "name": "body",
                "type": "Useractivityquery",
                "required": "true"
            },
            {
                "name": "pageSize",
                "type": "int",
                "required": "false"
            },
            {
                "name": "pageNumber",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "Useractivityresponse"
    },
    "POST /api/v2/analytics/users/aggregates/jobs": {
        "operationId": "postanalyticsusersaggregatesjobs",
        "functionName": "PostAnalyticsUsersAggregatesJobs",
        "signature": "PostAnalyticsUsersAggregatesJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Userasyncaggregationquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/users/aggregates/query": {
        "operationId": "postanalyticsusersaggregatesquery",
        "functionName": "PostAnalyticsUsersAggregatesQuery",
        "signature": "PostAnalyticsUsersAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Useraggregationquery",
                "required": "true"
            }
        ],
        "return": "Useraggregatequeryresponse"
    },
    "POST /api/v2/analytics/users/details/jobs": {
        "operationId": "postanalyticsusersdetailsjobs",
        "functionName": "PostAnalyticsUsersDetailsJobs",
        "signature": "PostAnalyticsUsersDetailsJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Asyncuserdetailsquery",
                "required": "true"
            }
        ],
        "return": "Asyncqueryresponse"
    },
    "POST /api/v2/analytics/users/details/query": {
        "operationId": "postanalyticsusersdetailsquery",
        "functionName": "PostAnalyticsUsersDetailsQuery",
        "signature": "PostAnalyticsUsersDetailsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Userdetailsquery",
                "required": "true"
            }
        ],
        "return": "Analyticsuserdetailsqueryresponse"
    },
    "POST /api/v2/analytics/users/observations/query": {
        "operationId": "postanalyticsusersobservationsquery",
        "functionName": "PostAnalyticsUsersObservationsQuery",
        "signature": "PostAnalyticsUsersObservationsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Userobservationquery",
                "required": "true"
            }
        ],
        "return": "Userobservationqueryresponse"
    },
    "PUT /api/v2/analytics/dataretention/settings": {
        "operationId": "putanalyticsdataretentionsettings",
        "functionName": "PutAnalyticsDataretentionSettings",
        "signature": "PutAnalyticsDataretentionSettings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Updateanalyticsdataretentionrequest",
                "required": "true"
            }
        ],
        "return": "Analyticsdataretentionresponse"
    },
    "PUT /api/v2/analytics/reporting/schedules/{scheduleId}": {
        "operationId": "putanalyticsreportingschedule",
        "functionName": "PutAnalyticsReportingSchedule",
        "signature": "PutAnalyticsReportingSchedule(scheduleId, body)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "string",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Reportschedule",
                "required": "true"
            }
        ],
        "return": "Reportschedule"
    }
    
}