config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: https://api.mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...), AuthorizeCodeGrant(...) or AuthorizePKCEGrant(...)

apiInstance := platformclientv2.NewPresenceApiWithConfig(config)

var deactivated string // Deactivated query can be TRUE or FALSE
var divisionId []string // One or more division IDs. If nothing is provided, the definitions associated withthe list of divisions that the user has access to will be returned.
var localeCode string // The locale code to fetch for the presence definition. Use ALL to fetch everything.
// Get a list of Presence Definitions
data, response, err := apiInstance.GetPresenceDefinitions0(deactivated, divisionId, localeCode)
if err != nil {
	fmt.Printf("Error calling GetPresenceDefinitions0: %v\n", err)
} else {
	fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
}