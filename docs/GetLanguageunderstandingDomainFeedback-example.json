config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: https://api.mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...), AuthorizeCodeGrant(...) or AuthorizePKCEGrant(...)

apiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)

var domainId string // ID of the NLU domain.
var intentName string // The top intent name to retrieve feedback for.
var assessment string // The top assessment to retrieve feedback for.
var dateStart time.Time // Begin of time window as ISO-8601 date.
var dateEnd time.Time // End of time window as ISO-8601 date.
var includeDeleted bool // Whether to include soft-deleted items in the result.
var language string // Whether to filter response based on the language, e.g. en-us, pt-br.
var pageNumber int // Page number
var pageSize int // Page size
var enableCursorPagination bool // Enable Cursor Pagination
var includeTrainingUtterances bool // Include Training Utterances. By default they're included.
var after string // The cursor that points to the end of the set of entities that has been returned. This is considered only when enableCursorPagination=true
var fields []string // Fields and properties to get, comma-separated
// Get all feedback in the given NLU Domain Version.
data, response, err := apiInstance.GetLanguageunderstandingDomainFeedback(domainId, intentName, assessment, dateStart, dateEnd, includeDeleted, language, pageNumber, pageSize, enableCursorPagination, includeTrainingUtterances, after, fields)
if err != nil {
	fmt.Printf("Error calling GetLanguageunderstandingDomainFeedback: %v\n", err)
} else {
	fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
}