config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: https://api.mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...), AuthorizeCodeGrant(...) or AuthorizePKCEGrant(...)

apiInstance := platformclientv2.NewLearningApiWithConfig(config)

var moduleId string // Specifies the ID of the learning module. Fetch assignments for learning module ID
var interval string // Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
var completionInterval string // Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
var overdue string // Specifies if only the non-overdue (overdue is \"False\") or overdue (overdue is \"True\") assignments are returned. If overdue is \"Any\" or if the overdue parameter is not supplied, all assignments are returned
var pageSize int // Page size
var pageNumber int // Page number
var pass string // Specifies if only the failed (pass is \"False\") or passed (pass is \"True\") assignments (completed with assessment)are returned. If pass is \"Any\" or if the pass parameter is not supplied, all assignments are returned
var minPercentageScore float32 // The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)
var maxPercentageScore float32 // The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)
var sortOrder string // Specifies result set sort order; if not specified, default sort order is descending (Desc)
var sortBy string // Specifies which field to sort the results by, default sort is by recommendedCompletionDate
var userId []string // Specifies the list of user IDs to be queried, up to 100 user IDs.
var types []string // Specifies the module types to filter by
var states []string // Specifies the assignment states to filter by
var expand []string // Specifies the expand option for returning additional information
// List of Learning module Assignments
data, response, err := apiInstance.GetLearningAssignments(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, pass, minPercentageScore, maxPercentageScore, sortOrder, sortBy, userId, types, states, expand)
if err != nil {
	fmt.Printf("Error calling GetLearningAssignments: %v\n", err)
} else {
	fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
}