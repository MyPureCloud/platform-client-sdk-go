config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: https://api.mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...), AuthorizeCodeGrant(...) or AuthorizePKCEGrant(...)

apiInstance := platformclientv2.NewRoutingApiWithConfig(config)

var phoneNumber string // Filter on phone number address. Allowable characters are the digits '0-9' and the wild card character '\\*'. If just digits are present, a contains search is done on the address pattern. For example, '317' could be matched anywhere in the address. An '\\*' will match multiple digits. For example, to match a specific area code within the US a pattern like '1317*' could be used.
var phoneNumberType []string // Filter on phone number type
var phoneNumberStatus []string // Filter on phone number status
var countryCode []string // Filter on country code
var pageSize int // Page size
var pageNumber int // Page number
var sortBy string // Optional field to sort results
var sortOrder string // Sort order
var language string // A language tag (which is sometimes referred to as a \"locale identifier\") to use to localize country field and sort operations
var integrationId string // Filter on the Genesys Cloud integration id to which the phone number belongs to
var supportedContentId string // Filter based on the supported content ID
// Get a list of provisioned phone numbers.
data, response, err := apiInstance.GetRoutingSmsPhonenumbers(phoneNumber, phoneNumberType, phoneNumberStatus, countryCode, pageSize, pageNumber, sortBy, sortOrder, language, integrationId, supportedContentId)
if err != nil {
	fmt.Printf("Error calling GetRoutingSmsPhonenumbers: %v\n", err)
} else {
	fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
}