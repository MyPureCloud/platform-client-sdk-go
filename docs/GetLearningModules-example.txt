config := platformclientv2.GetDefaultConfiguration()
config.BasePath = ""    // expected format: mypurecloud.com
config.AccessToken = "your_access_token" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)

apiInstance := platformclientv2.NewLearningApiWithConfig(config)

var isArchived bool // Archive status
var types []string // Specifies the module types.
var pageSize int // Page size
var pageNumber int // Page number
var sortOrder string // Sort order
var sortBy string // Sort by
var searchTerm string // Search Term (searchable by name)
var expand []string // Fields to expand in response(case insensitive)
var isPublished string // Specifies if only the Unpublished (isPublished is \"False\") or Published (isPublished is \"True\") modules are returned. If isPublished is \"Any\" or omitted, both types are returned
var statuses []string // Specifies the module statuses to filter by
// Get all learning modules of an organization
data, response, err := apiInstance.GetLearningModules(isArchived, types, pageSize, pageNumber, sortOrder, sortBy, searchTerm, expand, isPublished, statuses)
fmt.Printf("Response:\n  Success: %v\n  Status code: %v\n  Correlation ID: %v\n  Body: %v\n", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())
if err != nil {
	fmt.Printf("Error calling GetLearningModules: %v\n", err)
}