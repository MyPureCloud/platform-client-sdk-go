{
  "deletealertingalert": {
    "operationId": "deletealertingalert",
    "functionName": "DeleteAlertingAlert",
    "signature": "DeleteAlertingAlert(alertId)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar alertId string // Alert ID\n// Delete an alert\nresponse, err := apiInstance.DeleteAlertingAlert(alertId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAlertingAlert: %v\\n\", err)\n}"
  },
  "deletealertinginteractionstatsalert": {
    "operationId": "deletealertinginteractionstatsalert",
    "functionName": "DeleteAlertingInteractionstatsAlert",
    "signature": "DeleteAlertingInteractionstatsAlert(alertId)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar alertId string // Alert ID\n// Delete an interaction stats alert\nresponse, err := apiInstance.DeleteAlertingInteractionstatsAlert(alertId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAlertingInteractionstatsAlert: %v\\n\", err)\n}"
  },
  "deletealertinginteractionstatsrule": {
    "operationId": "deletealertinginteractionstatsrule",
    "functionName": "DeleteAlertingInteractionstatsRule",
    "signature": "DeleteAlertingInteractionstatsRule(ruleId)",
    "parameters": [
      {
        "name": "ruleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar ruleId string // Rule ID\n// Delete an interaction stats rule.\nresponse, err := apiInstance.DeleteAlertingInteractionstatsRule(ruleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAlertingInteractionstatsRule: %v\\n\", err)\n}"
  },
  "deletealertingrule": {
    "operationId": "deletealertingrule",
    "functionName": "DeleteAlertingRule",
    "signature": "DeleteAlertingRule(ruleId)",
    "parameters": [
      {
        "name": "ruleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar ruleId string // Rule Id\n// Delete a rule.\nresponse, err := apiInstance.DeleteAlertingRule(ruleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAlertingRule: %v\\n\", err)\n}"
  },
  "getalertingalert": {
    "operationId": "getalertingalert",
    "functionName": "GetAlertingAlert",
    "signature": "GetAlertingAlert(alertId)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Commonalert",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar alertId string // Alert ID\n// Get an alert\ndata, response, err := apiInstance.GetAlertingAlert(alertId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAlertingAlert: %v\\n\", err)\n}"
  },
  "getalertingalertsactive": {
    "operationId": "getalertingalertsactive",
    "functionName": "GetAlertingAlertsActive",
    "signature": "GetAlertingAlertsActive()",
    "return": "Activealertcount",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\n// Gets active alert count for a user.\ndata, response, err := apiInstance.GetAlertingAlertsActive()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAlertingAlertsActive: %v\\n\", err)\n}"
  },
  "getalertinginteractionstatsalert": {
    "operationId": "getalertinginteractionstatsalert",
    "functionName": "GetAlertingInteractionstatsAlert",
    "signature": "GetAlertingInteractionstatsAlert(alertId, expand)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Interactionstatsalert",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar alertId string // Alert ID\nvar expand []string // Which fields, if any, to expand\n// Get an interaction stats alert\ndata, response, err := apiInstance.GetAlertingInteractionstatsAlert(alertId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAlertingInteractionstatsAlert: %v\\n\", err)\n}"
  },
  "getalertinginteractionstatsalerts": {
    "operationId": "getalertinginteractionstatsalerts",
    "functionName": "GetAlertingInteractionstatsAlerts",
    "signature": "GetAlertingInteractionstatsAlerts(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Interactionstatsalertcontainer",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar expand []string // Which fields, if any, to expand\n// Get interaction stats alert list.\ndata, response, err := apiInstance.GetAlertingInteractionstatsAlerts(expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAlertingInteractionstatsAlerts: %v\\n\", err)\n}"
  },
  "getalertinginteractionstatsalertsunread": {
    "operationId": "getalertinginteractionstatsalertsunread",
    "functionName": "GetAlertingInteractionstatsAlertsUnread",
    "signature": "GetAlertingInteractionstatsAlertsUnread()",
    "return": "Unreadmetric",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\n// Gets user unread count of interaction stats alerts.\ndata, response, err := apiInstance.GetAlertingInteractionstatsAlertsUnread()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAlertingInteractionstatsAlertsUnread: %v\\n\", err)\n}"
  },
  "getalertinginteractionstatsrule": {
    "operationId": "getalertinginteractionstatsrule",
    "functionName": "GetAlertingInteractionstatsRule",
    "signature": "GetAlertingInteractionstatsRule(ruleId, expand)",
    "parameters": [
      {
        "name": "ruleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Interactionstatsrule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar ruleId string // Rule ID\nvar expand []string // Which fields, if any, to expand\n// Get an interaction stats rule.\ndata, response, err := apiInstance.GetAlertingInteractionstatsRule(ruleId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAlertingInteractionstatsRule: %v\\n\", err)\n}"
  },
  "getalertinginteractionstatsrules": {
    "operationId": "getalertinginteractionstatsrules",
    "functionName": "GetAlertingInteractionstatsRules",
    "signature": "GetAlertingInteractionstatsRules(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Interactionstatsrulecontainer",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar expand []string // Which fields, if any, to expand\n// Get an interaction stats rule list.\ndata, response, err := apiInstance.GetAlertingInteractionstatsRules(expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAlertingInteractionstatsRules: %v\\n\", err)\n}"
  },
  "getalertingrule": {
    "operationId": "getalertingrule",
    "functionName": "GetAlertingRule",
    "signature": "GetAlertingRule(ruleId)",
    "parameters": [
      {
        "name": "ruleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Commonrule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar ruleId string // Rule Id\n// Get a rule.\ndata, response, err := apiInstance.GetAlertingRule(ruleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAlertingRule: %v\\n\", err)\n}"
  },
  "patchalertingalert": {
    "operationId": "patchalertingalert",
    "functionName": "PatchAlertingAlert",
    "signature": "PatchAlertingAlert(alertId, body)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Alertrequest",
        "required": "false"
      }
    ],
    "return": "Commonalert",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar alertId string // Alert ID\nvar body platformclientv2.Alertrequest // \n// Allows an entity to mute/snooze an alert or update the unread status of the alert.\ndata, response, err := apiInstance.PatchAlertingAlert(alertId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchAlertingAlert: %v\\n\", err)\n}"
  },
  "patchalertingalertsbulk": {
    "operationId": "patchalertingalertsbulk",
    "functionName": "PatchAlertingAlertsBulk",
    "signature": "PatchAlertingAlertsBulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Commonalertbulkupdaterequest",
        "required": "true"
      }
    ],
    "return": "Bulkresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar body platformclientv2.Commonalertbulkupdaterequest // \n// Bulk alert updates\ndata, response, err := apiInstance.PatchAlertingAlertsBulk(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchAlertingAlertsBulk: %v\\n\", err)\n}"
  },
  "patchalertingrulesbulk": {
    "operationId": "patchalertingrulesbulk",
    "functionName": "PatchAlertingRulesBulk",
    "signature": "PatchAlertingRulesBulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Commonrulebulkupdatenotificationsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar body platformclientv2.Commonrulebulkupdatenotificationsrequest // \n// Bulk update of notification lists\ndata, response, err := apiInstance.PatchAlertingRulesBulk(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchAlertingRulesBulk: %v\\n\", err)\n}"
  },
  "postalertingalertsquery": {
    "operationId": "postalertingalertsquery",
    "functionName": "PostAlertingAlertsQuery",
    "signature": "PostAlertingAlertsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Getalertquery",
        "required": "false"
      }
    ],
    "return": "Alertlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar body platformclientv2.Getalertquery // \n// Gets a paged list of alerts. The max page size is 50\ndata, response, err := apiInstance.PostAlertingAlertsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAlertingAlertsQuery: %v\\n\", err)\n}"
  },
  "postalertinginteractionstatsrules": {
    "operationId": "postalertinginteractionstatsrules",
    "functionName": "PostAlertingInteractionstatsRules",
    "signature": "PostAlertingInteractionstatsRules(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "Interactionstatsrule",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Interactionstatsrule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar body platformclientv2.Interactionstatsrule // AlertingRule\nvar expand []string // Which fields, if any, to expand\n// Create an interaction stats rule.\ndata, response, err := apiInstance.PostAlertingInteractionstatsRules(body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAlertingInteractionstatsRules: %v\\n\", err)\n}"
  },
  "postalertingrules": {
    "operationId": "postalertingrules",
    "functionName": "PostAlertingRules",
    "signature": "PostAlertingRules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Commonrule",
        "required": "true"
      }
    ],
    "return": "Commonrule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar body platformclientv2.Commonrule // rule to be created\n// Create a Rule.\ndata, response, err := apiInstance.PostAlertingRules(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAlertingRules: %v\\n\", err)\n}"
  },
  "postalertingrulesbulkremove": {
    "operationId": "postalertingrulesbulkremove",
    "functionName": "PostAlertingRulesBulkRemove",
    "signature": "PostAlertingRulesBulkRemove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Commonrulebulkdeleterequest",
        "required": "true"
      }
    ],
    "return": "Bulkresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar body platformclientv2.Commonrulebulkdeleterequest // \n// Bulk remove rules\ndata, response, err := apiInstance.PostAlertingRulesBulkRemove(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAlertingRulesBulkRemove: %v\\n\", err)\n}"
  },
  "postalertingrulesquery": {
    "operationId": "postalertingrulesquery",
    "functionName": "PostAlertingRulesQuery",
    "signature": "PostAlertingRulesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Getrulesquery",
        "required": "false"
      }
    ],
    "return": "Commonrulecontainer",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar body platformclientv2.Getrulesquery // \n// Get a paged list of rules.  The max size of the page is 50 items.\ndata, response, err := apiInstance.PostAlertingRulesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAlertingRulesQuery: %v\\n\", err)\n}"
  },
  "putalertingalert": {
    "operationId": "putalertingalert",
    "functionName": "PutAlertingAlert",
    "signature": "PutAlertingAlert(alertId, body)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Alertingunreadstatus",
        "required": "false"
      }
    ],
    "return": "Unreadstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar alertId string // Alert ID\nvar body platformclientv2.Alertingunreadstatus // \n// Update an alert read status\ndata, response, err := apiInstance.PutAlertingAlert(alertId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAlertingAlert: %v\\n\", err)\n}"
  },
  "putalertinginteractionstatsalert": {
    "operationId": "putalertinginteractionstatsalert",
    "functionName": "PutAlertingInteractionstatsAlert",
    "signature": "PutAlertingInteractionstatsAlert(alertId, body, expand)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Unreadstatus",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Unreadstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar alertId string // Alert ID\nvar body platformclientv2.Unreadstatus // InteractionStatsAlert\nvar expand []string // Which fields, if any, to expand\n// Update an interaction stats alert read status\ndata, response, err := apiInstance.PutAlertingInteractionstatsAlert(alertId, body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAlertingInteractionstatsAlert: %v\\n\", err)\n}"
  },
  "putalertinginteractionstatsrule": {
    "operationId": "putalertinginteractionstatsrule",
    "functionName": "PutAlertingInteractionstatsRule",
    "signature": "PutAlertingInteractionstatsRule(ruleId, body, expand)",
    "parameters": [
      {
        "name": "ruleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Interactionstatsrule",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Interactionstatsrule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar ruleId string // Rule ID\nvar body platformclientv2.Interactionstatsrule // AlertingRule\nvar expand []string // Which fields, if any, to expand\n// Update an interaction stats rule\ndata, response, err := apiInstance.PutAlertingInteractionstatsRule(ruleId, body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAlertingInteractionstatsRule: %v\\n\", err)\n}"
  },
  "putalertingrule": {
    "operationId": "putalertingrule",
    "functionName": "PutAlertingRule",
    "signature": "PutAlertingRule(ruleId, body)",
    "parameters": [
      {
        "name": "ruleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Modifiableruleproperties",
        "required": "true"
      }
    ],
    "return": "Commonrule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAlertingApiWithConfig(config)\n\nvar ruleId string // Rule Id\nvar body platformclientv2.Modifiableruleproperties // rule to be updated\n// Update a rule\ndata, response, err := apiInstance.PutAlertingRule(ruleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAlertingRule: %v\\n\", err)\n}"
  },
  "deleteanalyticsconversationsdetailsjob": {
    "operationId": "deleteanalyticsconversationsdetailsjob",
    "functionName": "DeleteAnalyticsConversationsDetailsJob",
    "signature": "DeleteAnalyticsConversationsDetailsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar jobId string // jobId\n// Delete/cancel an async details job\nresponse, err := apiInstance.DeleteAnalyticsConversationsDetailsJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAnalyticsConversationsDetailsJob: %v\\n\", err)\n}"
  },
  "deleteanalyticsreportingschedule": {
    "operationId": "deleteanalyticsreportingschedule",
    "functionName": "DeleteAnalyticsReportingSchedule",
    "signature": "DeleteAnalyticsReportingSchedule(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar scheduleId string // Schedule ID\n// Delete a scheduled report job.\nresponse, err := apiInstance.DeleteAnalyticsReportingSchedule(scheduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAnalyticsReportingSchedule: %v\\n\", err)\n}"
  },
  "deleteanalyticsusersdetailsjob": {
    "operationId": "deleteanalyticsusersdetailsjob",
    "functionName": "DeleteAnalyticsUsersDetailsJob",
    "signature": "DeleteAnalyticsUsersDetailsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar jobId string // jobId\n// Delete/cancel an async request\nresponse, err := apiInstance.DeleteAnalyticsUsersDetailsJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAnalyticsUsersDetailsJob: %v\\n\", err)\n}"
  },
  "getanalyticsactionsaggregatesjob": {
    "operationId": "getanalyticsactionsaggregatesjob",
    "functionName": "GetAnalyticsActionsAggregatesJob",
    "signature": "GetAnalyticsActionsAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for action aggregates\ndata, response, err := apiInstance.GetAnalyticsActionsAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsActionsAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticsactionsaggregatesjobresults": {
    "operationId": "getanalyticsactionsaggregatesjobresults",
    "functionName": "GetAnalyticsActionsAggregatesJobResults",
    "signature": "GetAnalyticsActionsAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Actionasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsActionsAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsActionsAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsbotflowreportingturns": {
    "operationId": "getanalyticsbotflowreportingturns",
    "functionName": "GetAnalyticsBotflowReportingturns",
    "signature": "GetAnalyticsBotflowReportingturns(botFlowId, after, pageSize, interval, actionId, sessionId, language, askActionResults)",
    "parameters": [
      {
        "name": "botFlowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "actionId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sessionId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "language",
        "type": "string",
        "required": "false"
      },
      {
        "name": "askActionResults",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Reportingturnsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar botFlowId string // ID of the bot flow.\nvar after string // The cursor that points to the ID of the last item in the list of entities that has been returned.\nvar pageSize string // Max number of entities to return. Maximum of 250\nvar interval string // Date range filter based on the date the individual resources were completed. UTC is the default if no TZ is supplied, however alternate timezones can be used e.g: '2022-11-22T09:11:11.111+08:00/2022-11-30T07:17:44.586-07'. . Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar actionId string // Optional action ID to get the reporting turns associated to a particular flow action\nvar sessionId string // Optional session ID to get the reporting turns for a particular session. Specifying a session ID alongside an action ID or a language or any ask action results is not allowed.\nvar language string // Optional language code to get the reporting turns for a particular language\nvar askActionResults string // Optional case-insensitive comma separated list of ask action results to filter the reporting turns.\n// Get Reporting Turns.\ndata, response, err := apiInstance.GetAnalyticsBotflowReportingturns(botFlowId, after, pageSize, interval, actionId, sessionId, language, askActionResults)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsBotflowReportingturns: %v\\n\", err)\n}"
  },
  "getanalyticsbotsaggregatesjob": {
    "operationId": "getanalyticsbotsaggregatesjob",
    "functionName": "GetAnalyticsBotsAggregatesJob",
    "signature": "GetAnalyticsBotsAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for bot aggregates\ndata, response, err := apiInstance.GetAnalyticsBotsAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsBotsAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticsbotsaggregatesjobresults": {
    "operationId": "getanalyticsbotsaggregatesjobresults",
    "functionName": "GetAnalyticsBotsAggregatesJobResults",
    "signature": "GetAnalyticsBotsAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Botasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsBotsAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsBotsAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsconversationdetails": {
    "operationId": "getanalyticsconversationdetails",
    "functionName": "GetAnalyticsConversationDetails",
    "signature": "GetAnalyticsConversationDetails(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Analyticsconversationwithoutattributes",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get a conversation by id\ndata, response, err := apiInstance.GetAnalyticsConversationDetails(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsConversationDetails: %v\\n\", err)\n}"
  },
  "getanalyticsconversationsaggregatesjob": {
    "operationId": "getanalyticsconversationsaggregatesjob",
    "functionName": "GetAnalyticsConversationsAggregatesJob",
    "signature": "GetAnalyticsConversationsAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for conversation aggregates\ndata, response, err := apiInstance.GetAnalyticsConversationsAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsConversationsAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticsconversationsaggregatesjobresults": {
    "operationId": "getanalyticsconversationsaggregatesjobresults",
    "functionName": "GetAnalyticsConversationsAggregatesJobResults",
    "signature": "GetAnalyticsConversationsAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Conversationasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsConversationsAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsConversationsAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsconversationsdetails": {
    "operationId": "getanalyticsconversationsdetails",
    "functionName": "GetAnalyticsConversationsDetails",
    "signature": "GetAnalyticsConversationsDetails(id)",
    "parameters": [
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Analyticsconversationwithoutattributesmultigetresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar id []string // Comma-separated conversation ids\n// Gets multiple conversations by id\ndata, response, err := apiInstance.GetAnalyticsConversationsDetails(id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsConversationsDetails: %v\\n\", err)\n}"
  },
  "getanalyticsconversationsdetailsjob": {
    "operationId": "getanalyticsconversationsdetailsjob",
    "functionName": "GetAnalyticsConversationsDetailsJob",
    "signature": "GetAnalyticsConversationsDetailsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for conversation details\ndata, response, err := apiInstance.GetAnalyticsConversationsDetailsJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsConversationsDetailsJob: %v\\n\", err)\n}"
  },
  "getanalyticsconversationsdetailsjobresults": {
    "operationId": "getanalyticsconversationsdetailsjobresults",
    "functionName": "GetAnalyticsConversationsDetailsJobResults",
    "signature": "GetAnalyticsConversationsDetailsJobResults(jobId, cursor, pageSize)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Analyticsconversationasyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Indicates where to resume query results (not required for first page)\nvar pageSize int // The desired maximum number of results\n// Fetch a page of results for an async details job\ndata, response, err := apiInstance.GetAnalyticsConversationsDetailsJobResults(jobId, cursor, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsConversationsDetailsJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsconversationsdetailsjobsavailability": {
    "operationId": "getanalyticsconversationsdetailsjobsavailability",
    "functionName": "GetAnalyticsConversationsDetailsJobsAvailability",
    "signature": "GetAnalyticsConversationsDetailsJobsAvailability()",
    "return": "Dataavailabilityresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Lookup the datalake availability date and time\ndata, response, err := apiInstance.GetAnalyticsConversationsDetailsJobsAvailability()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsConversationsDetailsJobsAvailability: %v\\n\", err)\n}"
  },
  "getanalyticsdataretentionsettings": {
    "operationId": "getanalyticsdataretentionsettings",
    "functionName": "GetAnalyticsDataretentionSettings",
    "signature": "GetAnalyticsDataretentionSettings()",
    "return": "Analyticsdataretentionresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\n// Get analytics data retention setting\ndata, response, err := apiInstance.GetAnalyticsDataretentionSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsDataretentionSettings: %v\\n\", err)\n}"
  },
  "getanalyticsevaluationsaggregatesjob": {
    "operationId": "getanalyticsevaluationsaggregatesjob",
    "functionName": "GetAnalyticsEvaluationsAggregatesJob",
    "signature": "GetAnalyticsEvaluationsAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for evaluation aggregates\ndata, response, err := apiInstance.GetAnalyticsEvaluationsAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsEvaluationsAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticsevaluationsaggregatesjobresults": {
    "operationId": "getanalyticsevaluationsaggregatesjobresults",
    "functionName": "GetAnalyticsEvaluationsAggregatesJobResults",
    "signature": "GetAnalyticsEvaluationsAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluationasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsEvaluationsAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsEvaluationsAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsflowsaggregatesjob": {
    "operationId": "getanalyticsflowsaggregatesjob",
    "functionName": "GetAnalyticsFlowsAggregatesJob",
    "signature": "GetAnalyticsFlowsAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFlowsApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for Flow aggregates\ndata, response, err := apiInstance.GetAnalyticsFlowsAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsFlowsAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticsflowsaggregatesjobresults": {
    "operationId": "getanalyticsflowsaggregatesjobresults",
    "functionName": "GetAnalyticsFlowsAggregatesJobResults",
    "signature": "GetAnalyticsFlowsAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Flowasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFlowsApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsFlowsAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsFlowsAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsjourneysaggregatesjob": {
    "operationId": "getanalyticsjourneysaggregatesjob",
    "functionName": "GetAnalyticsJourneysAggregatesJob",
    "signature": "GetAnalyticsJourneysAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for journey aggregates\ndata, response, err := apiInstance.GetAnalyticsJourneysAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsJourneysAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticsjourneysaggregatesjobresults": {
    "operationId": "getanalyticsjourneysaggregatesjobresults",
    "functionName": "GetAnalyticsJourneysAggregatesJobResults",
    "signature": "GetAnalyticsJourneysAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Journeyasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsJourneysAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsJourneysAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsknowledgeaggregatesjob": {
    "operationId": "getanalyticsknowledgeaggregatesjob",
    "functionName": "GetAnalyticsKnowledgeAggregatesJob",
    "signature": "GetAnalyticsKnowledgeAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for knowledge aggregates\ndata, response, err := apiInstance.GetAnalyticsKnowledgeAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsKnowledgeAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticsknowledgeaggregatesjobresults": {
    "operationId": "getanalyticsknowledgeaggregatesjobresults",
    "functionName": "GetAnalyticsKnowledgeAggregatesJobResults",
    "signature": "GetAnalyticsKnowledgeAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Knowledgeasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsKnowledgeAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsKnowledgeAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsreportingexports": {
    "operationId": "getanalyticsreportingexports",
    "functionName": "GetAnalyticsReportingExports",
    "signature": "GetAnalyticsReportingExports(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Reportingexportjoblisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get all view export requests for a user\ndata, response, err := apiInstance.GetAnalyticsReportingExports(pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingExports: %v\\n\", err)\n}"
  },
  "getanalyticsreportingexportsmetadata": {
    "operationId": "getanalyticsreportingexportsmetadata",
    "functionName": "GetAnalyticsReportingExportsMetadata",
    "signature": "GetAnalyticsReportingExportsMetadata()",
    "return": "Reportingexportmetadatajoblisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\n// Get all export metadata\ndata, response, err := apiInstance.GetAnalyticsReportingExportsMetadata()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingExportsMetadata: %v\\n\", err)\n}"
  },
  "getanalyticsreportingmetadata": {
    "operationId": "getanalyticsreportingmetadata",
    "functionName": "GetAnalyticsReportingMetadata",
    "signature": "GetAnalyticsReportingMetadata(pageNumber, pageSize, locale)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "locale",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Reportmetadataentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar locale string // Locale\n// Get list of reporting metadata.\ndata, response, err := apiInstance.GetAnalyticsReportingMetadata(pageNumber, pageSize, locale)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingMetadata: %v\\n\", err)\n}"
  },
  "getanalyticsreportingreportidmetadata": {
    "operationId": "getanalyticsreportingreportidmetadata",
    "functionName": "GetAnalyticsReportingReportIdMetadata",
    "signature": "GetAnalyticsReportingReportIdMetadata(reportId, locale)",
    "parameters": [
      {
        "name": "reportId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "locale",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Reportmetadata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar reportId string // Report ID\nvar locale string // Locale\n// Get a reporting metadata.\ndata, response, err := apiInstance.GetAnalyticsReportingReportIdMetadata(reportId, locale)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingReportIdMetadata: %v\\n\", err)\n}"
  },
  "getanalyticsreportingreportformats": {
    "operationId": "getanalyticsreportingreportformats",
    "functionName": "GetAnalyticsReportingReportformats",
    "signature": "GetAnalyticsReportingReportformats()",
    "return": "[]string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\n// Get a list of report formats\ndata, response, err := apiInstance.GetAnalyticsReportingReportformats()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingReportformats: %v\\n\", err)\n}"
  },
  "getanalyticsreportingschedule": {
    "operationId": "getanalyticsreportingschedule",
    "functionName": "GetAnalyticsReportingSchedule",
    "signature": "GetAnalyticsReportingSchedule(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Reportschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar scheduleId string // Schedule ID\n// Get a scheduled report job.\ndata, response, err := apiInstance.GetAnalyticsReportingSchedule(scheduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingSchedule: %v\\n\", err)\n}"
  },
  "getanalyticsreportingschedulehistory": {
    "operationId": "getanalyticsreportingschedulehistory",
    "functionName": "GetAnalyticsReportingScheduleHistory",
    "signature": "GetAnalyticsReportingScheduleHistory(scheduleId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Reportrunentryentitydomainlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar scheduleId string // Schedule ID\nvar pageNumber int // \nvar pageSize int // \n// Get list of completed scheduled report jobs.\ndata, response, err := apiInstance.GetAnalyticsReportingScheduleHistory(scheduleId, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingScheduleHistory: %v\\n\", err)\n}"
  },
  "getanalyticsreportingschedulehistorylatest": {
    "operationId": "getanalyticsreportingschedulehistorylatest",
    "functionName": "GetAnalyticsReportingScheduleHistoryLatest",
    "signature": "GetAnalyticsReportingScheduleHistoryLatest(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Reportrunentry",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar scheduleId string // Schedule ID\n// Get most recently completed scheduled report job.\ndata, response, err := apiInstance.GetAnalyticsReportingScheduleHistoryLatest(scheduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingScheduleHistoryLatest: %v\\n\", err)\n}"
  },
  "getanalyticsreportingschedulehistoryrunid": {
    "operationId": "getanalyticsreportingschedulehistoryrunid",
    "functionName": "GetAnalyticsReportingScheduleHistoryRunId",
    "signature": "GetAnalyticsReportingScheduleHistoryRunId(runId, scheduleId)",
    "parameters": [
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Reportrunentry",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar runId string // Run ID\nvar scheduleId string // Schedule ID\n// A completed scheduled report job\ndata, response, err := apiInstance.GetAnalyticsReportingScheduleHistoryRunId(runId, scheduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingScheduleHistoryRunId: %v\\n\", err)\n}"
  },
  "getanalyticsreportingschedules": {
    "operationId": "getanalyticsreportingschedules",
    "functionName": "GetAnalyticsReportingSchedules",
    "signature": "GetAnalyticsReportingSchedules(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Reportscheduleentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get a list of scheduled report jobs\ndata, response, err := apiInstance.GetAnalyticsReportingSchedules(pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingSchedules: %v\\n\", err)\n}"
  },
  "getanalyticsreportingsettings": {
    "operationId": "getanalyticsreportingsettings",
    "functionName": "GetAnalyticsReportingSettings",
    "signature": "GetAnalyticsReportingSettings()",
    "return": "Analyticsreportingsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\n// Get AnalyticsReportingSettings for an organization\ndata, response, err := apiInstance.GetAnalyticsReportingSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingSettings: %v\\n\", err)\n}"
  },
  "getanalyticsreportingtimeperiods": {
    "operationId": "getanalyticsreportingtimeperiods",
    "functionName": "GetAnalyticsReportingTimeperiods",
    "signature": "GetAnalyticsReportingTimeperiods()",
    "return": "[]string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\n// Get a list of report time periods.\ndata, response, err := apiInstance.GetAnalyticsReportingTimeperiods()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsReportingTimeperiods: %v\\n\", err)\n}"
  },
  "getanalyticsresolutionsaggregatesjob": {
    "operationId": "getanalyticsresolutionsaggregatesjob",
    "functionName": "GetAnalyticsResolutionsAggregatesJob",
    "signature": "GetAnalyticsResolutionsAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for resolution aggregates\ndata, response, err := apiInstance.GetAnalyticsResolutionsAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsResolutionsAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticsresolutionsaggregatesjobresults": {
    "operationId": "getanalyticsresolutionsaggregatesjobresults",
    "functionName": "GetAnalyticsResolutionsAggregatesJobResults",
    "signature": "GetAnalyticsResolutionsAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Resolutionasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsResolutionsAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsResolutionsAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticssurveysaggregatesjob": {
    "operationId": "getanalyticssurveysaggregatesjob",
    "functionName": "GetAnalyticsSurveysAggregatesJob",
    "signature": "GetAnalyticsSurveysAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for survey aggregates\ndata, response, err := apiInstance.GetAnalyticsSurveysAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsSurveysAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticssurveysaggregatesjobresults": {
    "operationId": "getanalyticssurveysaggregatesjobresults",
    "functionName": "GetAnalyticsSurveysAggregatesJobResults",
    "signature": "GetAnalyticsSurveysAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Surveyasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsSurveysAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsSurveysAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticstaskmanagementaggregatesjob": {
    "operationId": "getanalyticstaskmanagementaggregatesjob",
    "functionName": "GetAnalyticsTaskmanagementAggregatesJob",
    "signature": "GetAnalyticsTaskmanagementAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for task management aggregates\ndata, response, err := apiInstance.GetAnalyticsTaskmanagementAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsTaskmanagementAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticstaskmanagementaggregatesjobresults": {
    "operationId": "getanalyticstaskmanagementaggregatesjobresults",
    "functionName": "GetAnalyticsTaskmanagementAggregatesJobResults",
    "signature": "GetAnalyticsTaskmanagementAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Taskmanagementasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async task management query\ndata, response, err := apiInstance.GetAnalyticsTaskmanagementAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsTaskmanagementAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticstranscriptsaggregatesjob": {
    "operationId": "getanalyticstranscriptsaggregatesjob",
    "functionName": "GetAnalyticsTranscriptsAggregatesJob",
    "signature": "GetAnalyticsTranscriptsAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for transcript aggregates\ndata, response, err := apiInstance.GetAnalyticsTranscriptsAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsTranscriptsAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticstranscriptsaggregatesjobresults": {
    "operationId": "getanalyticstranscriptsaggregatesjobresults",
    "functionName": "GetAnalyticsTranscriptsAggregatesJobResults",
    "signature": "GetAnalyticsTranscriptsAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Transcriptasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsTranscriptsAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsTranscriptsAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsusersaggregatesjob": {
    "operationId": "getanalyticsusersaggregatesjob",
    "functionName": "GetAnalyticsUsersAggregatesJob",
    "signature": "GetAnalyticsUsersAggregatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for user aggregates\ndata, response, err := apiInstance.GetAnalyticsUsersAggregatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsUsersAggregatesJob: %v\\n\", err)\n}"
  },
  "getanalyticsusersaggregatesjobresults": {
    "operationId": "getanalyticsusersaggregatesjobresults",
    "functionName": "GetAnalyticsUsersAggregatesJobResults",
    "signature": "GetAnalyticsUsersAggregatesJobResults(jobId, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userasyncaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Cursor token to retrieve next page\n// Fetch a page of results for an async aggregates query\ndata, response, err := apiInstance.GetAnalyticsUsersAggregatesJobResults(jobId, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsUsersAggregatesJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsusersdetailsjob": {
    "operationId": "getanalyticsusersdetailsjob",
    "functionName": "GetAnalyticsUsersDetailsJob",
    "signature": "GetAnalyticsUsersDetailsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncquerystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar jobId string // jobId\n// Get status for async query for user details\ndata, response, err := apiInstance.GetAnalyticsUsersDetailsJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsUsersDetailsJob: %v\\n\", err)\n}"
  },
  "getanalyticsusersdetailsjobresults": {
    "operationId": "getanalyticsusersdetailsjobresults",
    "functionName": "GetAnalyticsUsersDetailsJobResults",
    "signature": "GetAnalyticsUsersDetailsJobResults(jobId, cursor, pageSize)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Analyticsuserdetailsasyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar jobId string // jobId\nvar cursor string // Indicates where to resume query results (not required for first page)\nvar pageSize int // The desired maximum number of results\n// Fetch a page of results for an async query\ndata, response, err := apiInstance.GetAnalyticsUsersDetailsJobResults(jobId, cursor, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsUsersDetailsJobResults: %v\\n\", err)\n}"
  },
  "getanalyticsusersdetailsjobsavailability": {
    "operationId": "getanalyticsusersdetailsjobsavailability",
    "functionName": "GetAnalyticsUsersDetailsJobsAvailability",
    "signature": "GetAnalyticsUsersDetailsJobsAvailability()",
    "return": "Dataavailabilityresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\n// Lookup the datalake availability date and time\ndata, response, err := apiInstance.GetAnalyticsUsersDetailsJobsAvailability()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAnalyticsUsersDetailsJobsAvailability: %v\\n\", err)\n}"
  },
  "patchanalyticsreportingsettings": {
    "operationId": "patchanalyticsreportingsettings",
    "functionName": "PatchAnalyticsReportingSettings",
    "signature": "PatchAnalyticsReportingSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Analyticsreportingsettings",
        "required": "true"
      }
    ],
    "return": "Analyticsreportingsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Analyticsreportingsettings // AnalyticsReportingSettingsRequest\n// Patch AnalyticsReportingSettings values for an organization\ndata, response, err := apiInstance.PatchAnalyticsReportingSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchAnalyticsReportingSettings: %v\\n\", err)\n}"
  },
  "postanalyticsactionsaggregatesjobs": {
    "operationId": "postanalyticsactionsaggregatesjobs",
    "functionName": "PostAnalyticsActionsAggregatesJobs",
    "signature": "PostAnalyticsActionsAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Actionasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Actionasyncaggregationquery // query\n// Query for action aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsActionsAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsActionsAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticsactionsaggregatesquery": {
    "operationId": "postanalyticsactionsaggregatesquery",
    "functionName": "PostAnalyticsActionsAggregatesQuery",
    "signature": "PostAnalyticsActionsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Actionaggregationquery",
        "required": "true"
      }
    ],
    "return": "Actionaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Actionaggregationquery // query\n// Query for action aggregates\ndata, response, err := apiInstance.PostAnalyticsActionsAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsActionsAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsbotsaggregatesjobs": {
    "operationId": "postanalyticsbotsaggregatesjobs",
    "functionName": "PostAnalyticsBotsAggregatesJobs",
    "signature": "PostAnalyticsBotsAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Botasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Botasyncaggregationquery // query\n// Query for bot aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsBotsAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsBotsAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticsbotsaggregatesquery": {
    "operationId": "postanalyticsbotsaggregatesquery",
    "functionName": "PostAnalyticsBotsAggregatesQuery",
    "signature": "PostAnalyticsBotsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Botaggregationquery",
        "required": "true"
      }
    ],
    "return": "Botaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Botaggregationquery // query\n// Query for bot aggregates\ndata, response, err := apiInstance.PostAnalyticsBotsAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsBotsAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsconversationdetailsproperties": {
    "operationId": "postanalyticsconversationdetailsproperties",
    "functionName": "PostAnalyticsConversationDetailsProperties",
    "signature": "PostAnalyticsConversationDetailsProperties(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Propertyindexrequest",
        "required": "true"
      }
    ],
    "return": "Propertyindexrequest",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Propertyindexrequest // request\n// Index conversation properties\ndata, response, err := apiInstance.PostAnalyticsConversationDetailsProperties(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsConversationDetailsProperties: %v\\n\", err)\n}"
  },
  "postanalyticsconversationsactivityquery": {
    "operationId": "postanalyticsconversationsactivityquery",
    "functionName": "PostAnalyticsConversationsActivityQuery",
    "signature": "PostAnalyticsConversationsActivityQuery(body, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "body",
        "type": "Conversationactivityquery",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Conversationactivityresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Conversationactivityquery // query\nvar pageSize int // The desired page size\nvar pageNumber int // The desired page number\n// Query for conversation activity observations\ndata, response, err := apiInstance.PostAnalyticsConversationsActivityQuery(body, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsConversationsActivityQuery: %v\\n\", err)\n}"
  },
  "postanalyticsconversationsaggregatesjobs": {
    "operationId": "postanalyticsconversationsaggregatesjobs",
    "functionName": "PostAnalyticsConversationsAggregatesJobs",
    "signature": "PostAnalyticsConversationsAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Conversationasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Conversationasyncaggregationquery // query\n// Query for conversation aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsConversationsAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsConversationsAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticsconversationsaggregatesquery": {
    "operationId": "postanalyticsconversationsaggregatesquery",
    "functionName": "PostAnalyticsConversationsAggregatesQuery",
    "signature": "PostAnalyticsConversationsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Conversationaggregationquery",
        "required": "true"
      }
    ],
    "return": "Conversationaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Conversationaggregationquery // query\n// Query for conversation aggregates\ndata, response, err := apiInstance.PostAnalyticsConversationsAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsConversationsAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsconversationsdetailsjobs": {
    "operationId": "postanalyticsconversationsdetailsjobs",
    "functionName": "PostAnalyticsConversationsDetailsJobs",
    "signature": "PostAnalyticsConversationsDetailsJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Asyncconversationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Asyncconversationquery // query\n// Query for conversation details asynchronously\ndata, response, err := apiInstance.PostAnalyticsConversationsDetailsJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsConversationsDetailsJobs: %v\\n\", err)\n}"
  },
  "postanalyticsconversationsdetailsquery": {
    "operationId": "postanalyticsconversationsdetailsquery",
    "functionName": "PostAnalyticsConversationsDetailsQuery",
    "signature": "PostAnalyticsConversationsDetailsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Conversationquery",
        "required": "true"
      }
    ],
    "return": "Analyticsconversationqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Conversationquery // query\n// Query for conversation details\ndata, response, err := apiInstance.PostAnalyticsConversationsDetailsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsConversationsDetailsQuery: %v\\n\", err)\n}"
  },
  "postanalyticsconversationstranscriptsquery": {
    "operationId": "postanalyticsconversationstranscriptsquery",
    "functionName": "PostAnalyticsConversationsTranscriptsQuery",
    "signature": "PostAnalyticsConversationsTranscriptsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Transcriptconversationdetailsearchrequest",
        "required": "true"
      }
    ],
    "return": "Analyticsconversationwithoutattributesmultigetresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar body platformclientv2.Transcriptconversationdetailsearchrequest // Search request options\n// Search resources.\ndata, response, err := apiInstance.PostAnalyticsConversationsTranscriptsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsConversationsTranscriptsQuery: %v\\n\", err)\n}"
  },
  "postanalyticsevaluationsaggregatesjobs": {
    "operationId": "postanalyticsevaluationsaggregatesjobs",
    "functionName": "PostAnalyticsEvaluationsAggregatesJobs",
    "signature": "PostAnalyticsEvaluationsAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Evaluationasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Evaluationasyncaggregationquery // query\n// Query for evaluation aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsEvaluationsAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsEvaluationsAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticsevaluationsaggregatesquery": {
    "operationId": "postanalyticsevaluationsaggregatesquery",
    "functionName": "PostAnalyticsEvaluationsAggregatesQuery",
    "signature": "PostAnalyticsEvaluationsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Evaluationaggregationquery",
        "required": "true"
      }
    ],
    "return": "Evaluationaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Evaluationaggregationquery // query\n// Query for evaluation aggregates\ndata, response, err := apiInstance.PostAnalyticsEvaluationsAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsEvaluationsAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsflowsactivityquery": {
    "operationId": "postanalyticsflowsactivityquery",
    "functionName": "PostAnalyticsFlowsActivityQuery",
    "signature": "PostAnalyticsFlowsActivityQuery(body, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "body",
        "type": "Flowactivityquery",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Flowactivityresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFlowsApiWithConfig(config)\n\nvar body platformclientv2.Flowactivityquery // query\nvar pageSize int // The desired page size\nvar pageNumber int // The desired page number\n// Query for flow activity observations\ndata, response, err := apiInstance.PostAnalyticsFlowsActivityQuery(body, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsFlowsActivityQuery: %v\\n\", err)\n}"
  },
  "postanalyticsflowsaggregatesjobs": {
    "operationId": "postanalyticsflowsaggregatesjobs",
    "functionName": "PostAnalyticsFlowsAggregatesJobs",
    "signature": "PostAnalyticsFlowsAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Flowasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFlowsApiWithConfig(config)\n\nvar body platformclientv2.Flowasyncaggregationquery // query\n// Query for flow aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsFlowsAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsFlowsAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticsflowsaggregatesquery": {
    "operationId": "postanalyticsflowsaggregatesquery",
    "functionName": "PostAnalyticsFlowsAggregatesQuery",
    "signature": "PostAnalyticsFlowsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Flowaggregationquery",
        "required": "true"
      }
    ],
    "return": "Flowaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFlowsApiWithConfig(config)\n\nvar body platformclientv2.Flowaggregationquery // query\n// Query for flow aggregates\ndata, response, err := apiInstance.PostAnalyticsFlowsAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsFlowsAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsflowsobservationsquery": {
    "operationId": "postanalyticsflowsobservationsquery",
    "functionName": "PostAnalyticsFlowsObservationsQuery",
    "signature": "PostAnalyticsFlowsObservationsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Flowobservationquery",
        "required": "true"
      }
    ],
    "return": "Flowobservationqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFlowsApiWithConfig(config)\n\nvar body platformclientv2.Flowobservationquery // query\n// Query for flow observations\ndata, response, err := apiInstance.PostAnalyticsFlowsObservationsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsFlowsObservationsQuery: %v\\n\", err)\n}"
  },
  "postanalyticsjourneysaggregatesjobs": {
    "operationId": "postanalyticsjourneysaggregatesjobs",
    "functionName": "PostAnalyticsJourneysAggregatesJobs",
    "signature": "PostAnalyticsJourneysAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Journeyasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar body platformclientv2.Journeyasyncaggregationquery // query\n// Query for journey aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsJourneysAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsJourneysAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticsjourneysaggregatesquery": {
    "operationId": "postanalyticsjourneysaggregatesquery",
    "functionName": "PostAnalyticsJourneysAggregatesQuery",
    "signature": "PostAnalyticsJourneysAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Journeyaggregationquery",
        "required": "true"
      }
    ],
    "return": "Journeyaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar body platformclientv2.Journeyaggregationquery // query\n// Query for journey aggregates\ndata, response, err := apiInstance.PostAnalyticsJourneysAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsJourneysAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsknowledgeaggregatesjobs": {
    "operationId": "postanalyticsknowledgeaggregatesjobs",
    "functionName": "PostAnalyticsKnowledgeAggregatesJobs",
    "signature": "PostAnalyticsKnowledgeAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Knowledgeasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Knowledgeasyncaggregationquery // query\n// Query for knowledge aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsKnowledgeAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsKnowledgeAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticsknowledgeaggregatesquery": {
    "operationId": "postanalyticsknowledgeaggregatesquery",
    "functionName": "PostAnalyticsKnowledgeAggregatesQuery",
    "signature": "PostAnalyticsKnowledgeAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Knowledgeaggregationquery",
        "required": "true"
      }
    ],
    "return": "Knowledgeaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Knowledgeaggregationquery // query\n// Query for knowledge aggregates\ndata, response, err := apiInstance.PostAnalyticsKnowledgeAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsKnowledgeAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsqueuesobservationsquery": {
    "operationId": "postanalyticsqueuesobservationsquery",
    "functionName": "PostAnalyticsQueuesObservationsQuery",
    "signature": "PostAnalyticsQueuesObservationsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Queueobservationquery",
        "required": "true"
      }
    ],
    "return": "Queueobservationqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Queueobservationquery // query\n// Query for queue observations\ndata, response, err := apiInstance.PostAnalyticsQueuesObservationsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsQueuesObservationsQuery: %v\\n\", err)\n}"
  },
  "postanalyticsreportingexports": {
    "operationId": "postanalyticsreportingexports",
    "functionName": "PostAnalyticsReportingExports",
    "signature": "PostAnalyticsReportingExports(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Reportingexportjobrequest",
        "required": "true"
      }
    ],
    "return": "Reportingexportjobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Reportingexportjobrequest // ReportingExportJobRequest\n// Generate a view export request\ndata, response, err := apiInstance.PostAnalyticsReportingExports(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsReportingExports: %v\\n\", err)\n}"
  },
  "postanalyticsreportingschedulerunreport": {
    "operationId": "postanalyticsreportingschedulerunreport",
    "functionName": "PostAnalyticsReportingScheduleRunreport",
    "signature": "PostAnalyticsReportingScheduleRunreport(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Runnowresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar scheduleId string // Schedule ID\n// Place a scheduled report immediately into the reporting queue\ndata, response, err := apiInstance.PostAnalyticsReportingScheduleRunreport(scheduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsReportingScheduleRunreport: %v\\n\", err)\n}"
  },
  "postanalyticsreportingschedules": {
    "operationId": "postanalyticsreportingschedules",
    "functionName": "PostAnalyticsReportingSchedules",
    "signature": "PostAnalyticsReportingSchedules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Reportschedule",
        "required": "true"
      }
    ],
    "return": "Reportschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Reportschedule // ReportSchedule\n// Create a scheduled report job\ndata, response, err := apiInstance.PostAnalyticsReportingSchedules(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsReportingSchedules: %v\\n\", err)\n}"
  },
  "postanalyticsresolutionsaggregatesjobs": {
    "operationId": "postanalyticsresolutionsaggregatesjobs",
    "functionName": "PostAnalyticsResolutionsAggregatesJobs",
    "signature": "PostAnalyticsResolutionsAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Resolutionasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Resolutionasyncaggregationquery // query\n// Query for resolution aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsResolutionsAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsResolutionsAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticsroutingactivityquery": {
    "operationId": "postanalyticsroutingactivityquery",
    "functionName": "PostAnalyticsRoutingActivityQuery",
    "signature": "PostAnalyticsRoutingActivityQuery(body, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "body",
        "type": "Routingactivityquery",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Routingactivityresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Routingactivityquery // query\nvar pageSize int // The desired page size\nvar pageNumber int // The desired page number\n// Query for user activity observations\ndata, response, err := apiInstance.PostAnalyticsRoutingActivityQuery(body, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsRoutingActivityQuery: %v\\n\", err)\n}"
  },
  "postanalyticssurveysaggregatesjobs": {
    "operationId": "postanalyticssurveysaggregatesjobs",
    "functionName": "PostAnalyticsSurveysAggregatesJobs",
    "signature": "PostAnalyticsSurveysAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Surveyasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Surveyasyncaggregationquery // query\n// Query for survey aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsSurveysAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsSurveysAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticssurveysaggregatesquery": {
    "operationId": "postanalyticssurveysaggregatesquery",
    "functionName": "PostAnalyticsSurveysAggregatesQuery",
    "signature": "PostAnalyticsSurveysAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Surveyaggregationquery",
        "required": "true"
      }
    ],
    "return": "Surveyaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Surveyaggregationquery // query\n// Query for survey aggregates\ndata, response, err := apiInstance.PostAnalyticsSurveysAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsSurveysAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticstaskmanagementaggregatesjobs": {
    "operationId": "postanalyticstaskmanagementaggregatesjobs",
    "functionName": "PostAnalyticsTaskmanagementAggregatesJobs",
    "signature": "PostAnalyticsTaskmanagementAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Taskmanagementasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Taskmanagementasyncaggregationquery // query\n// Query for task management aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsTaskmanagementAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsTaskmanagementAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticstaskmanagementaggregatesquery": {
    "operationId": "postanalyticstaskmanagementaggregatesquery",
    "functionName": "PostAnalyticsTaskmanagementAggregatesQuery",
    "signature": "PostAnalyticsTaskmanagementAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Taskmanagementaggregationquery",
        "required": "true"
      }
    ],
    "return": "Taskmanagementaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Taskmanagementaggregationquery // query\n// Query for task management aggregates\ndata, response, err := apiInstance.PostAnalyticsTaskmanagementAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsTaskmanagementAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsteamsactivityquery": {
    "operationId": "postanalyticsteamsactivityquery",
    "functionName": "PostAnalyticsTeamsActivityQuery",
    "signature": "PostAnalyticsTeamsActivityQuery(body, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "body",
        "type": "Teamactivityquery",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Teamactivityresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar body platformclientv2.Teamactivityquery // query\nvar pageSize int // The desired page size\nvar pageNumber int // The desired page number\n// Query for team activity observations\ndata, response, err := apiInstance.PostAnalyticsTeamsActivityQuery(body, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsTeamsActivityQuery: %v\\n\", err)\n}"
  },
  "postanalyticstranscriptsaggregatesjobs": {
    "operationId": "postanalyticstranscriptsaggregatesjobs",
    "functionName": "PostAnalyticsTranscriptsAggregatesJobs",
    "signature": "PostAnalyticsTranscriptsAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Transcriptasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Transcriptasyncaggregationquery // query\n// Query for transcript aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsTranscriptsAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsTranscriptsAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticstranscriptsaggregatesquery": {
    "operationId": "postanalyticstranscriptsaggregatesquery",
    "functionName": "PostAnalyticsTranscriptsAggregatesQuery",
    "signature": "PostAnalyticsTranscriptsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Transcriptaggregationquery",
        "required": "true"
      }
    ],
    "return": "Transcriptaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Transcriptaggregationquery // query\n// Query for transcript aggregates\ndata, response, err := apiInstance.PostAnalyticsTranscriptsAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsTranscriptsAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsusersactivityquery": {
    "operationId": "postanalyticsusersactivityquery",
    "functionName": "PostAnalyticsUsersActivityQuery",
    "signature": "PostAnalyticsUsersActivityQuery(body, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "body",
        "type": "Useractivityquery",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Useractivityresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Useractivityquery // query\nvar pageSize int // The desired page size\nvar pageNumber int // The desired page number\n// Query for user activity observations\ndata, response, err := apiInstance.PostAnalyticsUsersActivityQuery(body, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsUsersActivityQuery: %v\\n\", err)\n}"
  },
  "postanalyticsusersaggregatesjobs": {
    "operationId": "postanalyticsusersaggregatesjobs",
    "functionName": "PostAnalyticsUsersAggregatesJobs",
    "signature": "PostAnalyticsUsersAggregatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Userasyncaggregationquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Userasyncaggregationquery // query\n// Query for user aggregates asynchronously\ndata, response, err := apiInstance.PostAnalyticsUsersAggregatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsUsersAggregatesJobs: %v\\n\", err)\n}"
  },
  "postanalyticsusersaggregatesquery": {
    "operationId": "postanalyticsusersaggregatesquery",
    "functionName": "PostAnalyticsUsersAggregatesQuery",
    "signature": "PostAnalyticsUsersAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Useraggregationquery",
        "required": "true"
      }
    ],
    "return": "Useraggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Useraggregationquery // query\n// Query for user aggregates\ndata, response, err := apiInstance.PostAnalyticsUsersAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsUsersAggregatesQuery: %v\\n\", err)\n}"
  },
  "postanalyticsusersdetailsjobs": {
    "operationId": "postanalyticsusersdetailsjobs",
    "functionName": "PostAnalyticsUsersDetailsJobs",
    "signature": "PostAnalyticsUsersDetailsJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Asyncuserdetailsquery",
        "required": "true"
      }
    ],
    "return": "Asyncqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Asyncuserdetailsquery // query\n// Query for user details asynchronously\ndata, response, err := apiInstance.PostAnalyticsUsersDetailsJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsUsersDetailsJobs: %v\\n\", err)\n}"
  },
  "postanalyticsusersdetailsquery": {
    "operationId": "postanalyticsusersdetailsquery",
    "functionName": "PostAnalyticsUsersDetailsQuery",
    "signature": "PostAnalyticsUsersDetailsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Userdetailsquery",
        "required": "true"
      }
    ],
    "return": "Analyticsuserdetailsqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Userdetailsquery // query\n// Query for user details\ndata, response, err := apiInstance.PostAnalyticsUsersDetailsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsUsersDetailsQuery: %v\\n\", err)\n}"
  },
  "postanalyticsusersobservationsquery": {
    "operationId": "postanalyticsusersobservationsquery",
    "functionName": "PostAnalyticsUsersObservationsQuery",
    "signature": "PostAnalyticsUsersObservationsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Userobservationquery",
        "required": "true"
      }
    ],
    "return": "Userobservationqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Userobservationquery // query\n// Query for user observations\ndata, response, err := apiInstance.PostAnalyticsUsersObservationsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAnalyticsUsersObservationsQuery: %v\\n\", err)\n}"
  },
  "putanalyticsdataretentionsettings": {
    "operationId": "putanalyticsdataretentionsettings",
    "functionName": "PutAnalyticsDataretentionSettings",
    "signature": "PutAnalyticsDataretentionSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Updateanalyticsdataretentionrequest",
        "required": "true"
      }
    ],
    "return": "Analyticsdataretentionresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Updateanalyticsdataretentionrequest // retentionDays\n// Update analytics data retention setting\ndata, response, err := apiInstance.PutAnalyticsDataretentionSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAnalyticsDataretentionSettings: %v\\n\", err)\n}"
  },
  "putanalyticsreportingschedule": {
    "operationId": "putanalyticsreportingschedule",
    "functionName": "PutAnalyticsReportingSchedule",
    "signature": "PutAnalyticsReportingSchedule(scheduleId, body)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Reportschedule",
        "required": "true"
      }
    ],
    "return": "Reportschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAnalyticsApiWithConfig(config)\n\nvar scheduleId string // Schedule ID\nvar body platformclientv2.Reportschedule // ReportSchedule\n// Update a scheduled report job.\ndata, response, err := apiInstance.PutAnalyticsReportingSchedule(scheduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAnalyticsReportingSchedule: %v\\n\", err)\n}"
  },
  "deletearchitectemergencygroup": {
    "operationId": "deletearchitectemergencygroup",
    "functionName": "DeleteArchitectEmergencygroup",
    "signature": "DeleteArchitectEmergencygroup(emergencyGroupId)",
    "parameters": [
      {
        "name": "emergencyGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar emergencyGroupId string // Emergency group ID\n// Deletes a emergency group by ID\nresponse, err := apiInstance.DeleteArchitectEmergencygroup(emergencyGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectEmergencygroup: %v\\n\", err)\n}"
  },
  "deletearchitectgrammar": {
    "operationId": "deletearchitectgrammar",
    "functionName": "DeleteArchitectGrammar",
    "signature": "DeleteArchitectGrammar(grammarId)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // grammar ID\n// Delete a grammar.\ndata, response, err := apiInstance.DeleteArchitectGrammar(grammarId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectGrammar: %v\\n\", err)\n}"
  },
  "deletearchitectgrammarlanguage": {
    "operationId": "deletearchitectgrammarlanguage",
    "functionName": "DeleteArchitectGrammarLanguage",
    "signature": "DeleteArchitectGrammarLanguage(grammarId, languageCode)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // Grammar ID\nvar languageCode string // Language\n// Delete specified grammar language\nresponse, err := apiInstance.DeleteArchitectGrammarLanguage(grammarId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectGrammarLanguage: %v\\n\", err)\n}"
  },
  "deletearchitectgrammarlanguagefilesdtmf": {
    "operationId": "deletearchitectgrammarlanguagefilesdtmf",
    "functionName": "DeleteArchitectGrammarLanguageFilesDtmf",
    "signature": "DeleteArchitectGrammarLanguageFilesDtmf(grammarId, languageCode)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // Grammar ID\nvar languageCode string // Language\n// Clear the DTMF mode file for the grammar language if there is one\nresponse, err := apiInstance.DeleteArchitectGrammarLanguageFilesDtmf(grammarId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectGrammarLanguageFilesDtmf: %v\\n\", err)\n}"
  },
  "deletearchitectgrammarlanguagefilesvoice": {
    "operationId": "deletearchitectgrammarlanguagefilesvoice",
    "functionName": "DeleteArchitectGrammarLanguageFilesVoice",
    "signature": "DeleteArchitectGrammarLanguageFilesVoice(grammarId, languageCode)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // Grammar ID\nvar languageCode string // Language\n// Clear the voice mode file for the grammar language if there is one\nresponse, err := apiInstance.DeleteArchitectGrammarLanguageFilesVoice(grammarId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectGrammarLanguageFilesVoice: %v\\n\", err)\n}"
  },
  "deletearchitectivr": {
    "operationId": "deletearchitectivr",
    "functionName": "DeleteArchitectIvr",
    "signature": "DeleteArchitectIvr(ivrId)",
    "parameters": [
      {
        "name": "ivrId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar ivrId string // IVR id\n// Delete an IVR Config.\nresponse, err := apiInstance.DeleteArchitectIvr(ivrId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectIvr: %v\\n\", err)\n}"
  },
  "deletearchitectprompt": {
    "operationId": "deletearchitectprompt",
    "functionName": "DeleteArchitectPrompt",
    "signature": "DeleteArchitectPrompt(promptId, allResources)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "allResources",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar allResources bool // Whether or not to delete all the prompt resources\n// Delete specified user prompt\nresponse, err := apiInstance.DeleteArchitectPrompt(promptId, allResources)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectPrompt: %v\\n\", err)\n}"
  },
  "deletearchitectpromptresource": {
    "operationId": "deletearchitectpromptresource",
    "functionName": "DeleteArchitectPromptResource",
    "signature": "DeleteArchitectPromptResource(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar languageCode string // Language\n// Delete specified user prompt resource\nresponse, err := apiInstance.DeleteArchitectPromptResource(promptId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectPromptResource: %v\\n\", err)\n}"
  },
  "deletearchitectpromptresourceaudio": {
    "operationId": "deletearchitectpromptresourceaudio",
    "functionName": "DeleteArchitectPromptResourceAudio",
    "signature": "DeleteArchitectPromptResourceAudio(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar languageCode string // Language\n// Delete specified user prompt resource audio\nresponse, err := apiInstance.DeleteArchitectPromptResourceAudio(promptId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectPromptResourceAudio: %v\\n\", err)\n}"
  },
  "deletearchitectprompts": {
    "operationId": "deletearchitectprompts",
    "functionName": "DeleteArchitectPrompts",
    "signature": "DeleteArchitectPrompts(id)",
    "parameters": [
      {
        "name": "id",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar id []string // List of Prompt IDs\n// Batch-delete a list of prompts\ndata, response, err := apiInstance.DeleteArchitectPrompts(id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectPrompts: %v\\n\", err)\n}"
  },
  "deletearchitectschedule": {
    "operationId": "deletearchitectschedule",
    "functionName": "DeleteArchitectSchedule",
    "signature": "DeleteArchitectSchedule(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar scheduleId string // Schedule ID\n// Delete a schedule by id\nresponse, err := apiInstance.DeleteArchitectSchedule(scheduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectSchedule: %v\\n\", err)\n}"
  },
  "deletearchitectschedulegroup": {
    "operationId": "deletearchitectschedulegroup",
    "functionName": "DeleteArchitectSchedulegroup",
    "signature": "DeleteArchitectSchedulegroup(scheduleGroupId)",
    "parameters": [
      {
        "name": "scheduleGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar scheduleGroupId string // Schedule group ID\n// Deletes a schedule group by ID\nresponse, err := apiInstance.DeleteArchitectSchedulegroup(scheduleGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectSchedulegroup: %v\\n\", err)\n}"
  },
  "deletearchitectsystempromptresource": {
    "operationId": "deletearchitectsystempromptresource",
    "functionName": "DeleteArchitectSystempromptResource",
    "signature": "DeleteArchitectSystempromptResource(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar languageCode string // Language\n// Delete a system prompt resource override.\nresponse, err := apiInstance.DeleteArchitectSystempromptResource(promptId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteArchitectSystempromptResource: %v\\n\", err)\n}"
  },
  "deleteflow": {
    "operationId": "deleteflow",
    "functionName": "DeleteFlow",
    "signature": "DeleteFlow(flowId)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\n// Delete flow\nresponse, err := apiInstance.DeleteFlow(flowId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteFlow: %v\\n\", err)\n}"
  },
  "deleteflows": {
    "operationId": "deleteflows",
    "functionName": "DeleteFlows",
    "signature": "DeleteFlows(id)",
    "parameters": [
      {
        "name": "id",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar id []string // List of Flow IDs\n// Batch-delete a list of flows\ndata, response, err := apiInstance.DeleteFlows(id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteFlows: %v\\n\", err)\n}"
  },
  "deleteflowsdatatable": {
    "operationId": "deleteflowsdatatable",
    "functionName": "DeleteFlowsDatatable",
    "signature": "DeleteFlowsDatatable(datatableId, force)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "force",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar force bool // force delete, even if in use\n// deletes a specific datatable by id\nresponse, err := apiInstance.DeleteFlowsDatatable(datatableId, force)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteFlowsDatatable: %v\\n\", err)\n}"
  },
  "deleteflowsdatatablerow": {
    "operationId": "deleteflowsdatatablerow",
    "functionName": "DeleteFlowsDatatableRow",
    "signature": "DeleteFlowsDatatableRow(datatableId, rowId)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rowId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar rowId string // the key for the row\n// Delete a row entry\nresponse, err := apiInstance.DeleteFlowsDatatableRow(datatableId, rowId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteFlowsDatatableRow: %v\\n\", err)\n}"
  },
  "deleteflowsmilestone": {
    "operationId": "deleteflowsmilestone",
    "functionName": "DeleteFlowsMilestone",
    "signature": "DeleteFlowsMilestone(milestoneId)",
    "parameters": [
      {
        "name": "milestoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar milestoneId string // flow milestone ID\n// Delete a flow milestone.\ndata, response, err := apiInstance.DeleteFlowsMilestone(milestoneId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteFlowsMilestone: %v\\n\", err)\n}"
  },
  "getarchitectdependencytracking": {
    "operationId": "getarchitectdependencytracking",
    "functionName": "GetArchitectDependencytracking",
    "signature": "GetArchitectDependencytracking(name, pageNumber, pageSize, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType)",
    "parameters": [
      {
        "name": "name",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "objectType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "consumedResources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumingResources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumedResourceType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "consumingResourceType",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Dependencyobjectentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar name string // Object name to search for\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar objectType []string // Object type(s) to search for\nvar consumedResources bool // Include resources each result item consumes\nvar consumingResources bool // Include resources that consume each result item\nvar consumedResourceType []string // Types of consumed resources to return, if consumed resources are requested\nvar consumingResourceType []string // Types of consuming resources to return, if consuming resources are requested\n// Get Dependency Tracking objects that have a given display name\ndata, response, err := apiInstance.GetArchitectDependencytracking(name, pageNumber, pageSize, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectDependencytracking: %v\\n\", err)\n}"
  },
  "getarchitectdependencytrackingbuild": {
    "operationId": "getarchitectdependencytrackingbuild",
    "functionName": "GetArchitectDependencytrackingBuild",
    "signature": "GetArchitectDependencytrackingBuild()",
    "return": "Dependencystatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\n// Get Dependency Tracking build status for an organization\ndata, response, err := apiInstance.GetArchitectDependencytrackingBuild()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectDependencytrackingBuild: %v\\n\", err)\n}"
  },
  "getarchitectdependencytrackingconsumedresources": {
    "operationId": "getarchitectdependencytrackingconsumedresources",
    "functionName": "GetArchitectDependencytrackingConsumedresources",
    "signature": "GetArchitectDependencytrackingConsumedresources(id, version, objectType, resourceType, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "id",
        "type": "string",
        "required": "true"
      },
      {
        "name": "version",
        "type": "string",
        "required": "true"
      },
      {
        "name": "objectType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "resourceType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Consumedresourcesentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar id string // Consuming object ID\nvar version string // Consuming object version\nvar objectType string // Consuming object type.  Only versioned types are allowed here.\nvar resourceType []string // Types of consumed resources to show\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get resources that are consumed by a given Dependency Tracking object\ndata, response, err := apiInstance.GetArchitectDependencytrackingConsumedresources(id, version, objectType, resourceType, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectDependencytrackingConsumedresources: %v\\n\", err)\n}"
  },
  "getarchitectdependencytrackingconsumingresources": {
    "operationId": "getarchitectdependencytrackingconsumingresources",
    "functionName": "GetArchitectDependencytrackingConsumingresources",
    "signature": "GetArchitectDependencytrackingConsumingresources(id, objectType, resourceType, version, pageNumber, pageSize, flowFilter)",
    "parameters": [
      {
        "name": "id",
        "type": "string",
        "required": "true"
      },
      {
        "name": "objectType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "resourceType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "version",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "flowFilter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Consumingresourcesentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar id string // Consumed object ID\nvar objectType string // Consumed object type\nvar resourceType []string // Types of consuming resources to show.  Only versioned types are allowed here.\nvar version string // Object version\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar flowFilter string // Show only checkedIn or published flows\n// Get resources that consume a given Dependency Tracking object\ndata, response, err := apiInstance.GetArchitectDependencytrackingConsumingresources(id, objectType, resourceType, version, pageNumber, pageSize, flowFilter)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectDependencytrackingConsumingresources: %v\\n\", err)\n}"
  },
  "getarchitectdependencytrackingdeletedresourceconsumers": {
    "operationId": "getarchitectdependencytrackingdeletedresourceconsumers",
    "functionName": "GetArchitectDependencytrackingDeletedresourceconsumers",
    "signature": "GetArchitectDependencytrackingDeletedresourceconsumers(name, objectType, flowFilter, consumedResources, consumedResourceType, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "objectType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "flowFilter",
        "type": "string",
        "required": "false"
      },
      {
        "name": "consumedResources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumedResourceType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Dependencyobjectentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar name string // Name to search for\nvar objectType []string // Object type(s) to search for\nvar flowFilter string // Show only checkedIn or published flows\nvar consumedResources bool // Return consumed resources?\nvar consumedResourceType []string // Resource type(s) to return\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get Dependency Tracking objects that consume deleted resources\ndata, response, err := apiInstance.GetArchitectDependencytrackingDeletedresourceconsumers(name, objectType, flowFilter, consumedResources, consumedResourceType, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectDependencytrackingDeletedresourceconsumers: %v\\n\", err)\n}"
  },
  "getarchitectdependencytrackingobject": {
    "operationId": "getarchitectdependencytrackingobject",
    "functionName": "GetArchitectDependencytrackingObject",
    "signature": "GetArchitectDependencytrackingObject(id, version, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType, consumedResourceRequest)",
    "parameters": [
      {
        "name": "id",
        "type": "string",
        "required": "true"
      },
      {
        "name": "version",
        "type": "string",
        "required": "false"
      },
      {
        "name": "objectType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "consumedResources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumingResources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumedResourceType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "consumingResourceType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "consumedResourceRequest",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Dependencyobject",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar id string // Object ID\nvar version string // Object version\nvar objectType string // Object type\nvar consumedResources bool // Include resources this item consumes\nvar consumingResources bool // Include resources that consume this item\nvar consumedResourceType []string // Types of consumed resources to return, if consumed resources are requested\nvar consumingResourceType []string // Types of consuming resources to return, if consuming resources are requested\nvar consumedResourceRequest bool // Indicate that this is going to look up a consumed resource object\n// Get a Dependency Tracking object\ndata, response, err := apiInstance.GetArchitectDependencytrackingObject(id, version, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType, consumedResourceRequest)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectDependencytrackingObject: %v\\n\", err)\n}"
  },
  "getarchitectdependencytrackingtype": {
    "operationId": "getarchitectdependencytrackingtype",
    "functionName": "GetArchitectDependencytrackingType",
    "signature": "GetArchitectDependencytrackingType(typeId)",
    "parameters": [
      {
        "name": "typeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dependencytype",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar typeId string // Type ID\n// Get a Dependency Tracking type.\ndata, response, err := apiInstance.GetArchitectDependencytrackingType(typeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectDependencytrackingType: %v\\n\", err)\n}"
  },
  "getarchitectdependencytrackingtypes": {
    "operationId": "getarchitectdependencytrackingtypes",
    "functionName": "GetArchitectDependencytrackingTypes",
    "signature": "GetArchitectDependencytrackingTypes(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Dependencytypeentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get Dependency Tracking types.\ndata, response, err := apiInstance.GetArchitectDependencytrackingTypes(pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectDependencytrackingTypes: %v\\n\", err)\n}"
  },
  "getarchitectdependencytrackingupdatedresourceconsumers": {
    "operationId": "getarchitectdependencytrackingupdatedresourceconsumers",
    "functionName": "GetArchitectDependencytrackingUpdatedresourceconsumers",
    "signature": "GetArchitectDependencytrackingUpdatedresourceconsumers(name, objectType, consumedResources, consumedResourceType, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "objectType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "consumedResources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumedResourceType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Dependencyobjectentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar name string // Name to search for\nvar objectType []string // Object type(s) to search for\nvar consumedResources bool // Return consumed resources?\nvar consumedResourceType []string // Resource type(s) to return\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get Dependency Tracking objects that depend on updated resources\ndata, response, err := apiInstance.GetArchitectDependencytrackingUpdatedresourceconsumers(name, objectType, consumedResources, consumedResourceType, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectDependencytrackingUpdatedresourceconsumers: %v\\n\", err)\n}"
  },
  "getarchitectemergencygroup": {
    "operationId": "getarchitectemergencygroup",
    "functionName": "GetArchitectEmergencygroup",
    "signature": "GetArchitectEmergencygroup(emergencyGroupId)",
    "parameters": [
      {
        "name": "emergencyGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emergencygroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar emergencyGroupId string // Emergency group ID\n// Gets a emergency group by ID\ndata, response, err := apiInstance.GetArchitectEmergencygroup(emergencyGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectEmergencygroup: %v\\n\", err)\n}"
  },
  "getarchitectemergencygroups": {
    "operationId": "getarchitectemergencygroups",
    "functionName": "GetArchitectEmergencygroups",
    "signature": "GetArchitectEmergencygroups(pageNumber, pageSize, sortBy, sortOrder, name)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Emergencygrouplisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar name string // Name of the Emergency Group to filter by.\n// Get a list of emergency groups.\ndata, response, err := apiInstance.GetArchitectEmergencygroups(pageNumber, pageSize, sortBy, sortOrder, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectEmergencygroups: %v\\n\", err)\n}"
  },
  "getarchitectemergencygroupsdivisionviews": {
    "operationId": "getarchitectemergencygroupsdivisionviews",
    "functionName": "GetArchitectEmergencygroupsDivisionviews",
    "signature": "GetArchitectEmergencygroupsDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Emergencygroupdivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID of the Emergency Groups to filter by.\nvar name string // Name of the Emergency Group to filter by.\nvar divisionId []string // List of divisionIds on which to filter.\n// Get a pageable list of basic emergency group objects filterable by query parameters.\ndata, response, err := apiInstance.GetArchitectEmergencygroupsDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectEmergencygroupsDivisionviews: %v\\n\", err)\n}"
  },
  "getarchitectgrammar": {
    "operationId": "getarchitectgrammar",
    "functionName": "GetArchitectGrammar",
    "signature": "GetArchitectGrammar(grammarId, includeFileUrls)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeFileUrls",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Grammar",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // grammar ID\nvar includeFileUrls bool // Include grammar language file URLs\n// Get a grammar\ndata, response, err := apiInstance.GetArchitectGrammar(grammarId, includeFileUrls)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectGrammar: %v\\n\", err)\n}"
  },
  "getarchitectgrammarlanguage": {
    "operationId": "getarchitectgrammarlanguage",
    "functionName": "GetArchitectGrammarLanguage",
    "signature": "GetArchitectGrammarLanguage(grammarId, languageCode)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Grammarlanguage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // Grammar ID\nvar languageCode string // Language\n// Get a grammar language.\ndata, response, err := apiInstance.GetArchitectGrammarLanguage(grammarId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectGrammarLanguage: %v\\n\", err)\n}"
  },
  "getarchitectgrammars": {
    "operationId": "getarchitectgrammars",
    "functionName": "GetArchitectGrammars",
    "signature": "GetArchitectGrammars(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, includeFileUrls)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeFileUrls",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Grammarlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID\nvar name string // Name\nvar description string // Description\nvar nameOrDescription string // Name or description\nvar includeFileUrls bool // Include grammar language file URLs\n// Get a pageable list of grammars, filtered by query parameters\ndata, response, err := apiInstance.GetArchitectGrammars(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, includeFileUrls)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectGrammars: %v\\n\", err)\n}"
  },
  "getarchitectivr": {
    "operationId": "getarchitectivr",
    "functionName": "GetArchitectIvr",
    "signature": "GetArchitectIvr(ivrId)",
    "parameters": [
      {
        "name": "ivrId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Ivr",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar ivrId string // IVR id\n// Get an IVR config.\ndata, response, err := apiInstance.GetArchitectIvr(ivrId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectIvr: %v\\n\", err)\n}"
  },
  "getarchitectivrs": {
    "operationId": "getarchitectivrs",
    "functionName": "GetArchitectIvrs",
    "signature": "GetArchitectIvrs(pageNumber, pageSize, sortBy, sortOrder, name, dnis, scheduleGroup)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dnis",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scheduleGroup",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Ivrentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar name string // Name of the IVR to filter by.\nvar dnis string // The phone number of the IVR to filter by.\nvar scheduleGroup string // The Schedule Group of the IVR to filter by.\n// Get IVR configs.\ndata, response, err := apiInstance.GetArchitectIvrs(pageNumber, pageSize, sortBy, sortOrder, name, dnis, scheduleGroup)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectIvrs: %v\\n\", err)\n}"
  },
  "getarchitectivrsdivisionviews": {
    "operationId": "getarchitectivrsdivisionviews",
    "functionName": "GetArchitectIvrsDivisionviews",
    "signature": "GetArchitectIvrsDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Ivrdivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID of the IVR to filter by.\nvar name string // Name of the IVR to filter by.\nvar divisionId []string // List of divisionIds on which to filter.\n// Get a pageable list of basic ivr configuration information objects filterable by query parameters.\ndata, response, err := apiInstance.GetArchitectIvrsDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectIvrsDivisionviews: %v\\n\", err)\n}"
  },
  "getarchitectprompt": {
    "operationId": "getarchitectprompt",
    "functionName": "GetArchitectPrompt",
    "signature": "GetArchitectPrompt(promptId)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Prompt",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\n// Get specified user prompt\ndata, response, err := apiInstance.GetArchitectPrompt(promptId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectPrompt: %v\\n\", err)\n}"
  },
  "getarchitectprompthistoryhistoryid": {
    "operationId": "getarchitectprompthistoryhistoryid",
    "functionName": "GetArchitectPromptHistoryHistoryId",
    "signature": "GetArchitectPromptHistoryHistoryId(promptId, historyId, pageNumber, pageSize, sortOrder, sortBy, action)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "historyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "action",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Historylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar historyId string // History request ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortOrder string // Sort order\nvar sortBy string // Sort by\nvar action []string // Flow actions to include (omit to include all)\n// Get generated prompt history\ndata, response, err := apiInstance.GetArchitectPromptHistoryHistoryId(promptId, historyId, pageNumber, pageSize, sortOrder, sortBy, action)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectPromptHistoryHistoryId: %v\\n\", err)\n}"
  },
  "getarchitectpromptresource": {
    "operationId": "getarchitectpromptresource",
    "functionName": "GetArchitectPromptResource",
    "signature": "GetArchitectPromptResource(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Promptasset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar languageCode string // Language\n// Get specified user prompt resource\ndata, response, err := apiInstance.GetArchitectPromptResource(promptId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectPromptResource: %v\\n\", err)\n}"
  },
  "getarchitectpromptresources": {
    "operationId": "getarchitectpromptresources",
    "functionName": "GetArchitectPromptResources",
    "signature": "GetArchitectPromptResources(promptId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Promptassetentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get a pageable list of user prompt resources\ndata, response, err := apiInstance.GetArchitectPromptResources(promptId, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectPromptResources: %v\\n\", err)\n}"
  },
  "getarchitectprompts": {
    "operationId": "getarchitectprompts",
    "functionName": "GetArchitectPrompts",
    "signature": "GetArchitectPrompts(pageNumber, pageSize, name, description, nameOrDescription, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Promptentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar name []string // Name\nvar description string // Description\nvar nameOrDescription string // Name or description\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Get a pageable list of user prompts\ndata, response, err := apiInstance.GetArchitectPrompts(pageNumber, pageSize, name, description, nameOrDescription, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectPrompts: %v\\n\", err)\n}"
  },
  "getarchitectschedule": {
    "operationId": "getarchitectschedule",
    "functionName": "GetArchitectSchedule",
    "signature": "GetArchitectSchedule(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Schedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar scheduleId string // Schedule ID\n// Get a schedule by ID\ndata, response, err := apiInstance.GetArchitectSchedule(scheduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSchedule: %v\\n\", err)\n}"
  },
  "getarchitectschedulegroup": {
    "operationId": "getarchitectschedulegroup",
    "functionName": "GetArchitectSchedulegroup",
    "signature": "GetArchitectSchedulegroup(scheduleGroupId)",
    "parameters": [
      {
        "name": "scheduleGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Schedulegroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar scheduleGroupId string // Schedule group ID\n// Gets a schedule group by ID\ndata, response, err := apiInstance.GetArchitectSchedulegroup(scheduleGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSchedulegroup: %v\\n\", err)\n}"
  },
  "getarchitectschedulegroups": {
    "operationId": "getarchitectschedulegroups",
    "functionName": "GetArchitectSchedulegroups",
    "signature": "GetArchitectSchedulegroups(pageNumber, pageSize, sortBy, sortOrder, name, scheduleIds, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scheduleIds",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Schedulegroupentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar name string // Name of the Schedule Group to filter by.\nvar scheduleIds string // A comma-delimited list of Schedule IDs to filter by.\nvar divisionId []string // List of divisionIds on which to filter.\n// Get a list of schedule groups.\ndata, response, err := apiInstance.GetArchitectSchedulegroups(pageNumber, pageSize, sortBy, sortOrder, name, scheduleIds, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSchedulegroups: %v\\n\", err)\n}"
  },
  "getarchitectschedulegroupsdivisionviews": {
    "operationId": "getarchitectschedulegroupsdivisionviews",
    "functionName": "GetArchitectSchedulegroupsDivisionviews",
    "signature": "GetArchitectSchedulegroupsDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Schedulegroupdivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID of the schedule group to filter by.\nvar name string // Name of the schedule group to filter by.\nvar divisionId []string // List of divisionIds on which to filter.\n// Get a pageable list of basic schedule group configuration information objects filterable by query parameters.\ndata, response, err := apiInstance.GetArchitectSchedulegroupsDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSchedulegroupsDivisionviews: %v\\n\", err)\n}"
  },
  "getarchitectschedules": {
    "operationId": "getarchitectschedules",
    "functionName": "GetArchitectSchedules",
    "signature": "GetArchitectSchedules(pageNumber, pageSize, sortBy, sortOrder, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Scheduleentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar name string // Name of the Schedule to filter by.\nvar divisionId []string // List of divisionIds on which to filter.\n// Get a list of schedules.\ndata, response, err := apiInstance.GetArchitectSchedules(pageNumber, pageSize, sortBy, sortOrder, name, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSchedules: %v\\n\", err)\n}"
  },
  "getarchitectschedulesdivisionviews": {
    "operationId": "getarchitectschedulesdivisionviews",
    "functionName": "GetArchitectSchedulesDivisionviews",
    "signature": "GetArchitectSchedulesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Scheduledivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID of the schedule group to filter by.\nvar name string // Name of the schedule group to filter by.\nvar divisionId []string // List of divisionIds on which to filter.\n// Get a pageable list of basic schedule configuration information objects filterable by query parameters.\ndata, response, err := apiInstance.GetArchitectSchedulesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSchedulesDivisionviews: %v\\n\", err)\n}"
  },
  "getarchitectsystemprompt": {
    "operationId": "getarchitectsystemprompt",
    "functionName": "GetArchitectSystemprompt",
    "signature": "GetArchitectSystemprompt(promptId)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Systemprompt",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // promptId\n// Get a system prompt\ndata, response, err := apiInstance.GetArchitectSystemprompt(promptId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSystemprompt: %v\\n\", err)\n}"
  },
  "getarchitectsystemprompthistoryhistoryid": {
    "operationId": "getarchitectsystemprompthistoryhistoryid",
    "functionName": "GetArchitectSystempromptHistoryHistoryId",
    "signature": "GetArchitectSystempromptHistoryHistoryId(promptId, historyId, pageNumber, pageSize, sortOrder, sortBy, action)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "historyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "action",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Historylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // promptId\nvar historyId string // History request ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortOrder string // Sort order\nvar sortBy string // Sort by\nvar action []string // Flow actions to include (omit to include all)\n// Get generated prompt history\ndata, response, err := apiInstance.GetArchitectSystempromptHistoryHistoryId(promptId, historyId, pageNumber, pageSize, sortOrder, sortBy, action)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSystempromptHistoryHistoryId: %v\\n\", err)\n}"
  },
  "getarchitectsystempromptresource": {
    "operationId": "getarchitectsystempromptresource",
    "functionName": "GetArchitectSystempromptResource",
    "signature": "GetArchitectSystempromptResource(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Systempromptasset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar languageCode string // Language\n// Get a system prompt resource.\ndata, response, err := apiInstance.GetArchitectSystempromptResource(promptId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSystempromptResource: %v\\n\", err)\n}"
  },
  "getarchitectsystempromptresources": {
    "operationId": "getarchitectsystempromptresources",
    "functionName": "GetArchitectSystempromptResources",
    "signature": "GetArchitectSystempromptResources(promptId, pageNumber, pageSize, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Systempromptassetentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Get system prompt resources.\ndata, response, err := apiInstance.GetArchitectSystempromptResources(promptId, pageNumber, pageSize, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSystempromptResources: %v\\n\", err)\n}"
  },
  "getarchitectsystemprompts": {
    "operationId": "getarchitectsystemprompts",
    "functionName": "GetArchitectSystemprompts",
    "signature": "GetArchitectSystemprompts(pageNumber, pageSize, sortBy, sortOrder, name, description, nameOrDescription)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Systempromptentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar name string // Name\nvar description string // Description\nvar nameOrDescription string // Name or description\n// Get System Prompts\ndata, response, err := apiInstance.GetArchitectSystemprompts(pageNumber, pageSize, sortBy, sortOrder, name, description, nameOrDescription)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetArchitectSystemprompts: %v\\n\", err)\n}"
  },
  "getflow": {
    "operationId": "getflow",
    "functionName": "GetFlow",
    "signature": "GetFlow(flowId, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Flow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\nvar deleted bool // Deleted flows\n// Get flow\ndata, response, err := apiInstance.GetFlow(flowId, deleted)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlow: %v\\n\", err)\n}"
  },
  "getflowhistoryhistoryid": {
    "operationId": "getflowhistoryhistoryid",
    "functionName": "GetFlowHistoryHistoryId",
    "signature": "GetFlowHistoryHistoryId(flowId, historyId, pageNumber, pageSize, sortOrder, sortBy, action)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "historyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "action",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Historylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\nvar historyId string // History request ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortOrder string // Sort order\nvar sortBy string // Sort by\nvar action []string // Flow actions to include (omit to include all)\n// Get generated flow history\ndata, response, err := apiInstance.GetFlowHistoryHistoryId(flowId, historyId, pageNumber, pageSize, sortOrder, sortBy, action)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowHistoryHistoryId: %v\\n\", err)\n}"
  },
  "getflowlatestconfiguration": {
    "operationId": "getflowlatestconfiguration",
    "functionName": "GetFlowLatestconfiguration",
    "signature": "GetFlowLatestconfiguration(flowId, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\nvar deleted bool // Deleted flows\n// Get the latest configuration for flow\ndata, response, err := apiInstance.GetFlowLatestconfiguration(flowId, deleted)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowLatestconfiguration: %v\\n\", err)\n}"
  },
  "getflowversion": {
    "operationId": "getflowversion",
    "functionName": "GetFlowVersion",
    "signature": "GetFlowVersion(flowId, versionId, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Flowversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\nvar versionId string // Version ID\nvar deleted string // Deleted flows\n// Get flow version\ndata, response, err := apiInstance.GetFlowVersion(flowId, versionId, deleted)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowVersion: %v\\n\", err)\n}"
  },
  "getflowversionconfiguration": {
    "operationId": "getflowversionconfiguration",
    "functionName": "GetFlowVersionConfiguration",
    "signature": "GetFlowVersionConfiguration(flowId, versionId, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\nvar versionId string // Version ID\nvar deleted string // Deleted flows\n// Create flow version configuration\ndata, response, err := apiInstance.GetFlowVersionConfiguration(flowId, versionId, deleted)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowVersionConfiguration: %v\\n\", err)\n}"
  },
  "getflowversionhealth": {
    "operationId": "getflowversionhealth",
    "functionName": "GetFlowVersionHealth",
    "signature": "GetFlowVersionHealth(flowId, versionId, language)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "language",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Flowhealth",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID.\nvar versionId string // Version ID.\nvar language string // Language to filter for\n// Get overall health scores for all intents present in the NLU domain version associated with the bot flow version.\ndata, response, err := apiInstance.GetFlowVersionHealth(flowId, versionId, language)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowVersionHealth: %v\\n\", err)\n}"
  },
  "getflowversionintenthealth": {
    "operationId": "getflowversionintenthealth",
    "functionName": "GetFlowVersionIntentHealth",
    "signature": "GetFlowVersionIntentHealth(flowId, versionId, intentId, language)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "intentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "language",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flowhealthintent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID.\nvar versionId string // Version ID.\nvar intentId string // Intent ID.\nvar language string // Language to filter for\n// Get health scores and other health metrics for a specific intent. This includes the health metrics for each utterance in an intent.\ndata, response, err := apiInstance.GetFlowVersionIntentHealth(flowId, versionId, intentId, language)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowVersionIntentHealth: %v\\n\", err)\n}"
  },
  "getflowversionintentutterancehealth": {
    "operationId": "getflowversionintentutterancehealth",
    "functionName": "GetFlowVersionIntentUtteranceHealth",
    "signature": "GetFlowVersionIntentUtteranceHealth(flowId, versionId, intentId, utteranceId, language)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "intentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "utteranceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "language",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flowhealthutterance",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID.\nvar versionId string // Version ID.\nvar intentId string // Intent ID.\nvar utteranceId string // Utterance ID.\nvar language string // Language to filter for\n// Get health metrics associated with a specific utterance of an intent.\ndata, response, err := apiInstance.GetFlowVersionIntentUtteranceHealth(flowId, versionId, intentId, utteranceId, language)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowVersionIntentUtteranceHealth: %v\\n\", err)\n}"
  },
  "getflowversions": {
    "operationId": "getflowversions",
    "functionName": "GetFlowVersions",
    "signature": "GetFlowVersions(flowId, pageNumber, pageSize, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "deleted",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Flowversionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar deleted bool // Include Deleted flows\n// Get flow version list\ndata, response, err := apiInstance.GetFlowVersions(flowId, pageNumber, pageSize, deleted)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowVersions: %v\\n\", err)\n}"
  },
  "getflows": {
    "operationId": "getflows",
    "functionName": "GetFlows",
    "signature": "GetFlows(varType, pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, publishVersionId, editableBy, lockedBy, lockedByClientId, secure, deleted, includeSchemas, publishedAfter, publishedBefore, divisionId)",
    "parameters": [
      {
        "name": "varType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishVersionId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "editableBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "lockedBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "lockedByClientId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "string",
        "required": "false"
      },
      {
        "name": "deleted",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeSchemas",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "publishedAfter",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishedBefore",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Flowentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar varType []string // Type\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID\nvar name string // Name\nvar description string // Description\nvar nameOrDescription string // Name or description\nvar publishVersionId string // Publish version ID\nvar editableBy string // Editable by\nvar lockedBy string // Locked by\nvar lockedByClientId string // Locked by client ID\nvar secure string // Secure\nvar deleted bool // Include deleted\nvar includeSchemas bool // Include variable schemas\nvar publishedAfter string // Published after\nvar publishedBefore string // Published before\nvar divisionId []string // division ID(s)\n// Get a pageable list of flows, filtered by query parameters\ndata, response, err := apiInstance.GetFlows(varType, pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, publishVersionId, editableBy, lockedBy, lockedByClientId, secure, deleted, includeSchemas, publishedAfter, publishedBefore, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlows: %v\\n\", err)\n}"
  },
  "getflowsdatatable": {
    "operationId": "getflowsdatatable",
    "functionName": "GetFlowsDatatable",
    "signature": "GetFlowsDatatable(datatableId, expand)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Datatable",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar expand string // Expand instructions for the result\n// Returns a specific datatable by id\ndata, response, err := apiInstance.GetFlowsDatatable(datatableId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDatatable: %v\\n\", err)\n}"
  },
  "getflowsdatatableexportjob": {
    "operationId": "getflowsdatatableexportjob",
    "functionName": "GetFlowsDatatableExportJob",
    "signature": "GetFlowsDatatableExportJob(datatableId, exportJobId)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "exportJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Datatableexportjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar exportJobId string // id of export job\n// Returns the state information about an export job\ndata, response, err := apiInstance.GetFlowsDatatableExportJob(datatableId, exportJobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDatatableExportJob: %v\\n\", err)\n}"
  },
  "getflowsdatatableimportjob": {
    "operationId": "getflowsdatatableimportjob",
    "functionName": "GetFlowsDatatableImportJob",
    "signature": "GetFlowsDatatableImportJob(datatableId, importJobId)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Datatableimportjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar importJobId string // id of import job\n// Returns the state information about an import job\ndata, response, err := apiInstance.GetFlowsDatatableImportJob(datatableId, importJobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDatatableImportJob: %v\\n\", err)\n}"
  },
  "getflowsdatatableimportjobs": {
    "operationId": "getflowsdatatableimportjobs",
    "functionName": "GetFlowsDatatableImportJobs",
    "signature": "GetFlowsDatatableImportJobs(datatableId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Datatableimportentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get all recent import jobs\ndata, response, err := apiInstance.GetFlowsDatatableImportJobs(datatableId, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDatatableImportJobs: %v\\n\", err)\n}"
  },
  "getflowsdatatablerow": {
    "operationId": "getflowsdatatablerow",
    "functionName": "GetFlowsDatatableRow",
    "signature": "GetFlowsDatatableRow(datatableId, rowId, showbrief)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "showbrief",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "map[string]interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar rowId string // The key for the row\nvar showbrief bool // if true returns just the key field for the row\n// Returns a specific row for the datatable\ndata, response, err := apiInstance.GetFlowsDatatableRow(datatableId, rowId, showbrief)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDatatableRow: %v\\n\", err)\n}"
  },
  "getflowsdatatablerows": {
    "operationId": "getflowsdatatablerows",
    "functionName": "GetFlowsDatatableRows",
    "signature": "GetFlowsDatatableRows(datatableId, pageNumber, pageSize, showbrief, sortOrder)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "showbrief",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Datatablerowentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar showbrief bool // If true returns just the key value of the row\nvar sortOrder string // Sort order\n// Returns the rows for the datatable with the given id\ndata, response, err := apiInstance.GetFlowsDatatableRows(datatableId, pageNumber, pageSize, showbrief, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDatatableRows: %v\\n\", err)\n}"
  },
  "getflowsdatatables": {
    "operationId": "getflowsdatatables",
    "functionName": "GetFlowsDatatables",
    "signature": "GetFlowsDatatables(expand, pageNumber, pageSize, sortBy, sortOrder, divisionId, name)",
    "parameters": [
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Datatablesdomainentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar expand string // Expand instructions for the result\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar divisionId []string // division ID(s)\nvar name string // Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive.\n// Retrieve a list of datatables for the org\ndata, response, err := apiInstance.GetFlowsDatatables(expand, pageNumber, pageSize, sortBy, sortOrder, divisionId, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDatatables: %v\\n\", err)\n}"
  },
  "getflowsdatatablesdivisionview": {
    "operationId": "getflowsdatatablesdivisionview",
    "functionName": "GetFlowsDatatablesDivisionview",
    "signature": "GetFlowsDatatablesDivisionview(datatableId, expand)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Datatable",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar expand string // Expand instructions for the result\n// Returns a specific datatable by id\ndata, response, err := apiInstance.GetFlowsDatatablesDivisionview(datatableId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDatatablesDivisionview: %v\\n\", err)\n}"
  },
  "getflowsdatatablesdivisionviews": {
    "operationId": "getflowsdatatablesdivisionviews",
    "functionName": "GetFlowsDatatablesDivisionviews",
    "signature": "GetFlowsDatatablesDivisionviews(expand, pageNumber, pageSize, sortBy, sortOrder, divisionId, name)",
    "parameters": [
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Datatablesdomainentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar expand string // Expand instructions for the result\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar divisionId []string // division ID(s)\nvar name string // Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive.\n// Retrieve a list of datatables for the org\ndata, response, err := apiInstance.GetFlowsDatatablesDivisionviews(expand, pageNumber, pageSize, sortBy, sortOrder, divisionId, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDatatablesDivisionviews: %v\\n\", err)\n}"
  },
  "getflowsdivisionviews": {
    "operationId": "getflowsdivisionviews",
    "functionName": "GetFlowsDivisionviews",
    "signature": "GetFlowsDivisionviews(varType, pageNumber, pageSize, sortBy, sortOrder, id, name, publishVersionId, publishedAfter, publishedBefore, divisionId, includeSchemas)",
    "parameters": [
      {
        "name": "varType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishVersionId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishedAfter",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishedBefore",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "includeSchemas",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Flowdivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar varType []string // Type\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID\nvar name string // Name\nvar publishVersionId string // Publish version ID\nvar publishedAfter string // Published after\nvar publishedBefore string // Published before\nvar divisionId []string // division ID(s)\nvar includeSchemas bool // Include variable schemas\n// Get a pageable list of basic flow information objects filterable by query parameters.\ndata, response, err := apiInstance.GetFlowsDivisionviews(varType, pageNumber, pageSize, sortBy, sortOrder, id, name, publishVersionId, publishedAfter, publishedBefore, divisionId, includeSchemas)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsDivisionviews: %v\\n\", err)\n}"
  },
  "getflowsexecution": {
    "operationId": "getflowsexecution",
    "functionName": "GetFlowsExecution",
    "signature": "GetFlowsExecution(flowExecutionId)",
    "parameters": [
      {
        "name": "flowExecutionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flowruntimeexecution",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowExecutionId string // flow execution ID\n// Get a flow execution's details. Flow execution details are available for several days after the flow is started.\ndata, response, err := apiInstance.GetFlowsExecution(flowExecutionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsExecution: %v\\n\", err)\n}"
  },
  "getflowsinstance": {
    "operationId": "getflowsinstance",
    "functionName": "GetFlowsInstance",
    "signature": "GetFlowsInstance(instanceId, expand)",
    "parameters": [
      {
        "name": "instanceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Getflowexecutiondatajobresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar instanceId string // Instance ID\nvar expand string // Expand various details.\n// Start a process (job) to prepare a download of a singular flow execution data instance by Id\ndata, response, err := apiInstance.GetFlowsInstance(instanceId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsInstance: %v\\n\", err)\n}"
  },
  "getflowsinstancesjob": {
    "operationId": "getflowsinstancesjob",
    "functionName": "GetFlowsInstancesJob",
    "signature": "GetFlowsInstancesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Getflowexecutiondatajobresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar jobId string // The asynchronous job ID\n// Get the status and/or results of an asynchronous flow execution data retrieval job\ndata, response, err := apiInstance.GetFlowsInstancesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsInstancesJob: %v\\n\", err)\n}"
  },
  "getflowsinstancesquerycapabilities": {
    "operationId": "getflowsinstancesquerycapabilities",
    "functionName": "GetFlowsInstancesQuerycapabilities",
    "signature": "GetFlowsInstancesQuerycapabilities(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Flowsquerycriteriaresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar expand string // Expand various query types.\n// Retrieve a list of capabilities that the org can use to query for execution data\ndata, response, err := apiInstance.GetFlowsInstancesQuerycapabilities(expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsInstancesQuerycapabilities: %v\\n\", err)\n}"
  },
  "getflowsjob": {
    "operationId": "getflowsjob",
    "functionName": "GetFlowsJob",
    "signature": "GetFlowsJob(jobId, expand)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Architectjobstateresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar jobId string // Job ID\nvar expand []string // Which fields, if any, to expand.\n// Fetch Architect Job Status\ndata, response, err := apiInstance.GetFlowsJob(jobId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsJob: %v\\n\", err)\n}"
  },
  "getflowsmilestone": {
    "operationId": "getflowsmilestone",
    "functionName": "GetFlowsMilestone",
    "signature": "GetFlowsMilestone(milestoneId)",
    "parameters": [
      {
        "name": "milestoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flowmilestone",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar milestoneId string // flow milestone ID\n// Get a flow milestone\ndata, response, err := apiInstance.GetFlowsMilestone(milestoneId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsMilestone: %v\\n\", err)\n}"
  },
  "getflowsmilestones": {
    "operationId": "getflowsmilestones",
    "functionName": "GetFlowsMilestones",
    "signature": "GetFlowsMilestones(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Flowmilestonelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID\nvar name string // Name\nvar description string // Description\nvar nameOrDescription string // Name or description\nvar divisionId []string // division ID(s)\n// Get a pageable list of flow milestones, filtered by query parameters\ndata, response, err := apiInstance.GetFlowsMilestones(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsMilestones: %v\\n\", err)\n}"
  },
  "getflowsmilestonesdivisionviews": {
    "operationId": "getflowsmilestonesdivisionviews",
    "functionName": "GetFlowsMilestonesDivisionviews",
    "signature": "GetFlowsMilestonesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Flowmilestonedivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID\nvar name string // Name\nvar divisionId []string // division ID(s)\n// Get a pageable list of basic flow milestone information objects filterable by query parameters.\ndata, response, err := apiInstance.GetFlowsMilestonesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsMilestonesDivisionviews: %v\\n\", err)\n}"
  },
  "getflowsoutcome": {
    "operationId": "getflowsoutcome",
    "functionName": "GetFlowsOutcome",
    "signature": "GetFlowsOutcome(flowOutcomeId)",
    "parameters": [
      {
        "name": "flowOutcomeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flowoutcome",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowOutcomeId string // flow outcome ID\n// Get a flow outcome\ndata, response, err := apiInstance.GetFlowsOutcome(flowOutcomeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsOutcome: %v\\n\", err)\n}"
  },
  "getflowsoutcomes": {
    "operationId": "getflowsoutcomes",
    "functionName": "GetFlowsOutcomes",
    "signature": "GetFlowsOutcomes(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Flowoutcomelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID\nvar name string // Name\nvar description string // Description\nvar nameOrDescription string // Name or description\nvar divisionId []string // division ID(s)\n// Get a pageable list of flow outcomes, filtered by query parameters\ndata, response, err := apiInstance.GetFlowsOutcomes(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsOutcomes: %v\\n\", err)\n}"
  },
  "getflowsoutcomesdivisionviews": {
    "operationId": "getflowsoutcomesdivisionviews",
    "functionName": "GetFlowsOutcomesDivisionviews",
    "signature": "GetFlowsOutcomesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Flowoutcomedivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID\nvar name string // Name\nvar divisionId []string // division ID(s)\n// Get a pageable list of basic flow outcome information objects filterable by query parameters.\ndata, response, err := apiInstance.GetFlowsOutcomesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFlowsOutcomesDivisionviews: %v\\n\", err)\n}"
  },
  "patcharchitectgrammar": {
    "operationId": "patcharchitectgrammar",
    "functionName": "PatchArchitectGrammar",
    "signature": "PatchArchitectGrammar(grammarId, body)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Grammar",
        "required": "false"
      }
    ],
    "return": "Grammar",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // grammar ID\nvar body platformclientv2.Grammar // \n// Updates a grammar\ndata, response, err := apiInstance.PatchArchitectGrammar(grammarId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchArchitectGrammar: %v\\n\", err)\n}"
  },
  "patcharchitectgrammarlanguage": {
    "operationId": "patcharchitectgrammarlanguage",
    "functionName": "PatchArchitectGrammarLanguage",
    "signature": "PatchArchitectGrammarLanguage(grammarId, languageCode, body)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Grammarlanguageupdate",
        "required": "false"
      }
    ],
    "return": "Grammarlanguage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // Grammar ID\nvar languageCode string // Language\nvar body platformclientv2.Grammarlanguageupdate // \n// Updates a grammar language\ndata, response, err := apiInstance.PatchArchitectGrammarLanguage(grammarId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchArchitectGrammarLanguage: %v\\n\", err)\n}"
  },
  "postarchitectdependencytrackingbuild": {
    "operationId": "postarchitectdependencytrackingbuild",
    "functionName": "PostArchitectDependencytrackingBuild",
    "signature": "PostArchitectDependencytrackingBuild()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\n// Rebuild Dependency Tracking data for an organization\nresponse, err := apiInstance.PostArchitectDependencytrackingBuild()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectDependencytrackingBuild: %v\\n\", err)\n}"
  },
  "postarchitectemergencygroups": {
    "operationId": "postarchitectemergencygroups",
    "functionName": "PostArchitectEmergencygroups",
    "signature": "PostArchitectEmergencygroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Emergencygroup",
        "required": "true"
      }
    ],
    "return": "Emergencygroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Emergencygroup // \n// Creates a new emergency group\ndata, response, err := apiInstance.PostArchitectEmergencygroups(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectEmergencygroups: %v\\n\", err)\n}"
  },
  "postarchitectgrammarlanguagefilesdtmf": {
    "operationId": "postarchitectgrammarlanguagefilesdtmf",
    "functionName": "PostArchitectGrammarLanguageFilesDtmf",
    "signature": "PostArchitectGrammarLanguageFilesDtmf(grammarId, languageCode, body)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Grammarfileuploadrequest",
        "required": "true"
      }
    ],
    "return": "Uploadurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // Grammar ID\nvar languageCode string // Language\nvar body platformclientv2.Grammarfileuploadrequest // query\n// Creates a presigned URL for uploading a grammar DTMF mode file\ndata, response, err := apiInstance.PostArchitectGrammarLanguageFilesDtmf(grammarId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectGrammarLanguageFilesDtmf: %v\\n\", err)\n}"
  },
  "postarchitectgrammarlanguagefilesvoice": {
    "operationId": "postarchitectgrammarlanguagefilesvoice",
    "functionName": "PostArchitectGrammarLanguageFilesVoice",
    "signature": "PostArchitectGrammarLanguageFilesVoice(grammarId, languageCode, body)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Grammarfileuploadrequest",
        "required": "true"
      }
    ],
    "return": "Uploadurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // Grammar ID\nvar languageCode string // Language\nvar body platformclientv2.Grammarfileuploadrequest // query\n// Creates a presigned URL for uploading a grammar voice mode file\ndata, response, err := apiInstance.PostArchitectGrammarLanguageFilesVoice(grammarId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectGrammarLanguageFilesVoice: %v\\n\", err)\n}"
  },
  "postarchitectgrammarlanguages": {
    "operationId": "postarchitectgrammarlanguages",
    "functionName": "PostArchitectGrammarLanguages",
    "signature": "PostArchitectGrammarLanguages(grammarId, body)",
    "parameters": [
      {
        "name": "grammarId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Grammarlanguage",
        "required": "true"
      }
    ],
    "return": "Grammarlanguage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar grammarId string // Grammar ID\nvar body platformclientv2.Grammarlanguage // \n// Create a new language for a given grammar\ndata, response, err := apiInstance.PostArchitectGrammarLanguages(grammarId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectGrammarLanguages: %v\\n\", err)\n}"
  },
  "postarchitectgrammars": {
    "operationId": "postarchitectgrammars",
    "functionName": "PostArchitectGrammars",
    "signature": "PostArchitectGrammars(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Grammar",
        "required": "true"
      }
    ],
    "return": "Grammar",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Grammar // \n// Create a new grammar\ndata, response, err := apiInstance.PostArchitectGrammars(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectGrammars: %v\\n\", err)\n}"
  },
  "postarchitectivrs": {
    "operationId": "postarchitectivrs",
    "functionName": "PostArchitectIvrs",
    "signature": "PostArchitectIvrs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Ivr",
        "required": "true"
      }
    ],
    "return": "Ivr",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Ivr // \n// Create IVR config.\ndata, response, err := apiInstance.PostArchitectIvrs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectIvrs: %v\\n\", err)\n}"
  },
  "postarchitectprompthistory": {
    "operationId": "postarchitectprompthistory",
    "functionName": "PostArchitectPromptHistory",
    "signature": "PostArchitectPromptHistory(promptId)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\n// Generate prompt history\ndata, response, err := apiInstance.PostArchitectPromptHistory(promptId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectPromptHistory: %v\\n\", err)\n}"
  },
  "postarchitectpromptresources": {
    "operationId": "postarchitectpromptresources",
    "functionName": "PostArchitectPromptResources",
    "signature": "PostArchitectPromptResources(promptId, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Promptassetcreate",
        "required": "true"
      }
    ],
    "return": "Promptasset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar body platformclientv2.Promptassetcreate // \n// Create a new user prompt resource\ndata, response, err := apiInstance.PostArchitectPromptResources(promptId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectPromptResources: %v\\n\", err)\n}"
  },
  "postarchitectprompts": {
    "operationId": "postarchitectprompts",
    "functionName": "PostArchitectPrompts",
    "signature": "PostArchitectPrompts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Prompt",
        "required": "true"
      }
    ],
    "return": "Prompt",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Prompt // \n// Create a new user prompt\ndata, response, err := apiInstance.PostArchitectPrompts(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectPrompts: %v\\n\", err)\n}"
  },
  "postarchitectschedulegroups": {
    "operationId": "postarchitectschedulegroups",
    "functionName": "PostArchitectSchedulegroups",
    "signature": "PostArchitectSchedulegroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Schedulegroup",
        "required": "true"
      }
    ],
    "return": "Schedulegroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Schedulegroup // \n// Creates a new schedule group\ndata, response, err := apiInstance.PostArchitectSchedulegroups(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectSchedulegroups: %v\\n\", err)\n}"
  },
  "postarchitectschedules": {
    "operationId": "postarchitectschedules",
    "functionName": "PostArchitectSchedules",
    "signature": "PostArchitectSchedules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Schedule",
        "required": "true"
      }
    ],
    "return": "Schedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Schedule // \n// Create a new schedule.\ndata, response, err := apiInstance.PostArchitectSchedules(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectSchedules: %v\\n\", err)\n}"
  },
  "postarchitectsystemprompthistory": {
    "operationId": "postarchitectsystemprompthistory",
    "functionName": "PostArchitectSystempromptHistory",
    "signature": "PostArchitectSystempromptHistory(promptId)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // promptId\n// Generate system prompt history\ndata, response, err := apiInstance.PostArchitectSystempromptHistory(promptId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectSystempromptHistory: %v\\n\", err)\n}"
  },
  "postarchitectsystempromptresources": {
    "operationId": "postarchitectsystempromptresources",
    "functionName": "PostArchitectSystempromptResources",
    "signature": "PostArchitectSystempromptResources(promptId, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Systempromptasset",
        "required": "true"
      }
    ],
    "return": "Systempromptasset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar body platformclientv2.Systempromptasset // \n// Create system prompt resource override.\ndata, response, err := apiInstance.PostArchitectSystempromptResources(promptId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostArchitectSystempromptResources: %v\\n\", err)\n}"
  },
  "postflowhistory": {
    "operationId": "postflowhistory",
    "functionName": "PostFlowHistory",
    "signature": "PostFlowHistory(flowId)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\n// Generate flow history\ndata, response, err := apiInstance.PostFlowHistory(flowId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowHistory: %v\\n\", err)\n}"
  },
  "postflowversions": {
    "operationId": "postflowversions",
    "functionName": "PostFlowVersions",
    "signature": "PostFlowVersions(flowId, body)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "interface{}",
        "required": "true"
      }
    ],
    "return": "Flowversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\nvar body platformclientv2.interface{} // \n// Create flow version\ndata, response, err := apiInstance.PostFlowVersions(flowId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowVersions: %v\\n\", err)\n}"
  },
  "postflows": {
    "operationId": "postflows",
    "functionName": "PostFlows",
    "signature": "PostFlows(body, language)",
    "parameters": [
      {
        "name": "body",
        "type": "Flow",
        "required": "true"
      },
      {
        "name": "language",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Flow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Flow // \nvar language string // Language\n// Create flow\ndata, response, err := apiInstance.PostFlows(body, language)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlows: %v\\n\", err)\n}"
  },
  "postflowsactionscheckin": {
    "operationId": "postflowsactionscheckin",
    "functionName": "PostFlowsActionsCheckin",
    "signature": "PostFlowsActionsCheckin(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flow string // Flow ID\n// Check-in flow\ndata, response, err := apiInstance.PostFlowsActionsCheckin(flow)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsActionsCheckin: %v\\n\", err)\n}"
  },
  "postflowsactionscheckout": {
    "operationId": "postflowsactionscheckout",
    "functionName": "PostFlowsActionsCheckout",
    "signature": "PostFlowsActionsCheckout(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flow string // Flow ID\n// Check-out flow\ndata, response, err := apiInstance.PostFlowsActionsCheckout(flow)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsActionsCheckout: %v\\n\", err)\n}"
  },
  "postflowsactionsdeactivate": {
    "operationId": "postflowsactionsdeactivate",
    "functionName": "PostFlowsActionsDeactivate",
    "signature": "PostFlowsActionsDeactivate(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flow string // Flow ID\n// Deactivate flow\ndata, response, err := apiInstance.PostFlowsActionsDeactivate(flow)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsActionsDeactivate: %v\\n\", err)\n}"
  },
  "postflowsactionspublish": {
    "operationId": "postflowsactionspublish",
    "functionName": "PostFlowsActionsPublish",
    "signature": "PostFlowsActionsPublish(flow, version)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      },
      {
        "name": "version",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Operation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flow string // Flow ID\nvar version string // version\n// Publish flow\ndata, response, err := apiInstance.PostFlowsActionsPublish(flow, version)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsActionsPublish: %v\\n\", err)\n}"
  },
  "postflowsactionsrevert": {
    "operationId": "postflowsactionsrevert",
    "functionName": "PostFlowsActionsRevert",
    "signature": "PostFlowsActionsRevert(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flow string // Flow ID\n// Revert flow\ndata, response, err := apiInstance.PostFlowsActionsRevert(flow)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsActionsRevert: %v\\n\", err)\n}"
  },
  "postflowsactionsunlock": {
    "operationId": "postflowsactionsunlock",
    "functionName": "PostFlowsActionsUnlock",
    "signature": "PostFlowsActionsUnlock(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flow string // Flow ID\n// Unlock flow\ndata, response, err := apiInstance.PostFlowsActionsUnlock(flow)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsActionsUnlock: %v\\n\", err)\n}"
  },
  "postflowsdatatableexportjobs": {
    "operationId": "postflowsdatatableexportjobs",
    "functionName": "PostFlowsDatatableExportJobs",
    "signature": "PostFlowsDatatableExportJobs(datatableId)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Datatableexportjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\n// Begin an export process for exporting all rows from a datatable\ndata, response, err := apiInstance.PostFlowsDatatableExportJobs(datatableId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsDatatableExportJobs: %v\\n\", err)\n}"
  },
  "postflowsdatatableimportjobs": {
    "operationId": "postflowsdatatableimportjobs",
    "functionName": "PostFlowsDatatableImportJobs",
    "signature": "PostFlowsDatatableImportJobs(datatableId, body)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Datatableimportjob",
        "required": "true"
      }
    ],
    "return": "Datatableimportjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar body platformclientv2.Datatableimportjob // import job information\n// Begin an import process for importing rows into a datatable\ndata, response, err := apiInstance.PostFlowsDatatableImportJobs(datatableId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsDatatableImportJobs: %v\\n\", err)\n}"
  },
  "postflowsdatatablerows": {
    "operationId": "postflowsdatatablerows",
    "functionName": "PostFlowsDatatableRows",
    "signature": "PostFlowsDatatableRows(datatableId, dataTableRow)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "dataTableRow",
        "type": "map[string]interface{}",
        "required": "true"
      }
    ],
    "return": "map[string]interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar dataTableRow platformclientv2.map[string]interface{} // \n// Create a new row entry for the datatable.\ndata, response, err := apiInstance.PostFlowsDatatableRows(datatableId, dataTableRow)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsDatatableRows: %v\\n\", err)\n}"
  },
  "postflowsdatatables": {
    "operationId": "postflowsdatatables",
    "functionName": "PostFlowsDatatables",
    "signature": "PostFlowsDatatables(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Datatable",
        "required": "true"
      }
    ],
    "return": "Datatable",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Datatable // datatable json-schema\n// Create a new datatable with the specified json-schema definition\ndata, response, err := apiInstance.PostFlowsDatatables(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsDatatables: %v\\n\", err)\n}"
  },
  "postflowsexecutions": {
    "operationId": "postflowsexecutions",
    "functionName": "PostFlowsExecutions",
    "signature": "PostFlowsExecutions(flowLaunchRequest)",
    "parameters": [
      {
        "name": "flowLaunchRequest",
        "type": "Flowexecutionlaunchrequest",
        "required": "true"
      }
    ],
    "return": "Flowexecutionlaunchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowLaunchRequest platformclientv2.Flowexecutionlaunchrequest // \n// Launch an instance of a flow definition, for flow types that support it such as the 'workflow' type.\ndata, response, err := apiInstance.PostFlowsExecutions(flowLaunchRequest)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsExecutions: %v\\n\", err)\n}"
  },
  "postflowsinstancesjobs": {
    "operationId": "postflowsinstancesjobs",
    "functionName": "PostFlowsInstancesJobs",
    "signature": "PostFlowsInstancesJobs(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "Executiondatarequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Getflowexecutiondatajobresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Executiondatarequest // Requested Flow Ids\nvar expand string // Expand various query types.\n// Start a process (job) that will prepare a list of execution data IDs for download.\ndata, response, err := apiInstance.PostFlowsInstancesJobs(body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsInstancesJobs: %v\\n\", err)\n}"
  },
  "postflowsinstancesquery": {
    "operationId": "postflowsinstancesquery",
    "functionName": "PostFlowsInstancesQuery",
    "signature": "PostFlowsInstancesQuery(body, indexOnly)",
    "parameters": [
      {
        "name": "body",
        "type": "Criteriaquery",
        "required": "true"
      },
      {
        "name": "indexOnly",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Flowresultentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Criteriaquery // query\nvar indexOnly bool // indexes only\n// Query the database of existing flow histories to look for particular flow criteria\ndata, response, err := apiInstance.PostFlowsInstancesQuery(body, indexOnly)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsInstancesQuery: %v\\n\", err)\n}"
  },
  "postflowsjobs": {
    "operationId": "postflowsjobs",
    "functionName": "PostFlowsJobs",
    "signature": "PostFlowsJobs()",
    "return": "Registerarchitectjobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\n// Register Architect Job. Returns a URL where a file, such as an Architect flow YAML file, can be PUT which will then initiate the job.\ndata, response, err := apiInstance.PostFlowsJobs()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsJobs: %v\\n\", err)\n}"
  },
  "postflowsmilestones": {
    "operationId": "postflowsmilestones",
    "functionName": "PostFlowsMilestones",
    "signature": "PostFlowsMilestones(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Flowmilestone",
        "required": "false"
      }
    ],
    "return": "Flowmilestone",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Flowmilestone // \n// Create a flow milestone\ndata, response, err := apiInstance.PostFlowsMilestones(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsMilestones: %v\\n\", err)\n}"
  },
  "postflowsoutcomes": {
    "operationId": "postflowsoutcomes",
    "functionName": "PostFlowsOutcomes",
    "signature": "PostFlowsOutcomes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Flowoutcome",
        "required": "false"
      }
    ],
    "return": "Flowoutcome",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar body platformclientv2.Flowoutcome // \n// Create a flow outcome\ndata, response, err := apiInstance.PostFlowsOutcomes(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostFlowsOutcomes: %v\\n\", err)\n}"
  },
  "putarchitectemergencygroup": {
    "operationId": "putarchitectemergencygroup",
    "functionName": "PutArchitectEmergencygroup",
    "signature": "PutArchitectEmergencygroup(emergencyGroupId, body)",
    "parameters": [
      {
        "name": "emergencyGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Emergencygroup",
        "required": "true"
      }
    ],
    "return": "Emergencygroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar emergencyGroupId string // Emergency group ID\nvar body platformclientv2.Emergencygroup // \n// Updates a emergency group by ID\ndata, response, err := apiInstance.PutArchitectEmergencygroup(emergencyGroupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutArchitectEmergencygroup: %v\\n\", err)\n}"
  },
  "putarchitectivr": {
    "operationId": "putarchitectivr",
    "functionName": "PutArchitectIvr",
    "signature": "PutArchitectIvr(ivrId, body)",
    "parameters": [
      {
        "name": "ivrId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Ivr",
        "required": "true"
      }
    ],
    "return": "Ivr",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar ivrId string // IVR id\nvar body platformclientv2.Ivr // \n// Update an IVR Config.\ndata, response, err := apiInstance.PutArchitectIvr(ivrId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutArchitectIvr: %v\\n\", err)\n}"
  },
  "putarchitectprompt": {
    "operationId": "putarchitectprompt",
    "functionName": "PutArchitectPrompt",
    "signature": "PutArchitectPrompt(promptId, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Prompt",
        "required": "true"
      }
    ],
    "return": "Prompt",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar body platformclientv2.Prompt // \n// Update specified user prompt\ndata, response, err := apiInstance.PutArchitectPrompt(promptId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutArchitectPrompt: %v\\n\", err)\n}"
  },
  "putarchitectpromptresource": {
    "operationId": "putarchitectpromptresource",
    "functionName": "PutArchitectPromptResource",
    "signature": "PutArchitectPromptResource(promptId, languageCode, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Promptasset",
        "required": "true"
      }
    ],
    "return": "Promptasset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar languageCode string // Language\nvar body platformclientv2.Promptasset // \n// Update specified user prompt resource\ndata, response, err := apiInstance.PutArchitectPromptResource(promptId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutArchitectPromptResource: %v\\n\", err)\n}"
  },
  "putarchitectschedule": {
    "operationId": "putarchitectschedule",
    "functionName": "PutArchitectSchedule",
    "signature": "PutArchitectSchedule(scheduleId, body)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Schedule",
        "required": "true"
      }
    ],
    "return": "Schedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar scheduleId string // Schedule ID\nvar body platformclientv2.Schedule // \n// Update schedule by ID\ndata, response, err := apiInstance.PutArchitectSchedule(scheduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutArchitectSchedule: %v\\n\", err)\n}"
  },
  "putarchitectschedulegroup": {
    "operationId": "putarchitectschedulegroup",
    "functionName": "PutArchitectSchedulegroup",
    "signature": "PutArchitectSchedulegroup(scheduleGroupId, body)",
    "parameters": [
      {
        "name": "scheduleGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Schedulegroup",
        "required": "true"
      }
    ],
    "return": "Schedulegroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar scheduleGroupId string // Schedule group ID\nvar body platformclientv2.Schedulegroup // \n// Updates a schedule group by ID\ndata, response, err := apiInstance.PutArchitectSchedulegroup(scheduleGroupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutArchitectSchedulegroup: %v\\n\", err)\n}"
  },
  "putarchitectsystempromptresource": {
    "operationId": "putarchitectsystempromptresource",
    "functionName": "PutArchitectSystempromptResource",
    "signature": "PutArchitectSystempromptResource(promptId, languageCode, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Systempromptasset",
        "required": "true"
      }
    ],
    "return": "Systempromptasset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar promptId string // Prompt ID\nvar languageCode string // Language\nvar body platformclientv2.Systempromptasset // \n// Updates a system prompt resource override.\ndata, response, err := apiInstance.PutArchitectSystempromptResource(promptId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutArchitectSystempromptResource: %v\\n\", err)\n}"
  },
  "putflow": {
    "operationId": "putflow",
    "functionName": "PutFlow",
    "signature": "PutFlow(flowId, body)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Flow",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowId string // Flow ID\nvar body platformclientv2.Flow // \n// Update flow\ndata, response, err := apiInstance.PutFlow(flowId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutFlow: %v\\n\", err)\n}"
  },
  "putflowsdatatable": {
    "operationId": "putflowsdatatable",
    "functionName": "PutFlowsDatatable",
    "signature": "PutFlowsDatatable(datatableId, body, expand)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Datatable",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Datatable",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar body platformclientv2.Datatable // datatable json-schema\nvar expand string // Expand instructions for the result\n// Updates a specific datatable by id\ndata, response, err := apiInstance.PutFlowsDatatable(datatableId, body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutFlowsDatatable: %v\\n\", err)\n}"
  },
  "putflowsdatatablerow": {
    "operationId": "putflowsdatatablerow",
    "functionName": "PutFlowsDatatableRow",
    "signature": "PutFlowsDatatableRow(datatableId, rowId, body)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "interface{}",
        "required": "false"
      }
    ],
    "return": "map[string]interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar datatableId string // id of datatable\nvar rowId string // the key for the row\nvar body platformclientv2.interface{} // datatable row\n// Update a row entry\ndata, response, err := apiInstance.PutFlowsDatatableRow(datatableId, rowId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutFlowsDatatableRow: %v\\n\", err)\n}"
  },
  "putflowsmilestone": {
    "operationId": "putflowsmilestone",
    "functionName": "PutFlowsMilestone",
    "signature": "PutFlowsMilestone(milestoneId, body)",
    "parameters": [
      {
        "name": "milestoneId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Flowmilestone",
        "required": "false"
      }
    ],
    "return": "Flowmilestone",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar milestoneId string // flow milestone ID\nvar body platformclientv2.Flowmilestone // \n// Updates a flow milestone\ndata, response, err := apiInstance.PutFlowsMilestone(milestoneId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutFlowsMilestone: %v\\n\", err)\n}"
  },
  "putflowsoutcome": {
    "operationId": "putflowsoutcome",
    "functionName": "PutFlowsOutcome",
    "signature": "PutFlowsOutcome(flowOutcomeId, body)",
    "parameters": [
      {
        "name": "flowOutcomeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Flowoutcome",
        "required": "false"
      }
    ],
    "return": "Operation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewArchitectApiWithConfig(config)\n\nvar flowOutcomeId string // flow outcome ID\nvar body platformclientv2.Flowoutcome // \n// Updates a flow outcome\ndata, response, err := apiInstance.PutFlowsOutcome(flowOutcomeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutFlowsOutcome: %v\\n\", err)\n}"
  },
  "getauditsqueryrealtimeservicemapping": {
    "operationId": "getauditsqueryrealtimeservicemapping",
    "functionName": "GetAuditsQueryRealtimeServicemapping",
    "signature": "GetAuditsQueryRealtimeServicemapping()",
    "return": "Auditqueryservicemapping",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuditApiWithConfig(config)\n\n// Get service mapping information used in realtime audits.\ndata, response, err := apiInstance.GetAuditsQueryRealtimeServicemapping()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuditsQueryRealtimeServicemapping: %v\\n\", err)\n}"
  },
  "getauditsqueryservicemapping": {
    "operationId": "getauditsqueryservicemapping",
    "functionName": "GetAuditsQueryServicemapping",
    "signature": "GetAuditsQueryServicemapping()",
    "return": "Auditqueryservicemapping",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuditApiWithConfig(config)\n\n// Get service mapping information used in audits.\ndata, response, err := apiInstance.GetAuditsQueryServicemapping()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuditsQueryServicemapping: %v\\n\", err)\n}"
  },
  "getauditsquerytransactionid": {
    "operationId": "getauditsquerytransactionid",
    "functionName": "GetAuditsQueryTransactionId",
    "signature": "GetAuditsQueryTransactionId(transactionId)",
    "parameters": [
      {
        "name": "transactionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Auditqueryexecutionstatusresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuditApiWithConfig(config)\n\nvar transactionId string // Transaction ID\n// Get status of audit query execution\ndata, response, err := apiInstance.GetAuditsQueryTransactionId(transactionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuditsQueryTransactionId: %v\\n\", err)\n}"
  },
  "getauditsquerytransactionidresults": {
    "operationId": "getauditsquerytransactionidresults",
    "functionName": "GetAuditsQueryTransactionIdResults",
    "signature": "GetAuditsQueryTransactionIdResults(transactionId, cursor, pageSize, expand)",
    "parameters": [
      {
        "name": "transactionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Auditqueryexecutionresultsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuditApiWithConfig(config)\n\nvar transactionId string // Transaction ID\nvar cursor string // Indicates where to resume query results (not required for first page)\nvar pageSize int // Indicates maximum number of results in response. Default page size is 25 results. The maximum page size is 500.\nvar expand []string // Which fields, if any, to expand\n// Get results of audit query\ndata, response, err := apiInstance.GetAuditsQueryTransactionIdResults(transactionId, cursor, pageSize, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuditsQueryTransactionIdResults: %v\\n\", err)\n}"
  },
  "postauditsquery": {
    "operationId": "postauditsquery",
    "functionName": "PostAuditsQuery",
    "signature": "PostAuditsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Auditqueryrequest",
        "required": "true"
      }
    ],
    "return": "Auditqueryexecutionstatusresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuditApiWithConfig(config)\n\nvar body platformclientv2.Auditqueryrequest // query\n// Create audit query execution\ndata, response, err := apiInstance.PostAuditsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuditsQuery: %v\\n\", err)\n}"
  },
  "postauditsqueryrealtime": {
    "operationId": "postauditsqueryrealtime",
    "functionName": "PostAuditsQueryRealtime",
    "signature": "PostAuditsQueryRealtime(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "Auditrealtimequeryrequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Auditrealtimequeryresultsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuditApiWithConfig(config)\n\nvar body platformclientv2.Auditrealtimequeryrequest // query\nvar expand []string // Which fields, if any, to expand\n// This endpoint will only retrieve 14 days worth of audits for certain services. Please use /query to get a full list and older audits.\ndata, response, err := apiInstance.PostAuditsQueryRealtime(body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuditsQueryRealtime: %v\\n\", err)\n}"
  },
  "deleteauthorizationdivision": {
    "operationId": "deleteauthorizationdivision",
    "functionName": "DeleteAuthorizationDivision",
    "signature": "DeleteAuthorizationDivision(divisionId, force)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "force",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewObjectsApiWithConfig(config)\n\nvar divisionId string // Division ID\nvar force bool // Force delete this division as well as the grants and objects associated with it\n// Delete a division.\nresponse, err := apiInstance.DeleteAuthorizationDivision(divisionId, force)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAuthorizationDivision: %v\\n\", err)\n}"
  },
  "deleteauthorizationrole": {
    "operationId": "deleteauthorizationrole",
    "functionName": "DeleteAuthorizationRole",
    "signature": "DeleteAuthorizationRole(roleId)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar roleId string // Role ID\n// Delete an organization role.\nresponse, err := apiInstance.DeleteAuthorizationRole(roleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAuthorizationRole: %v\\n\", err)\n}"
  },
  "deleteauthorizationsubjectdivisionrole": {
    "operationId": "deleteauthorizationsubjectdivisionrole",
    "functionName": "DeleteAuthorizationSubjectDivisionRole",
    "signature": "DeleteAuthorizationSubjectDivisionRole(subjectId, divisionId, roleId)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar subjectId string // Subject ID (user or group)\nvar divisionId string // the id of the division of the grant\nvar roleId string // the id of the role of the grant\n// Delete a grant of a role in a division\nresponse, err := apiInstance.DeleteAuthorizationSubjectDivisionRole(subjectId, divisionId, roleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteAuthorizationSubjectDivisionRole: %v\\n\", err)\n}"
  },
  "getauthorizationdivision": {
    "operationId": "getauthorizationdivision",
    "functionName": "GetAuthorizationDivision",
    "signature": "GetAuthorizationDivision(divisionId, objectCount)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "objectCount",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Authzdivision",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewObjectsApiWithConfig(config)\n\nvar divisionId string // Division ID\nvar objectCount bool // Get count of objects in this division, grouped by type\n// Returns an authorization division.\ndata, response, err := apiInstance.GetAuthorizationDivision(divisionId, objectCount)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationDivision: %v\\n\", err)\n}"
  },
  "getauthorizationdivisiongrants": {
    "operationId": "getauthorizationdivisiongrants",
    "functionName": "GetAuthorizationDivisionGrants",
    "signature": "GetAuthorizationDivisionGrants(divisionId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Authzdivisiongrantentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar divisionId string // Division ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Gets all grants for a given division.\ndata, response, err := apiInstance.GetAuthorizationDivisionGrants(divisionId, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationDivisionGrants: %v\\n\", err)\n}"
  },
  "getauthorizationdivisions": {
    "operationId": "getauthorizationdivisions",
    "functionName": "GetAuthorizationDivisions",
    "signature": "GetAuthorizationDivisions(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, objectCount, id, name)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "objectCount",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Authzdivisionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewObjectsApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar objectCount bool // Include the count of objects contained in the division\nvar id []string // Optionally request specific divisions by their IDs\nvar name string // Search term to filter by division name\n// Retrieve a list of all divisions defined for the organization\ndata, response, err := apiInstance.GetAuthorizationDivisions(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, objectCount, id, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationDivisions: %v\\n\", err)\n}"
  },
  "getauthorizationdivisionshome": {
    "operationId": "getauthorizationdivisionshome",
    "functionName": "GetAuthorizationDivisionsHome",
    "signature": "GetAuthorizationDivisionsHome()",
    "return": "Authzdivision",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewObjectsApiWithConfig(config)\n\n// Retrieve the home division for the organization.\ndata, response, err := apiInstance.GetAuthorizationDivisionsHome()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationDivisionsHome: %v\\n\", err)\n}"
  },
  "getauthorizationdivisionslimit": {
    "operationId": "getauthorizationdivisionslimit",
    "functionName": "GetAuthorizationDivisionsLimit",
    "signature": "GetAuthorizationDivisionsLimit()",
    "return": "int",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewObjectsApiWithConfig(config)\n\n// Returns the maximum allowed number of divisions.\ndata, response, err := apiInstance.GetAuthorizationDivisionsLimit()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationDivisionsLimit: %v\\n\", err)\n}"
  },
  "getauthorizationdivisionspermittedme": {
    "operationId": "getauthorizationdivisionspermittedme",
    "functionName": "GetAuthorizationDivisionspermittedMe",
    "signature": "GetAuthorizationDivisionspermittedMe(permission, name)",
    "parameters": [
      {
        "name": "permission",
        "type": "string",
        "required": "true"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "[]Authzdivision",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar permission string // The permission string, including the object to access, e.g. routing:queue:view\nvar name string // Search term to filter by division name\n// Returns which divisions the current user has the given permission in.\ndata, response, err := apiInstance.GetAuthorizationDivisionspermittedMe(permission, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationDivisionspermittedMe: %v\\n\", err)\n}"
  },
  "getauthorizationdivisionspermittedpagedme": {
    "operationId": "getauthorizationdivisionspermittedpagedme",
    "functionName": "GetAuthorizationDivisionspermittedPagedMe",
    "signature": "GetAuthorizationDivisionspermittedPagedMe(permission, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "permission",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Divspermittedentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar permission string // The permission string, including the object to access, e.g. routing:queue:view\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Returns which divisions the current user has the given permission in.\ndata, response, err := apiInstance.GetAuthorizationDivisionspermittedPagedMe(permission, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationDivisionspermittedPagedMe: %v\\n\", err)\n}"
  },
  "getauthorizationdivisionspermittedpagedsubjectid": {
    "operationId": "getauthorizationdivisionspermittedpagedsubjectid",
    "functionName": "GetAuthorizationDivisionspermittedPagedSubjectId",
    "signature": "GetAuthorizationDivisionspermittedPagedSubjectId(subjectId, permission, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "permission",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Divspermittedentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar subjectId string // Subject ID (user or group)\nvar permission string // The permission string, including the object to access, e.g. routing:queue:view\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Returns which divisions the specified user has the given permission in.\ndata, response, err := apiInstance.GetAuthorizationDivisionspermittedPagedSubjectId(subjectId, permission, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationDivisionspermittedPagedSubjectId: %v\\n\", err)\n}"
  },
  "getauthorizationpermissions": {
    "operationId": "getauthorizationpermissions",
    "functionName": "GetAuthorizationPermissions",
    "signature": "GetAuthorizationPermissions(pageSize, pageNumber, queryType, query)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "queryType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "query",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Permissioncollectionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar queryType string // Query filter type\nvar query string // Comma-separated list of permissions or domains to query\n// Get all permissions.\ndata, response, err := apiInstance.GetAuthorizationPermissions(pageSize, pageNumber, queryType, query)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationPermissions: %v\\n\", err)\n}"
  },
  "getauthorizationproducts": {
    "operationId": "getauthorizationproducts",
    "functionName": "GetAuthorizationProducts",
    "signature": "GetAuthorizationProducts()",
    "return": "Organizationproductentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\n// Get the list of enabled products\ndata, response, err := apiInstance.GetAuthorizationProducts()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationProducts: %v\\n\", err)\n}"
  },
  "getauthorizationrole": {
    "operationId": "getauthorizationrole",
    "functionName": "GetAuthorizationRole",
    "signature": "GetAuthorizationRole(roleId, userCount, expand)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userCount",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Domainorganizationrole",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar roleId string // Role ID\nvar userCount bool // Fetch the count of users who have this role granted in at least one division\nvar expand []string // Which fields, if any, to expand. \\\"unusedPermissions\\\" returns the permissions not used for the role\n// Get a single organization role.\ndata, response, err := apiInstance.GetAuthorizationRole(roleId, userCount, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationRole: %v\\n\", err)\n}"
  },
  "getauthorizationrolecomparedefaultrightroleid": {
    "operationId": "getauthorizationrolecomparedefaultrightroleid",
    "functionName": "GetAuthorizationRoleComparedefaultRightRoleId",
    "signature": "GetAuthorizationRoleComparedefaultRightRoleId(leftRoleId, rightRoleId)",
    "parameters": [
      {
        "name": "leftRoleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rightRoleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Domainorgroledifference",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar leftRoleId string // Left Role ID\nvar rightRoleId string // Right Role id\n// Get an org role to default role comparison\ndata, response, err := apiInstance.GetAuthorizationRoleComparedefaultRightRoleId(leftRoleId, rightRoleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationRoleComparedefaultRightRoleId: %v\\n\", err)\n}"
  },
  "getauthorizationrolesubjectgrants": {
    "operationId": "getauthorizationrolesubjectgrants",
    "functionName": "GetAuthorizationRoleSubjectgrants",
    "signature": "GetAuthorizationRoleSubjectgrants(roleId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Subjectdivisiongrantsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar roleId string // Role ID\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\n// Get the subjects' granted divisions in the specified role.\ndata, response, err := apiInstance.GetAuthorizationRoleSubjectgrants(roleId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationRoleSubjectgrants: %v\\n\", err)\n}"
  },
  "getauthorizationroleusers": {
    "operationId": "getauthorizationroleusers",
    "functionName": "GetAuthorizationRoleUsers",
    "signature": "GetAuthorizationRoleUsers(roleId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Userentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar roleId string // Role ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of the users in a specified role.\ndata, response, err := apiInstance.GetAuthorizationRoleUsers(roleId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationRoleUsers: %v\\n\", err)\n}"
  },
  "getauthorizationroles": {
    "operationId": "getauthorizationroles",
    "functionName": "GetAuthorizationRoles",
    "signature": "GetAuthorizationRoles(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, permission, defaultRoleId, userCount, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "permission",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "defaultRoleId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "userCount",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Organizationroleentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar name string // \nvar permission []string // \nvar defaultRoleId []string // \nvar userCount bool // \nvar id []string // id\n// Retrieve a list of all roles defined for the organization\ndata, response, err := apiInstance.GetAuthorizationRoles(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, permission, defaultRoleId, userCount, id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationRoles: %v\\n\", err)\n}"
  },
  "getauthorizationsettings": {
    "operationId": "getauthorizationsettings",
    "functionName": "GetAuthorizationSettings",
    "signature": "GetAuthorizationSettings()",
    "return": "Authorizationsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\n// Get authorization settings\ndata, response, err := apiInstance.GetAuthorizationSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationSettings: %v\\n\", err)\n}"
  },
  "getauthorizationsubject": {
    "operationId": "getauthorizationsubject",
    "functionName": "GetAuthorizationSubject",
    "signature": "GetAuthorizationSubject(subjectId)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Authzsubject",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar subjectId string // Subject ID (user or group)\n// Returns a listing of roles and permissions for a user.\ndata, response, err := apiInstance.GetAuthorizationSubject(subjectId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationSubject: %v\\n\", err)\n}"
  },
  "getauthorizationsubjectsme": {
    "operationId": "getauthorizationsubjectsme",
    "functionName": "GetAuthorizationSubjectsMe",
    "signature": "GetAuthorizationSubjectsMe()",
    "return": "Authzsubject",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\n// Returns a listing of roles and permissions for the currently authenticated user.\ndata, response, err := apiInstance.GetAuthorizationSubjectsMe()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationSubjectsMe: %v\\n\", err)\n}"
  },
  "getauthorizationsubjectsrolecounts": {
    "operationId": "getauthorizationsubjectsrolecounts",
    "functionName": "GetAuthorizationSubjectsRolecounts",
    "signature": "GetAuthorizationSubjectsRolecounts(id)",
    "parameters": [
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "map[string]interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar id []string // id\n// Get the count of roles granted to a list of subjects\ndata, response, err := apiInstance.GetAuthorizationSubjectsRolecounts(id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetAuthorizationSubjectsRolecounts: %v\\n\", err)\n}"
  },
  "getuserroles": {
    "operationId": "getuserroles",
    "functionName": "GetUserRoles",
    "signature": "GetUserRoles(subjectId)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userauthorization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar subjectId string // User ID\n// Returns a listing of roles and permissions for a user.\ndata, response, err := apiInstance.GetUserRoles(subjectId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserRoles: %v\\n\", err)\n}"
  },
  "patchauthorizationrole": {
    "operationId": "patchauthorizationrole",
    "functionName": "PatchAuthorizationRole",
    "signature": "PatchAuthorizationRole(roleId, body)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Domainorganizationrole",
        "required": "true"
      }
    ],
    "return": "Domainorganizationrole",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar roleId string // Role ID\nvar body platformclientv2.Domainorganizationrole // Organization role\n// Patch Organization Role for needsUpdate Field\ndata, response, err := apiInstance.PatchAuthorizationRole(roleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchAuthorizationRole: %v\\n\", err)\n}"
  },
  "patchauthorizationsettings": {
    "operationId": "patchauthorizationsettings",
    "functionName": "PatchAuthorizationSettings",
    "signature": "PatchAuthorizationSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Authorizationsettings",
        "required": "true"
      }
    ],
    "return": "Authorizationsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar body platformclientv2.Authorizationsettings // Authorization Settings\n// Change authorization settings\ndata, response, err := apiInstance.PatchAuthorizationSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchAuthorizationSettings: %v\\n\", err)\n}"
  },
  "postauthorizationdivisionobject": {
    "operationId": "postauthorizationdivisionobject",
    "functionName": "PostAuthorizationDivisionObject",
    "signature": "PostAuthorizationDivisionObject(divisionId, objectType, body)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "objectType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewObjectsApiWithConfig(config)\n\nvar divisionId string // Division ID\nvar objectType string // The type of the objects. Must be one of the valid object types\nvar body platformclientv2.[]string // Object Id List\n// Assign a list of objects to a division\nresponse, err := apiInstance.PostAuthorizationDivisionObject(divisionId, objectType, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationDivisionObject: %v\\n\", err)\n}"
  },
  "postauthorizationdivisionrestore": {
    "operationId": "postauthorizationdivisionrestore",
    "functionName": "PostAuthorizationDivisionRestore",
    "signature": "PostAuthorizationDivisionRestore(divisionId, body)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Authzdivision",
        "required": "true"
      }
    ],
    "return": "Authzdivision",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewObjectsApiWithConfig(config)\n\nvar divisionId string // Division ID\nvar body platformclientv2.Authzdivision // Recreated division data\n// Recreate a previously deleted division.\ndata, response, err := apiInstance.PostAuthorizationDivisionRestore(divisionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationDivisionRestore: %v\\n\", err)\n}"
  },
  "postauthorizationdivisions": {
    "operationId": "postauthorizationdivisions",
    "functionName": "PostAuthorizationDivisions",
    "signature": "PostAuthorizationDivisions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Authzdivision",
        "required": "true"
      }
    ],
    "return": "Authzdivision",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewObjectsApiWithConfig(config)\n\nvar body platformclientv2.Authzdivision // Division\n// Create a division.\ndata, response, err := apiInstance.PostAuthorizationDivisions(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationDivisions: %v\\n\", err)\n}"
  },
  "postauthorizationrole": {
    "operationId": "postauthorizationrole",
    "functionName": "PostAuthorizationRole",
    "signature": "PostAuthorizationRole(roleId, body, subjectType)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Subjectdivisions",
        "required": "true"
      },
      {
        "name": "subjectType",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar roleId string // Role ID\nvar body platformclientv2.Subjectdivisions // Subjects and Divisions\nvar subjectType string // what the type of the subjects are (PC_GROUP, PC_USER or PC_OAUTH_CLIENT)\n// Bulk-grant subjects and divisions with an organization role.\nresponse, err := apiInstance.PostAuthorizationRole(roleId, body, subjectType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationRole: %v\\n\", err)\n}"
  },
  "postauthorizationrolecomparedefaultrightroleid": {
    "operationId": "postauthorizationrolecomparedefaultrightroleid",
    "functionName": "PostAuthorizationRoleComparedefaultRightRoleId",
    "signature": "PostAuthorizationRoleComparedefaultRightRoleId(leftRoleId, rightRoleId, body)",
    "parameters": [
      {
        "name": "leftRoleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rightRoleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Domainorganizationrole",
        "required": "true"
      }
    ],
    "return": "Domainorgroledifference",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar leftRoleId string // Left Role ID\nvar rightRoleId string // Right Role id\nvar body platformclientv2.Domainorganizationrole // Organization role\n// Get an unsaved org role to default role comparison\ndata, response, err := apiInstance.PostAuthorizationRoleComparedefaultRightRoleId(leftRoleId, rightRoleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationRoleComparedefaultRightRoleId: %v\\n\", err)\n}"
  },
  "postauthorizationroles": {
    "operationId": "postauthorizationroles",
    "functionName": "PostAuthorizationRoles",
    "signature": "PostAuthorizationRoles(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Domainorganizationrolecreate",
        "required": "true"
      }
    ],
    "return": "Domainorganizationrole",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar body platformclientv2.Domainorganizationrolecreate // Organization role\n// Create an organization role.\ndata, response, err := apiInstance.PostAuthorizationRoles(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationRoles: %v\\n\", err)\n}"
  },
  "postauthorizationrolesdefault": {
    "operationId": "postauthorizationrolesdefault",
    "functionName": "PostAuthorizationRolesDefault",
    "signature": "PostAuthorizationRolesDefault(force)",
    "parameters": [
      {
        "name": "force",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Organizationroleentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar force bool // Restore default roles\n// Restores all default roles\ndata, response, err := apiInstance.PostAuthorizationRolesDefault(force)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationRolesDefault: %v\\n\", err)\n}"
  },
  "postauthorizationsubjectbulkadd": {
    "operationId": "postauthorizationsubjectbulkadd",
    "functionName": "PostAuthorizationSubjectBulkadd",
    "signature": "PostAuthorizationSubjectBulkadd(subjectId, body, subjectType)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Roledivisiongrants",
        "required": "true"
      },
      {
        "name": "subjectType",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar subjectId string // Subject ID (user or group)\nvar body platformclientv2.Roledivisiongrants // Pairs of role and division IDs\nvar subjectType string // what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT)\n// Bulk-grant roles and divisions to a subject.\nresponse, err := apiInstance.PostAuthorizationSubjectBulkadd(subjectId, body, subjectType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationSubjectBulkadd: %v\\n\", err)\n}"
  },
  "postauthorizationsubjectbulkremove": {
    "operationId": "postauthorizationsubjectbulkremove",
    "functionName": "PostAuthorizationSubjectBulkremove",
    "signature": "PostAuthorizationSubjectBulkremove(subjectId, body)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Roledivisiongrants",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar subjectId string // Subject ID (user or group)\nvar body platformclientv2.Roledivisiongrants // Pairs of role and division IDs\n// Bulk-remove grants from a subject.\nresponse, err := apiInstance.PostAuthorizationSubjectBulkremove(subjectId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationSubjectBulkremove: %v\\n\", err)\n}"
  },
  "postauthorizationsubjectbulkreplace": {
    "operationId": "postauthorizationsubjectbulkreplace",
    "functionName": "PostAuthorizationSubjectBulkreplace",
    "signature": "PostAuthorizationSubjectBulkreplace(subjectId, body, subjectType)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Roledivisiongrants",
        "required": "true"
      },
      {
        "name": "subjectType",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar subjectId string // Subject ID (user or group)\nvar body platformclientv2.Roledivisiongrants // Pairs of role and division IDs\nvar subjectType string // what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT)\n// Replace subject's roles and divisions with the exact list supplied in the request.\nresponse, err := apiInstance.PostAuthorizationSubjectBulkreplace(subjectId, body, subjectType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationSubjectBulkreplace: %v\\n\", err)\n}"
  },
  "postauthorizationsubjectdivisionrole": {
    "operationId": "postauthorizationsubjectdivisionrole",
    "functionName": "PostAuthorizationSubjectDivisionRole",
    "signature": "PostAuthorizationSubjectDivisionRole(subjectId, divisionId, roleId, subjectType)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "subjectType",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar subjectId string // Subject ID (user or group)\nvar divisionId string // the id of the division to which to make the grant\nvar roleId string // the id of the role to grant\nvar subjectType string // what the type of the subject is: PC_GROUP, PC_USER or PC_OAUTH_CLIENT (note: for cross-org authorization, please use the Organization Authorization endpoints)\n// Make a grant of a role in a division\nresponse, err := apiInstance.PostAuthorizationSubjectDivisionRole(subjectId, divisionId, roleId, subjectType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostAuthorizationSubjectDivisionRole: %v\\n\", err)\n}"
  },
  "putauthorizationdivision": {
    "operationId": "putauthorizationdivision",
    "functionName": "PutAuthorizationDivision",
    "signature": "PutAuthorizationDivision(divisionId, body)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Authzdivision",
        "required": "true"
      }
    ],
    "return": "Authzdivision",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewObjectsApiWithConfig(config)\n\nvar divisionId string // Division ID\nvar body platformclientv2.Authzdivision // Updated division data\n// Update a division.\ndata, response, err := apiInstance.PutAuthorizationDivision(divisionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAuthorizationDivision: %v\\n\", err)\n}"
  },
  "putauthorizationrole": {
    "operationId": "putauthorizationrole",
    "functionName": "PutAuthorizationRole",
    "signature": "PutAuthorizationRole(roleId, body)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Domainorganizationroleupdate",
        "required": "true"
      }
    ],
    "return": "Domainorganizationrole",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar roleId string // Role ID\nvar body platformclientv2.Domainorganizationroleupdate // Organization role\n// Update an organization role.\ndata, response, err := apiInstance.PutAuthorizationRole(roleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAuthorizationRole: %v\\n\", err)\n}"
  },
  "putauthorizationroleusersadd": {
    "operationId": "putauthorizationroleusersadd",
    "functionName": "PutAuthorizationRoleUsersAdd",
    "signature": "PutAuthorizationRoleUsersAdd(roleId, body)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "[]string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar roleId string // Role ID\nvar body platformclientv2.[]string // List of user IDs\n// Sets the users for the role\ndata, response, err := apiInstance.PutAuthorizationRoleUsersAdd(roleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAuthorizationRoleUsersAdd: %v\\n\", err)\n}"
  },
  "putauthorizationroleusersremove": {
    "operationId": "putauthorizationroleusersremove",
    "functionName": "PutAuthorizationRoleUsersRemove",
    "signature": "PutAuthorizationRoleUsersRemove(roleId, body)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "[]string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar roleId string // Role ID\nvar body platformclientv2.[]string // List of user IDs\n// Removes the users from the role\ndata, response, err := apiInstance.PutAuthorizationRoleUsersRemove(roleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAuthorizationRoleUsersRemove: %v\\n\", err)\n}"
  },
  "putauthorizationrolesdefault": {
    "operationId": "putauthorizationrolesdefault",
    "functionName": "PutAuthorizationRolesDefault",
    "signature": "PutAuthorizationRolesDefault(body)",
    "parameters": [
      {
        "name": "body",
        "type": "[]Domainorganizationrole",
        "required": "true"
      }
    ],
    "return": "Organizationroleentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewAuthorizationApiWithConfig(config)\n\nvar body platformclientv2.[]Domainorganizationrole // Organization roles list\n// Restore specified default roles\ndata, response, err := apiInstance.PutAuthorizationRolesDefault(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutAuthorizationRolesDefault: %v\\n\", err)\n}"
  },
  "putuserroles": {
    "operationId": "putuserroles",
    "functionName": "PutUserRoles",
    "signature": "PutUserRoles(subjectId, body)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "Userauthorization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar subjectId string // User ID\nvar body platformclientv2.[]string // List of roles\n// Sets the user's roles\ndata, response, err := apiInstance.PutUserRoles(subjectId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserRoles: %v\\n\", err)\n}"
  },
  "getbillingreportsbillableusage": {
    "operationId": "getbillingreportsbillableusage",
    "functionName": "GetBillingReportsBillableusage",
    "signature": "GetBillingReportsBillableusage(startDate, endDate)",
    "parameters": [
      {
        "name": "startDate",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endDate",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Billingusagereport",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewBillingApiWithConfig(config)\n\nvar startDate time.Time // The period start date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\nvar endDate time.Time // The period end date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\n// Get a report of the billable license usages\ndata, response, err := apiInstance.GetBillingReportsBillableusage(startDate, endDate)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetBillingReportsBillableusage: %v\\n\", err)\n}"
  },
  "getbillingtrusteebillingoverviewtrustororgid": {
    "operationId": "getbillingtrusteebillingoverviewtrustororgid",
    "functionName": "GetBillingTrusteebillingoverviewTrustorOrgId",
    "signature": "GetBillingTrusteebillingoverviewTrustorOrgId(trustorOrgId, billingPeriodIndex)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "billingPeriodIndex",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Trusteebillingoverview",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewBillingApiWithConfig(config)\n\nvar trustorOrgId string // The organization ID of the trustor (customer) organization.\nvar billingPeriodIndex int // 0 for active period (overview data may change until period closes). 1 for prior completed billing period. 2 for two billing cycles prior, and so on.\n// Get the billing overview for an organization that is managed by a partner.\ndata, response, err := apiInstance.GetBillingTrusteebillingoverviewTrustorOrgId(trustorOrgId, billingPeriodIndex)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetBillingTrusteebillingoverviewTrustorOrgId: %v\\n\", err)\n}"
  },
  "getcarrierservicesintegrationsemergencylocationsme": {
    "operationId": "getcarrierservicesintegrationsemergencylocationsme",
    "functionName": "GetCarrierservicesIntegrationsEmergencylocationsMe",
    "signature": "GetCarrierservicesIntegrationsEmergencylocationsMe(phoneNumber)",
    "parameters": [
      {
        "name": "phoneNumber",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emergencylocation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCarrierServicesApiWithConfig(config)\n\nvar phoneNumber string // Phone number in E164 format\n// Get location for the logged in user\ndata, response, err := apiInstance.GetCarrierservicesIntegrationsEmergencylocationsMe(phoneNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetCarrierservicesIntegrationsEmergencylocationsMe: %v\\n\", err)\n}"
  },
  "postcarrierservicesintegrationsemergencylocationsme": {
    "operationId": "postcarrierservicesintegrationsemergencylocationsme",
    "functionName": "PostCarrierservicesIntegrationsEmergencylocationsMe",
    "signature": "PostCarrierservicesIntegrationsEmergencylocationsMe(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Emergencylocation",
        "required": "false"
      }
    ],
    "return": "Emergencylocation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCarrierServicesApiWithConfig(config)\n\nvar body platformclientv2.Emergencylocation // \n// Set current location for the logged in user\ndata, response, err := apiInstance.PostCarrierservicesIntegrationsEmergencylocationsMe(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostCarrierservicesIntegrationsEmergencylocationsMe: %v\\n\", err)\n}"
  },
  "deletechatsroommessage": {
    "operationId": "deletechatsroommessage",
    "functionName": "DeleteChatsRoomMessage",
    "signature": "DeleteChatsRoomMessage(roomJid, messageId)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomId\nvar messageId string // messageId\n// Delete a message in a room\nresponse, err := apiInstance.DeleteChatsRoomMessage(roomJid, messageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteChatsRoomMessage: %v\\n\", err)\n}"
  },
  "deletechatsroomparticipant": {
    "operationId": "deletechatsroomparticipant",
    "functionName": "DeleteChatsRoomParticipant",
    "signature": "DeleteChatsRoomParticipant(roomJid, userId)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomJid\nvar userId string // userId\n// Remove a user from a room.\nresponse, err := apiInstance.DeleteChatsRoomParticipant(roomJid, userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteChatsRoomParticipant: %v\\n\", err)\n}"
  },
  "deletechatsroompinnedmessage": {
    "operationId": "deletechatsroompinnedmessage",
    "functionName": "DeleteChatsRoomPinnedmessage",
    "signature": "DeleteChatsRoomPinnedmessage(roomJid, pinnedMessageId)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pinnedMessageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomJid\nvar pinnedMessageId string // pinnedMessageId\n// Remove a pinned message from a room\nresponse, err := apiInstance.DeleteChatsRoomPinnedmessage(roomJid, pinnedMessageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteChatsRoomPinnedmessage: %v\\n\", err)\n}"
  },
  "deletechatsusermessage": {
    "operationId": "deletechatsusermessage",
    "functionName": "DeleteChatsUserMessage",
    "signature": "DeleteChatsUserMessage(userId, messageId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar userId string // userId\nvar messageId string // messageId\n// Delete a message to a user\nresponse, err := apiInstance.DeleteChatsUserMessage(userId, messageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteChatsUserMessage: %v\\n\", err)\n}"
  },
  "getchatsmessage": {
    "operationId": "getchatsmessage",
    "functionName": "GetChatsMessage",
    "signature": "GetChatsMessage(messageId)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Chatmessageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar messageId string // messageId\n// Get a message\ndata, response, err := apiInstance.GetChatsMessage(messageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetChatsMessage: %v\\n\", err)\n}"
  },
  "getchatsroom": {
    "operationId": "getchatsroom",
    "functionName": "GetChatsRoom",
    "signature": "GetChatsRoom(roomJid)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Room",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomJid\n// Get a room\ndata, response, err := apiInstance.GetChatsRoom(roomJid)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetChatsRoom: %v\\n\", err)\n}"
  },
  "getchatsroommessage": {
    "operationId": "getchatsroommessage",
    "functionName": "GetChatsRoomMessage",
    "signature": "GetChatsRoomMessage(roomJid, messageIds)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageIds",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Chatmessageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomJid\nvar messageIds string // messageIds, comma separated\n// Get messages by id(s) from a room\ndata, response, err := apiInstance.GetChatsRoomMessage(roomJid, messageIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetChatsRoomMessage: %v\\n\", err)\n}"
  },
  "getchatsroommessages": {
    "operationId": "getchatsroommessages",
    "functionName": "GetChatsRoomMessages",
    "signature": "GetChatsRoomMessages(roomJid, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, limit, before, after)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Chatmessageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomJid\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar limit string // The maximum number of messages to retrieve\nvar before string // The cutoff date for messages to retrieve\nvar after string // The beginning date for messages to retrieve\n// Get a room's message history\ndata, response, err := apiInstance.GetChatsRoomMessages(roomJid, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, limit, before, after)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetChatsRoomMessages: %v\\n\", err)\n}"
  },
  "getchatssettings": {
    "operationId": "getchatssettings",
    "functionName": "GetChatsSettings",
    "signature": "GetChatsSettings()",
    "return": "Chatsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\n// Get Chat Settings.\ndata, response, err := apiInstance.GetChatsSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetChatsSettings: %v\\n\", err)\n}"
  },
  "getchatsthreadmessages": {
    "operationId": "getchatsthreadmessages",
    "functionName": "GetChatsThreadMessages",
    "signature": "GetChatsThreadMessages(threadId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, limit, before, after)",
    "parameters": [
      {
        "name": "threadId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Chatmessageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar threadId string // threadId\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar limit string // The maximum number of messages to retrieve\nvar before string // The cutoff date for messages to retrieve\nvar after string // The beginning date for messages to retrieve\n// Get history by thread\ndata, response, err := apiInstance.GetChatsThreadMessages(threadId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, limit, before, after)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetChatsThreadMessages: %v\\n\", err)\n}"
  },
  "getchatsusermessage": {
    "operationId": "getchatsusermessage",
    "functionName": "GetChatsUserMessage",
    "signature": "GetChatsUserMessage(userId, messageIds)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageIds",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Chatmessageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar userId string // userId\nvar messageIds string // messageIds, comma separated\n// Get messages by id(s) from a 1on1\ndata, response, err := apiInstance.GetChatsUserMessage(userId, messageIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetChatsUserMessage: %v\\n\", err)\n}"
  },
  "getchatsusermessages": {
    "operationId": "getchatsusermessages",
    "functionName": "GetChatsUserMessages",
    "signature": "GetChatsUserMessages(userId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, limit, before, after)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Chatmessageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar userId string // userId\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar limit string // The maximum number of messages to retrieve\nvar before string // The cutoff date for messages to retrieve\nvar after string // The beginning date for messages to retrieve\n// Get 1on1 History between a user\ndata, response, err := apiInstance.GetChatsUserMessages(userId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, limit, before, after)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetChatsUserMessages: %v\\n\", err)\n}"
  },
  "patchchatsroom": {
    "operationId": "patchchatsroom",
    "functionName": "PatchChatsRoom",
    "signature": "PatchChatsRoom(roomJid, body)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Roomupdaterequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomJid\nvar body platformclientv2.Roomupdaterequest // Room properties\n// Set properties for a room\nresponse, err := apiInstance.PatchChatsRoom(roomJid, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchChatsRoom: %v\\n\", err)\n}"
  },
  "patchchatsroommessage": {
    "operationId": "patchchatsroommessage",
    "functionName": "PatchChatsRoomMessage",
    "signature": "PatchChatsRoomMessage(roomJid, messageId, body)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Sendmessagebody",
        "required": "true"
      }
    ],
    "return": "Chatsendmessageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomId\nvar messageId string // messageId\nvar body platformclientv2.Sendmessagebody // messageBody\n// Edit a message in a room\ndata, response, err := apiInstance.PatchChatsRoomMessage(roomJid, messageId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchChatsRoomMessage: %v\\n\", err)\n}"
  },
  "patchchatssettings": {
    "operationId": "patchchatssettings",
    "functionName": "PatchChatsSettings",
    "signature": "PatchChatsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Chatsettings",
        "required": "true"
      }
    ],
    "return": "Chatsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar body platformclientv2.Chatsettings // Chat\n// Patch Chat Settings.\ndata, response, err := apiInstance.PatchChatsSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchChatsSettings: %v\\n\", err)\n}"
  },
  "patchchatsusermessage": {
    "operationId": "patchchatsusermessage",
    "functionName": "PatchChatsUserMessage",
    "signature": "PatchChatsUserMessage(userId, messageId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Sendmessagebody",
        "required": "true"
      }
    ],
    "return": "Chatsendmessageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar userId string // userId\nvar messageId string // messageId\nvar body platformclientv2.Sendmessagebody // message body\n// Edit a message to a user\ndata, response, err := apiInstance.PatchChatsUserMessage(userId, messageId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchChatsUserMessage: %v\\n\", err)\n}"
  },
  "postchatsroommessages": {
    "operationId": "postchatsroommessages",
    "functionName": "PostChatsRoomMessages",
    "signature": "PostChatsRoomMessages(roomJid, body)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Sendmessagebody",
        "required": "true"
      }
    ],
    "return": "Chatsendmessageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomId\nvar body platformclientv2.Sendmessagebody // messageBody\n// Send a message to a room\ndata, response, err := apiInstance.PostChatsRoomMessages(roomJid, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostChatsRoomMessages: %v\\n\", err)\n}"
  },
  "postchatsroomparticipant": {
    "operationId": "postchatsroomparticipant",
    "functionName": "PostChatsRoomParticipant",
    "signature": "PostChatsRoomParticipant(roomJid, userId)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomJid\nvar userId string // userId\n// Join a room\nresponse, err := apiInstance.PostChatsRoomParticipant(roomJid, userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostChatsRoomParticipant: %v\\n\", err)\n}"
  },
  "postchatsroompinnedmessages": {
    "operationId": "postchatsroompinnedmessages",
    "functionName": "PostChatsRoomPinnedmessages",
    "signature": "PostChatsRoomPinnedmessages(roomJid, body)",
    "parameters": [
      {
        "name": "roomJid",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Pinnedmessagerequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar roomJid string // roomJid\nvar body platformclientv2.Pinnedmessagerequest // Pinned Message Ids\n// Add pinned messages for a room, up to a maximum of 5 pinned messages\nresponse, err := apiInstance.PostChatsRoomPinnedmessages(roomJid, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostChatsRoomPinnedmessages: %v\\n\", err)\n}"
  },
  "postchatsrooms": {
    "operationId": "postchatsrooms",
    "functionName": "PostChatsRooms",
    "signature": "PostChatsRooms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createroomrequest",
        "required": "true"
      }
    ],
    "return": "Createroomresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar body platformclientv2.Createroomrequest // Room properties\n// Create an adhoc room\ndata, response, err := apiInstance.PostChatsRooms(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostChatsRooms: %v\\n\", err)\n}"
  },
  "postchatsusermessages": {
    "operationId": "postchatsusermessages",
    "functionName": "PostChatsUserMessages",
    "signature": "PostChatsUserMessages(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Sendmessagebody",
        "required": "true"
      }
    ],
    "return": "Chatsendmessageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar userId string // userId\nvar body platformclientv2.Sendmessagebody // message body\n// Send a message to a user\ndata, response, err := apiInstance.PostChatsUserMessages(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostChatsUserMessages: %v\\n\", err)\n}"
  },
  "putchatssettings": {
    "operationId": "putchatssettings",
    "functionName": "PutChatsSettings",
    "signature": "PutChatsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Chatsettings",
        "required": "true"
      }
    ],
    "return": "Chatsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewChatApiWithConfig(config)\n\nvar body platformclientv2.Chatsettings // Chat\n// Update Chat Settings.\ndata, response, err := apiInstance.PutChatsSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutChatsSettings: %v\\n\", err)\n}"
  },
  "deletecoachingappointment": {
    "operationId": "deletecoachingappointment",
    "functionName": "DeleteCoachingAppointment",
    "signature": "DeleteCoachingAppointment(appointmentId)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Coachingappointmentreference",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\n// Delete an existing appointment\ndata, response, err := apiInstance.DeleteCoachingAppointment(appointmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteCoachingAppointment: %v\\n\", err)\n}"
  },
  "deletecoachingappointmentannotation": {
    "operationId": "deletecoachingappointmentannotation",
    "functionName": "DeleteCoachingAppointmentAnnotation",
    "signature": "DeleteCoachingAppointmentAnnotation(appointmentId, annotationId)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\nvar annotationId string // The ID of the annotation.\n// Delete an existing annotation\nresponse, err := apiInstance.DeleteCoachingAppointmentAnnotation(appointmentId, annotationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteCoachingAppointmentAnnotation: %v\\n\", err)\n}"
  },
  "getcoachingappointment": {
    "operationId": "getcoachingappointment",
    "functionName": "GetCoachingAppointment",
    "signature": "GetCoachingAppointment(appointmentId)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Coachingappointmentresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\n// Retrieve an appointment\ndata, response, err := apiInstance.GetCoachingAppointment(appointmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetCoachingAppointment: %v\\n\", err)\n}"
  },
  "getcoachingappointmentannotation": {
    "operationId": "getcoachingappointmentannotation",
    "functionName": "GetCoachingAppointmentAnnotation",
    "signature": "GetCoachingAppointmentAnnotation(appointmentId, annotationId)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Coachingannotation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\nvar annotationId string // The ID of the annotation.\n// Retrieve an annotation.\ndata, response, err := apiInstance.GetCoachingAppointmentAnnotation(appointmentId, annotationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetCoachingAppointmentAnnotation: %v\\n\", err)\n}"
  },
  "getcoachingappointmentannotations": {
    "operationId": "getcoachingappointmentannotations",
    "functionName": "GetCoachingAppointmentAnnotations",
    "signature": "GetCoachingAppointmentAnnotations(appointmentId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Coachingannotationlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get a list of annotations.\ndata, response, err := apiInstance.GetCoachingAppointmentAnnotations(appointmentId, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetCoachingAppointmentAnnotations: %v\\n\", err)\n}"
  },
  "getcoachingappointmentstatuses": {
    "operationId": "getcoachingappointmentstatuses",
    "functionName": "GetCoachingAppointmentStatuses",
    "signature": "GetCoachingAppointmentStatuses(appointmentId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Coachingappointmentstatusresponselist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get the list of status changes for a coaching appointment.\ndata, response, err := apiInstance.GetCoachingAppointmentStatuses(appointmentId, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetCoachingAppointmentStatuses: %v\\n\", err)\n}"
  },
  "getcoachingappointments": {
    "operationId": "getcoachingappointments",
    "functionName": "GetCoachingAppointments",
    "signature": "GetCoachingAppointments(userIds, interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition)",
    "parameters": [
      {
        "name": "userIds",
        "type": "[]string",
        "required": "true"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "facilitatorIds",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "relationships",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "intervalCondition",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Coachingappointmentresponselist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar userIds []string // The user IDs for which to retrieve appointments\nvar interval string // Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar statuses []string // Appointment Statuses to filter by\nvar facilitatorIds []string // The facilitator IDs for which to retrieve appointments\nvar sortOrder string // Sort (by due date) either Asc or Desc\nvar relationships []string // Relationships to filter by\nvar completionInterval string // Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar overdue string // Overdue status to filter by\nvar intervalCondition string // Filter condition for interval\n// Get appointments for users and optional date range\ndata, response, err := apiInstance.GetCoachingAppointments(userIds, interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetCoachingAppointments: %v\\n\", err)\n}"
  },
  "getcoachingappointmentsme": {
    "operationId": "getcoachingappointmentsme",
    "functionName": "GetCoachingAppointmentsMe",
    "signature": "GetCoachingAppointmentsMe(interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition)",
    "parameters": [
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "facilitatorIds",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "relationships",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "intervalCondition",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Coachingappointmentresponselist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar interval string // Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar statuses []string // Appointment Statuses to filter by\nvar facilitatorIds []string // The facilitator IDs for which to retrieve appointments\nvar sortOrder string // Sort (by due date) either Asc or Desc\nvar relationships []string // Relationships to filter by\nvar completionInterval string // Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar overdue string // Overdue status to filter by\nvar intervalCondition string // Filter condition for interval\n// Get my appointments for a given date range\ndata, response, err := apiInstance.GetCoachingAppointmentsMe(interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetCoachingAppointmentsMe: %v\\n\", err)\n}"
  },
  "getcoachingnotification": {
    "operationId": "getcoachingnotification",
    "functionName": "GetCoachingNotification",
    "signature": "GetCoachingNotification(notificationId, expand)",
    "parameters": [
      {
        "name": "notificationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Coachingnotification",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar notificationId string // The ID of the notification.\nvar expand []string // Indicates a field in the response which should be expanded.\n// Get an existing notification\ndata, response, err := apiInstance.GetCoachingNotification(notificationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetCoachingNotification: %v\\n\", err)\n}"
  },
  "getcoachingnotifications": {
    "operationId": "getcoachingnotifications",
    "functionName": "GetCoachingNotifications",
    "signature": "GetCoachingNotifications(pageNumber, pageSize, expand)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Coachingnotificationlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar expand []string // Indicates a field in the response which should be expanded.\n// Retrieve the list of your notifications.\ndata, response, err := apiInstance.GetCoachingNotifications(pageNumber, pageSize, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetCoachingNotifications: %v\\n\", err)\n}"
  },
  "patchcoachingappointment": {
    "operationId": "patchcoachingappointment",
    "functionName": "PatchCoachingAppointment",
    "signature": "PatchCoachingAppointment(appointmentId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updatecoachingappointmentrequest",
        "required": "true"
      }
    ],
    "return": "Coachingappointmentresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\nvar body platformclientv2.Updatecoachingappointmentrequest // The new version of the appointment\n// Update an existing appointment\ndata, response, err := apiInstance.PatchCoachingAppointment(appointmentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchCoachingAppointment: %v\\n\", err)\n}"
  },
  "patchcoachingappointmentannotation": {
    "operationId": "patchcoachingappointmentannotation",
    "functionName": "PatchCoachingAppointmentAnnotation",
    "signature": "PatchCoachingAppointmentAnnotation(appointmentId, annotationId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Coachingannotation",
        "required": "true"
      }
    ],
    "return": "Coachingannotation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\nvar annotationId string // The ID of the annotation.\nvar body platformclientv2.Coachingannotation // The new version of the annotation\n// Update an existing annotation.\ndata, response, err := apiInstance.PatchCoachingAppointmentAnnotation(appointmentId, annotationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchCoachingAppointmentAnnotation: %v\\n\", err)\n}"
  },
  "patchcoachingappointmentstatus": {
    "operationId": "patchcoachingappointmentstatus",
    "functionName": "PatchCoachingAppointmentStatus",
    "signature": "PatchCoachingAppointmentStatus(appointmentId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Coachingappointmentstatusrequest",
        "required": "true"
      }
    ],
    "return": "Coachingappointmentstatusresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\nvar body platformclientv2.Coachingappointmentstatusrequest // Updated status of the coaching appointment\n// Update the status of a coaching appointment\ndata, response, err := apiInstance.PatchCoachingAppointmentStatus(appointmentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchCoachingAppointmentStatus: %v\\n\", err)\n}"
  },
  "patchcoachingnotification": {
    "operationId": "patchcoachingnotification",
    "functionName": "PatchCoachingNotification",
    "signature": "PatchCoachingNotification(notificationId, body)",
    "parameters": [
      {
        "name": "notificationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Coachingnotification",
        "required": "true"
      }
    ],
    "return": "Coachingnotification",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar notificationId string // The ID of the notification.\nvar body platformclientv2.Coachingnotification // Change the read state of a notification\n// Update an existing notification.\ndata, response, err := apiInstance.PatchCoachingNotification(notificationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchCoachingNotification: %v\\n\", err)\n}"
  },
  "postcoachingappointmentannotations": {
    "operationId": "postcoachingappointmentannotations",
    "functionName": "PostCoachingAppointmentAnnotations",
    "signature": "PostCoachingAppointmentAnnotations(appointmentId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Coachingannotationcreaterequest",
        "required": "true"
      }
    ],
    "return": "Coachingannotation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\nvar body platformclientv2.Coachingannotationcreaterequest // The annotation to add\n// Create a new annotation.\ndata, response, err := apiInstance.PostCoachingAppointmentAnnotations(appointmentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostCoachingAppointmentAnnotations: %v\\n\", err)\n}"
  },
  "postcoachingappointmentconversations": {
    "operationId": "postcoachingappointmentconversations",
    "functionName": "PostCoachingAppointmentConversations",
    "signature": "PostCoachingAppointmentConversations(appointmentId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Addconversationrequest",
        "required": "true"
      }
    ],
    "return": "Addconversationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar appointmentId string // The ID of the coaching appointment.\nvar body platformclientv2.Addconversationrequest // body\n// Add a conversation to an appointment\ndata, response, err := apiInstance.PostCoachingAppointmentConversations(appointmentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostCoachingAppointmentConversations: %v\\n\", err)\n}"
  },
  "postcoachingappointments": {
    "operationId": "postcoachingappointments",
    "functionName": "PostCoachingAppointments",
    "signature": "PostCoachingAppointments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createcoachingappointmentrequest",
        "required": "true"
      }
    ],
    "return": "Coachingappointmentresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar body platformclientv2.Createcoachingappointmentrequest // The appointment to add\n// Create a new appointment\ndata, response, err := apiInstance.PostCoachingAppointments(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostCoachingAppointments: %v\\n\", err)\n}"
  },
  "postcoachingappointmentsaggregatesquery": {
    "operationId": "postcoachingappointmentsaggregatesquery",
    "functionName": "PostCoachingAppointmentsAggregatesQuery",
    "signature": "PostCoachingAppointmentsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Coachingappointmentaggregaterequest",
        "required": "true"
      }
    ],
    "return": "Coachingappointmentaggregateresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar body platformclientv2.Coachingappointmentaggregaterequest // Aggregate Request\n// Retrieve aggregated appointment data\ndata, response, err := apiInstance.PostCoachingAppointmentsAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostCoachingAppointmentsAggregatesQuery: %v\\n\", err)\n}"
  },
  "postcoachingscheduleslotsquery": {
    "operationId": "postcoachingscheduleslotsquery",
    "functionName": "PostCoachingScheduleslotsQuery",
    "signature": "PostCoachingScheduleslotsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Coachingslotsrequest",
        "required": "true"
      }
    ],
    "return": "Coachingslotsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewCoachingApiWithConfig(config)\n\nvar body platformclientv2.Coachingslotsrequest // The slot search request\n// Get list of possible slots where a coaching appointment can be scheduled.\ndata, response, err := apiInstance.PostCoachingScheduleslotsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostCoachingScheduleslotsQuery: %v\\n\", err)\n}"
  },
  "deletecontentmanagementdocument": {
    "operationId": "deletecontentmanagementdocument",
    "functionName": "DeleteContentmanagementDocument",
    "signature": "DeleteContentmanagementDocument(documentId, override)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "override",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar documentId string // Document ID\nvar override bool // Override any lock on the document\n// Delete a document.\nresponse, err := apiInstance.DeleteContentmanagementDocument(documentId, override)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteContentmanagementDocument: %v\\n\", err)\n}"
  },
  "deletecontentmanagementshare": {
    "operationId": "deletecontentmanagementshare",
    "functionName": "DeleteContentmanagementShare",
    "signature": "DeleteContentmanagementShare(shareId)",
    "parameters": [
      {
        "name": "shareId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar shareId string // Share ID\n// Deletes an existing share.\nresponse, err := apiInstance.DeleteContentmanagementShare(shareId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteContentmanagementShare: %v\\n\", err)\n}"
  },
  "deletecontentmanagementstatusstatusid": {
    "operationId": "deletecontentmanagementstatusstatusid",
    "functionName": "DeleteContentmanagementStatusStatusId",
    "signature": "DeleteContentmanagementStatusStatusId(statusId)",
    "parameters": [
      {
        "name": "statusId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar statusId string // Status ID\n// Cancel the command for this status\nresponse, err := apiInstance.DeleteContentmanagementStatusStatusId(statusId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteContentmanagementStatusStatusId: %v\\n\", err)\n}"
  },
  "deletecontentmanagementworkspace": {
    "operationId": "deletecontentmanagementworkspace",
    "functionName": "DeleteContentmanagementWorkspace",
    "signature": "DeleteContentmanagementWorkspace(workspaceId, moveChildrenToWorkspaceId)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "moveChildrenToWorkspaceId",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar moveChildrenToWorkspaceId string // New location for objects in deleted workspace.\n// Delete a workspace\nresponse, err := apiInstance.DeleteContentmanagementWorkspace(workspaceId, moveChildrenToWorkspaceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteContentmanagementWorkspace: %v\\n\", err)\n}"
  },
  "deletecontentmanagementworkspacemember": {
    "operationId": "deletecontentmanagementworkspacemember",
    "functionName": "DeleteContentmanagementWorkspaceMember",
    "signature": "DeleteContentmanagementWorkspaceMember(workspaceId, memberId)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar memberId string // Member ID\n// Delete a member from a workspace\nresponse, err := apiInstance.DeleteContentmanagementWorkspaceMember(workspaceId, memberId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteContentmanagementWorkspaceMember: %v\\n\", err)\n}"
  },
  "deletecontentmanagementworkspacetagvalue": {
    "operationId": "deletecontentmanagementworkspacetagvalue",
    "functionName": "DeleteContentmanagementWorkspaceTagvalue",
    "signature": "DeleteContentmanagementWorkspaceTagvalue(workspaceId, tagId)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "tagId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar tagId string // Tag ID\n// Delete workspace tag\nresponse, err := apiInstance.DeleteContentmanagementWorkspaceTagvalue(workspaceId, tagId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteContentmanagementWorkspaceTagvalue: %v\\n\", err)\n}"
  },
  "getcontentmanagementdocument": {
    "operationId": "getcontentmanagementdocument",
    "functionName": "GetContentmanagementDocument",
    "signature": "GetContentmanagementDocument(documentId, expand)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Document",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar documentId string // Document ID\nvar expand []string // Which fields, if any, to expand.\n// Get a document.\ndata, response, err := apiInstance.GetContentmanagementDocument(documentId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementDocument: %v\\n\", err)\n}"
  },
  "getcontentmanagementdocumentaudits": {
    "operationId": "getcontentmanagementdocumentaudits",
    "functionName": "GetContentmanagementDocumentAudits",
    "signature": "GetContentmanagementDocumentAudits(documentId, pageSize, pageNumber, transactionFilter, level, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "transactionFilter",
        "type": "string",
        "required": "false"
      },
      {
        "name": "level",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Documentauditentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar documentId string // Document ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar transactionFilter string // Transaction filter\nvar level string // level\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Get a list of audits for a document.\ndata, response, err := apiInstance.GetContentmanagementDocumentAudits(documentId, pageSize, pageNumber, transactionFilter, level, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementDocumentAudits: %v\\n\", err)\n}"
  },
  "getcontentmanagementdocumentcontent": {
    "operationId": "getcontentmanagementdocumentcontent",
    "functionName": "GetContentmanagementDocumentContent",
    "signature": "GetContentmanagementDocumentContent(documentId, disposition, contentType)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "disposition",
        "type": "string",
        "required": "false"
      },
      {
        "name": "contentType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Downloadresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar documentId string // Document ID\nvar disposition string // Request how the content will be downloaded: a file attachment or inline. Default is attachment.\nvar contentType string // The requested format for the specified document. If supported, the document will be returned in that format. Example contentType=audio/wav\n// Download a document.\ndata, response, err := apiInstance.GetContentmanagementDocumentContent(documentId, disposition, contentType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementDocumentContent: %v\\n\", err)\n}"
  },
  "getcontentmanagementdocuments": {
    "operationId": "getcontentmanagementdocuments",
    "functionName": "GetContentmanagementDocuments",
    "signature": "GetContentmanagementDocuments(workspaceId, name, expand, pageSize, pageNumber, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Documententitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar name string // Name\nvar expand []string // Which fields, if any, to expand.\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // name or dateCreated\nvar sortOrder string // ascending or descending\n// Get a list of documents.\ndata, response, err := apiInstance.GetContentmanagementDocuments(workspaceId, name, expand, pageSize, pageNumber, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementDocuments: %v\\n\", err)\n}"
  },
  "getcontentmanagementquery": {
    "operationId": "getcontentmanagementquery",
    "functionName": "GetContentmanagementQuery",
    "signature": "GetContentmanagementQuery(queryPhrase, pageSize, pageNumber, sortBy, sortOrder, expand)",
    "parameters": [
      {
        "name": "queryPhrase",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Queryresults",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar queryPhrase string // Phrase tokens are ANDed together over all searchable fields\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // name or dateCreated\nvar sortOrder string // ascending or descending\nvar expand []string // Which fields, if any, to expand.\n// Query content\ndata, response, err := apiInstance.GetContentmanagementQuery(queryPhrase, pageSize, pageNumber, sortBy, sortOrder, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementQuery: %v\\n\", err)\n}"
  },
  "getcontentmanagementsecurityprofile": {
    "operationId": "getcontentmanagementsecurityprofile",
    "functionName": "GetContentmanagementSecurityprofile",
    "signature": "GetContentmanagementSecurityprofile(securityProfileId)",
    "parameters": [
      {
        "name": "securityProfileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Securityprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar securityProfileId string // Security Profile Id\n// Get a Security Profile\ndata, response, err := apiInstance.GetContentmanagementSecurityprofile(securityProfileId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementSecurityprofile: %v\\n\", err)\n}"
  },
  "getcontentmanagementsecurityprofiles": {
    "operationId": "getcontentmanagementsecurityprofiles",
    "functionName": "GetContentmanagementSecurityprofiles",
    "signature": "GetContentmanagementSecurityprofiles()",
    "return": "Securityprofileentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\n// Get a List of Security Profiles\ndata, response, err := apiInstance.GetContentmanagementSecurityprofiles()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementSecurityprofiles: %v\\n\", err)\n}"
  },
  "getcontentmanagementshare": {
    "operationId": "getcontentmanagementshare",
    "functionName": "GetContentmanagementShare",
    "signature": "GetContentmanagementShare(shareId, expand)",
    "parameters": [
      {
        "name": "shareId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Share",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar shareId string // Share ID\nvar expand []string // Which fields, if any, to expand.\n// Retrieve details about an existing share.\ndata, response, err := apiInstance.GetContentmanagementShare(shareId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementShare: %v\\n\", err)\n}"
  },
  "getcontentmanagementsharedsharedid": {
    "operationId": "getcontentmanagementsharedsharedid",
    "functionName": "GetContentmanagementSharedSharedId",
    "signature": "GetContentmanagementSharedSharedId(sharedId, redirect, disposition, contentType, expand)",
    "parameters": [
      {
        "name": "sharedId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "redirect",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "disposition",
        "type": "string",
        "required": "false"
      },
      {
        "name": "contentType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Sharedresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar sharedId string // Shared ID\nvar redirect bool // Turn on or off redirect\nvar disposition string // Request how the share content will be downloaded: attached as a file or inline. Default is attachment.\nvar contentType string // The requested format for the specified document. If supported, the document will be returned in that format. Example contentType=audio/wav\nvar expand string // Expand some document fields\n// Get shared documents. Securely download a shared document.\ndata, response, err := apiInstance.GetContentmanagementSharedSharedId(sharedId, redirect, disposition, contentType, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementSharedSharedId: %v\\n\", err)\n}"
  },
  "getcontentmanagementshares": {
    "operationId": "getcontentmanagementshares",
    "functionName": "GetContentmanagementShares",
    "signature": "GetContentmanagementShares(entityId, expand, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "entityId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Shareentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar entityId string // Filters the shares returned to only the entity specified by the value of this parameter.\nvar expand []string // Which fields, if any, to expand.\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Gets a list of shares.  You must specify at least one filter (e.g. entityId).\ndata, response, err := apiInstance.GetContentmanagementShares(entityId, expand, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementShares: %v\\n\", err)\n}"
  },
  "getcontentmanagementstatus": {
    "operationId": "getcontentmanagementstatus",
    "functionName": "GetContentmanagementStatus",
    "signature": "GetContentmanagementStatus(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Commandstatusentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of statuses for pending operations\ndata, response, err := apiInstance.GetContentmanagementStatus(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementStatus: %v\\n\", err)\n}"
  },
  "getcontentmanagementstatusstatusid": {
    "operationId": "getcontentmanagementstatusstatusid",
    "functionName": "GetContentmanagementStatusStatusId",
    "signature": "GetContentmanagementStatusStatusId(statusId)",
    "parameters": [
      {
        "name": "statusId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Commandstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar statusId string // Status ID\n// Get a status.\ndata, response, err := apiInstance.GetContentmanagementStatusStatusId(statusId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementStatusStatusId: %v\\n\", err)\n}"
  },
  "getcontentmanagementusage": {
    "operationId": "getcontentmanagementusage",
    "functionName": "GetContentmanagementUsage",
    "signature": "GetContentmanagementUsage()",
    "return": "Usage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\n// Get usage details.\ndata, response, err := apiInstance.GetContentmanagementUsage()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementUsage: %v\\n\", err)\n}"
  },
  "getcontentmanagementworkspace": {
    "operationId": "getcontentmanagementworkspace",
    "functionName": "GetContentmanagementWorkspace",
    "signature": "GetContentmanagementWorkspace(workspaceId, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Workspace",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar expand []string // Which fields, if any, to expand.\n// Get a workspace.\ndata, response, err := apiInstance.GetContentmanagementWorkspace(workspaceId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementWorkspace: %v\\n\", err)\n}"
  },
  "getcontentmanagementworkspacedocuments": {
    "operationId": "getcontentmanagementworkspacedocuments",
    "functionName": "GetContentmanagementWorkspaceDocuments",
    "signature": "GetContentmanagementWorkspaceDocuments(workspaceId, expand, pageSize, pageNumber, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Documententitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar expand []string // Which fields, if any, to expand.\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // name or dateCreated\nvar sortOrder string // ascending or descending\n// Get a list of documents.\ndata, response, err := apiInstance.GetContentmanagementWorkspaceDocuments(workspaceId, expand, pageSize, pageNumber, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementWorkspaceDocuments: %v\\n\", err)\n}"
  },
  "getcontentmanagementworkspacemember": {
    "operationId": "getcontentmanagementworkspacemember",
    "functionName": "GetContentmanagementWorkspaceMember",
    "signature": "GetContentmanagementWorkspaceMember(workspaceId, memberId, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Workspacemember",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar memberId string // Member ID\nvar expand []string // Which fields, if any, to expand.\n// Get a workspace member\ndata, response, err := apiInstance.GetContentmanagementWorkspaceMember(workspaceId, memberId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementWorkspaceMember: %v\\n\", err)\n}"
  },
  "getcontentmanagementworkspacemembers": {
    "operationId": "getcontentmanagementworkspacemembers",
    "functionName": "GetContentmanagementWorkspaceMembers",
    "signature": "GetContentmanagementWorkspaceMembers(workspaceId, pageSize, pageNumber, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Workspacememberentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand []string // Which fields, if any, to expand.\n// Get a list workspace members\ndata, response, err := apiInstance.GetContentmanagementWorkspaceMembers(workspaceId, pageSize, pageNumber, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementWorkspaceMembers: %v\\n\", err)\n}"
  },
  "getcontentmanagementworkspacetagvalue": {
    "operationId": "getcontentmanagementworkspacetagvalue",
    "functionName": "GetContentmanagementWorkspaceTagvalue",
    "signature": "GetContentmanagementWorkspaceTagvalue(workspaceId, tagId, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "tagId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Tagvalue",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar tagId string // Tag ID\nvar expand []string // Which fields, if any, to expand.\n// Get a workspace tag\ndata, response, err := apiInstance.GetContentmanagementWorkspaceTagvalue(workspaceId, tagId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementWorkspaceTagvalue: %v\\n\", err)\n}"
  },
  "getcontentmanagementworkspacetagvalues": {
    "operationId": "getcontentmanagementworkspacetagvalues",
    "functionName": "GetContentmanagementWorkspaceTagvalues",
    "signature": "GetContentmanagementWorkspaceTagvalues(workspaceId, value, pageSize, pageNumber, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "value",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Tagvalueentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar value string // filter the list of tags returned\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand []string // Which fields, if any, to expand.\n// Get a list of workspace tags\ndata, response, err := apiInstance.GetContentmanagementWorkspaceTagvalues(workspaceId, value, pageSize, pageNumber, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementWorkspaceTagvalues: %v\\n\", err)\n}"
  },
  "getcontentmanagementworkspaces": {
    "operationId": "getcontentmanagementworkspaces",
    "functionName": "GetContentmanagementWorkspaces",
    "signature": "GetContentmanagementWorkspaces(pageSize, pageNumber, access, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "access",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Workspaceentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar access []string // Requested access level.\nvar expand []string // Which fields, if any, to expand.\n// Get a list of workspaces.\ndata, response, err := apiInstance.GetContentmanagementWorkspaces(pageSize, pageNumber, access, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetContentmanagementWorkspaces: %v\\n\", err)\n}"
  },
  "postcontentmanagementauditquery": {
    "operationId": "postcontentmanagementauditquery",
    "functionName": "PostContentmanagementAuditquery",
    "signature": "PostContentmanagementAuditquery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Contentqueryrequest",
        "required": "true"
      }
    ],
    "return": "Queryresults",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar body platformclientv2.Contentqueryrequest // Allows for a filtered query returning facet information\n// Query audits\ndata, response, err := apiInstance.PostContentmanagementAuditquery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostContentmanagementAuditquery: %v\\n\", err)\n}"
  },
  "postcontentmanagementdocument": {
    "operationId": "postcontentmanagementdocument",
    "functionName": "PostContentmanagementDocument",
    "signature": "PostContentmanagementDocument(documentId, body, expand, override)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Documentupdate",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "override",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Document",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar documentId string // Document ID\nvar body platformclientv2.Documentupdate // Document\nvar expand string // Expand some document fields\nvar override bool // Override any lock on the document\n// Update a document.\ndata, response, err := apiInstance.PostContentmanagementDocument(documentId, body, expand, override)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostContentmanagementDocument: %v\\n\", err)\n}"
  },
  "postcontentmanagementdocumentcontent": {
    "operationId": "postcontentmanagementdocumentcontent",
    "functionName": "PostContentmanagementDocumentContent",
    "signature": "PostContentmanagementDocumentContent(documentId, body, override)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Replacerequest",
        "required": "true"
      },
      {
        "name": "override",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Replaceresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar documentId string // Document ID\nvar body platformclientv2.Replacerequest // Replace Request\nvar override bool // Override any lock on the document\n// Replace the contents of a document.\ndata, response, err := apiInstance.PostContentmanagementDocumentContent(documentId, body, override)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostContentmanagementDocumentContent: %v\\n\", err)\n}"
  },
  "postcontentmanagementdocuments": {
    "operationId": "postcontentmanagementdocuments",
    "functionName": "PostContentmanagementDocuments",
    "signature": "PostContentmanagementDocuments(body, copySource, moveSource, override)",
    "parameters": [
      {
        "name": "body",
        "type": "Documentupload",
        "required": "true"
      },
      {
        "name": "copySource",
        "type": "string",
        "required": "false"
      },
      {
        "name": "moveSource",
        "type": "string",
        "required": "false"
      },
      {
        "name": "override",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Document",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar body platformclientv2.Documentupload // Document\nvar copySource string // Copy a document within a workspace or to a new workspace. Provide a document ID as the copy source.\nvar moveSource string // Move a document to a new workspace. Provide a document ID as the move source.\nvar override bool // Override any lock on the source document\n// Add a document.\ndata, response, err := apiInstance.PostContentmanagementDocuments(body, copySource, moveSource, override)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostContentmanagementDocuments: %v\\n\", err)\n}"
  },
  "postcontentmanagementquery": {
    "operationId": "postcontentmanagementquery",
    "functionName": "PostContentmanagementQuery",
    "signature": "PostContentmanagementQuery(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "Queryrequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Queryresults",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar body platformclientv2.Queryrequest // Allows for a filtered query returning facet information\nvar expand string // Expand some document fields\n// Query content\ndata, response, err := apiInstance.PostContentmanagementQuery(body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostContentmanagementQuery: %v\\n\", err)\n}"
  },
  "postcontentmanagementshares": {
    "operationId": "postcontentmanagementshares",
    "functionName": "PostContentmanagementShares",
    "signature": "PostContentmanagementShares(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createsharerequest",
        "required": "true"
      }
    ],
    "return": "Createshareresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar body platformclientv2.Createsharerequest // CreateShareRequest - entity id and type and a single member or list of members are required\n// Creates a new share or updates an existing share if the entity has already been shared\ndata, response, err := apiInstance.PostContentmanagementShares(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostContentmanagementShares: %v\\n\", err)\n}"
  },
  "postcontentmanagementworkspacetagvalues": {
    "operationId": "postcontentmanagementworkspacetagvalues",
    "functionName": "PostContentmanagementWorkspaceTagvalues",
    "signature": "PostContentmanagementWorkspaceTagvalues(workspaceId, body)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Tagvalue",
        "required": "true"
      }
    ],
    "return": "Tagvalue",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar body platformclientv2.Tagvalue // tag\n// Create a workspace tag\ndata, response, err := apiInstance.PostContentmanagementWorkspaceTagvalues(workspaceId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostContentmanagementWorkspaceTagvalues: %v\\n\", err)\n}"
  },
  "postcontentmanagementworkspacetagvaluesquery": {
    "operationId": "postcontentmanagementworkspacetagvaluesquery",
    "functionName": "PostContentmanagementWorkspaceTagvaluesQuery",
    "signature": "PostContentmanagementWorkspaceTagvaluesQuery(workspaceId, body, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Tagqueryrequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Tagvalueentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar body platformclientv2.Tagqueryrequest // query\nvar expand []string // Which fields, if any, to expand.\n// Perform a prefix query on tags in the workspace\ndata, response, err := apiInstance.PostContentmanagementWorkspaceTagvaluesQuery(workspaceId, body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostContentmanagementWorkspaceTagvaluesQuery: %v\\n\", err)\n}"
  },
  "postcontentmanagementworkspaces": {
    "operationId": "postcontentmanagementworkspaces",
    "functionName": "PostContentmanagementWorkspaces",
    "signature": "PostContentmanagementWorkspaces(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Workspacecreate",
        "required": "true"
      }
    ],
    "return": "Workspace",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar body platformclientv2.Workspacecreate // Workspace\n// Create a group workspace\ndata, response, err := apiInstance.PostContentmanagementWorkspaces(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostContentmanagementWorkspaces: %v\\n\", err)\n}"
  },
  "putcontentmanagementworkspace": {
    "operationId": "putcontentmanagementworkspace",
    "functionName": "PutContentmanagementWorkspace",
    "signature": "PutContentmanagementWorkspace(workspaceId, body)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workspace",
        "required": "true"
      }
    ],
    "return": "Workspace",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar body platformclientv2.Workspace // Workspace\n// Update a workspace\ndata, response, err := apiInstance.PutContentmanagementWorkspace(workspaceId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutContentmanagementWorkspace: %v\\n\", err)\n}"
  },
  "putcontentmanagementworkspacemember": {
    "operationId": "putcontentmanagementworkspacemember",
    "functionName": "PutContentmanagementWorkspaceMember",
    "signature": "PutContentmanagementWorkspaceMember(workspaceId, memberId, body)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workspacemember",
        "required": "true"
      }
    ],
    "return": "Workspacemember",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar memberId string // Member ID\nvar body platformclientv2.Workspacemember // Workspace Member\n// Add a member to a workspace\ndata, response, err := apiInstance.PutContentmanagementWorkspaceMember(workspaceId, memberId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutContentmanagementWorkspaceMember: %v\\n\", err)\n}"
  },
  "putcontentmanagementworkspacetagvalue": {
    "operationId": "putcontentmanagementworkspacetagvalue",
    "functionName": "PutContentmanagementWorkspaceTagvalue",
    "signature": "PutContentmanagementWorkspaceTagvalue(workspaceId, tagId, body)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "tagId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Tagvalue",
        "required": "true"
      }
    ],
    "return": "Tagvalue",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewContentManagementApiWithConfig(config)\n\nvar workspaceId string // Workspace ID\nvar tagId string // Tag ID\nvar body platformclientv2.Tagvalue // Workspace\n// Update a workspace tag. Will update all documents with the new tag value.\ndata, response, err := apiInstance.PutContentmanagementWorkspaceTagvalue(workspaceId, tagId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutContentmanagementWorkspaceTagvalue: %v\\n\", err)\n}"
  },
  "deleteconversationparticipantcode": {
    "operationId": "deleteconversationparticipantcode",
    "functionName": "DeleteConversationParticipantCode",
    "signature": "DeleteConversationParticipantCode(conversationId, participantId, addCommunicationCode)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "addCommunicationCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar addCommunicationCode string // addCommunicationCode\n// Delete a code used to add a communication to this participant\nresponse, err := apiInstance.DeleteConversationParticipantCode(conversationId, participantId, addCommunicationCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationParticipantCode: %v\\n\", err)\n}"
  },
  "deleteconversationparticipantflaggedreason": {
    "operationId": "deleteconversationparticipantflaggedreason",
    "functionName": "DeleteConversationParticipantFlaggedreason",
    "signature": "DeleteConversationParticipantFlaggedreason(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\n// Remove flagged reason from conversation participant.\nresponse, err := apiInstance.DeleteConversationParticipantFlaggedreason(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationParticipantFlaggedreason: %v\\n\", err)\n}"
  },
  "deleteconversationscallparticipantconsult": {
    "operationId": "deleteconversationscallparticipantconsult",
    "functionName": "DeleteConversationsCallParticipantConsult",
    "signature": "DeleteConversationsCallParticipantConsult(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Cancel the transfer\nresponse, err := apiInstance.DeleteConversationsCallParticipantConsult(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsCallParticipantConsult: %v\\n\", err)\n}"
  },
  "deleteconversationsemailmessagesdraftattachment": {
    "operationId": "deleteconversationsemailmessagesdraftattachment",
    "functionName": "DeleteConversationsEmailMessagesDraftAttachment",
    "signature": "DeleteConversationsEmailMessagesDraftAttachment(conversationId, attachmentId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attachmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar attachmentId string // attachmentId\n// Delete attachment from draft\nresponse, err := apiInstance.DeleteConversationsEmailMessagesDraftAttachment(conversationId, attachmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsEmailMessagesDraftAttachment: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagescachedmediacachedmediaitemid": {
    "operationId": "deleteconversationsmessagescachedmediacachedmediaitemid",
    "functionName": "DeleteConversationsMessagesCachedmediaCachedMediaItemId",
    "signature": "DeleteConversationsMessagesCachedmediaCachedMediaItemId(cachedMediaItemId)",
    "parameters": [
      {
        "name": "cachedMediaItemId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar cachedMediaItemId string // cachedMediaItemId\n// Remove a cached media item asychronously\nresponse, err := apiInstance.DeleteConversationsMessagesCachedmediaCachedMediaItemId(cachedMediaItemId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagesCachedmediaCachedMediaItemId: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagingintegrationsfacebookintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationsfacebookintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsFacebookIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsFacebookIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\n// Delete a Facebook messaging integration\nresponse, err := apiInstance.DeleteConversationsMessagingIntegrationsFacebookIntegrationId(integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagingIntegrationsFacebookIntegrationId: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagingintegrationsinstagramintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationsinstagramintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsInstagramIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsInstagramIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\n// Delete Instagram messaging integration\nresponse, err := apiInstance.DeleteConversationsMessagingIntegrationsInstagramIntegrationId(integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagingIntegrationsInstagramIntegrationId: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagingintegrationslineintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationslineintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsLineIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsLineIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\n// Delete a LINE messenger integration\nresponse, err := apiInstance.DeleteConversationsMessagingIntegrationsLineIntegrationId(integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagingIntegrationsLineIntegrationId: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagingintegrationsopenintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationsopenintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsOpenIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsOpenIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\n// Delete an Open messaging integration\nresponse, err := apiInstance.DeleteConversationsMessagingIntegrationsOpenIntegrationId(integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagingIntegrationsOpenIntegrationId: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagingintegrationstwitterintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationstwitterintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsTwitterIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsTwitterIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\n// Delete a Twitter messaging integration\nresponse, err := apiInstance.DeleteConversationsMessagingIntegrationsTwitterIntegrationId(integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagingIntegrationsTwitterIntegrationId: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagingintegrationswhatsappintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationswhatsappintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsWhatsappIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Whatsappintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\n// Delete a WhatsApp messaging integration\ndata, response, err := apiInstance.DeleteConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagingIntegrationsWhatsappIntegrationId: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagingsetting": {
    "operationId": "deleteconversationsmessagingsetting",
    "functionName": "DeleteConversationsMessagingSetting",
    "signature": "DeleteConversationsMessagingSetting(messageSettingId)",
    "parameters": [
      {
        "name": "messageSettingId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar messageSettingId string // Message Setting ID\n// Delete a messaging setting\nresponse, err := apiInstance.DeleteConversationsMessagingSetting(messageSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagingSetting: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagingsettingsdefault": {
    "operationId": "deleteconversationsmessagingsettingsdefault",
    "functionName": "DeleteConversationsMessagingSettingsDefault",
    "signature": "DeleteConversationsMessagingSettingsDefault()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Delete the organization's default setting, a global default will be applied to integrations without settings\nresponse, err := apiInstance.DeleteConversationsMessagingSettingsDefault()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagingSettingsDefault: %v\\n\", err)\n}"
  },
  "deleteconversationsmessagingsupportedcontentsupportedcontentid": {
    "operationId": "deleteconversationsmessagingsupportedcontentsupportedcontentid",
    "functionName": "DeleteConversationsMessagingSupportedcontentSupportedContentId",
    "signature": "DeleteConversationsMessagingSupportedcontentSupportedContentId(supportedContentId)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar supportedContentId string // Supported Content ID\n// Delete a supported content profile\nresponse, err := apiInstance.DeleteConversationsMessagingSupportedcontentSupportedContentId(supportedContentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationsMessagingSupportedcontentSupportedContentId: %v\\n\", err)\n}"
  },
  "getconversation": {
    "operationId": "getconversation",
    "functionName": "GetConversation",
    "signature": "GetConversation(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\n// Get conversation\ndata, response, err := apiInstance.GetConversation(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversation: %v\\n\", err)\n}"
  },
  "getconversationparticipantsecureivrsession": {
    "operationId": "getconversationparticipantsecureivrsession",
    "functionName": "GetConversationParticipantSecureivrsession",
    "signature": "GetConversationParticipantSecureivrsession(conversationId, participantId, secureSessionId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "secureSessionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Securesession",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar secureSessionId string // secure IVR session ID\n// Fetch info on a secure session\ndata, response, err := apiInstance.GetConversationParticipantSecureivrsession(conversationId, participantId, secureSessionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationParticipantSecureivrsession: %v\\n\", err)\n}"
  },
  "getconversationparticipantsecureivrsessions": {
    "operationId": "getconversationparticipantsecureivrsessions",
    "functionName": "GetConversationParticipantSecureivrsessions",
    "signature": "GetConversationParticipantSecureivrsessions(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Securesessionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\n// Get a list of secure sessions for this participant.\ndata, response, err := apiInstance.GetConversationParticipantSecureivrsessions(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationParticipantSecureivrsessions: %v\\n\", err)\n}"
  },
  "getconversationparticipantwrapup": {
    "operationId": "getconversationparticipantwrapup",
    "functionName": "GetConversationParticipantWrapup",
    "signature": "GetConversationParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation participant. \ndata, response, err := apiInstance.GetConversationParticipantWrapup(conversationId, participantId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationParticipantWrapup: %v\\n\", err)\n}"
  },
  "getconversationparticipantwrapupcodes": {
    "operationId": "getconversationparticipantwrapupcodes",
    "functionName": "GetConversationParticipantWrapupcodes",
    "signature": "GetConversationParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\n// Get list of wrapup codes for this conversation participant\ndata, response, err := apiInstance.GetConversationParticipantWrapupcodes(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationParticipantWrapupcodes: %v\\n\", err)\n}"
  },
  "getconversationsecureattributes": {
    "operationId": "getconversationsecureattributes",
    "functionName": "GetConversationSecureattributes",
    "signature": "GetConversationSecureattributes(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Conversationsecureattributes",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\n// Get the secure attributes on a conversation.\ndata, response, err := apiInstance.GetConversationSecureattributes(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationSecureattributes: %v\\n\", err)\n}"
  },
  "getconversations": {
    "operationId": "getconversations",
    "functionName": "GetConversations",
    "signature": "GetConversations(communicationType)",
    "parameters": [
      {
        "name": "communicationType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Conversationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar communicationType string // Call or Chat communication filtering\n// Get active conversations for the logged in user\ndata, response, err := apiInstance.GetConversations(communicationType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversations: %v\\n\", err)\n}"
  },
  "getconversationscall": {
    "operationId": "getconversationscall",
    "functionName": "GetConversationsCall",
    "signature": "GetConversationsCall(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Callconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get call conversation\ndata, response, err := apiInstance.GetConversationsCall(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCall: %v\\n\", err)\n}"
  },
  "getconversationscallparticipantcommunicationwrapup": {
    "operationId": "getconversationscallparticipantcommunicationwrapup",
    "functionName": "GetConversationsCallParticipantCommunicationWrapup",
    "signature": "GetConversationsCallParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation communication. \ndata, response, err := apiInstance.GetConversationsCallParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "getconversationscallparticipantwrapup": {
    "operationId": "getconversationscallparticipantwrapup",
    "functionName": "GetConversationsCallParticipantWrapup",
    "signature": "GetConversationsCallParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation participant. \ndata, response, err := apiInstance.GetConversationsCallParticipantWrapup(conversationId, participantId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallParticipantWrapup: %v\\n\", err)\n}"
  },
  "getconversationscallparticipantwrapupcodes": {
    "operationId": "getconversationscallparticipantwrapupcodes",
    "functionName": "GetConversationsCallParticipantWrapupcodes",
    "signature": "GetConversationsCallParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Get list of wrapup codes for this conversation participant\ndata, response, err := apiInstance.GetConversationsCallParticipantWrapupcodes(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallParticipantWrapupcodes: %v\\n\", err)\n}"
  },
  "getconversationscallback": {
    "operationId": "getconversationscallback",
    "functionName": "GetConversationsCallback",
    "signature": "GetConversationsCallback(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Callbackconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get callback conversation\ndata, response, err := apiInstance.GetConversationsCallback(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallback: %v\\n\", err)\n}"
  },
  "getconversationscallbackparticipantcommunicationwrapup": {
    "operationId": "getconversationscallbackparticipantcommunicationwrapup",
    "functionName": "GetConversationsCallbackParticipantCommunicationWrapup",
    "signature": "GetConversationsCallbackParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation communication. \ndata, response, err := apiInstance.GetConversationsCallbackParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallbackParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "getconversationscallbackparticipantwrapup": {
    "operationId": "getconversationscallbackparticipantwrapup",
    "functionName": "GetConversationsCallbackParticipantWrapup",
    "signature": "GetConversationsCallbackParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation participant. \ndata, response, err := apiInstance.GetConversationsCallbackParticipantWrapup(conversationId, participantId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallbackParticipantWrapup: %v\\n\", err)\n}"
  },
  "getconversationscallbackparticipantwrapupcodes": {
    "operationId": "getconversationscallbackparticipantwrapupcodes",
    "functionName": "GetConversationsCallbackParticipantWrapupcodes",
    "signature": "GetConversationsCallbackParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Get list of wrapup codes for this conversation participant\ndata, response, err := apiInstance.GetConversationsCallbackParticipantWrapupcodes(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallbackParticipantWrapupcodes: %v\\n\", err)\n}"
  },
  "getconversationscallbacks": {
    "operationId": "getconversationscallbacks",
    "functionName": "GetConversationsCallbacks",
    "signature": "GetConversationsCallbacks()",
    "return": "Callbackconversationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get active callback conversations for the logged in user\ndata, response, err := apiInstance.GetConversationsCallbacks()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallbacks: %v\\n\", err)\n}"
  },
  "getconversationscalls": {
    "operationId": "getconversationscalls",
    "functionName": "GetConversationsCalls",
    "signature": "GetConversationsCalls()",
    "return": "Callconversationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get active call conversations for the logged in user\ndata, response, err := apiInstance.GetConversationsCalls()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCalls: %v\\n\", err)\n}"
  },
  "getconversationscallshistory": {
    "operationId": "getconversationscallshistory",
    "functionName": "GetConversationsCallsHistory",
    "signature": "GetConversationsCallsHistory(pageSize, pageNumber, interval, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Callhistoryconversationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size, maximum 50\nvar pageNumber int // Page number\nvar interval string // Interval string; format is ISO-8601. Separate start and end times with forward slash '/'\nvar expand []string // Which fields, if any, to expand.\n// Get call history\ndata, response, err := apiInstance.GetConversationsCallsHistory(pageSize, pageNumber, interval, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallsHistory: %v\\n\", err)\n}"
  },
  "getconversationscallsmaximumconferenceparties": {
    "operationId": "getconversationscallsmaximumconferenceparties",
    "functionName": "GetConversationsCallsMaximumconferenceparties",
    "signature": "GetConversationsCallsMaximumconferenceparties()",
    "return": "Maxparticipants",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get the maximum number of participants that this user can have on a conference\ndata, response, err := apiInstance.GetConversationsCallsMaximumconferenceparties()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCallsMaximumconferenceparties: %v\\n\", err)\n}"
  },
  "getconversationschat": {
    "operationId": "getconversationschat",
    "functionName": "GetConversationsChat",
    "signature": "GetConversationsChat(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Chatconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get chat conversation\ndata, response, err := apiInstance.GetConversationsChat(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsChat: %v\\n\", err)\n}"
  },
  "getconversationschatmessage": {
    "operationId": "getconversationschatmessage",
    "functionName": "GetConversationsChatMessage",
    "signature": "GetConversationsChatMessage(conversationId, messageId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webchatmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar messageId string // messageId\n// Get a web chat conversation message\ndata, response, err := apiInstance.GetConversationsChatMessage(conversationId, messageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsChatMessage: %v\\n\", err)\n}"
  },
  "getconversationschatmessages": {
    "operationId": "getconversationschatmessages",
    "functionName": "GetConversationsChatMessages",
    "signature": "GetConversationsChatMessages(conversationId, after, before, sortOrder, maxResults)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "maxResults",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Webchatmessageentitylist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar after string // If specified, get the messages chronologically after the id of this message\nvar before string // If specified, get the messages chronologically before the id of this message\nvar sortOrder string // Sort order\nvar maxResults int // Limit the returned number of messages, up to a maximum of 100\n// Get the messages of a chat conversation.\ndata, response, err := apiInstance.GetConversationsChatMessages(conversationId, after, before, sortOrder, maxResults)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsChatMessages: %v\\n\", err)\n}"
  },
  "getconversationschatparticipantcommunicationwrapup": {
    "operationId": "getconversationschatparticipantcommunicationwrapup",
    "functionName": "GetConversationsChatParticipantCommunicationWrapup",
    "signature": "GetConversationsChatParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation communication. \ndata, response, err := apiInstance.GetConversationsChatParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsChatParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "getconversationschatparticipantwrapup": {
    "operationId": "getconversationschatparticipantwrapup",
    "functionName": "GetConversationsChatParticipantWrapup",
    "signature": "GetConversationsChatParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation participant. \ndata, response, err := apiInstance.GetConversationsChatParticipantWrapup(conversationId, participantId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsChatParticipantWrapup: %v\\n\", err)\n}"
  },
  "getconversationschatparticipantwrapupcodes": {
    "operationId": "getconversationschatparticipantwrapupcodes",
    "functionName": "GetConversationsChatParticipantWrapupcodes",
    "signature": "GetConversationsChatParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Get list of wrapup codes for this conversation participant\ndata, response, err := apiInstance.GetConversationsChatParticipantWrapupcodes(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsChatParticipantWrapupcodes: %v\\n\", err)\n}"
  },
  "getconversationschats": {
    "operationId": "getconversationschats",
    "functionName": "GetConversationsChats",
    "signature": "GetConversationsChats()",
    "return": "Chatconversationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get active chat conversations for the logged in user\ndata, response, err := apiInstance.GetConversationsChats()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsChats: %v\\n\", err)\n}"
  },
  "getconversationscobrowsesession": {
    "operationId": "getconversationscobrowsesession",
    "functionName": "GetConversationsCobrowsesession",
    "signature": "GetConversationsCobrowsesession(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Cobrowseconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get cobrowse conversation\ndata, response, err := apiInstance.GetConversationsCobrowsesession(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCobrowsesession: %v\\n\", err)\n}"
  },
  "getconversationscobrowsesessionparticipantcommunicationwrapup": {
    "operationId": "getconversationscobrowsesessionparticipantcommunicationwrapup",
    "functionName": "GetConversationsCobrowsesessionParticipantCommunicationWrapup",
    "signature": "GetConversationsCobrowsesessionParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation communication. \ndata, response, err := apiInstance.GetConversationsCobrowsesessionParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCobrowsesessionParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "getconversationscobrowsesessionparticipantwrapup": {
    "operationId": "getconversationscobrowsesessionparticipantwrapup",
    "functionName": "GetConversationsCobrowsesessionParticipantWrapup",
    "signature": "GetConversationsCobrowsesessionParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation participant. \ndata, response, err := apiInstance.GetConversationsCobrowsesessionParticipantWrapup(conversationId, participantId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCobrowsesessionParticipantWrapup: %v\\n\", err)\n}"
  },
  "getconversationscobrowsesessionparticipantwrapupcodes": {
    "operationId": "getconversationscobrowsesessionparticipantwrapupcodes",
    "functionName": "GetConversationsCobrowsesessionParticipantWrapupcodes",
    "signature": "GetConversationsCobrowsesessionParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Get list of wrapup codes for this conversation participant\ndata, response, err := apiInstance.GetConversationsCobrowsesessionParticipantWrapupcodes(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCobrowsesessionParticipantWrapupcodes: %v\\n\", err)\n}"
  },
  "getconversationscobrowsesessions": {
    "operationId": "getconversationscobrowsesessions",
    "functionName": "GetConversationsCobrowsesessions",
    "signature": "GetConversationsCobrowsesessions()",
    "return": "Cobrowseconversationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get active cobrowse conversations for the logged in user\ndata, response, err := apiInstance.GetConversationsCobrowsesessions()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsCobrowsesessions: %v\\n\", err)\n}"
  },
  "getconversationsemail": {
    "operationId": "getconversationsemail",
    "functionName": "GetConversationsEmail",
    "signature": "GetConversationsEmail(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emailconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get email conversation\ndata, response, err := apiInstance.GetConversationsEmail(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsEmail: %v\\n\", err)\n}"
  },
  "getconversationsemailmessage": {
    "operationId": "getconversationsemailmessage",
    "functionName": "GetConversationsEmailMessage",
    "signature": "GetConversationsEmailMessage(conversationId, messageId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emailmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar messageId string // messageId\n// Get conversation message\ndata, response, err := apiInstance.GetConversationsEmailMessage(conversationId, messageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsEmailMessage: %v\\n\", err)\n}"
  },
  "getconversationsemailmessages": {
    "operationId": "getconversationsemailmessages",
    "functionName": "GetConversationsEmailMessages",
    "signature": "GetConversationsEmailMessages(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emailmessagepreviewlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get conversation messages\ndata, response, err := apiInstance.GetConversationsEmailMessages(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsEmailMessages: %v\\n\", err)\n}"
  },
  "getconversationsemailmessagesdraft": {
    "operationId": "getconversationsemailmessagesdraft",
    "functionName": "GetConversationsEmailMessagesDraft",
    "signature": "GetConversationsEmailMessagesDraft(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emailmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get conversation draft reply\ndata, response, err := apiInstance.GetConversationsEmailMessagesDraft(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsEmailMessagesDraft: %v\\n\", err)\n}"
  },
  "getconversationsemailparticipantcommunicationwrapup": {
    "operationId": "getconversationsemailparticipantcommunicationwrapup",
    "functionName": "GetConversationsEmailParticipantCommunicationWrapup",
    "signature": "GetConversationsEmailParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation communication. \ndata, response, err := apiInstance.GetConversationsEmailParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsEmailParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "getconversationsemailparticipantwrapup": {
    "operationId": "getconversationsemailparticipantwrapup",
    "functionName": "GetConversationsEmailParticipantWrapup",
    "signature": "GetConversationsEmailParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation participant. \ndata, response, err := apiInstance.GetConversationsEmailParticipantWrapup(conversationId, participantId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsEmailParticipantWrapup: %v\\n\", err)\n}"
  },
  "getconversationsemailparticipantwrapupcodes": {
    "operationId": "getconversationsemailparticipantwrapupcodes",
    "functionName": "GetConversationsEmailParticipantWrapupcodes",
    "signature": "GetConversationsEmailParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Get list of wrapup codes for this conversation participant\ndata, response, err := apiInstance.GetConversationsEmailParticipantWrapupcodes(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsEmailParticipantWrapupcodes: %v\\n\", err)\n}"
  },
  "getconversationsemailsettings": {
    "operationId": "getconversationsemailsettings",
    "functionName": "GetConversationsEmailSettings",
    "signature": "GetConversationsEmailSettings(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emailssettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get emails settings for a given conversation\ndata, response, err := apiInstance.GetConversationsEmailSettings(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsEmailSettings: %v\\n\", err)\n}"
  },
  "getconversationsemails": {
    "operationId": "getconversationsemails",
    "functionName": "GetConversationsEmails",
    "signature": "GetConversationsEmails()",
    "return": "Emailconversationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get active email conversations for the logged in user\ndata, response, err := apiInstance.GetConversationsEmails()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsEmails: %v\\n\", err)\n}"
  },
  "getconversationskeyconfiguration": {
    "operationId": "getconversationskeyconfiguration",
    "functionName": "GetConversationsKeyconfiguration",
    "signature": "GetConversationsKeyconfiguration(keyconfigurationsId)",
    "parameters": [
      {
        "name": "keyconfigurationsId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Conversationencryptionconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar keyconfigurationsId string // Key Configurations Id\n// Get the encryption key configurations\ndata, response, err := apiInstance.GetConversationsKeyconfiguration(keyconfigurationsId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsKeyconfiguration: %v\\n\", err)\n}"
  },
  "getconversationskeyconfigurations": {
    "operationId": "getconversationskeyconfigurations",
    "functionName": "GetConversationsKeyconfigurations",
    "signature": "GetConversationsKeyconfigurations()",
    "return": "Conversationencryptionconfigurationlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get a list of key configurations data\ndata, response, err := apiInstance.GetConversationsKeyconfigurations()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsKeyconfigurations: %v\\n\", err)\n}"
  },
  "getconversationsmessage": {
    "operationId": "getconversationsmessage",
    "functionName": "GetConversationsMessage",
    "signature": "GetConversationsMessage(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messageconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get message conversation\ndata, response, err := apiInstance.GetConversationsMessage(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessage: %v\\n\", err)\n}"
  },
  "getconversationsmessagecommunicationmessagesmediamediaid": {
    "operationId": "getconversationsmessagecommunicationmessagesmediamediaid",
    "functionName": "GetConversationsMessageCommunicationMessagesMediaMediaId",
    "signature": "GetConversationsMessageCommunicationMessagesMediaMediaId(conversationId, communicationId, mediaId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "mediaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messagemediadata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar communicationId string // communicationId\nvar mediaId string // mediaId\n// Get media\ndata, response, err := apiInstance.GetConversationsMessageCommunicationMessagesMediaMediaId(conversationId, communicationId, mediaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessageCommunicationMessagesMediaMediaId: %v\\n\", err)\n}"
  },
  "getconversationsmessagedetails": {
    "operationId": "getconversationsmessagedetails",
    "functionName": "GetConversationsMessageDetails",
    "signature": "GetConversationsMessageDetails(messageId, useNormalizedMessage)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "useNormalizedMessage",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Messagedata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar messageId string // messageId\nvar useNormalizedMessage bool // If true, response removes deprecated fields (textBody, media, stickers)\n// Get message\ndata, response, err := apiInstance.GetConversationsMessageDetails(messageId, useNormalizedMessage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessageDetails: %v\\n\", err)\n}"
  },
  "getconversationsmessagemessage": {
    "operationId": "getconversationsmessagemessage",
    "functionName": "GetConversationsMessageMessage",
    "signature": "GetConversationsMessageMessage(conversationId, messageId, useNormalizedMessage)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "useNormalizedMessage",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Messagedata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar messageId string // messageId\nvar useNormalizedMessage bool // If true, response removes deprecated fields (textBody, media, stickers)\n// Get conversation message\ndata, response, err := apiInstance.GetConversationsMessageMessage(conversationId, messageId, useNormalizedMessage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessageMessage: %v\\n\", err)\n}"
  },
  "getconversationsmessageparticipantcommunicationwrapup": {
    "operationId": "getconversationsmessageparticipantcommunicationwrapup",
    "functionName": "GetConversationsMessageParticipantCommunicationWrapup",
    "signature": "GetConversationsMessageParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation communication. \ndata, response, err := apiInstance.GetConversationsMessageParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessageParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "getconversationsmessageparticipantwrapup": {
    "operationId": "getconversationsmessageparticipantwrapup",
    "functionName": "GetConversationsMessageParticipantWrapup",
    "signature": "GetConversationsMessageParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation participant. \ndata, response, err := apiInstance.GetConversationsMessageParticipantWrapup(conversationId, participantId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessageParticipantWrapup: %v\\n\", err)\n}"
  },
  "getconversationsmessageparticipantwrapupcodes": {
    "operationId": "getconversationsmessageparticipantwrapupcodes",
    "functionName": "GetConversationsMessageParticipantWrapupcodes",
    "signature": "GetConversationsMessageParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Get list of wrapup codes for this conversation participant\ndata, response, err := apiInstance.GetConversationsMessageParticipantWrapupcodes(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessageParticipantWrapupcodes: %v\\n\", err)\n}"
  },
  "getconversationsmessages": {
    "operationId": "getconversationsmessages",
    "functionName": "GetConversationsMessages",
    "signature": "GetConversationsMessages()",
    "return": "Messageconversationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get active message conversations for the logged in user\ndata, response, err := apiInstance.GetConversationsMessages()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessages: %v\\n\", err)\n}"
  },
  "getconversationsmessagescachedmedia": {
    "operationId": "getconversationsmessagescachedmedia",
    "functionName": "GetConversationsMessagesCachedmedia",
    "signature": "GetConversationsMessagesCachedmedia(pageSize, pageNumber, urlParam)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "urlParam",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Cachedmediaitementitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar urlParam string // URL to search for\n// Get a list of cached media items\ndata, response, err := apiInstance.GetConversationsMessagesCachedmedia(pageSize, pageNumber, urlParam)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagesCachedmedia: %v\\n\", err)\n}"
  },
  "getconversationsmessagescachedmediacachedmediaitemid": {
    "operationId": "getconversationsmessagescachedmediacachedmediaitemid",
    "functionName": "GetConversationsMessagesCachedmediaCachedMediaItemId",
    "signature": "GetConversationsMessagesCachedmediaCachedMediaItemId(cachedMediaItemId)",
    "parameters": [
      {
        "name": "cachedMediaItemId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Cachedmediaitem",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar cachedMediaItemId string // cachedMediaItemId\n// Get a cached media item\ndata, response, err := apiInstance.GetConversationsMessagesCachedmediaCachedMediaItemId(cachedMediaItemId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagesCachedmediaCachedMediaItemId: %v\\n\", err)\n}"
  },
  "getconversationsmessagingfacebookapp": {
    "operationId": "getconversationsmessagingfacebookapp",
    "functionName": "GetConversationsMessagingFacebookApp",
    "signature": "GetConversationsMessagingFacebookApp()",
    "return": "Facebookappcredentials",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get Genesys Facebook App Id\ndata, response, err := apiInstance.GetConversationsMessagingFacebookApp()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingFacebookApp: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrations": {
    "operationId": "getconversationsmessagingintegrations",
    "functionName": "GetConversationsMessagingIntegrations",
    "signature": "GetConversationsMessagingIntegrations(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messagingSettingId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Messagingintegrationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand []string // Expand instructions for the return value.\nvar supportedContentId string // Filter integrations returned based on the supported content ID\nvar messagingSettingId string // Filter integrations returned based on the setting ID\n// Get a list of Integrations\ndata, response, err := apiInstance.GetConversationsMessagingIntegrations(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrations: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationsfacebook": {
    "operationId": "getconversationsmessagingintegrationsfacebook",
    "functionName": "GetConversationsMessagingIntegrationsFacebook",
    "signature": "GetConversationsMessagingIntegrationsFacebook(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messagingSettingId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Facebookintegrationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand instructions for the return value.\nvar supportedContentId string // Filter integrations returned based on the supported content ID\nvar messagingSettingId string // Filter integrations returned based on the setting ID\n// Get a list of Facebook Integrations\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsFacebook(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsFacebook: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationsfacebookintegrationid": {
    "operationId": "getconversationsmessagingintegrationsfacebookintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsFacebookIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Facebookintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar expand string // Expand instructions for the return value.\n// Get a Facebook messaging integration\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsFacebookIntegrationId: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationsinstagram": {
    "operationId": "getconversationsmessagingintegrationsinstagram",
    "functionName": "GetConversationsMessagingIntegrationsInstagram",
    "signature": "GetConversationsMessagingIntegrationsInstagram(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messagingSettingId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Instagramintegrationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand instructions for the return value.\nvar supportedContentId string // Filter integrations returned based on the supported content ID\nvar messagingSettingId string // Filter integrations returned based on the setting ID\n// Get a list of Instagram Integrations\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsInstagram(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsInstagram: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationsinstagramintegrationid": {
    "operationId": "getconversationsmessagingintegrationsinstagramintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsInstagramIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsInstagramIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Instagramintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar expand string // Expand instructions for the return value.\n// Get Instagram messaging integration\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsInstagramIntegrationId(integrationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsInstagramIntegrationId: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationsline": {
    "operationId": "getconversationsmessagingintegrationsline",
    "functionName": "GetConversationsMessagingIntegrationsLine",
    "signature": "GetConversationsMessagingIntegrationsLine(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messagingSettingId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Lineintegrationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand instructions for the return value.\nvar supportedContentId string // Filter integrations returned based on the supported content ID\nvar messagingSettingId string // Filter integrations returned based on the setting ID\n// Get a list of LINE messenger Integrations\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsLine(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsLine: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationslineintegrationid": {
    "operationId": "getconversationsmessagingintegrationslineintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsLineIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsLineIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Lineintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar expand string // Expand instructions for the return value.\n// Get a LINE messenger integration\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsLineIntegrationId(integrationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsLineIntegrationId: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationsopen": {
    "operationId": "getconversationsmessagingintegrationsopen",
    "functionName": "GetConversationsMessagingIntegrationsOpen",
    "signature": "GetConversationsMessagingIntegrationsOpen(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messagingSettingId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Openintegrationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand instructions for the return value.\nvar supportedContentId string // Filter integrations returned based on the supported content ID\nvar messagingSettingId string // Filter integrations returned based on the setting ID\n// Get a list of Open messaging integrations\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsOpen(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsOpen: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationsopenintegrationid": {
    "operationId": "getconversationsmessagingintegrationsopenintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsOpenIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsOpenIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Openintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar expand string // Expand instructions for the return value.\n// Get an Open messaging integration\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsOpenIntegrationId(integrationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsOpenIntegrationId: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationstwitter": {
    "operationId": "getconversationsmessagingintegrationstwitter",
    "functionName": "GetConversationsMessagingIntegrationsTwitter",
    "signature": "GetConversationsMessagingIntegrationsTwitter(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messagingSettingId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Twitterintegrationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand instructions for the return value.\nvar supportedContentId string // Filter integrations returned based on the supported content ID\nvar messagingSettingId string // Filter integrations returned based on the setting ID\n// Get a list of Twitter Integrations\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsTwitter(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsTwitter: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationstwitterintegrationid": {
    "operationId": "getconversationsmessagingintegrationstwitterintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsTwitterIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Twitterintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar expand string // Expand instructions for the return value.\n// Get a Twitter messaging integration\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsTwitterIntegrationId: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationswhatsapp": {
    "operationId": "getconversationsmessagingintegrationswhatsapp",
    "functionName": "GetConversationsMessagingIntegrationsWhatsapp",
    "signature": "GetConversationsMessagingIntegrationsWhatsapp(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messagingSettingId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Whatsappintegrationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand instructions for the return value.\nvar supportedContentId string // Filter integrations returned based on the supported content ID\nvar messagingSettingId string // Filter integrations returned based on the setting ID\n// Get a list of WhatsApp Integrations\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsWhatsapp(pageSize, pageNumber, expand, supportedContentId, messagingSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsWhatsapp: %v\\n\", err)\n}"
  },
  "getconversationsmessagingintegrationswhatsappintegrationid": {
    "operationId": "getconversationsmessagingintegrationswhatsappintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsWhatsappIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Whatsappintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar expand string // Expand instructions for the return value.\n// Get a WhatsApp messaging integration\ndata, response, err := apiInstance.GetConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingIntegrationsWhatsappIntegrationId: %v\\n\", err)\n}"
  },
  "getconversationsmessagingsetting": {
    "operationId": "getconversationsmessagingsetting",
    "functionName": "GetConversationsMessagingSetting",
    "signature": "GetConversationsMessagingSetting(messageSettingId)",
    "parameters": [
      {
        "name": "messageSettingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar messageSettingId string // Message Setting ID\n// Get a messaging setting\ndata, response, err := apiInstance.GetConversationsMessagingSetting(messageSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingSetting: %v\\n\", err)\n}"
  },
  "getconversationsmessagingsettings": {
    "operationId": "getconversationsmessagingsettings",
    "functionName": "GetConversationsMessagingSettings",
    "signature": "GetConversationsMessagingSettings(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Messagingconfiglisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of messaging settings\ndata, response, err := apiInstance.GetConversationsMessagingSettings(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingSettings: %v\\n\", err)\n}"
  },
  "getconversationsmessagingsettingsdefault": {
    "operationId": "getconversationsmessagingsettingsdefault",
    "functionName": "GetConversationsMessagingSettingsDefault",
    "signature": "GetConversationsMessagingSettingsDefault()",
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get the organization's default settings that will be used as the default when creating an integration.\ndata, response, err := apiInstance.GetConversationsMessagingSettingsDefault()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingSettingsDefault: %v\\n\", err)\n}"
  },
  "getconversationsmessagingsticker": {
    "operationId": "getconversationsmessagingsticker",
    "functionName": "GetConversationsMessagingSticker",
    "signature": "GetConversationsMessagingSticker(messengerType, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "messengerType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Messagingstickerentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar messengerType string // Messenger Type\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of Messaging Stickers\ndata, response, err := apiInstance.GetConversationsMessagingSticker(messengerType, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingSticker: %v\\n\", err)\n}"
  },
  "getconversationsmessagingsupportedcontent": {
    "operationId": "getconversationsmessagingsupportedcontent",
    "functionName": "GetConversationsMessagingSupportedcontent",
    "signature": "GetConversationsMessagingSupportedcontent(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Supportedcontentlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of Supported Content profiles\ndata, response, err := apiInstance.GetConversationsMessagingSupportedcontent(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingSupportedcontent: %v\\n\", err)\n}"
  },
  "getconversationsmessagingsupportedcontentdefault": {
    "operationId": "getconversationsmessagingsupportedcontentdefault",
    "functionName": "GetConversationsMessagingSupportedcontentDefault",
    "signature": "GetConversationsMessagingSupportedcontentDefault()",
    "return": "Supportedcontent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get the organization's default supported content profile that will be used as the default when creating an integration.\ndata, response, err := apiInstance.GetConversationsMessagingSupportedcontentDefault()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingSupportedcontentDefault: %v\\n\", err)\n}"
  },
  "getconversationsmessagingsupportedcontentsupportedcontentid": {
    "operationId": "getconversationsmessagingsupportedcontentsupportedcontentid",
    "functionName": "GetConversationsMessagingSupportedcontentSupportedContentId",
    "signature": "GetConversationsMessagingSupportedcontentSupportedContentId(supportedContentId)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Supportedcontent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar supportedContentId string // Supported Content ID\n// Get a supported content profile\ndata, response, err := apiInstance.GetConversationsMessagingSupportedcontentSupportedContentId(supportedContentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingSupportedcontentSupportedContentId: %v\\n\", err)\n}"
  },
  "getconversationsmessagingthreadingtimeline": {
    "operationId": "getconversationsmessagingthreadingtimeline",
    "functionName": "GetConversationsMessagingThreadingtimeline",
    "signature": "GetConversationsMessagingThreadingtimeline()",
    "return": "Conversationthreadingwindow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get conversation threading window timeline for each messaging type\ndata, response, err := apiInstance.GetConversationsMessagingThreadingtimeline()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsMessagingThreadingtimeline: %v\\n\", err)\n}"
  },
  "getconversationsscreenshareparticipantcommunicationwrapup": {
    "operationId": "getconversationsscreenshareparticipantcommunicationwrapup",
    "functionName": "GetConversationsScreenshareParticipantCommunicationWrapup",
    "signature": "GetConversationsScreenshareParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation communication. \ndata, response, err := apiInstance.GetConversationsScreenshareParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsScreenshareParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "getconversationssettings": {
    "operationId": "getconversationssettings",
    "functionName": "GetConversationsSettings",
    "signature": "GetConversationsSettings()",
    "return": "Settings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\n// Get Settings\ndata, response, err := apiInstance.GetConversationsSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsSettings: %v\\n\", err)\n}"
  },
  "getconversationssocialparticipantcommunicationwrapup": {
    "operationId": "getconversationssocialparticipantcommunicationwrapup",
    "functionName": "GetConversationsSocialParticipantCommunicationWrapup",
    "signature": "GetConversationsSocialParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation communication. \ndata, response, err := apiInstance.GetConversationsSocialParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsSocialParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "getconversationsvideodetails": {
    "operationId": "getconversationsvideodetails",
    "functionName": "GetConversationsVideoDetails",
    "signature": "GetConversationsVideoDetails(conferenceId)",
    "parameters": [
      {
        "name": "conferenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Videoconferencedetails",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conferenceId string // conferenceId\n// Get video conference details (e.g. the current number of active participants).\ndata, response, err := apiInstance.GetConversationsVideoDetails(conferenceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsVideoDetails: %v\\n\", err)\n}"
  },
  "getconversationsvideoparticipantcommunicationwrapup": {
    "operationId": "getconversationsvideoparticipantcommunicationwrapup",
    "functionName": "GetConversationsVideoParticipantCommunicationWrapup",
    "signature": "GetConversationsVideoParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Assignedwrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar provisional bool // Indicates if the wrap-up code is provisional.\n// Get the wrap-up for this conversation communication. \ndata, response, err := apiInstance.GetConversationsVideoParticipantCommunicationWrapup(conversationId, participantId, communicationId, provisional)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsVideoParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "getconversationsvideosmeeting": {
    "operationId": "getconversationsvideosmeeting",
    "functionName": "GetConversationsVideosMeeting",
    "signature": "GetConversationsVideosMeeting(meetingId)",
    "parameters": [
      {
        "name": "meetingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Meetingidrecord",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar meetingId string // meetingId\n// Gets a record for a given meetingId\ndata, response, err := apiInstance.GetConversationsVideosMeeting(meetingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationsVideosMeeting: %v\\n\", err)\n}"
  },
  "patchconversationparticipant": {
    "operationId": "patchconversationparticipant",
    "functionName": "PatchConversationParticipant",
    "signature": "PatchConversationParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar body platformclientv2.Mediaparticipantrequest // Update request\n// Update a participant.\nresponse, err := apiInstance.PatchConversationParticipant(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationParticipant: %v\\n\", err)\n}"
  },
  "patchconversationparticipantattributes": {
    "operationId": "patchconversationparticipantattributes",
    "functionName": "PatchConversationParticipantAttributes",
    "signature": "PatchConversationParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Participantattributes",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar body platformclientv2.Participantattributes // Participant attributes\n// Update the attributes on a conversation participant.\nresponse, err := apiInstance.PatchConversationParticipantAttributes(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationParticipantAttributes: %v\\n\", err)\n}"
  },
  "patchconversationsecureattributes": {
    "operationId": "patchconversationsecureattributes",
    "functionName": "PatchConversationSecureattributes",
    "signature": "PatchConversationSecureattributes(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversationsecureattributes",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar body platformclientv2.Conversationsecureattributes // Conversation Secure Attributes\n// Update the secure attributes on a conversation.\ndata, response, err := apiInstance.PatchConversationSecureattributes(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationSecureattributes: %v\\n\", err)\n}"
  },
  "patchconversationsaftercallworkconversationidparticipantcommunication": {
    "operationId": "patchconversationsaftercallworkconversationidparticipantcommunication",
    "functionName": "PatchConversationsAftercallworkConversationIdParticipantCommunication",
    "signature": "PatchConversationsAftercallworkConversationIdParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Aftercallworkupdate",
        "required": "true"
      }
    ],
    "return": "Aftercallworkupdate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Aftercallworkupdate // AfterCallWorkUpdate\n// Update after-call work for this conversation communication.\ndata, response, err := apiInstance.PatchConversationsAftercallworkConversationIdParticipantCommunication(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsAftercallworkConversationIdParticipantCommunication: %v\\n\", err)\n}"
  },
  "patchconversationscall": {
    "operationId": "patchconversationscall",
    "functionName": "PatchConversationsCall",
    "signature": "PatchConversationsCall(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Conversation // Conversation\n// Update a conversation by setting its recording state, merging in other conversations to create a conference, or disconnecting all of the participants\ndata, response, err := apiInstance.PatchConversationsCall(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCall: %v\\n\", err)\n}"
  },
  "patchconversationscallparticipant": {
    "operationId": "patchconversationscallparticipant",
    "functionName": "PatchConversationsCallParticipant",
    "signature": "PatchConversationsCallParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Mediaparticipantrequest // Participant request\n// Update conversation participant\nresponse, err := apiInstance.PatchConversationsCallParticipant(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCallParticipant: %v\\n\", err)\n}"
  },
  "patchconversationscallparticipantattributes": {
    "operationId": "patchconversationscallparticipantattributes",
    "functionName": "PatchConversationsCallParticipantAttributes",
    "signature": "PatchConversationsCallParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Participantattributes",
        "required": "true"
      }
    ],
    "return": "Participantattributes",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Participantattributes // Participant attributes\n// Update the attributes on a conversation participant.\ndata, response, err := apiInstance.PatchConversationsCallParticipantAttributes(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCallParticipantAttributes: %v\\n\", err)\n}"
  },
  "patchconversationscallparticipantcommunication": {
    "operationId": "patchconversationscallparticipantcommunication",
    "functionName": "PatchConversationsCallParticipantCommunication",
    "signature": "PatchConversationsCallParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Mediaparticipantrequest // Participant\n// Update conversation participant's communication by disconnecting it.\ndata, response, err := apiInstance.PatchConversationsCallParticipantCommunication(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCallParticipantCommunication: %v\\n\", err)\n}"
  },
  "patchconversationscallparticipantconsult": {
    "operationId": "patchconversationscallparticipantconsult",
    "functionName": "PatchConversationsCallParticipantConsult",
    "signature": "PatchConversationsCallParticipantConsult(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Consulttransferupdate",
        "required": "true"
      }
    ],
    "return": "Consulttransferresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Consulttransferupdate // new speak to\n// Change who can speak\ndata, response, err := apiInstance.PatchConversationsCallParticipantConsult(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCallParticipantConsult: %v\\n\", err)\n}"
  },
  "patchconversationscallback": {
    "operationId": "patchconversationscallback",
    "functionName": "PatchConversationsCallback",
    "signature": "PatchConversationsCallback(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Conversation // Conversation\n// Update a conversation by disconnecting all of the participants\ndata, response, err := apiInstance.PatchConversationsCallback(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCallback: %v\\n\", err)\n}"
  },
  "patchconversationscallbackparticipant": {
    "operationId": "patchconversationscallbackparticipant",
    "functionName": "PatchConversationsCallbackParticipant",
    "signature": "PatchConversationsCallbackParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Mediaparticipantrequest // Participant\n// Update conversation participant\nresponse, err := apiInstance.PatchConversationsCallbackParticipant(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCallbackParticipant: %v\\n\", err)\n}"
  },
  "patchconversationscallbackparticipantattributes": {
    "operationId": "patchconversationscallbackparticipantattributes",
    "functionName": "PatchConversationsCallbackParticipantAttributes",
    "signature": "PatchConversationsCallbackParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Participantattributes",
        "required": "true"
      }
    ],
    "return": "Participantattributes",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Participantattributes // Attributes\n// Update the attributes on a conversation participant.\ndata, response, err := apiInstance.PatchConversationsCallbackParticipantAttributes(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCallbackParticipantAttributes: %v\\n\", err)\n}"
  },
  "patchconversationscallbackparticipantcommunication": {
    "operationId": "patchconversationscallbackparticipantcommunication",
    "functionName": "PatchConversationsCallbackParticipantCommunication",
    "signature": "PatchConversationsCallbackParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Mediaparticipantrequest // Participant\n// Update conversation participant's communication by disconnecting it.\ndata, response, err := apiInstance.PatchConversationsCallbackParticipantCommunication(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCallbackParticipantCommunication: %v\\n\", err)\n}"
  },
  "patchconversationscallbacks": {
    "operationId": "patchconversationscallbacks",
    "functionName": "PatchConversationsCallbacks",
    "signature": "PatchConversationsCallbacks(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Patchcallbackrequest",
        "required": "true"
      }
    ],
    "return": "Patchcallbackresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Patchcallbackrequest // PatchCallbackRequest\n// Update a scheduled callback\ndata, response, err := apiInstance.PatchConversationsCallbacks(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCallbacks: %v\\n\", err)\n}"
  },
  "patchconversationschat": {
    "operationId": "patchconversationschat",
    "functionName": "PatchConversationsChat",
    "signature": "PatchConversationsChat(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Conversation // Conversation\n// Update a conversation by disconnecting all of the participants\ndata, response, err := apiInstance.PatchConversationsChat(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsChat: %v\\n\", err)\n}"
  },
  "patchconversationschatparticipant": {
    "operationId": "patchconversationschatparticipant",
    "functionName": "PatchConversationsChatParticipant",
    "signature": "PatchConversationsChatParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Mediaparticipantrequest // Update request\n// Update conversation participant\nresponse, err := apiInstance.PatchConversationsChatParticipant(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsChatParticipant: %v\\n\", err)\n}"
  },
  "patchconversationschatparticipantattributes": {
    "operationId": "patchconversationschatparticipantattributes",
    "functionName": "PatchConversationsChatParticipantAttributes",
    "signature": "PatchConversationsChatParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Participantattributes",
        "required": "true"
      }
    ],
    "return": "Participantattributes",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Participantattributes // Participant attributes\n// Update the attributes on a conversation participant.\ndata, response, err := apiInstance.PatchConversationsChatParticipantAttributes(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsChatParticipantAttributes: %v\\n\", err)\n}"
  },
  "patchconversationschatparticipantcommunication": {
    "operationId": "patchconversationschatparticipantcommunication",
    "functionName": "PatchConversationsChatParticipantCommunication",
    "signature": "PatchConversationsChatParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Mediaparticipantrequest // Participant\n// Update conversation participant's communication by disconnecting it.\ndata, response, err := apiInstance.PatchConversationsChatParticipantCommunication(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsChatParticipantCommunication: %v\\n\", err)\n}"
  },
  "patchconversationscobrowsesession": {
    "operationId": "patchconversationscobrowsesession",
    "functionName": "PatchConversationsCobrowsesession",
    "signature": "PatchConversationsCobrowsesession(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Conversation // Conversation\n// Update a conversation by disconnecting all of the participants\ndata, response, err := apiInstance.PatchConversationsCobrowsesession(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCobrowsesession: %v\\n\", err)\n}"
  },
  "patchconversationscobrowsesessionparticipant": {
    "operationId": "patchconversationscobrowsesessionparticipant",
    "functionName": "PatchConversationsCobrowsesessionParticipant",
    "signature": "PatchConversationsCobrowsesessionParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Mediaparticipantrequest // \n// Update conversation participant\nresponse, err := apiInstance.PatchConversationsCobrowsesessionParticipant(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCobrowsesessionParticipant: %v\\n\", err)\n}"
  },
  "patchconversationscobrowsesessionparticipantattributes": {
    "operationId": "patchconversationscobrowsesessionparticipantattributes",
    "functionName": "PatchConversationsCobrowsesessionParticipantAttributes",
    "signature": "PatchConversationsCobrowsesessionParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Participantattributes",
        "required": "false"
      }
    ],
    "return": "Participantattributes",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Participantattributes // \n// Update the attributes on a conversation participant.\ndata, response, err := apiInstance.PatchConversationsCobrowsesessionParticipantAttributes(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCobrowsesessionParticipantAttributes: %v\\n\", err)\n}"
  },
  "patchconversationscobrowsesessionparticipantcommunication": {
    "operationId": "patchconversationscobrowsesessionparticipantcommunication",
    "functionName": "PatchConversationsCobrowsesessionParticipantCommunication",
    "signature": "PatchConversationsCobrowsesessionParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Mediaparticipantrequest // Participant\n// Update conversation participant's communication by disconnecting it.\ndata, response, err := apiInstance.PatchConversationsCobrowsesessionParticipantCommunication(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsCobrowsesessionParticipantCommunication: %v\\n\", err)\n}"
  },
  "patchconversationsemail": {
    "operationId": "patchconversationsemail",
    "functionName": "PatchConversationsEmail",
    "signature": "PatchConversationsEmail(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Conversation // Conversation\n// Update a conversation by disconnecting all of the participants\ndata, response, err := apiInstance.PatchConversationsEmail(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsEmail: %v\\n\", err)\n}"
  },
  "patchconversationsemailmessagesdraft": {
    "operationId": "patchconversationsemailmessagesdraft",
    "functionName": "PatchConversationsEmailMessagesDraft",
    "signature": "PatchConversationsEmailMessagesDraft(conversationId, autoFill, discard, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "autoFill",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "discard",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Draftmanipulationrequest",
        "required": "false"
      }
    ],
    "return": "Emailmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar autoFill bool // autoFill\nvar discard bool // discard\nvar body platformclientv2.Draftmanipulationrequest // Draft Manipulation Request\n// Reset conversation draft to its initial state and/or auto-fill draft content\ndata, response, err := apiInstance.PatchConversationsEmailMessagesDraft(conversationId, autoFill, discard, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsEmailMessagesDraft: %v\\n\", err)\n}"
  },
  "patchconversationsemailparticipant": {
    "operationId": "patchconversationsemailparticipant",
    "functionName": "PatchConversationsEmailParticipant",
    "signature": "PatchConversationsEmailParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Mediaparticipantrequest // Update request\n// Update conversation participant\nresponse, err := apiInstance.PatchConversationsEmailParticipant(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsEmailParticipant: %v\\n\", err)\n}"
  },
  "patchconversationsemailparticipantattributes": {
    "operationId": "patchconversationsemailparticipantattributes",
    "functionName": "PatchConversationsEmailParticipantAttributes",
    "signature": "PatchConversationsEmailParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Participantattributes",
        "required": "true"
      }
    ],
    "return": "Participantattributes",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Participantattributes // Participant attributes\n// Update the attributes on a conversation participant.\ndata, response, err := apiInstance.PatchConversationsEmailParticipantAttributes(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsEmailParticipantAttributes: %v\\n\", err)\n}"
  },
  "patchconversationsemailparticipantcommunication": {
    "operationId": "patchconversationsemailparticipantcommunication",
    "functionName": "PatchConversationsEmailParticipantCommunication",
    "signature": "PatchConversationsEmailParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Mediaparticipantrequest // Participant\n// Update conversation participant's communication by disconnecting it.\ndata, response, err := apiInstance.PatchConversationsEmailParticipantCommunication(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsEmailParticipantCommunication: %v\\n\", err)\n}"
  },
  "patchconversationsmessage": {
    "operationId": "patchconversationsmessage",
    "functionName": "PatchConversationsMessage",
    "signature": "PatchConversationsMessage(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Conversation // Conversation\n// Update a conversation by disconnecting all of the participants\ndata, response, err := apiInstance.PatchConversationsMessage(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessage: %v\\n\", err)\n}"
  },
  "patchconversationsmessageparticipant": {
    "operationId": "patchconversationsmessageparticipant",
    "functionName": "PatchConversationsMessageParticipant",
    "signature": "PatchConversationsMessageParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Mediaparticipantrequest // \n// Update conversation participant\nresponse, err := apiInstance.PatchConversationsMessageParticipant(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessageParticipant: %v\\n\", err)\n}"
  },
  "patchconversationsmessageparticipantattributes": {
    "operationId": "patchconversationsmessageparticipantattributes",
    "functionName": "PatchConversationsMessageParticipantAttributes",
    "signature": "PatchConversationsMessageParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Participantattributes",
        "required": "false"
      }
    ],
    "return": "Participantattributes",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Participantattributes // \n// Update the attributes on a conversation participant.\ndata, response, err := apiInstance.PatchConversationsMessageParticipantAttributes(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessageParticipantAttributes: %v\\n\", err)\n}"
  },
  "patchconversationsmessageparticipantcommunication": {
    "operationId": "patchconversationsmessageparticipantcommunication",
    "functionName": "PatchConversationsMessageParticipantCommunication",
    "signature": "PatchConversationsMessageParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Mediaparticipantrequest",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Mediaparticipantrequest // Participant\n// Update conversation participant's communication by disconnecting it.\ndata, response, err := apiInstance.PatchConversationsMessageParticipantCommunication(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessageParticipantCommunication: %v\\n\", err)\n}"
  },
  "patchconversationsmessagingintegrationsfacebookintegrationid": {
    "operationId": "patchconversationsmessagingintegrationsfacebookintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsFacebookIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Facebookintegrationupdaterequest",
        "required": "true"
      }
    ],
    "return": "Facebookintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar body platformclientv2.Facebookintegrationupdaterequest // FacebookIntegrationUpdateRequest\n// Update Facebook messaging integration\ndata, response, err := apiInstance.PatchConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessagingIntegrationsFacebookIntegrationId: %v\\n\", err)\n}"
  },
  "patchconversationsmessagingintegrationsinstagramintegrationid": {
    "operationId": "patchconversationsmessagingintegrationsinstagramintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsInstagramIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsInstagramIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Instagramintegrationupdaterequest",
        "required": "true"
      }
    ],
    "return": "Instagramintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar body platformclientv2.Instagramintegrationupdaterequest // InstagramIntegrationUpdateRequest\n// Update Instagram messaging integration\ndata, response, err := apiInstance.PatchConversationsMessagingIntegrationsInstagramIntegrationId(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessagingIntegrationsInstagramIntegrationId: %v\\n\", err)\n}"
  },
  "patchconversationsmessagingintegrationsopenintegrationid": {
    "operationId": "patchconversationsmessagingintegrationsopenintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsOpenIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsOpenIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Openintegrationupdaterequest",
        "required": "true"
      }
    ],
    "return": "Openintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar body platformclientv2.Openintegrationupdaterequest // OpenIntegrationUpdateRequest\n// Update an Open messaging integration\ndata, response, err := apiInstance.PatchConversationsMessagingIntegrationsOpenIntegrationId(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessagingIntegrationsOpenIntegrationId: %v\\n\", err)\n}"
  },
  "patchconversationsmessagingintegrationstwitterintegrationid": {
    "operationId": "patchconversationsmessagingintegrationstwitterintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsTwitterIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Twitterintegrationrequest",
        "required": "true"
      }
    ],
    "return": "Twitterintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar body platformclientv2.Twitterintegrationrequest // TwitterIntegrationRequest\n// Update Twitter messaging integration\ndata, response, err := apiInstance.PatchConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessagingIntegrationsTwitterIntegrationId: %v\\n\", err)\n}"
  },
  "patchconversationsmessagingintegrationswhatsappembeddedsignupintegrationid": {
    "operationId": "patchconversationsmessagingintegrationswhatsappembeddedsignupintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsWhatsappEmbeddedsignupIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsWhatsappEmbeddedsignupIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Whatsappembeddedsignupintegrationactivationrequest",
        "required": "true"
      }
    ],
    "return": "Whatsappintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar body platformclientv2.Whatsappembeddedsignupintegrationactivationrequest // WhatsAppEmbeddedSignupIntegrationActivationRequest\n// Activate a WhatsApp messaging integration created using the WhatsApp embedded signup flow\ndata, response, err := apiInstance.PatchConversationsMessagingIntegrationsWhatsappEmbeddedsignupIntegrationId(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessagingIntegrationsWhatsappEmbeddedsignupIntegrationId: %v\\n\", err)\n}"
  },
  "patchconversationsmessagingintegrationswhatsappintegrationid": {
    "operationId": "patchconversationsmessagingintegrationswhatsappintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsWhatsappIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Whatsappintegrationupdaterequest",
        "required": "true"
      }
    ],
    "return": "Whatsappintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar body platformclientv2.Whatsappintegrationupdaterequest // WhatsAppIntegrationUpdateRequest\n// Update or activate a WhatsApp messaging integration\ndata, response, err := apiInstance.PatchConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessagingIntegrationsWhatsappIntegrationId: %v\\n\", err)\n}"
  },
  "patchconversationsmessagingsetting": {
    "operationId": "patchconversationsmessagingsetting",
    "functionName": "PatchConversationsMessagingSetting",
    "signature": "PatchConversationsMessagingSetting(messageSettingId, body)",
    "parameters": [
      {
        "name": "messageSettingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Messagingsettingpatchrequest",
        "required": "true"
      }
    ],
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar messageSettingId string // Message Setting ID\nvar body platformclientv2.Messagingsettingpatchrequest // MessagingSetting\n// Update a messaging setting\ndata, response, err := apiInstance.PatchConversationsMessagingSetting(messageSettingId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessagingSetting: %v\\n\", err)\n}"
  },
  "patchconversationsmessagingsupportedcontentsupportedcontentid": {
    "operationId": "patchconversationsmessagingsupportedcontentsupportedcontentid",
    "functionName": "PatchConversationsMessagingSupportedcontentSupportedContentId",
    "signature": "PatchConversationsMessagingSupportedcontentSupportedContentId(supportedContentId, body)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Supportedcontent",
        "required": "true"
      }
    ],
    "return": "Supportedcontent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar supportedContentId string // Supported Content ID\nvar body platformclientv2.Supportedcontent // SupportedContent\n// Update a supported content profile\ndata, response, err := apiInstance.PatchConversationsMessagingSupportedcontentSupportedContentId(supportedContentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsMessagingSupportedcontentSupportedContentId: %v\\n\", err)\n}"
  },
  "patchconversationssettings": {
    "operationId": "patchconversationssettings",
    "functionName": "PatchConversationsSettings",
    "signature": "PatchConversationsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Settings",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Settings // Settings\n// Update Settings\nresponse, err := apiInstance.PatchConversationsSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchConversationsSettings: %v\\n\", err)\n}"
  },
  "postconversationassign": {
    "operationId": "postconversationassign",
    "functionName": "PostConversationAssign",
    "signature": "PostConversationAssign(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversationuser",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar body platformclientv2.Conversationuser // Targeted user\n// Attempts to manually assign a specified conversation to a specified user.  Ignores bullseye ring, PAR score, skills, and languages.\ndata, response, err := apiInstance.PostConversationAssign(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationAssign: %v\\n\", err)\n}"
  },
  "postconversationbarge": {
    "operationId": "postconversationbarge",
    "functionName": "PostConversationBarge",
    "signature": "PostConversationBarge(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\n// Barge a conversation creating a barged in conference of connected participants.\nresponse, err := apiInstance.PostConversationBarge(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationBarge: %v\\n\", err)\n}"
  },
  "postconversationcobrowse": {
    "operationId": "postconversationcobrowse",
    "functionName": "PostConversationCobrowse",
    "signature": "PostConversationCobrowse(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Cobrowsewebmessagingsession",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // Conversation ID\n// Creates a cobrowse session. Requires \\\"conversation:cobrowse:add\\\" (for web messaging) or \\\"conversation:cobrowsevoice:add\\\" permission.\ndata, response, err := apiInstance.PostConversationCobrowse(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationCobrowse: %v\\n\", err)\n}"
  },
  "postconversationdisconnect": {
    "operationId": "postconversationdisconnect",
    "functionName": "PostConversationDisconnect",
    "signature": "PostConversationDisconnect(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\n// Performs a full conversation teardown. Issues disconnect requests for any connected media. Applies a system wrap-up code to any participants that are pending wrap-up. This is not intended to be the normal way of ending interactions but is available in the event of problems with the application to allow a resynchronization of state across all components. It is recommended that users submit a support case if they are relying on this endpoint systematically as there is likely something that needs investigation.\ndata, response, err := apiInstance.PostConversationDisconnect(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationDisconnect: %v\\n\", err)\n}"
  },
  "postconversationparticipantcallbacks": {
    "operationId": "postconversationparticipantcallbacks",
    "functionName": "PostConversationParticipantCallbacks",
    "signature": "PostConversationParticipantCallbacks(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createcallbackonconversationcommand",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar body platformclientv2.Createcallbackonconversationcommand // \n// Create a new callback for the specified participant on the conversation.\nresponse, err := apiInstance.PostConversationParticipantCallbacks(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationParticipantCallbacks: %v\\n\", err)\n}"
  },
  "postconversationparticipantdigits": {
    "operationId": "postconversationparticipantdigits",
    "functionName": "PostConversationParticipantDigits",
    "signature": "PostConversationParticipantDigits(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Digits",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar body platformclientv2.Digits // Digits\n// Sends DTMF to the participant\nresponse, err := apiInstance.PostConversationParticipantDigits(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationParticipantDigits: %v\\n\", err)\n}"
  },
  "postconversationparticipantreplace": {
    "operationId": "postconversationparticipantreplace",
    "functionName": "PostConversationParticipantReplace",
    "signature": "PostConversationParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transferrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar body platformclientv2.Transferrequest // Transfer request\n// Replace this participant with the specified user and/or address\nresponse, err := apiInstance.PostConversationParticipantReplace(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationParticipantReplace: %v\\n\", err)\n}"
  },
  "postconversationparticipantreplaceagent": {
    "operationId": "postconversationparticipantreplaceagent",
    "functionName": "PostConversationParticipantReplaceAgent",
    "signature": "PostConversationParticipantReplaceAgent(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transfertoagentrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar body platformclientv2.Transfertoagentrequest // Transfer request\n// Replace this participant with the specified agent\nresponse, err := apiInstance.PostConversationParticipantReplaceAgent(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationParticipantReplaceAgent: %v\\n\", err)\n}"
  },
  "postconversationparticipantreplaceexternal": {
    "operationId": "postconversationparticipantreplaceexternal",
    "functionName": "PostConversationParticipantReplaceExternal",
    "signature": "PostConversationParticipantReplaceExternal(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transfertoexternalrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar body platformclientv2.Transfertoexternalrequest // Transfer request\n// Replace this participant with the an external contact\nresponse, err := apiInstance.PostConversationParticipantReplaceExternal(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationParticipantReplaceExternal: %v\\n\", err)\n}"
  },
  "postconversationparticipantreplacequeue": {
    "operationId": "postconversationparticipantreplacequeue",
    "functionName": "PostConversationParticipantReplaceQueue",
    "signature": "PostConversationParticipantReplaceQueue(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transfertoqueuerequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar body platformclientv2.Transfertoqueuerequest // Transfer request\n// Replace this participant with the specified queue\nresponse, err := apiInstance.PostConversationParticipantReplaceQueue(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationParticipantReplaceQueue: %v\\n\", err)\n}"
  },
  "postconversationparticipantsecureivrsessions": {
    "operationId": "postconversationparticipantsecureivrsessions",
    "functionName": "PostConversationParticipantSecureivrsessions",
    "signature": "PostConversationParticipantSecureivrsessions(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createsecuresession",
        "required": "false"
      }
    ],
    "return": "Securesession",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\nvar body platformclientv2.Createsecuresession // \n// Create secure IVR session. Only a participant in the conversation can invoke a secure IVR.\ndata, response, err := apiInstance.PostConversationParticipantSecureivrsessions(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationParticipantSecureivrsessions: %v\\n\", err)\n}"
  },
  "postconversationscall": {
    "operationId": "postconversationscall",
    "functionName": "PostConversationsCall",
    "signature": "PostConversationsCall(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Callcommand",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Callcommand // Conversation\n// Place a new call as part of a callback conversation.\ndata, response, err := apiInstance.PostConversationsCall(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCall: %v\\n\", err)\n}"
  },
  "postconversationscallparticipantbarge": {
    "operationId": "postconversationscallparticipantbarge",
    "functionName": "PostConversationsCallParticipantBarge",
    "signature": "PostConversationsCallParticipantBarge(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Barge a given participant's call creating a barged in conference of connected participants.\nresponse, err := apiInstance.PostConversationsCallParticipantBarge(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipantBarge: %v\\n\", err)\n}"
  },
  "postconversationscallparticipantcoach": {
    "operationId": "postconversationscallparticipantcoach",
    "functionName": "PostConversationsCallParticipantCoach",
    "signature": "PostConversationsCallParticipantCoach(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Listen in on the conversation from the point of view of a given participant while speaking to just the given participant.\nresponse, err := apiInstance.PostConversationsCallParticipantCoach(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipantCoach: %v\\n\", err)\n}"
  },
  "postconversationscallparticipantcommunicationwrapup": {
    "operationId": "postconversationscallparticipantcommunicationwrapup",
    "functionName": "PostConversationsCallParticipantCommunicationWrapup",
    "signature": "PostConversationsCallParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupinput",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Wrapupinput // Wrap-up\n// Apply wrap-up for this conversation communication\nresponse, err := apiInstance.PostConversationsCallParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "postconversationscallparticipantconsult": {
    "operationId": "postconversationscallparticipantconsult",
    "functionName": "PostConversationsCallParticipantConsult",
    "signature": "PostConversationsCallParticipantConsult(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Consulttransfer",
        "required": "true"
      }
    ],
    "return": "Consulttransferresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Consulttransfer // Destination address & initial speak to\n// Initiate and update consult transfer\ndata, response, err := apiInstance.PostConversationsCallParticipantConsult(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipantConsult: %v\\n\", err)\n}"
  },
  "postconversationscallparticipantconsultagent": {
    "operationId": "postconversationscallparticipantconsultagent",
    "functionName": "PostConversationsCallParticipantConsultAgent",
    "signature": "PostConversationsCallParticipantConsultAgent(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Consulttransfertoagent",
        "required": "true"
      }
    ],
    "return": "Consulttransferresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Consulttransfertoagent // Destination agent & initial speak to\n// Initiate a consult transfer to an agent\ndata, response, err := apiInstance.PostConversationsCallParticipantConsultAgent(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipantConsultAgent: %v\\n\", err)\n}"
  },
  "postconversationscallparticipantconsultexternal": {
    "operationId": "postconversationscallparticipantconsultexternal",
    "functionName": "PostConversationsCallParticipantConsultExternal",
    "signature": "PostConversationsCallParticipantConsultExternal(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Consulttransfertoexternal",
        "required": "true"
      }
    ],
    "return": "Consulttransferresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Consulttransfertoexternal // Destination address & initial speak to\n// Initiate a consult transfer to an external contact\ndata, response, err := apiInstance.PostConversationsCallParticipantConsultExternal(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipantConsultExternal: %v\\n\", err)\n}"
  },
  "postconversationscallparticipantconsultqueue": {
    "operationId": "postconversationscallparticipantconsultqueue",
    "functionName": "PostConversationsCallParticipantConsultQueue",
    "signature": "PostConversationsCallParticipantConsultQueue(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Consulttransfertoqueue",
        "required": "true"
      }
    ],
    "return": "Consulttransferresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Consulttransfertoqueue // Destination queue & initial speak to\n// Initiate a consult transfer to a queue\ndata, response, err := apiInstance.PostConversationsCallParticipantConsultQueue(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipantConsultQueue: %v\\n\", err)\n}"
  },
  "postconversationscallparticipantmonitor": {
    "operationId": "postconversationscallparticipantmonitor",
    "functionName": "PostConversationsCallParticipantMonitor",
    "signature": "PostConversationsCallParticipantMonitor(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Listen in on the conversation from the point of view of a given participant.\nresponse, err := apiInstance.PostConversationsCallParticipantMonitor(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipantMonitor: %v\\n\", err)\n}"
  },
  "postconversationscallparticipantreplace": {
    "operationId": "postconversationscallparticipantreplace",
    "functionName": "PostConversationsCallParticipantReplace",
    "signature": "PostConversationsCallParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transferrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Transferrequest // Transfer request\n// Replace this participant with the specified user and/or address\nresponse, err := apiInstance.PostConversationsCallParticipantReplace(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipantReplace: %v\\n\", err)\n}"
  },
  "postconversationscallparticipants": {
    "operationId": "postconversationscallparticipants",
    "functionName": "PostConversationsCallParticipants",
    "signature": "PostConversationsCallParticipants(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Conversation // Conversation\n// Add participants to a conversation\ndata, response, err := apiInstance.PostConversationsCallParticipants(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallParticipants: %v\\n\", err)\n}"
  },
  "postconversationscallbackparticipantcommunicationwrapup": {
    "operationId": "postconversationscallbackparticipantcommunicationwrapup",
    "functionName": "PostConversationsCallbackParticipantCommunicationWrapup",
    "signature": "PostConversationsCallbackParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupinput",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Wrapupinput // Wrap-up\n// Apply wrap-up for this conversation communication\nresponse, err := apiInstance.PostConversationsCallbackParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallbackParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "postconversationscallbackparticipantreplace": {
    "operationId": "postconversationscallbackparticipantreplace",
    "functionName": "PostConversationsCallbackParticipantReplace",
    "signature": "PostConversationsCallbackParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transferrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Transferrequest // Transfer request\n// Replace this participant with the specified user and/or address\nresponse, err := apiInstance.PostConversationsCallbackParticipantReplace(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallbackParticipantReplace: %v\\n\", err)\n}"
  },
  "postconversationscallbacks": {
    "operationId": "postconversationscallbacks",
    "functionName": "PostConversationsCallbacks",
    "signature": "PostConversationsCallbacks(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createcallbackcommand",
        "required": "true"
      }
    ],
    "return": "Createcallbackresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Createcallbackcommand // Callback\n// Create a Callback\ndata, response, err := apiInstance.PostConversationsCallbacks(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallbacks: %v\\n\", err)\n}"
  },
  "postconversationscallbacksbulkdisconnect": {
    "operationId": "postconversationscallbacksbulkdisconnect",
    "functionName": "PostConversationsCallbacksBulkDisconnect",
    "signature": "PostConversationsCallbacksBulkDisconnect(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkcallbackdisconnectrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Bulkcallbackdisconnectrequest // BulkCallbackDisconnectRequest\n// Disconnect multiple scheduled callbacks\nresponse, err := apiInstance.PostConversationsCallbacksBulkDisconnect(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallbacksBulkDisconnect: %v\\n\", err)\n}"
  },
  "postconversationscallbacksbulkupdate": {
    "operationId": "postconversationscallbacksbulkupdate",
    "functionName": "PostConversationsCallbacksBulkUpdate",
    "signature": "PostConversationsCallbacksBulkUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkcallbackpatchrequest",
        "required": "true"
      }
    ],
    "return": "Bulkcallbackpatchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Bulkcallbackpatchrequest // BulkCallbackPatchRequest\n// Update multiple scheduled callbacks\ndata, response, err := apiInstance.PostConversationsCallbacksBulkUpdate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCallbacksBulkUpdate: %v\\n\", err)\n}"
  },
  "postconversationscalls": {
    "operationId": "postconversationscalls",
    "functionName": "PostConversationsCalls",
    "signature": "PostConversationsCalls(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createcallrequest",
        "required": "true"
      }
    ],
    "return": "Createcallresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Createcallrequest // Call request\n// Create a call conversation\ndata, response, err := apiInstance.PostConversationsCalls(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCalls: %v\\n\", err)\n}"
  },
  "postconversationschatcommunicationmessages": {
    "operationId": "postconversationschatcommunicationmessages",
    "functionName": "PostConversationsChatCommunicationMessages",
    "signature": "PostConversationsChatCommunicationMessages(conversationId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createwebchatmessagerequest",
        "required": "true"
      }
    ],
    "return": "Webchatmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar communicationId string // communicationId\nvar body platformclientv2.Createwebchatmessagerequest // Message\n// Send a message on behalf of a communication in a chat conversation.\ndata, response, err := apiInstance.PostConversationsChatCommunicationMessages(conversationId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsChatCommunicationMessages: %v\\n\", err)\n}"
  },
  "postconversationschatcommunicationtyping": {
    "operationId": "postconversationschatcommunicationtyping",
    "functionName": "PostConversationsChatCommunicationTyping",
    "signature": "PostConversationsChatCommunicationTyping(conversationId, communicationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webchattyping",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar communicationId string // communicationId\n// Send a typing-indicator on behalf of a communication in a chat conversation.\ndata, response, err := apiInstance.PostConversationsChatCommunicationTyping(conversationId, communicationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsChatCommunicationTyping: %v\\n\", err)\n}"
  },
  "postconversationschatparticipantcommunicationwrapup": {
    "operationId": "postconversationschatparticipantcommunicationwrapup",
    "functionName": "PostConversationsChatParticipantCommunicationWrapup",
    "signature": "PostConversationsChatParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupinput",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Wrapupinput // Wrap-up\n// Apply wrap-up for this conversation communication\nresponse, err := apiInstance.PostConversationsChatParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsChatParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "postconversationschatparticipantreplace": {
    "operationId": "postconversationschatparticipantreplace",
    "functionName": "PostConversationsChatParticipantReplace",
    "signature": "PostConversationsChatParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transferrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Transferrequest // Transfer request\n// Replace this participant with the specified user and/or address\nresponse, err := apiInstance.PostConversationsChatParticipantReplace(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsChatParticipantReplace: %v\\n\", err)\n}"
  },
  "postconversationschats": {
    "operationId": "postconversationschats",
    "functionName": "PostConversationsChats",
    "signature": "PostConversationsChats(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createwebchatrequest",
        "required": "true"
      }
    ],
    "return": "Chatconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Createwebchatrequest // Create web chat request\n// Create a web chat conversation\ndata, response, err := apiInstance.PostConversationsChats(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsChats: %v\\n\", err)\n}"
  },
  "postconversationscobrowsesessionparticipantcommunicationwrapup": {
    "operationId": "postconversationscobrowsesessionparticipantcommunicationwrapup",
    "functionName": "PostConversationsCobrowsesessionParticipantCommunicationWrapup",
    "signature": "PostConversationsCobrowsesessionParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupinput",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Wrapupinput // Wrap-up\n// Apply wrap-up for this conversation communication\nresponse, err := apiInstance.PostConversationsCobrowsesessionParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCobrowsesessionParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "postconversationscobrowsesessionparticipantreplace": {
    "operationId": "postconversationscobrowsesessionparticipantreplace",
    "functionName": "PostConversationsCobrowsesessionParticipantReplace",
    "signature": "PostConversationsCobrowsesessionParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transferrequest",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Transferrequest // \n// Replace this participant with the specified user and/or address\nresponse, err := apiInstance.PostConversationsCobrowsesessionParticipantReplace(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsCobrowsesessionParticipantReplace: %v\\n\", err)\n}"
  },
  "postconversationsemailinboundmessages": {
    "operationId": "postconversationsemailinboundmessages",
    "functionName": "PostConversationsEmailInboundmessages",
    "signature": "PostConversationsEmailInboundmessages(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Inboundmessagerequest",
        "required": "true"
      }
    ],
    "return": "Emailconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Inboundmessagerequest // Send external email reply\n// Send an email to an external conversation. An external conversation is one where the provider is not PureCloud based. This endpoint allows the sender of the external email to reply or send a new message to the existing conversation. The new message will be treated as part of the existing conversation and chained to it.\ndata, response, err := apiInstance.PostConversationsEmailInboundmessages(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsEmailInboundmessages: %v\\n\", err)\n}"
  },
  "postconversationsemailmessages": {
    "operationId": "postconversationsemailmessages",
    "functionName": "PostConversationsEmailMessages",
    "signature": "PostConversationsEmailMessages(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Emailmessage",
        "required": "true"
      }
    ],
    "return": "Emailmessagereply",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Emailmessage // Reply\n// Send an email reply\ndata, response, err := apiInstance.PostConversationsEmailMessages(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsEmailMessages: %v\\n\", err)\n}"
  },
  "postconversationsemailmessagesdraftattachmentscopy": {
    "operationId": "postconversationsemailmessagesdraftattachmentscopy",
    "functionName": "PostConversationsEmailMessagesDraftAttachmentsCopy",
    "signature": "PostConversationsEmailMessagesDraftAttachmentsCopy(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Copyattachmentsrequest",
        "required": "true"
      }
    ],
    "return": "Emailmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Copyattachmentsrequest // Copy Attachment Request\n// Copy attachments from an email message to the current draft.\ndata, response, err := apiInstance.PostConversationsEmailMessagesDraftAttachmentsCopy(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsEmailMessagesDraftAttachmentsCopy: %v\\n\", err)\n}"
  },
  "postconversationsemailparticipantcommunicationwrapup": {
    "operationId": "postconversationsemailparticipantcommunicationwrapup",
    "functionName": "PostConversationsEmailParticipantCommunicationWrapup",
    "signature": "PostConversationsEmailParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupinput",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Wrapupinput // Wrap-up\n// Apply wrap-up for this conversation communication\nresponse, err := apiInstance.PostConversationsEmailParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsEmailParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "postconversationsemailparticipantreplace": {
    "operationId": "postconversationsemailparticipantreplace",
    "functionName": "PostConversationsEmailParticipantReplace",
    "signature": "PostConversationsEmailParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transferrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Transferrequest // Transfer request\n// Replace this participant with the specified user and/or address\nresponse, err := apiInstance.PostConversationsEmailParticipantReplace(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsEmailParticipantReplace: %v\\n\", err)\n}"
  },
  "postconversationsemails": {
    "operationId": "postconversationsemails",
    "functionName": "PostConversationsEmails",
    "signature": "PostConversationsEmails(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createemailrequest",
        "required": "true"
      }
    ],
    "return": "Emailconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Createemailrequest // Create email request\n// Create an email conversation\ndata, response, err := apiInstance.PostConversationsEmails(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsEmails: %v\\n\", err)\n}"
  },
  "postconversationsemailsagentless": {
    "operationId": "postconversationsemailsagentless",
    "functionName": "PostConversationsEmailsAgentless",
    "signature": "PostConversationsEmailsAgentless(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Agentlessemailsendrequestdto",
        "required": "true"
      }
    ],
    "return": "Agentlessemailsendresponsedto",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Agentlessemailsendrequestdto // Create agentless email request\n// Create an email conversation, per API\ndata, response, err := apiInstance.PostConversationsEmailsAgentless(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsEmailsAgentless: %v\\n\", err)\n}"
  },
  "postconversationsfaxes": {
    "operationId": "postconversationsfaxes",
    "functionName": "PostConversationsFaxes",
    "signature": "PostConversationsFaxes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Faxsendrequest",
        "required": "true"
      }
    ],
    "return": "Faxsendresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Faxsendrequest // Fax\n// Create Fax Conversation\ndata, response, err := apiInstance.PostConversationsFaxes(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsFaxes: %v\\n\", err)\n}"
  },
  "postconversationskeyconfigurations": {
    "operationId": "postconversationskeyconfigurations",
    "functionName": "PostConversationsKeyconfigurations",
    "signature": "PostConversationsKeyconfigurations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Conversationencryptionconfiguration",
        "required": "true"
      }
    ],
    "return": "Conversationencryptionconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Conversationencryptionconfiguration // Encryption Configuration\n// Setup configurations for encryption key creation\ndata, response, err := apiInstance.PostConversationsKeyconfigurations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsKeyconfigurations: %v\\n\", err)\n}"
  },
  "postconversationskeyconfigurationsvalidate": {
    "operationId": "postconversationskeyconfigurationsvalidate",
    "functionName": "PostConversationsKeyconfigurationsValidate",
    "signature": "PostConversationsKeyconfigurationsValidate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Conversationencryptionconfiguration",
        "required": "true"
      }
    ],
    "return": "Conversationencryptionconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Conversationencryptionconfiguration // Encryption Configuration\n// Validate encryption key configurations without saving it\ndata, response, err := apiInstance.PostConversationsKeyconfigurationsValidate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsKeyconfigurationsValidate: %v\\n\", err)\n}"
  },
  "postconversationsmessagecommunicationmessages": {
    "operationId": "postconversationsmessagecommunicationmessages",
    "functionName": "PostConversationsMessageCommunicationMessages",
    "signature": "PostConversationsMessageCommunicationMessages(conversationId, communicationId, body, useNormalizedMessage)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Additionalmessage",
        "required": "true"
      },
      {
        "name": "useNormalizedMessage",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Messagedata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar communicationId string // communicationId\nvar body platformclientv2.Additionalmessage // Message\nvar useNormalizedMessage bool // If true, response removes deprecated fields (textBody, media, stickers)\n// Send message\ndata, response, err := apiInstance.PostConversationsMessageCommunicationMessages(conversationId, communicationId, body, useNormalizedMessage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageCommunicationMessages: %v\\n\", err)\n}"
  },
  "postconversationsmessagecommunicationmessagesmedia": {
    "operationId": "postconversationsmessagecommunicationmessagesmedia",
    "functionName": "PostConversationsMessageCommunicationMessagesMedia",
    "signature": "PostConversationsMessageCommunicationMessagesMedia(conversationId, communicationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messagemediadata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar communicationId string // communicationId\n// Create media\ndata, response, err := apiInstance.PostConversationsMessageCommunicationMessagesMedia(conversationId, communicationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageCommunicationMessagesMedia: %v\\n\", err)\n}"
  },
  "postconversationsmessagecommunicationtyping": {
    "operationId": "postconversationsmessagecommunicationtyping",
    "functionName": "PostConversationsMessageCommunicationTyping",
    "signature": "PostConversationsMessageCommunicationTyping(conversationId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Messagetypingeventrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar communicationId string // communicationId\nvar body platformclientv2.Messagetypingeventrequest // MessageTypingEvent\n// Send message typing event\nresponse, err := apiInstance.PostConversationsMessageCommunicationTyping(conversationId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageCommunicationTyping: %v\\n\", err)\n}"
  },
  "postconversationsmessageinboundopenevent": {
    "operationId": "postconversationsmessageinboundopenevent",
    "functionName": "PostConversationsMessageInboundOpenEvent",
    "signature": "PostConversationsMessageInboundOpenEvent(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Openinboundnormalizedevent",
        "required": "true"
      }
    ],
    "return": "Openeventnormalizedmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // integrationId\nvar body platformclientv2.Openinboundnormalizedevent // NormalizedMessage\n// Send an inbound Open Event Message\ndata, response, err := apiInstance.PostConversationsMessageInboundOpenEvent(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageInboundOpenEvent: %v\\n\", err)\n}"
  },
  "postconversationsmessageinboundopenmessage": {
    "operationId": "postconversationsmessageinboundopenmessage",
    "functionName": "PostConversationsMessageInboundOpenMessage",
    "signature": "PostConversationsMessageInboundOpenMessage(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Openinboundnormalizedmessage",
        "required": "true"
      }
    ],
    "return": "Openmessagenormalizedmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // integrationId\nvar body platformclientv2.Openinboundnormalizedmessage // NormalizedMessage\n// Send inbound Open Message\ndata, response, err := apiInstance.PostConversationsMessageInboundOpenMessage(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageInboundOpenMessage: %v\\n\", err)\n}"
  },
  "postconversationsmessageinboundopenreceipt": {
    "operationId": "postconversationsmessageinboundopenreceipt",
    "functionName": "PostConversationsMessageInboundOpenReceipt",
    "signature": "PostConversationsMessageInboundOpenReceipt(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Openinboundnormalizedreceipt",
        "required": "true"
      }
    ],
    "return": "Openreceiptnormalizedmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // integrationId\nvar body platformclientv2.Openinboundnormalizedreceipt // NormalizedMessage\n// Send an inbound Open Receipt Message\ndata, response, err := apiInstance.PostConversationsMessageInboundOpenReceipt(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageInboundOpenReceipt: %v\\n\", err)\n}"
  },
  "postconversationsmessagemessagesbulk": {
    "operationId": "postconversationsmessagemessagesbulk",
    "functionName": "PostConversationsMessageMessagesBulk",
    "signature": "PostConversationsMessageMessagesBulk(conversationId, useNormalizedMessage, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "useNormalizedMessage",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Textmessagelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // \nvar useNormalizedMessage bool // If true, response removes deprecated fields (textBody, media, stickers)\nvar body platformclientv2.[]string // messageIds\n// Get messages in batch\ndata, response, err := apiInstance.PostConversationsMessageMessagesBulk(conversationId, useNormalizedMessage, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageMessagesBulk: %v\\n\", err)\n}"
  },
  "postconversationsmessageparticipantcommunicationwrapup": {
    "operationId": "postconversationsmessageparticipantcommunicationwrapup",
    "functionName": "PostConversationsMessageParticipantCommunicationWrapup",
    "signature": "PostConversationsMessageParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupinput",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Wrapupinput // Wrap-up\n// Apply wrap-up for this conversation communication\nresponse, err := apiInstance.PostConversationsMessageParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "postconversationsmessageparticipantmonitor": {
    "operationId": "postconversationsmessageparticipantmonitor",
    "functionName": "PostConversationsMessageParticipantMonitor",
    "signature": "PostConversationsMessageParticipantMonitor(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\n// Listen in on the conversation from the point of view of a given participant.\nresponse, err := apiInstance.PostConversationsMessageParticipantMonitor(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageParticipantMonitor: %v\\n\", err)\n}"
  },
  "postconversationsmessageparticipantreplace": {
    "operationId": "postconversationsmessageparticipantreplace",
    "functionName": "PostConversationsMessageParticipantReplace",
    "signature": "PostConversationsMessageParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transferrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar body platformclientv2.Transferrequest // Transfer request\n// Replace this participant with the specified user and/or address\nresponse, err := apiInstance.PostConversationsMessageParticipantReplace(conversationId, participantId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessageParticipantReplace: %v\\n\", err)\n}"
  },
  "postconversationsmessages": {
    "operationId": "postconversationsmessages",
    "functionName": "PostConversationsMessages",
    "signature": "PostConversationsMessages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createoutboundmessagingconversationrequest",
        "required": "true"
      }
    ],
    "return": "Messageconversation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Createoutboundmessagingconversationrequest // Create outbound messaging conversation\n// Create an outbound messaging conversation.\ndata, response, err := apiInstance.PostConversationsMessages(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessages: %v\\n\", err)\n}"
  },
  "postconversationsmessagesagentless": {
    "operationId": "postconversationsmessagesagentless",
    "functionName": "PostConversationsMessagesAgentless",
    "signature": "PostConversationsMessagesAgentless(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Sendagentlessoutboundmessagerequest",
        "required": "true"
      }
    ],
    "return": "Sendagentlessoutboundmessageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Sendagentlessoutboundmessagerequest // Create agentless outbound messaging request\n// Send an agentless outbound message\ndata, response, err := apiInstance.PostConversationsMessagesAgentless(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagesAgentless: %v\\n\", err)\n}"
  },
  "postconversationsmessagesinboundopen": {
    "operationId": "postconversationsmessagesinboundopen",
    "functionName": "PostConversationsMessagesInboundOpen",
    "signature": "PostConversationsMessagesInboundOpen(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Opennormalizedmessage",
        "required": "true"
      }
    ],
    "return": "Opennormalizedmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Opennormalizedmessage // NormalizedMessage\n// Send an inbound Open Message\ndata, response, err := apiInstance.PostConversationsMessagesInboundOpen(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagesInboundOpen: %v\\n\", err)\n}"
  },
  "postconversationsmessagingintegrationsfacebook": {
    "operationId": "postconversationsmessagingintegrationsfacebook",
    "functionName": "PostConversationsMessagingIntegrationsFacebook",
    "signature": "PostConversationsMessagingIntegrationsFacebook(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Facebookintegrationrequest",
        "required": "true"
      }
    ],
    "return": "Facebookintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Facebookintegrationrequest // FacebookIntegrationRequest\n// Create a Facebook Integration\ndata, response, err := apiInstance.PostConversationsMessagingIntegrationsFacebook(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagingIntegrationsFacebook: %v\\n\", err)\n}"
  },
  "postconversationsmessagingintegrationsinstagram": {
    "operationId": "postconversationsmessagingintegrationsinstagram",
    "functionName": "PostConversationsMessagingIntegrationsInstagram",
    "signature": "PostConversationsMessagingIntegrationsInstagram(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Instagramintegrationrequest",
        "required": "true"
      }
    ],
    "return": "Instagramintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Instagramintegrationrequest // InstagramIntegrationRequest\n// Create Instagram Integration\ndata, response, err := apiInstance.PostConversationsMessagingIntegrationsInstagram(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagingIntegrationsInstagram: %v\\n\", err)\n}"
  },
  "postconversationsmessagingintegrationsline": {
    "operationId": "postconversationsmessagingintegrationsline",
    "functionName": "PostConversationsMessagingIntegrationsLine",
    "signature": "PostConversationsMessagingIntegrationsLine(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Lineintegrationrequest",
        "required": "true"
      }
    ],
    "return": "Lineintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Lineintegrationrequest // LineIntegrationRequest\n// Create a LINE messenger Integration\ndata, response, err := apiInstance.PostConversationsMessagingIntegrationsLine(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagingIntegrationsLine: %v\\n\", err)\n}"
  },
  "postconversationsmessagingintegrationsopen": {
    "operationId": "postconversationsmessagingintegrationsopen",
    "functionName": "PostConversationsMessagingIntegrationsOpen",
    "signature": "PostConversationsMessagingIntegrationsOpen(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Openintegrationrequest",
        "required": "true"
      }
    ],
    "return": "Openintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Openintegrationrequest // OpenIntegrationRequest\n// Create an Open messaging integration\ndata, response, err := apiInstance.PostConversationsMessagingIntegrationsOpen(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagingIntegrationsOpen: %v\\n\", err)\n}"
  },
  "postconversationsmessagingintegrationstwitter": {
    "operationId": "postconversationsmessagingintegrationstwitter",
    "functionName": "PostConversationsMessagingIntegrationsTwitter",
    "signature": "PostConversationsMessagingIntegrationsTwitter(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Twitterintegrationrequest",
        "required": "true"
      }
    ],
    "return": "Twitterintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Twitterintegrationrequest // TwitterIntegrationRequest\n// Create a Twitter Integration\ndata, response, err := apiInstance.PostConversationsMessagingIntegrationsTwitter(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagingIntegrationsTwitter: %v\\n\", err)\n}"
  },
  "postconversationsmessagingintegrationswhatsapp": {
    "operationId": "postconversationsmessagingintegrationswhatsapp",
    "functionName": "PostConversationsMessagingIntegrationsWhatsapp",
    "signature": "PostConversationsMessagingIntegrationsWhatsapp(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Whatsappintegrationrequest",
        "required": "true"
      }
    ],
    "return": "Whatsappintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Whatsappintegrationrequest // WhatsAppIntegrationRequest\n// [This API is deprecated. Use POST /api/v2/conversations/messaging/integrations/whatsapp/embeddedsignup instead] Create a WhatsApp Integration\ndata, response, err := apiInstance.PostConversationsMessagingIntegrationsWhatsapp(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagingIntegrationsWhatsapp: %v\\n\", err)\n}"
  },
  "postconversationsmessagingintegrationswhatsappembeddedsignup": {
    "operationId": "postconversationsmessagingintegrationswhatsappembeddedsignup",
    "functionName": "PostConversationsMessagingIntegrationsWhatsappEmbeddedsignup",
    "signature": "PostConversationsMessagingIntegrationsWhatsappEmbeddedsignup(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Whatsappembeddedsignupintegrationrequest",
        "required": "true"
      }
    ],
    "return": "Whatsappintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Whatsappembeddedsignupintegrationrequest // WhatsAppEmbeddedSignupIntegrationRequest\n// Create a WhatsApp Integration using the WhatsApp embedded signup flow\ndata, response, err := apiInstance.PostConversationsMessagingIntegrationsWhatsappEmbeddedsignup(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagingIntegrationsWhatsappEmbeddedsignup: %v\\n\", err)\n}"
  },
  "postconversationsmessagingsettings": {
    "operationId": "postconversationsmessagingsettings",
    "functionName": "PostConversationsMessagingSettings",
    "signature": "PostConversationsMessagingSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Messagingsettingrequest",
        "required": "true"
      }
    ],
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Messagingsettingrequest // MessagingSetting\n// Create a messaging setting\ndata, response, err := apiInstance.PostConversationsMessagingSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagingSettings: %v\\n\", err)\n}"
  },
  "postconversationsmessagingsupportedcontent": {
    "operationId": "postconversationsmessagingsupportedcontent",
    "functionName": "PostConversationsMessagingSupportedcontent",
    "signature": "PostConversationsMessagingSupportedcontent(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Supportedcontent",
        "required": "true"
      }
    ],
    "return": "Supportedcontent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Supportedcontent // SupportedContent\n// Create a Supported Content profile\ndata, response, err := apiInstance.PostConversationsMessagingSupportedcontent(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsMessagingSupportedcontent: %v\\n\", err)\n}"
  },
  "postconversationsparticipantsattributessearch": {
    "operationId": "postconversationsparticipantsattributessearch",
    "functionName": "PostConversationsParticipantsAttributesSearch",
    "signature": "PostConversationsParticipantsAttributesSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Conversationparticipantsearchrequest",
        "required": "true"
      }
    ],
    "return": "Jsoncursorsearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar body platformclientv2.Conversationparticipantsearchrequest // Search request options\n// Search conversations\ndata, response, err := apiInstance.PostConversationsParticipantsAttributesSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsParticipantsAttributesSearch: %v\\n\", err)\n}"
  },
  "postconversationsscreenshareparticipantcommunicationwrapup": {
    "operationId": "postconversationsscreenshareparticipantcommunicationwrapup",
    "functionName": "PostConversationsScreenshareParticipantCommunicationWrapup",
    "signature": "PostConversationsScreenshareParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupinput",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Wrapupinput // Wrap-up\n// Apply wrap-up for this conversation communication\nresponse, err := apiInstance.PostConversationsScreenshareParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsScreenshareParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "postconversationssocialparticipantcommunicationwrapup": {
    "operationId": "postconversationssocialparticipantcommunicationwrapup",
    "functionName": "PostConversationsSocialParticipantCommunicationWrapup",
    "signature": "PostConversationsSocialParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupinput",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Wrapupinput // Wrap-up\n// Apply wrap-up for this conversation communication\nresponse, err := apiInstance.PostConversationsSocialParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsSocialParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "postconversationsvideoparticipantcommunicationwrapup": {
    "operationId": "postconversationsvideoparticipantcommunicationwrapup",
    "functionName": "PostConversationsVideoParticipantCommunicationWrapup",
    "signature": "PostConversationsVideoParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupinput",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Wrapupinput // Wrap-up\n// Apply wrap-up for this conversation communication\nresponse, err := apiInstance.PostConversationsVideoParticipantCommunicationWrapup(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsVideoParticipantCommunicationWrapup: %v\\n\", err)\n}"
  },
  "postconversationsvideosmeetings": {
    "operationId": "postconversationsvideosmeetings",
    "functionName": "PostConversationsVideosMeetings",
    "signature": "PostConversationsVideosMeetings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Generatemeetingidrequest",
        "required": "true"
      }
    ],
    "return": "Meetingidrecord",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Generatemeetingidrequest // MeetingIdRequest\n// Generate a meetingId for a given conferenceId\ndata, response, err := apiInstance.PostConversationsVideosMeetings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationsVideosMeetings: %v\\n\", err)\n}"
  },
  "putconversationparticipantflaggedreason": {
    "operationId": "putconversationparticipantflaggedreason",
    "functionName": "PutConversationParticipantFlaggedreason",
    "signature": "PutConversationParticipantFlaggedreason(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar participantId string // participant ID\n// Set flagged reason on conversation participant to indicate bad conversation quality.\nresponse, err := apiInstance.PutConversationParticipantFlaggedreason(conversationId, participantId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationParticipantFlaggedreason: %v\\n\", err)\n}"
  },
  "putconversationsecureattributes": {
    "operationId": "putconversationsecureattributes",
    "functionName": "PutConversationSecureattributes",
    "signature": "PutConversationSecureattributes(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversationsecureattributes",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar body platformclientv2.Conversationsecureattributes // Conversation Secure Attributes\n// Set the secure attributes on a conversation.\ndata, response, err := apiInstance.PutConversationSecureattributes(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationSecureattributes: %v\\n\", err)\n}"
  },
  "putconversationtags": {
    "operationId": "putconversationtags",
    "functionName": "PutConversationTags",
    "signature": "PutConversationTags(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversationtagsupdate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversation ID\nvar body platformclientv2.Conversationtagsupdate // Conversation Tags\n// Update the tags on a conversation.\ndata, response, err := apiInstance.PutConversationTags(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationTags: %v\\n\", err)\n}"
  },
  "putconversationscallparticipantcommunicationuuidata": {
    "operationId": "putconversationscallparticipantcommunicationuuidata",
    "functionName": "PutConversationsCallParticipantCommunicationUuidata",
    "signature": "PutConversationsCallParticipantCommunicationUuidata(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setuuidatarequest",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar participantId string // participantId\nvar communicationId string // communicationId\nvar body platformclientv2.Setuuidatarequest // UUIData Request\n// Set uuiData to be sent on future commands.\ndata, response, err := apiInstance.PutConversationsCallParticipantCommunicationUuidata(conversationId, participantId, communicationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsCallParticipantCommunicationUuidata: %v\\n\", err)\n}"
  },
  "putconversationscallrecordingstate": {
    "operationId": "putconversationscallrecordingstate",
    "functionName": "PutConversationsCallRecordingstate",
    "signature": "PutConversationsCallRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setrecordingstate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Setrecordingstate // SetRecordingState\n// Update a conversation by setting its recording state\ndata, response, err := apiInstance.PutConversationsCallRecordingstate(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsCallRecordingstate: %v\\n\", err)\n}"
  },
  "putconversationscallbackrecordingstate": {
    "operationId": "putconversationscallbackrecordingstate",
    "functionName": "PutConversationsCallbackRecordingstate",
    "signature": "PutConversationsCallbackRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setrecordingstate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Setrecordingstate // SetRecordingState\n// Update a conversation by setting its recording state\ndata, response, err := apiInstance.PutConversationsCallbackRecordingstate(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsCallbackRecordingstate: %v\\n\", err)\n}"
  },
  "putconversationschatrecordingstate": {
    "operationId": "putconversationschatrecordingstate",
    "functionName": "PutConversationsChatRecordingstate",
    "signature": "PutConversationsChatRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setrecordingstate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Setrecordingstate // SetRecordingState\n// Update a conversation by setting its recording state\ndata, response, err := apiInstance.PutConversationsChatRecordingstate(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsChatRecordingstate: %v\\n\", err)\n}"
  },
  "putconversationscobrowsesessionrecordingstate": {
    "operationId": "putconversationscobrowsesessionrecordingstate",
    "functionName": "PutConversationsCobrowsesessionRecordingstate",
    "signature": "PutConversationsCobrowsesessionRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setrecordingstate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Setrecordingstate // SetRecordingState\n// Update a conversation by setting its recording state\ndata, response, err := apiInstance.PutConversationsCobrowsesessionRecordingstate(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsCobrowsesessionRecordingstate: %v\\n\", err)\n}"
  },
  "putconversationsemailmessagesdraft": {
    "operationId": "putconversationsemailmessagesdraft",
    "functionName": "PutConversationsEmailMessagesDraft",
    "signature": "PutConversationsEmailMessagesDraft(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Emailmessage",
        "required": "true"
      }
    ],
    "return": "Emailmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Emailmessage // Draft\n// Update conversation draft reply\ndata, response, err := apiInstance.PutConversationsEmailMessagesDraft(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsEmailMessagesDraft: %v\\n\", err)\n}"
  },
  "putconversationsemailrecordingstate": {
    "operationId": "putconversationsemailrecordingstate",
    "functionName": "PutConversationsEmailRecordingstate",
    "signature": "PutConversationsEmailRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setrecordingstate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Setrecordingstate // SetRecordingState\n// Update a conversation by setting its recording state\ndata, response, err := apiInstance.PutConversationsEmailRecordingstate(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsEmailRecordingstate: %v\\n\", err)\n}"
  },
  "putconversationskeyconfiguration": {
    "operationId": "putconversationskeyconfiguration",
    "functionName": "PutConversationsKeyconfiguration",
    "signature": "PutConversationsKeyconfiguration(keyconfigurationsId, body)",
    "parameters": [
      {
        "name": "keyconfigurationsId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversationencryptionconfiguration",
        "required": "true"
      }
    ],
    "return": "Conversationencryptionconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar keyconfigurationsId string // Key Configurations Id\nvar body platformclientv2.Conversationencryptionconfiguration // Encryption key configuration metadata\n// Update the encryption key configurations\ndata, response, err := apiInstance.PutConversationsKeyconfiguration(keyconfigurationsId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsKeyconfiguration: %v\\n\", err)\n}"
  },
  "putconversationsmessagerecordingstate": {
    "operationId": "putconversationsmessagerecordingstate",
    "functionName": "PutConversationsMessageRecordingstate",
    "signature": "PutConversationsMessageRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setrecordingstate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Setrecordingstate // SetRecordingState\n// Update a conversation by setting its recording state\ndata, response, err := apiInstance.PutConversationsMessageRecordingstate(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsMessageRecordingstate: %v\\n\", err)\n}"
  },
  "putconversationsmessagingintegrationslineintegrationid": {
    "operationId": "putconversationsmessagingintegrationslineintegrationid",
    "functionName": "PutConversationsMessagingIntegrationsLineIntegrationId",
    "signature": "PutConversationsMessagingIntegrationsLineIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Lineintegrationrequest",
        "required": "true"
      }
    ],
    "return": "Lineintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar integrationId string // Integration ID\nvar body platformclientv2.Lineintegrationrequest // LineIntegrationRequest\n// Update a LINE messenger integration\ndata, response, err := apiInstance.PutConversationsMessagingIntegrationsLineIntegrationId(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsMessagingIntegrationsLineIntegrationId: %v\\n\", err)\n}"
  },
  "putconversationsmessagingsettingsdefault": {
    "operationId": "putconversationsmessagingsettingsdefault",
    "functionName": "PutConversationsMessagingSettingsDefault",
    "signature": "PutConversationsMessagingSettingsDefault(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Messagingsettingdefaultrequest",
        "required": "true"
      }
    ],
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Messagingsettingdefaultrequest // MessagingSetting\n// Set the organization's default setting that may be applied to to integrations without settings\ndata, response, err := apiInstance.PutConversationsMessagingSettingsDefault(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsMessagingSettingsDefault: %v\\n\", err)\n}"
  },
  "putconversationsmessagingsupportedcontentdefault": {
    "operationId": "putconversationsmessagingsupportedcontentdefault",
    "functionName": "PutConversationsMessagingSupportedcontentDefault",
    "signature": "PutConversationsMessagingSupportedcontentDefault(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Supportedcontentreference",
        "required": "true"
      }
    ],
    "return": "Supportedcontent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Supportedcontentreference // SupportedContent\n// Set the organization's default supported content profile that may be assigned to an integration when it is created.\ndata, response, err := apiInstance.PutConversationsMessagingSupportedcontentDefault(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsMessagingSupportedcontentDefault: %v\\n\", err)\n}"
  },
  "putconversationsmessagingthreadingtimeline": {
    "operationId": "putconversationsmessagingthreadingtimeline",
    "functionName": "PutConversationsMessagingThreadingtimeline",
    "signature": "PutConversationsMessagingThreadingtimeline(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Conversationthreadingwindow",
        "required": "true"
      }
    ],
    "return": "Conversationthreadingwindow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar body platformclientv2.Conversationthreadingwindow // ConversationThreadingWindowRequest\n// Update conversation threading window timeline for each messaging type\ndata, response, err := apiInstance.PutConversationsMessagingThreadingtimeline(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsMessagingThreadingtimeline: %v\\n\", err)\n}"
  },
  "putconversationsscreensharerecordingstate": {
    "operationId": "putconversationsscreensharerecordingstate",
    "functionName": "PutConversationsScreenshareRecordingstate",
    "signature": "PutConversationsScreenshareRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setrecordingstate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Setrecordingstate // SetRecordingState\n// Update a conversation by setting its recording state\ndata, response, err := apiInstance.PutConversationsScreenshareRecordingstate(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsScreenshareRecordingstate: %v\\n\", err)\n}"
  },
  "putconversationssocialrecordingstate": {
    "operationId": "putconversationssocialrecordingstate",
    "functionName": "PutConversationsSocialRecordingstate",
    "signature": "PutConversationsSocialRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setrecordingstate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Setrecordingstate // SetRecordingState\n// Update a conversation by setting its recording state\ndata, response, err := apiInstance.PutConversationsSocialRecordingstate(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsSocialRecordingstate: %v\\n\", err)\n}"
  },
  "putconversationsvideorecordingstate": {
    "operationId": "putconversationsvideorecordingstate",
    "functionName": "PutConversationsVideoRecordingstate",
    "signature": "PutConversationsVideoRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Setrecordingstate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewConversationsApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Setrecordingstate // SetRecordingState\n// Update a conversation by setting its recording state\ndata, response, err := apiInstance.PutConversationsVideoRecordingstate(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationsVideoRecordingstate: %v\\n\", err)\n}"
  },
  "getdataextensionscoretype": {
    "operationId": "getdataextensionscoretype",
    "functionName": "GetDataextensionsCoretype",
    "signature": "GetDataextensionsCoretype(coretypeName)",
    "parameters": [
      {
        "name": "coretypeName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Coretype",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewDataExtensionsApiWithConfig(config)\n\nvar coretypeName string // The core type's name\n// Get a specific named core type.\ndata, response, err := apiInstance.GetDataextensionsCoretype(coretypeName)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetDataextensionsCoretype: %v\\n\", err)\n}"
  },
  "getdataextensionscoretypes": {
    "operationId": "getdataextensionscoretypes",
    "functionName": "GetDataextensionsCoretypes",
    "signature": "GetDataextensionsCoretypes()",
    "return": "Coretypelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewDataExtensionsApiWithConfig(config)\n\n// Get the core types from which all schemas are built.\ndata, response, err := apiInstance.GetDataextensionsCoretypes()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetDataextensionsCoretypes: %v\\n\", err)\n}"
  },
  "getdataextensionslimits": {
    "operationId": "getdataextensionslimits",
    "functionName": "GetDataextensionsLimits",
    "signature": "GetDataextensionsLimits()",
    "return": "Schemaquantitylimits",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewDataExtensionsApiWithConfig(config)\n\n// Get quantitative limits on schemas\ndata, response, err := apiInstance.GetDataextensionsLimits()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetDataextensionsLimits: %v\\n\", err)\n}"
  },
  "getdownload": {
    "operationId": "getdownload",
    "functionName": "GetDownload",
    "signature": "GetDownload(downloadId, contentDisposition, issueRedirect, redirectToAuth)",
    "parameters": [
      {
        "name": "downloadId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contentDisposition",
        "type": "string",
        "required": "false"
      },
      {
        "name": "issueRedirect",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "redirectToAuth",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Urlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewDownloadsApiWithConfig(config)\n\nvar downloadId string // Download ID\nvar contentDisposition string // \nvar issueRedirect bool // \nvar redirectToAuth bool // \n// Issues a redirect to a signed secure download URL for specified download\ndata, response, err := apiInstance.GetDownload(downloadId, contentDisposition, issueRedirect, redirectToAuth)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetDownload: %v\\n\", err)\n}"
  },
  "getemailssettings": {
    "operationId": "getemailssettings",
    "functionName": "GetEmailsSettings",
    "signature": "GetEmailsSettings()",
    "return": "Emailsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSettingsApiWithConfig(config)\n\n// Get email Contact Center settings\ndata, response, err := apiInstance.GetEmailsSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetEmailsSettings: %v\\n\", err)\n}"
  },
  "patchemailssettings": {
    "operationId": "patchemailssettings",
    "functionName": "PatchEmailsSettings",
    "signature": "PatchEmailsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Emailsettings",
        "required": "false"
      }
    ],
    "return": "Emailsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSettingsApiWithConfig(config)\n\nvar body platformclientv2.Emailsettings // \n// Patch email Contact Center settings\ndata, response, err := apiInstance.PatchEmailsSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchEmailsSettings: %v\\n\", err)\n}"
  },
  "posteventsconversations": {
    "operationId": "posteventsconversations",
    "functionName": "PostEventsConversations",
    "signature": "PostEventsConversations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Batchconversationeventrequest",
        "required": "true"
      }
    ],
    "return": "Batcheventresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewEventsApiWithConfig(config)\n\nvar body platformclientv2.Batchconversationeventrequest // batchRequest\n// Publish Conversation Batch Events\ndata, response, err := apiInstance.PostEventsConversations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostEventsConversations: %v\\n\", err)\n}"
  },
  "posteventsuserspresence": {
    "operationId": "posteventsuserspresence",
    "functionName": "PostEventsUsersPresence",
    "signature": "PostEventsUsersPresence(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Batchuserpresenceeventrequest",
        "required": "true"
      }
    ],
    "return": "Batcheventresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewEventsApiWithConfig(config)\n\nvar body platformclientv2.Batchuserpresenceeventrequest // batchRequest\n// Publish User Presence Status Batch Events\ndata, response, err := apiInstance.PostEventsUsersPresence(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostEventsUsersPresence: %v\\n\", err)\n}"
  },
  "posteventsusersroutingstatus": {
    "operationId": "posteventsusersroutingstatus",
    "functionName": "PostEventsUsersRoutingstatus",
    "signature": "PostEventsUsersRoutingstatus(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Batchuserroutingstatuseventrequest",
        "required": "true"
      }
    ],
    "return": "Batcheventresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewEventsApiWithConfig(config)\n\nvar body platformclientv2.Batchuserroutingstatuseventrequest // batchRequest\n// Publish Agent Routing Status Batch Events\ndata, response, err := apiInstance.PostEventsUsersRoutingstatus(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostEventsUsersRoutingstatus: %v\\n\", err)\n}"
  },
  "deleteexternalcontactscontact": {
    "operationId": "deleteexternalcontactscontact",
    "functionName": "DeleteExternalcontactsContact",
    "signature": "DeleteExternalcontactsContact(contactId)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact ID\n// Delete an external contact\ndata, response, err := apiInstance.DeleteExternalcontactsContact(contactId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteExternalcontactsContact: %v\\n\", err)\n}"
  },
  "deleteexternalcontactscontactnote": {
    "operationId": "deleteexternalcontactscontactnote",
    "functionName": "DeleteExternalcontactsContactNote",
    "signature": "DeleteExternalcontactsContactNote(contactId, noteId)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact Id\nvar noteId string // Note Id\n// Delete a note for an external contact\ndata, response, err := apiInstance.DeleteExternalcontactsContactNote(contactId, noteId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteExternalcontactsContactNote: %v\\n\", err)\n}"
  },
  "deleteexternalcontactscontactsschema": {
    "operationId": "deleteexternalcontactscontactsschema",
    "functionName": "DeleteExternalcontactsContactsSchema",
    "signature": "DeleteExternalcontactsContactsSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar schemaId string // Schema ID\n// Delete a schema\nresponse, err := apiInstance.DeleteExternalcontactsContactsSchema(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteExternalcontactsContactsSchema: %v\\n\", err)\n}"
  },
  "deleteexternalcontactsorganization": {
    "operationId": "deleteexternalcontactsorganization",
    "functionName": "DeleteExternalcontactsOrganization",
    "signature": "DeleteExternalcontactsOrganization(externalOrganizationId)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization ID\n// Delete an external organization\ndata, response, err := apiInstance.DeleteExternalcontactsOrganization(externalOrganizationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteExternalcontactsOrganization: %v\\n\", err)\n}"
  },
  "deleteexternalcontactsorganizationnote": {
    "operationId": "deleteexternalcontactsorganizationnote",
    "functionName": "DeleteExternalcontactsOrganizationNote",
    "signature": "DeleteExternalcontactsOrganizationNote(externalOrganizationId, noteId)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization Id\nvar noteId string // Note Id\n// Delete a note for an external organization\ndata, response, err := apiInstance.DeleteExternalcontactsOrganizationNote(externalOrganizationId, noteId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteExternalcontactsOrganizationNote: %v\\n\", err)\n}"
  },
  "deleteexternalcontactsorganizationtrustor": {
    "operationId": "deleteexternalcontactsorganizationtrustor",
    "functionName": "DeleteExternalcontactsOrganizationTrustor",
    "signature": "DeleteExternalcontactsOrganizationTrustor(externalOrganizationId)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization ID\n// Unlink the Trustor for this External Organization\nresponse, err := apiInstance.DeleteExternalcontactsOrganizationTrustor(externalOrganizationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteExternalcontactsOrganizationTrustor: %v\\n\", err)\n}"
  },
  "deleteexternalcontactsrelationship": {
    "operationId": "deleteexternalcontactsrelationship",
    "functionName": "DeleteExternalcontactsRelationship",
    "signature": "DeleteExternalcontactsRelationship(relationshipId)",
    "parameters": [
      {
        "name": "relationshipId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar relationshipId string // Relationship Id\n// Delete a relationship\ndata, response, err := apiInstance.DeleteExternalcontactsRelationship(relationshipId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteExternalcontactsRelationship: %v\\n\", err)\n}"
  },
  "getexternalcontactscontact": {
    "operationId": "getexternalcontactscontact",
    "functionName": "GetExternalcontactsContact",
    "signature": "GetExternalcontactsContact(contactId, expand)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Externalcontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact ID\nvar expand []string // which fields, if any, to expand (externalOrganization,externalDataSources)\n// Fetch an external contact\ndata, response, err := apiInstance.GetExternalcontactsContact(contactId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContact: %v\\n\", err)\n}"
  },
  "getexternalcontactscontactidentifiers": {
    "operationId": "getexternalcontactscontactidentifiers",
    "functionName": "GetExternalcontactsContactIdentifiers",
    "signature": "GetExternalcontactsContactIdentifiers(contactId)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Entitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact ID\n// List the identifiers for a contact\ndata, response, err := apiInstance.GetExternalcontactsContactIdentifiers(contactId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContactIdentifiers: %v\\n\", err)\n}"
  },
  "getexternalcontactscontactjourneysessions": {
    "operationId": "getexternalcontactscontactjourneysessions",
    "functionName": "GetExternalcontactsContactJourneySessions",
    "signature": "GetExternalcontactsContactJourneySessions(contactId, pageSize, after, includeMerged)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeMerged",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Sessionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar contactId string // ExternalContact ID\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar includeMerged bool // Indicates whether to return sessions from all external contacts in the merge-set of the given one.\n// Retrieve all sessions for a given external contact.\ndata, response, err := apiInstance.GetExternalcontactsContactJourneySessions(contactId, pageSize, after, includeMerged)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContactJourneySessions: %v\\n\", err)\n}"
  },
  "getexternalcontactscontactnote": {
    "operationId": "getexternalcontactscontactnote",
    "functionName": "GetExternalcontactsContactNote",
    "signature": "GetExternalcontactsContactNote(contactId, noteId, expand)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Note",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact Id\nvar noteId string // Note Id\nvar expand []string // which fields, if any, to expand\n// Fetch a note for an external contact\ndata, response, err := apiInstance.GetExternalcontactsContactNote(contactId, noteId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContactNote: %v\\n\", err)\n}"
  },
  "getexternalcontactscontactnotes": {
    "operationId": "getexternalcontactscontactnotes",
    "functionName": "GetExternalcontactsContactNotes",
    "signature": "GetExternalcontactsContactNotes(contactId, pageSize, pageNumber, sortOrder, expand)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Notelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact Id\nvar pageSize int // Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar pageNumber int // Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar sortOrder string // Sort order\nvar expand []string // which fields, if any, to expand\n// List notes for an external contact\ndata, response, err := apiInstance.GetExternalcontactsContactNotes(contactId, pageSize, pageNumber, sortOrder, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContactNotes: %v\\n\", err)\n}"
  },
  "getexternalcontactscontactunresolved": {
    "operationId": "getexternalcontactscontactunresolved",
    "functionName": "GetExternalcontactsContactUnresolved",
    "signature": "GetExternalcontactsContactUnresolved(contactId, expand)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Externalcontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact ID\nvar expand []string // which fields, if any, to expand (externalOrganization,externalDataSources)\n// Fetch an unresolved external contact\ndata, response, err := apiInstance.GetExternalcontactsContactUnresolved(contactId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContactUnresolved: %v\\n\", err)\n}"
  },
  "getexternalcontactscontacts": {
    "operationId": "getexternalcontactscontacts",
    "functionName": "GetExternalcontactsContacts",
    "signature": "GetExternalcontactsContacts(pageSize, pageNumber, q, sortOrder, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "q",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Contactlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar pageSize int // Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar pageNumber int // Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar q string // User supplied search keywords (no special syntax is currently supported)\nvar sortOrder string // Sort order\nvar expand []string // which fields, if any, to expand\n// Search for external contacts\ndata, response, err := apiInstance.GetExternalcontactsContacts(pageSize, pageNumber, q, sortOrder, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContacts: %v\\n\", err)\n}"
  },
  "getexternalcontactscontactsschema": {
    "operationId": "getexternalcontactscontactsschema",
    "functionName": "GetExternalcontactsContactsSchema",
    "signature": "GetExternalcontactsContactsSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar schemaId string // Schema ID\n// Get a schema\ndata, response, err := apiInstance.GetExternalcontactsContactsSchema(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContactsSchema: %v\\n\", err)\n}"
  },
  "getexternalcontactscontactsschemaversion": {
    "operationId": "getexternalcontactscontactsschemaversion",
    "functionName": "GetExternalcontactsContactsSchemaVersion",
    "signature": "GetExternalcontactsContactsSchemaVersion(schemaId, versionId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar schemaId string // Schema ID\nvar versionId string // Schema version\n// Get a specific version of a schema\ndata, response, err := apiInstance.GetExternalcontactsContactsSchemaVersion(schemaId, versionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContactsSchemaVersion: %v\\n\", err)\n}"
  },
  "getexternalcontactscontactsschemaversions": {
    "operationId": "getexternalcontactscontactsschemaversions",
    "functionName": "GetExternalcontactsContactsSchemaVersions",
    "signature": "GetExternalcontactsContactsSchemaVersions(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar schemaId string // Schema ID\n// Get all versions of an external contact's schema\ndata, response, err := apiInstance.GetExternalcontactsContactsSchemaVersions(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContactsSchemaVersions: %v\\n\", err)\n}"
  },
  "getexternalcontactscontactsschemas": {
    "operationId": "getexternalcontactscontactsschemas",
    "functionName": "GetExternalcontactsContactsSchemas",
    "signature": "GetExternalcontactsContactsSchemas()",
    "return": "Dataschemalisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\n// Get a list of schemas.\ndata, response, err := apiInstance.GetExternalcontactsContactsSchemas()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsContactsSchemas: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganization": {
    "operationId": "getexternalcontactsorganization",
    "functionName": "GetExternalcontactsOrganization",
    "signature": "GetExternalcontactsOrganization(externalOrganizationId, expand, includeTrustors)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeTrustors",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Externalorganization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization ID\nvar expand string // which fields, if any, to expand (externalDataSources)\nvar includeTrustors bool // (true or false) whether or not to include trustor information embedded in the externalOrganization\n// Fetch an external organization\ndata, response, err := apiInstance.GetExternalcontactsOrganization(externalOrganizationId, expand, includeTrustors)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganization: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganizationcontacts": {
    "operationId": "getexternalcontactsorganizationcontacts",
    "functionName": "GetExternalcontactsOrganizationContacts",
    "signature": "GetExternalcontactsOrganizationContacts(externalOrganizationId, pageSize, pageNumber, q, sortOrder, expand)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "q",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Contactlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization ID\nvar pageSize int // Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar pageNumber int // Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar q string // User supplied search keywords (no special syntax is currently supported)\nvar sortOrder string // Sort order\nvar expand []string // which fields, if any, to expand\n// Search for external contacts in an external organization\ndata, response, err := apiInstance.GetExternalcontactsOrganizationContacts(externalOrganizationId, pageSize, pageNumber, q, sortOrder, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganizationContacts: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganizationnote": {
    "operationId": "getexternalcontactsorganizationnote",
    "functionName": "GetExternalcontactsOrganizationNote",
    "signature": "GetExternalcontactsOrganizationNote(externalOrganizationId, noteId, expand)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Note",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization Id\nvar noteId string // Note Id\nvar expand []string // which fields, if any, to expand\n// Fetch a note for an external organization\ndata, response, err := apiInstance.GetExternalcontactsOrganizationNote(externalOrganizationId, noteId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganizationNote: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganizationnotes": {
    "operationId": "getexternalcontactsorganizationnotes",
    "functionName": "GetExternalcontactsOrganizationNotes",
    "signature": "GetExternalcontactsOrganizationNotes(externalOrganizationId, pageSize, pageNumber, sortOrder, expand)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Notelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization Id\nvar pageSize int // Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar pageNumber int // Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar sortOrder string // Sort order\nvar expand []string // which fields, if any, to expand\n// List notes for an external organization\ndata, response, err := apiInstance.GetExternalcontactsOrganizationNotes(externalOrganizationId, pageSize, pageNumber, sortOrder, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganizationNotes: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganizationrelationships": {
    "operationId": "getexternalcontactsorganizationrelationships",
    "functionName": "GetExternalcontactsOrganizationRelationships",
    "signature": "GetExternalcontactsOrganizationRelationships(externalOrganizationId, pageSize, pageNumber, expand, sortOrder)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Relationshiplisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization ID\nvar pageSize int // Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar pageNumber int // Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar expand string // which fields, if any, to expand\nvar sortOrder string // Sort order\n// Fetch a relationship for an external organization\ndata, response, err := apiInstance.GetExternalcontactsOrganizationRelationships(externalOrganizationId, pageSize, pageNumber, expand, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganizationRelationships: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganizations": {
    "operationId": "getexternalcontactsorganizations",
    "functionName": "GetExternalcontactsOrganizations",
    "signature": "GetExternalcontactsOrganizations(pageSize, pageNumber, q, trustorId, sortOrder, expand, includeTrustors)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "q",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trustorId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "includeTrustors",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Externalorganizationlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar pageSize int // Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar pageNumber int // Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000)\nvar q string // Search query\nvar trustorId []string // Search for external organizations by trustorIds (limit 25). If supplied, the 'q' parameters is ignored. Items are returned in the order requested\nvar sortOrder string // Sort order\nvar expand []string // which fields, if any, to expand\nvar includeTrustors bool // (true or false) whether or not to include trustor information embedded in the externalOrganization\n// Search for external organizations\ndata, response, err := apiInstance.GetExternalcontactsOrganizations(pageSize, pageNumber, q, trustorId, sortOrder, expand, includeTrustors)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganizations: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganizationsschema": {
    "operationId": "getexternalcontactsorganizationsschema",
    "functionName": "GetExternalcontactsOrganizationsSchema",
    "signature": "GetExternalcontactsOrganizationsSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar schemaId string // Schema ID\n// Get a schema\ndata, response, err := apiInstance.GetExternalcontactsOrganizationsSchema(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganizationsSchema: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganizationsschemaversion": {
    "operationId": "getexternalcontactsorganizationsschemaversion",
    "functionName": "GetExternalcontactsOrganizationsSchemaVersion",
    "signature": "GetExternalcontactsOrganizationsSchemaVersion(schemaId, versionId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar schemaId string // Schema ID\nvar versionId string // Schema version\n// Get a specific version of a schema\ndata, response, err := apiInstance.GetExternalcontactsOrganizationsSchemaVersion(schemaId, versionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganizationsSchemaVersion: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganizationsschemaversions": {
    "operationId": "getexternalcontactsorganizationsschemaversions",
    "functionName": "GetExternalcontactsOrganizationsSchemaVersions",
    "signature": "GetExternalcontactsOrganizationsSchemaVersions(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar schemaId string // Schema ID\n// Get all versions of an external organization's schema\ndata, response, err := apiInstance.GetExternalcontactsOrganizationsSchemaVersions(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganizationsSchemaVersions: %v\\n\", err)\n}"
  },
  "getexternalcontactsorganizationsschemas": {
    "operationId": "getexternalcontactsorganizationsschemas",
    "functionName": "GetExternalcontactsOrganizationsSchemas",
    "signature": "GetExternalcontactsOrganizationsSchemas()",
    "return": "Dataschemalisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\n// Get a list of schemas.\ndata, response, err := apiInstance.GetExternalcontactsOrganizationsSchemas()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsOrganizationsSchemas: %v\\n\", err)\n}"
  },
  "getexternalcontactsrelationship": {
    "operationId": "getexternalcontactsrelationship",
    "functionName": "GetExternalcontactsRelationship",
    "signature": "GetExternalcontactsRelationship(relationshipId, expand)",
    "parameters": [
      {
        "name": "relationshipId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Relationship",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar relationshipId string // Relationship Id\nvar expand string // which fields, if any, to expand\n// Fetch a relationship\ndata, response, err := apiInstance.GetExternalcontactsRelationship(relationshipId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsRelationship: %v\\n\", err)\n}"
  },
  "getexternalcontactsreversewhitepageslookup": {
    "operationId": "getexternalcontactsreversewhitepageslookup",
    "functionName": "GetExternalcontactsReversewhitepageslookup",
    "signature": "GetExternalcontactsReversewhitepageslookup(lookupVal, expand)",
    "parameters": [
      {
        "name": "lookupVal",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Reversewhitepageslookupresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar lookupVal string // User supplied value to lookup contacts/externalOrganizations (supports email addresses, e164 phone numbers, Twitter screen names)\nvar expand []string // which field, if any, to expand\n// Look up contacts and externalOrganizations based on an attribute. Maximum of 25 values returned.\ndata, response, err := apiInstance.GetExternalcontactsReversewhitepageslookup(lookupVal, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsReversewhitepageslookup: %v\\n\", err)\n}"
  },
  "getexternalcontactsscancontacts": {
    "operationId": "getexternalcontactsscancontacts",
    "functionName": "GetExternalcontactsScanContacts",
    "signature": "GetExternalcontactsScanContacts(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Cursorcontactlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar limit int // The number of contacts per page; must be between 10 and 200, default is 100)\nvar cursor string // Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL\n// Scan for external contacts using paging\ndata, response, err := apiInstance.GetExternalcontactsScanContacts(limit, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsScanContacts: %v\\n\", err)\n}"
  },
  "getexternalcontactsscannotes": {
    "operationId": "getexternalcontactsscannotes",
    "functionName": "GetExternalcontactsScanNotes",
    "signature": "GetExternalcontactsScanNotes(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Cursornotelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar limit int // The number of notes per page; must be between 10 and 200, default is 100)\nvar cursor string // Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL\n// Scan for notes using paging\ndata, response, err := apiInstance.GetExternalcontactsScanNotes(limit, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsScanNotes: %v\\n\", err)\n}"
  },
  "getexternalcontactsscanorganizations": {
    "operationId": "getexternalcontactsscanorganizations",
    "functionName": "GetExternalcontactsScanOrganizations",
    "signature": "GetExternalcontactsScanOrganizations(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Cursororganizationlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar limit int // The number of organizations per page; must be between 10 and 200, default is 100)\nvar cursor string // Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL\n// Scan for external organizations using paging\ndata, response, err := apiInstance.GetExternalcontactsScanOrganizations(limit, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsScanOrganizations: %v\\n\", err)\n}"
  },
  "getexternalcontactsscanrelationships": {
    "operationId": "getexternalcontactsscanrelationships",
    "functionName": "GetExternalcontactsScanRelationships",
    "signature": "GetExternalcontactsScanRelationships(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Cursorrelationshiplisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar limit int // The number of relationships per page; must be between 10 and 200, default is 100)\nvar cursor string // Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL\n// Scan for relationships\ndata, response, err := apiInstance.GetExternalcontactsScanRelationships(limit, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetExternalcontactsScanRelationships: %v\\n\", err)\n}"
  },
  "patchexternalcontactscontactidentifiers": {
    "operationId": "patchexternalcontactscontactidentifiers",
    "functionName": "PatchExternalcontactsContactIdentifiers",
    "signature": "PatchExternalcontactsContactIdentifiers(contactId, body)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Identifierclaimrequest",
        "required": "true"
      }
    ],
    "return": "Contactidentifier",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact ID\nvar body platformclientv2.Identifierclaimrequest // ClaimRequest\n// Claim or release identifiers for a contact\ndata, response, err := apiInstance.PatchExternalcontactsContactIdentifiers(contactId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchExternalcontactsContactIdentifiers: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkcontacts": {
    "operationId": "postexternalcontactsbulkcontacts",
    "functionName": "PostExternalcontactsBulkContacts",
    "signature": "PostExternalcontactsBulkContacts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkidsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkfetchcontactsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkidsrequest // Contact ids\n// Bulk fetch contacts\ndata, response, err := apiInstance.PostExternalcontactsBulkContacts(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkContacts: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkcontactsadd": {
    "operationId": "postexternalcontactsbulkcontactsadd",
    "functionName": "PostExternalcontactsBulkContactsAdd",
    "signature": "PostExternalcontactsBulkContactsAdd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkcontactsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkcontactsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkcontactsrequest // Contacts\n// Bulk add contacts\ndata, response, err := apiInstance.PostExternalcontactsBulkContactsAdd(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkContactsAdd: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkcontactsremove": {
    "operationId": "postexternalcontactsbulkcontactsremove",
    "functionName": "PostExternalcontactsBulkContactsRemove",
    "signature": "PostExternalcontactsBulkContactsRemove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkidsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkdeleteresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkidsrequest // Contact ids\n// Bulk remove contacts\ndata, response, err := apiInstance.PostExternalcontactsBulkContactsRemove(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkContactsRemove: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkcontactsunresolved": {
    "operationId": "postexternalcontactsbulkcontactsunresolved",
    "functionName": "PostExternalcontactsBulkContactsUnresolved",
    "signature": "PostExternalcontactsBulkContactsUnresolved(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkidsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkfetchcontactsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkidsrequest // Contact ids\n// Bulk fetch unresolved ancestor contacts\ndata, response, err := apiInstance.PostExternalcontactsBulkContactsUnresolved(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkContactsUnresolved: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkcontactsupdate": {
    "operationId": "postexternalcontactsbulkcontactsupdate",
    "functionName": "PostExternalcontactsBulkContactsUpdate",
    "signature": "PostExternalcontactsBulkContactsUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkcontactsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkcontactsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkcontactsrequest // Contacts\n// Bulk update contacts\ndata, response, err := apiInstance.PostExternalcontactsBulkContactsUpdate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkContactsUpdate: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulknotes": {
    "operationId": "postexternalcontactsbulknotes",
    "functionName": "PostExternalcontactsBulkNotes",
    "signature": "PostExternalcontactsBulkNotes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkidsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkfetchnotesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkidsrequest // Note ids\n// Bulk fetch notes\ndata, response, err := apiInstance.PostExternalcontactsBulkNotes(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkNotes: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulknotesadd": {
    "operationId": "postexternalcontactsbulknotesadd",
    "functionName": "PostExternalcontactsBulkNotesAdd",
    "signature": "PostExternalcontactsBulkNotesAdd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulknotesrequest",
        "required": "true"
      }
    ],
    "return": "Bulknotesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulknotesrequest // Notes\n// Bulk add notes\ndata, response, err := apiInstance.PostExternalcontactsBulkNotesAdd(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkNotesAdd: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulknotesremove": {
    "operationId": "postexternalcontactsbulknotesremove",
    "functionName": "PostExternalcontactsBulkNotesRemove",
    "signature": "PostExternalcontactsBulkNotesRemove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkidsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkdeleteresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkidsrequest // Note ids\n// Bulk remove notes\ndata, response, err := apiInstance.PostExternalcontactsBulkNotesRemove(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkNotesRemove: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulknotesupdate": {
    "operationId": "postexternalcontactsbulknotesupdate",
    "functionName": "PostExternalcontactsBulkNotesUpdate",
    "signature": "PostExternalcontactsBulkNotesUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulknotesrequest",
        "required": "true"
      }
    ],
    "return": "Bulknotesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulknotesrequest // Notes\n// Bulk update notes\ndata, response, err := apiInstance.PostExternalcontactsBulkNotesUpdate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkNotesUpdate: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkorganizations": {
    "operationId": "postexternalcontactsbulkorganizations",
    "functionName": "PostExternalcontactsBulkOrganizations",
    "signature": "PostExternalcontactsBulkOrganizations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkidsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkfetchorganizationsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkidsrequest // Organizations ids\n// Bulk fetch organizations\ndata, response, err := apiInstance.PostExternalcontactsBulkOrganizations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkOrganizations: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkorganizationsadd": {
    "operationId": "postexternalcontactsbulkorganizationsadd",
    "functionName": "PostExternalcontactsBulkOrganizationsAdd",
    "signature": "PostExternalcontactsBulkOrganizationsAdd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkorganizationsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkorganizationsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkorganizationsrequest // Organizations\n// Bulk add organizations\ndata, response, err := apiInstance.PostExternalcontactsBulkOrganizationsAdd(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkOrganizationsAdd: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkorganizationsremove": {
    "operationId": "postexternalcontactsbulkorganizationsremove",
    "functionName": "PostExternalcontactsBulkOrganizationsRemove",
    "signature": "PostExternalcontactsBulkOrganizationsRemove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkidsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkdeleteresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkidsrequest // Organization ids\n// Bulk remove organizations\ndata, response, err := apiInstance.PostExternalcontactsBulkOrganizationsRemove(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkOrganizationsRemove: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkorganizationsupdate": {
    "operationId": "postexternalcontactsbulkorganizationsupdate",
    "functionName": "PostExternalcontactsBulkOrganizationsUpdate",
    "signature": "PostExternalcontactsBulkOrganizationsUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkorganizationsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkorganizationsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkorganizationsrequest // Organizations\n// Bulk update organizations\ndata, response, err := apiInstance.PostExternalcontactsBulkOrganizationsUpdate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkOrganizationsUpdate: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkrelationships": {
    "operationId": "postexternalcontactsbulkrelationships",
    "functionName": "PostExternalcontactsBulkRelationships",
    "signature": "PostExternalcontactsBulkRelationships(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkidsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkfetchrelationshipsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkidsrequest // Relationships ids\n// Bulk fetch relationships\ndata, response, err := apiInstance.PostExternalcontactsBulkRelationships(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkRelationships: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkrelationshipsadd": {
    "operationId": "postexternalcontactsbulkrelationshipsadd",
    "functionName": "PostExternalcontactsBulkRelationshipsAdd",
    "signature": "PostExternalcontactsBulkRelationshipsAdd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkrelationshipsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkrelationshipsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkrelationshipsrequest // Relationships\n// Bulk add relationships\ndata, response, err := apiInstance.PostExternalcontactsBulkRelationshipsAdd(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkRelationshipsAdd: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkrelationshipsremove": {
    "operationId": "postexternalcontactsbulkrelationshipsremove",
    "functionName": "PostExternalcontactsBulkRelationshipsRemove",
    "signature": "PostExternalcontactsBulkRelationshipsRemove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkidsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkdeleteresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkidsrequest // Relationships ids\n// Bulk remove relationships\ndata, response, err := apiInstance.PostExternalcontactsBulkRelationshipsRemove(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkRelationshipsRemove: %v\\n\", err)\n}"
  },
  "postexternalcontactsbulkrelationshipsupdate": {
    "operationId": "postexternalcontactsbulkrelationshipsupdate",
    "functionName": "PostExternalcontactsBulkRelationshipsUpdate",
    "signature": "PostExternalcontactsBulkRelationshipsUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bulkrelationshipsrequest",
        "required": "true"
      }
    ],
    "return": "Bulkrelationshipsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Bulkrelationshipsrequest // Relationships\n// Bulk update relationships\ndata, response, err := apiInstance.PostExternalcontactsBulkRelationshipsUpdate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsBulkRelationshipsUpdate: %v\\n\", err)\n}"
  },
  "postexternalcontactscontactnotes": {
    "operationId": "postexternalcontactscontactnotes",
    "functionName": "PostExternalcontactsContactNotes",
    "signature": "PostExternalcontactsContactNotes(contactId, body)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact Id\nvar body platformclientv2.Note // ExternalContact\n// Create a note for an external contact\ndata, response, err := apiInstance.PostExternalcontactsContactNotes(contactId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsContactNotes: %v\\n\", err)\n}"
  },
  "postexternalcontactscontactpromotion": {
    "operationId": "postexternalcontactscontactpromotion",
    "functionName": "PostExternalcontactsContactPromotion",
    "signature": "PostExternalcontactsContactPromotion(contactId)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Externalcontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact ID\n// Promote an observed contact (ephemeral or identified) to a curated contact\ndata, response, err := apiInstance.PostExternalcontactsContactPromotion(contactId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsContactPromotion: %v\\n\", err)\n}"
  },
  "postexternalcontactscontacts": {
    "operationId": "postexternalcontactscontacts",
    "functionName": "PostExternalcontactsContacts",
    "signature": "PostExternalcontactsContacts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Externalcontact",
        "required": "true"
      }
    ],
    "return": "Externalcontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Externalcontact // ExternalContact\n// Create an external contact\ndata, response, err := apiInstance.PostExternalcontactsContacts(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsContacts: %v\\n\", err)\n}"
  },
  "postexternalcontactscontactsschemas": {
    "operationId": "postexternalcontactscontactsschemas",
    "functionName": "PostExternalcontactsContactsSchemas",
    "signature": "PostExternalcontactsContactsSchemas(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Dataschema",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Dataschema // Schema\n// Create a schema\ndata, response, err := apiInstance.PostExternalcontactsContactsSchemas(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsContactsSchemas: %v\\n\", err)\n}"
  },
  "postexternalcontactsidentifierlookup": {
    "operationId": "postexternalcontactsidentifierlookup",
    "functionName": "PostExternalcontactsIdentifierlookup",
    "signature": "PostExternalcontactsIdentifierlookup(identifier)",
    "parameters": [
      {
        "name": "identifier",
        "type": "Contactidentifier",
        "required": "true"
      }
    ],
    "return": "Externalcontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar identifier platformclientv2.Contactidentifier // \n// Fetch a contact using an identifier type and value.\ndata, response, err := apiInstance.PostExternalcontactsIdentifierlookup(identifier)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsIdentifierlookup: %v\\n\", err)\n}"
  },
  "postexternalcontactsmergecontacts": {
    "operationId": "postexternalcontactsmergecontacts",
    "functionName": "PostExternalcontactsMergeContacts",
    "signature": "PostExternalcontactsMergeContacts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Mergerequest",
        "required": "true"
      }
    ],
    "return": "Externalcontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Mergerequest // MergeRequest\n// Merge two contacts into a new contact record\ndata, response, err := apiInstance.PostExternalcontactsMergeContacts(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsMergeContacts: %v\\n\", err)\n}"
  },
  "postexternalcontactsorganizationnotes": {
    "operationId": "postexternalcontactsorganizationnotes",
    "functionName": "PostExternalcontactsOrganizationNotes",
    "signature": "PostExternalcontactsOrganizationNotes(externalOrganizationId, body)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization Id\nvar body platformclientv2.Note // ExternalContact\n// Create a note for an external organization\ndata, response, err := apiInstance.PostExternalcontactsOrganizationNotes(externalOrganizationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsOrganizationNotes: %v\\n\", err)\n}"
  },
  "postexternalcontactsorganizations": {
    "operationId": "postexternalcontactsorganizations",
    "functionName": "PostExternalcontactsOrganizations",
    "signature": "PostExternalcontactsOrganizations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Externalorganization",
        "required": "true"
      }
    ],
    "return": "Externalorganization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Externalorganization // ExternalOrganization\n// Create an external organization\ndata, response, err := apiInstance.PostExternalcontactsOrganizations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsOrganizations: %v\\n\", err)\n}"
  },
  "postexternalcontactsorganizationsschemas": {
    "operationId": "postexternalcontactsorganizationsschemas",
    "functionName": "PostExternalcontactsOrganizationsSchemas",
    "signature": "PostExternalcontactsOrganizationsSchemas(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Dataschema",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Dataschema // Schema\n// Create a schema\ndata, response, err := apiInstance.PostExternalcontactsOrganizationsSchemas(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsOrganizationsSchemas: %v\\n\", err)\n}"
  },
  "postexternalcontactsrelationships": {
    "operationId": "postexternalcontactsrelationships",
    "functionName": "PostExternalcontactsRelationships",
    "signature": "PostExternalcontactsRelationships(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Relationship",
        "required": "true"
      }
    ],
    "return": "Relationship",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar body platformclientv2.Relationship // Relationship\n// Create a relationship\ndata, response, err := apiInstance.PostExternalcontactsRelationships(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostExternalcontactsRelationships: %v\\n\", err)\n}"
  },
  "putexternalcontactscontact": {
    "operationId": "putexternalcontactscontact",
    "functionName": "PutExternalcontactsContact",
    "signature": "PutExternalcontactsContact(contactId, body)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Externalcontact",
        "required": "true"
      }
    ],
    "return": "Externalcontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact ID\nvar body platformclientv2.Externalcontact // ExternalContact\n// Update an external contact\ndata, response, err := apiInstance.PutExternalcontactsContact(contactId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutExternalcontactsContact: %v\\n\", err)\n}"
  },
  "putexternalcontactscontactnote": {
    "operationId": "putexternalcontactscontactnote",
    "functionName": "PutExternalcontactsContactNote",
    "signature": "PutExternalcontactsContactNote(contactId, noteId, body)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar contactId string // ExternalContact Id\nvar noteId string // Note Id\nvar body platformclientv2.Note // Note\n// Update a note for an external contact\ndata, response, err := apiInstance.PutExternalcontactsContactNote(contactId, noteId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutExternalcontactsContactNote: %v\\n\", err)\n}"
  },
  "putexternalcontactscontactsschema": {
    "operationId": "putexternalcontactscontactsschema",
    "functionName": "PutExternalcontactsContactsSchema",
    "signature": "PutExternalcontactsContactsSchema(schemaId, body)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dataschema",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar schemaId string // Schema ID\nvar body platformclientv2.Dataschema // Data Schema\n// Update a schema\ndata, response, err := apiInstance.PutExternalcontactsContactsSchema(schemaId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutExternalcontactsContactsSchema: %v\\n\", err)\n}"
  },
  "putexternalcontactsconversation": {
    "operationId": "putexternalcontactsconversation",
    "functionName": "PutExternalcontactsConversation",
    "signature": "PutExternalcontactsConversation(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversationassociation",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar body platformclientv2.Conversationassociation // ConversationAssociation\n// Associate/disassociate an external contact with a conversation\nresponse, err := apiInstance.PutExternalcontactsConversation(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PutExternalcontactsConversation: %v\\n\", err)\n}"
  },
  "putexternalcontactsorganization": {
    "operationId": "putexternalcontactsorganization",
    "functionName": "PutExternalcontactsOrganization",
    "signature": "PutExternalcontactsOrganization(externalOrganizationId, body)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Externalorganization",
        "required": "true"
      }
    ],
    "return": "Externalorganization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization ID\nvar body platformclientv2.Externalorganization // ExternalOrganization\n// Update an external organization\ndata, response, err := apiInstance.PutExternalcontactsOrganization(externalOrganizationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutExternalcontactsOrganization: %v\\n\", err)\n}"
  },
  "putexternalcontactsorganizationnote": {
    "operationId": "putexternalcontactsorganizationnote",
    "functionName": "PutExternalcontactsOrganizationNote",
    "signature": "PutExternalcontactsOrganizationNote(externalOrganizationId, noteId, body)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization Id\nvar noteId string // Note Id\nvar body platformclientv2.Note // Note\n// Update a note for an external organization\ndata, response, err := apiInstance.PutExternalcontactsOrganizationNote(externalOrganizationId, noteId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutExternalcontactsOrganizationNote: %v\\n\", err)\n}"
  },
  "putexternalcontactsorganizationtrustortrustorid": {
    "operationId": "putexternalcontactsorganizationtrustortrustorid",
    "functionName": "PutExternalcontactsOrganizationTrustorTrustorId",
    "signature": "PutExternalcontactsOrganizationTrustorTrustorId(externalOrganizationId, trustorId)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trustorId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Externalorganizationtrustorlink",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar externalOrganizationId string // External Organization ID\nvar trustorId string // Trustor ID\n// Links a Trustor with an External Organization\ndata, response, err := apiInstance.PutExternalcontactsOrganizationTrustorTrustorId(externalOrganizationId, trustorId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutExternalcontactsOrganizationTrustorTrustorId: %v\\n\", err)\n}"
  },
  "putexternalcontactsorganizationsschema": {
    "operationId": "putexternalcontactsorganizationsschema",
    "functionName": "PutExternalcontactsOrganizationsSchema",
    "signature": "PutExternalcontactsOrganizationsSchema(schemaId, body)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dataschema",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar schemaId string // Schema ID\nvar body platformclientv2.Dataschema // Data Schema\n// Update a schema\ndata, response, err := apiInstance.PutExternalcontactsOrganizationsSchema(schemaId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutExternalcontactsOrganizationsSchema: %v\\n\", err)\n}"
  },
  "putexternalcontactsrelationship": {
    "operationId": "putexternalcontactsrelationship",
    "functionName": "PutExternalcontactsRelationship",
    "signature": "PutExternalcontactsRelationship(relationshipId, body)",
    "parameters": [
      {
        "name": "relationshipId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Relationship",
        "required": "true"
      }
    ],
    "return": "Relationship",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewExternalContactsApiWithConfig(config)\n\nvar relationshipId string // Relationship Id\nvar body platformclientv2.Relationship // Relationship\n// Update a relationship\ndata, response, err := apiInstance.PutExternalcontactsRelationship(relationshipId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutExternalcontactsRelationship: %v\\n\", err)\n}"
  },
  "deletefaxdocument": {
    "operationId": "deletefaxdocument",
    "functionName": "DeleteFaxDocument",
    "signature": "DeleteFaxDocument(documentId)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFaxApiWithConfig(config)\n\nvar documentId string // Document ID\n// Delete a fax document.\nresponse, err := apiInstance.DeleteFaxDocument(documentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteFaxDocument: %v\\n\", err)\n}"
  },
  "getfaxdocument": {
    "operationId": "getfaxdocument",
    "functionName": "GetFaxDocument",
    "signature": "GetFaxDocument(documentId)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Faxdocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFaxApiWithConfig(config)\n\nvar documentId string // Document ID\n// Get a document.\ndata, response, err := apiInstance.GetFaxDocument(documentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFaxDocument: %v\\n\", err)\n}"
  },
  "getfaxdocumentcontent": {
    "operationId": "getfaxdocumentcontent",
    "functionName": "GetFaxDocumentContent",
    "signature": "GetFaxDocumentContent(documentId)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Downloadresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFaxApiWithConfig(config)\n\nvar documentId string // Document ID\n// Download a fax document.\ndata, response, err := apiInstance.GetFaxDocumentContent(documentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFaxDocumentContent: %v\\n\", err)\n}"
  },
  "getfaxdocuments": {
    "operationId": "getfaxdocuments",
    "functionName": "GetFaxDocuments",
    "signature": "GetFaxDocuments(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Faxdocumententitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFaxApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of fax documents.\ndata, response, err := apiInstance.GetFaxDocuments(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFaxDocuments: %v\\n\", err)\n}"
  },
  "getfaxsummary": {
    "operationId": "getfaxsummary",
    "functionName": "GetFaxSummary",
    "signature": "GetFaxSummary()",
    "return": "Faxsummary",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFaxApiWithConfig(config)\n\n// Get fax summary\ndata, response, err := apiInstance.GetFaxSummary()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFaxSummary: %v\\n\", err)\n}"
  },
  "putfaxdocument": {
    "operationId": "putfaxdocument",
    "functionName": "PutFaxDocument",
    "signature": "PutFaxDocument(documentId, body)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Faxdocument",
        "required": "true"
      }
    ],
    "return": "Faxdocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewFaxApiWithConfig(config)\n\nvar documentId string // Document ID\nvar body platformclientv2.Faxdocument // Document\n// Update a fax document.\ndata, response, err := apiInstance.PutFaxDocument(documentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutFaxDocument: %v\\n\", err)\n}"
  },
  "deleteemployeeperformanceexternalmetricsdefinition": {
    "operationId": "deleteemployeeperformanceexternalmetricsdefinition",
    "functionName": "DeleteEmployeeperformanceExternalmetricsDefinition",
    "signature": "DeleteEmployeeperformanceExternalmetricsDefinition(metricId)",
    "parameters": [
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar metricId string // Specifies the External Metric Definition ID\n// Delete an External Metric Definition\nresponse, err := apiInstance.DeleteEmployeeperformanceExternalmetricsDefinition(metricId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteEmployeeperformanceExternalmetricsDefinition: %v\\n\", err)\n}"
  },
  "getemployeeperformanceexternalmetricsdefinition": {
    "operationId": "getemployeeperformanceexternalmetricsdefinition",
    "functionName": "GetEmployeeperformanceExternalmetricsDefinition",
    "signature": "GetEmployeeperformanceExternalmetricsDefinition(metricId)",
    "parameters": [
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Externalmetricdefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar metricId string // Specifies the External Metric Definition ID\n// Get an External Metric Definition\ndata, response, err := apiInstance.GetEmployeeperformanceExternalmetricsDefinition(metricId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetEmployeeperformanceExternalmetricsDefinition: %v\\n\", err)\n}"
  },
  "getemployeeperformanceexternalmetricsdefinitions": {
    "operationId": "getemployeeperformanceexternalmetricsdefinitions",
    "functionName": "GetEmployeeperformanceExternalmetricsDefinitions",
    "signature": "GetEmployeeperformanceExternalmetricsDefinitions(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Externalmetricdefinitionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of External Metric Definitions of an organization, sorted by name in ascending order\ndata, response, err := apiInstance.GetEmployeeperformanceExternalmetricsDefinitions(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetEmployeeperformanceExternalmetricsDefinitions: %v\\n\", err)\n}"
  },
  "getgamificationinsights": {
    "operationId": "getgamificationinsights",
    "functionName": "GetGamificationInsights",
    "signature": "GetGamificationInsights(filterType, filterId, granularity, comparativePeriodStartWorkday, primaryPeriodStartWorkday, pageSize, pageNumber, sortKey, sortMetricId, sortOrder, userIds)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "string",
        "required": "true"
      },
      {
        "name": "comparativePeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortKey",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortMetricId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "userIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Insightssummary",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar granularity string // Granularity\nvar comparativePeriodStartWorkday time.Time // The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodStartWorkday time.Time // The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortKey string // Sort key\nvar sortMetricId string // Sort Metric Id\nvar sortOrder string // Sort order\nvar userIds string // A list of up to 100 comma-separated user Ids\n// Get insights summary\ndata, response, err := apiInstance.GetGamificationInsights(filterType, filterId, granularity, comparativePeriodStartWorkday, primaryPeriodStartWorkday, pageSize, pageNumber, sortKey, sortMetricId, sortOrder, userIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationInsights: %v\\n\", err)\n}"
  },
  "getgamificationinsightsdetails": {
    "operationId": "getgamificationinsightsdetails",
    "functionName": "GetGamificationInsightsDetails",
    "signature": "GetGamificationInsightsDetails(filterType, filterId, granularity, comparativePeriodStartWorkday, primaryPeriodStartWorkday)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "string",
        "required": "true"
      },
      {
        "name": "comparativePeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Insightsdetails",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar granularity string // Granularity\nvar comparativePeriodStartWorkday time.Time // The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodStartWorkday time.Time // The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get insights details for the current user\ndata, response, err := apiInstance.GetGamificationInsightsDetails(filterType, filterId, granularity, comparativePeriodStartWorkday, primaryPeriodStartWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationInsightsDetails: %v\\n\", err)\n}"
  },
  "getgamificationinsightsgroupstrends": {
    "operationId": "getgamificationinsightsgroupstrends",
    "functionName": "GetGamificationInsightsGroupsTrends",
    "signature": "GetGamificationInsightsGroupsTrends(filterType, filterId, granularity, comparativePeriodStartWorkday, comparativePeriodEndWorkday, primaryPeriodStartWorkday, primaryPeriodEndWorkday)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "string",
        "required": "true"
      },
      {
        "name": "comparativePeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "comparativePeriodEndWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodEndWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Insightstrend",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar granularity string // Granularity\nvar comparativePeriodStartWorkday time.Time // The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar comparativePeriodEndWorkday time.Time // The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodStartWorkday time.Time // The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodEndWorkday time.Time // The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get insights overall trend for the current user\ndata, response, err := apiInstance.GetGamificationInsightsGroupsTrends(filterType, filterId, granularity, comparativePeriodStartWorkday, comparativePeriodEndWorkday, primaryPeriodStartWorkday, primaryPeriodEndWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationInsightsGroupsTrends: %v\\n\", err)\n}"
  },
  "getgamificationinsightsgroupstrendsall": {
    "operationId": "getgamificationinsightsgroupstrendsall",
    "functionName": "GetGamificationInsightsGroupsTrendsAll",
    "signature": "GetGamificationInsightsGroupsTrendsAll(filterType, filterId, granularity, comparativePeriodStartWorkday, comparativePeriodEndWorkday, primaryPeriodStartWorkday, primaryPeriodEndWorkday)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "string",
        "required": "true"
      },
      {
        "name": "comparativePeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "comparativePeriodEndWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodEndWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Insightstrend",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar granularity string // Granularity\nvar comparativePeriodStartWorkday time.Time // The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar comparativePeriodEndWorkday time.Time // The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodStartWorkday time.Time // The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodEndWorkday time.Time // The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get insights overall trend\ndata, response, err := apiInstance.GetGamificationInsightsGroupsTrendsAll(filterType, filterId, granularity, comparativePeriodStartWorkday, comparativePeriodEndWorkday, primaryPeriodStartWorkday, primaryPeriodEndWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationInsightsGroupsTrendsAll: %v\\n\", err)\n}"
  },
  "getgamificationinsightsmembers": {
    "operationId": "getgamificationinsightsmembers",
    "functionName": "GetGamificationInsightsMembers",
    "signature": "GetGamificationInsightsMembers(filterType, filterId, granularity, startWorkday)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Insightsagents",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar granularity string // Granularity\nvar startWorkday time.Time // The start work day. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Query users in a profile during a period of time\ndata, response, err := apiInstance.GetGamificationInsightsMembers(filterType, filterId, granularity, startWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationInsightsMembers: %v\\n\", err)\n}"
  },
  "getgamificationinsightstrends": {
    "operationId": "getgamificationinsightstrends",
    "functionName": "GetGamificationInsightsTrends",
    "signature": "GetGamificationInsightsTrends(filterType, filterId, granularity, comparativePeriodStartWorkday, comparativePeriodEndWorkday, primaryPeriodStartWorkday, primaryPeriodEndWorkday)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "string",
        "required": "true"
      },
      {
        "name": "comparativePeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "comparativePeriodEndWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodEndWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Userinsightstrend",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar granularity string // Granularity\nvar comparativePeriodStartWorkday time.Time // The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar comparativePeriodEndWorkday time.Time // The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodStartWorkday time.Time // The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodEndWorkday time.Time // The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get insights user trend for the current user\ndata, response, err := apiInstance.GetGamificationInsightsTrends(filterType, filterId, granularity, comparativePeriodStartWorkday, comparativePeriodEndWorkday, primaryPeriodStartWorkday, primaryPeriodEndWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationInsightsTrends: %v\\n\", err)\n}"
  },
  "getgamificationinsightsuserdetails": {
    "operationId": "getgamificationinsightsuserdetails",
    "functionName": "GetGamificationInsightsUserDetails",
    "signature": "GetGamificationInsightsUserDetails(userId, filterType, filterId, granularity, comparativePeriodStartWorkday, primaryPeriodStartWorkday)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "string",
        "required": "true"
      },
      {
        "name": "comparativePeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Insightsdetails",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // The ID of a user.\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar granularity string // Granularity\nvar comparativePeriodStartWorkday time.Time // The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodStartWorkday time.Time // The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get insights details for the user\ndata, response, err := apiInstance.GetGamificationInsightsUserDetails(userId, filterType, filterId, granularity, comparativePeriodStartWorkday, primaryPeriodStartWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationInsightsUserDetails: %v\\n\", err)\n}"
  },
  "getgamificationinsightsusertrends": {
    "operationId": "getgamificationinsightsusertrends",
    "functionName": "GetGamificationInsightsUserTrends",
    "signature": "GetGamificationInsightsUserTrends(userId, filterType, filterId, granularity, comparativePeriodStartWorkday, comparativePeriodEndWorkday, primaryPeriodStartWorkday, primaryPeriodEndWorkday)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "string",
        "required": "true"
      },
      {
        "name": "comparativePeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "comparativePeriodEndWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodStartWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "primaryPeriodEndWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Userinsightstrend",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // The ID of a user.\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar granularity string // Granularity\nvar comparativePeriodStartWorkday time.Time // The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar comparativePeriodEndWorkday time.Time // The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodStartWorkday time.Time // The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar primaryPeriodEndWorkday time.Time // The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get insights user trend for the user\ndata, response, err := apiInstance.GetGamificationInsightsUserTrends(userId, filterType, filterId, granularity, comparativePeriodStartWorkday, comparativePeriodEndWorkday, primaryPeriodStartWorkday, primaryPeriodEndWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationInsightsUserTrends: %v\\n\", err)\n}"
  },
  "getgamificationleaderboard": {
    "operationId": "getgamificationleaderboard",
    "functionName": "GetGamificationLeaderboard",
    "signature": "GetGamificationLeaderboard(startWorkday, endWorkday, metricId)",
    "parameters": [
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Leaderboard",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar startWorkday time.Time // Start workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar metricId string // Metric Id for which the leaderboard is to be generated. The total points is used if nothing is given.\n// Leaderboard of the requesting user's division or performance profile\ndata, response, err := apiInstance.GetGamificationLeaderboard(startWorkday, endWorkday, metricId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationLeaderboard: %v\\n\", err)\n}"
  },
  "getgamificationleaderboardall": {
    "operationId": "getgamificationleaderboardall",
    "functionName": "GetGamificationLeaderboardAll",
    "signature": "GetGamificationLeaderboardAll(filterType, filterId, startWorkday, endWorkday, metricId)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Leaderboard",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type. For example, division or performance profile Id\nvar startWorkday time.Time // Start workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar metricId string // Metric Id for which the leaderboard is to be generated. The total points is used if nothing is given.\n// Leaderboard by filter type\ndata, response, err := apiInstance.GetGamificationLeaderboardAll(filterType, filterId, startWorkday, endWorkday, metricId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationLeaderboardAll: %v\\n\", err)\n}"
  },
  "getgamificationleaderboardallbestpoints": {
    "operationId": "getgamificationleaderboardallbestpoints",
    "functionName": "GetGamificationLeaderboardAllBestpoints",
    "signature": "GetGamificationLeaderboardAllBestpoints(filterType, filterId)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Overallbestpoints",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type. For example, division or performance profile Id\n// Best Points by division or performance profile\ndata, response, err := apiInstance.GetGamificationLeaderboardAllBestpoints(filterType, filterId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationLeaderboardAllBestpoints: %v\\n\", err)\n}"
  },
  "getgamificationleaderboardbestpoints": {
    "operationId": "getgamificationleaderboardbestpoints",
    "functionName": "GetGamificationLeaderboardBestpoints",
    "signature": "GetGamificationLeaderboardBestpoints()",
    "return": "Overallbestpoints",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\n// Best Points of the requesting user's current performance profile or division\ndata, response, err := apiInstance.GetGamificationLeaderboardBestpoints()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationLeaderboardBestpoints: %v\\n\", err)\n}"
  },
  "getgamificationmetricdefinition": {
    "operationId": "getgamificationmetricdefinition",
    "functionName": "GetGamificationMetricdefinition",
    "signature": "GetGamificationMetricdefinition(metricDefinitionId)",
    "parameters": [
      {
        "name": "metricDefinitionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Metricdefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar metricDefinitionId string // metric definition id\n// Metric definition by id\ndata, response, err := apiInstance.GetGamificationMetricdefinition(metricDefinitionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationMetricdefinition: %v\\n\", err)\n}"
  },
  "getgamificationmetricdefinitions": {
    "operationId": "getgamificationmetricdefinitions",
    "functionName": "GetGamificationMetricdefinitions",
    "signature": "GetGamificationMetricdefinitions()",
    "return": "Getmetricdefinitionsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\n// All metric definitions\ndata, response, err := apiInstance.GetGamificationMetricdefinitions()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationMetricdefinitions: %v\\n\", err)\n}"
  },
  "getgamificationprofile": {
    "operationId": "getgamificationprofile",
    "functionName": "GetGamificationProfile",
    "signature": "GetGamificationProfile(profileId)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Performanceprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // performanceProfileId\n// Performance profile by id\ndata, response, err := apiInstance.GetGamificationProfile(profileId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationProfile: %v\\n\", err)\n}"
  },
  "getgamificationprofilemembers": {
    "operationId": "getgamificationprofilemembers",
    "functionName": "GetGamificationProfileMembers",
    "signature": "GetGamificationProfileMembers(profileId)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Memberlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // Profile Id\n// Members of a given performance profile\ndata, response, err := apiInstance.GetGamificationProfileMembers(profileId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationProfileMembers: %v\\n\", err)\n}"
  },
  "getgamificationprofilemetric": {
    "operationId": "getgamificationprofilemetric",
    "functionName": "GetGamificationProfileMetric",
    "signature": "GetGamificationProfileMetric(profileId, metricId, workday)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "time.Time",
        "required": "false"
      }
    ],
    "return": "Metric",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // Performance Profile Id\nvar metricId string // Metric Id\nvar workday time.Time // The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Performance profile gamified metric by id\ndata, response, err := apiInstance.GetGamificationProfileMetric(profileId, metricId, workday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationProfileMetric: %v\\n\", err)\n}"
  },
  "getgamificationprofilemetrics": {
    "operationId": "getgamificationprofilemetrics",
    "functionName": "GetGamificationProfileMetrics",
    "signature": "GetGamificationProfileMetrics(profileId, expand, workday, metricIds)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "workday",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "metricIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Getmetricresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // Performance Profile Id\nvar expand []string // Which fields, if any, to expand.\nvar workday time.Time // The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar metricIds string // List of metric ids to filter the response (Optional, comma-separated).\n// All gamified metrics for a given performance profile\ndata, response, err := apiInstance.GetGamificationProfileMetrics(profileId, expand, workday, metricIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationProfileMetrics: %v\\n\", err)\n}"
  },
  "getgamificationprofilemetricsobjectivedetails": {
    "operationId": "getgamificationprofilemetricsobjectivedetails",
    "functionName": "GetGamificationProfileMetricsObjectivedetails",
    "signature": "GetGamificationProfileMetricsObjectivedetails(profileId, workday)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "time.Time",
        "required": "false"
      }
    ],
    "return": "Getmetricsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // Performance Profile Id\nvar workday time.Time // The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// All metrics for a given performance profile with objective details such as order and maxPoints\ndata, response, err := apiInstance.GetGamificationProfileMetricsObjectivedetails(profileId, workday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationProfileMetricsObjectivedetails: %v\\n\", err)\n}"
  },
  "getgamificationprofiles": {
    "operationId": "getgamificationprofiles",
    "functionName": "GetGamificationProfiles",
    "signature": "GetGamificationProfiles()",
    "return": "Getprofilesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\n// All performance profiles\ndata, response, err := apiInstance.GetGamificationProfiles()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationProfiles: %v\\n\", err)\n}"
  },
  "getgamificationprofilesuser": {
    "operationId": "getgamificationprofilesuser",
    "functionName": "GetGamificationProfilesUser",
    "signature": "GetGamificationProfilesUser(userId, workday)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "time.Time",
        "required": "false"
      }
    ],
    "return": "Performanceprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // \nvar workday time.Time // Target querying workday. If not provided, then queries the current performance profile. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Performance profile of a user\ndata, response, err := apiInstance.GetGamificationProfilesUser(userId, workday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationProfilesUser: %v\\n\", err)\n}"
  },
  "getgamificationprofilesusersme": {
    "operationId": "getgamificationprofilesusersme",
    "functionName": "GetGamificationProfilesUsersMe",
    "signature": "GetGamificationProfilesUsersMe(workday)",
    "parameters": [
      {
        "name": "workday",
        "type": "time.Time",
        "required": "false"
      }
    ],
    "return": "Performanceprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar workday time.Time // Target querying workday. If not provided, then queries the current performance profile. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Performance profile of the requesting user\ndata, response, err := apiInstance.GetGamificationProfilesUsersMe(workday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationProfilesUsersMe: %v\\n\", err)\n}"
  },
  "getgamificationscorecards": {
    "operationId": "getgamificationscorecards",
    "functionName": "GetGamificationScorecards",
    "signature": "GetGamificationScorecards(workday, expand)",
    "parameters": [
      {
        "name": "workday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Workdaymetriclisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar workday time.Time // Target querying workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar expand []string // Which fields, if any, to expand.\n// Workday performance metrics of the requesting user\ndata, response, err := apiInstance.GetGamificationScorecards(workday, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecards: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsattendance": {
    "operationId": "getgamificationscorecardsattendance",
    "functionName": "GetGamificationScorecardsAttendance",
    "signature": "GetGamificationScorecardsAttendance(startWorkday, endWorkday)",
    "parameters": [
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Attendancestatuslisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Attendance status metrics of the requesting user\ndata, response, err := apiInstance.GetGamificationScorecardsAttendance(startWorkday, endWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsAttendance: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsbestpoints": {
    "operationId": "getgamificationscorecardsbestpoints",
    "functionName": "GetGamificationScorecardsBestpoints",
    "signature": "GetGamificationScorecardsBestpoints()",
    "return": "Userbestpoints",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\n// Best points of the requesting user\ndata, response, err := apiInstance.GetGamificationScorecardsBestpoints()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsBestpoints: %v\\n\", err)\n}"
  },
  "getgamificationscorecardspointsalltime": {
    "operationId": "getgamificationscorecardspointsalltime",
    "functionName": "GetGamificationScorecardsPointsAlltime",
    "signature": "GetGamificationScorecardsPointsAlltime(endWorkday)",
    "parameters": [
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Alltimepoints",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// All-time points of the requesting user\ndata, response, err := apiInstance.GetGamificationScorecardsPointsAlltime(endWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsPointsAlltime: %v\\n\", err)\n}"
  },
  "getgamificationscorecardspointsaverage": {
    "operationId": "getgamificationscorecardspointsaverage",
    "functionName": "GetGamificationScorecardsPointsAverage",
    "signature": "GetGamificationScorecardsPointsAverage(workday)",
    "parameters": [
      {
        "name": "workday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Singleworkdayaveragepoints",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar workday time.Time // The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Average points of the requesting user's division or performance profile\ndata, response, err := apiInstance.GetGamificationScorecardsPointsAverage(workday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsPointsAverage: %v\\n\", err)\n}"
  },
  "getgamificationscorecardspointstrends": {
    "operationId": "getgamificationscorecardspointstrends",
    "functionName": "GetGamificationScorecardsPointsTrends",
    "signature": "GetGamificationScorecardsPointsTrends(startWorkday, endWorkday, dayOfWeek)",
    "parameters": [
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "dayOfWeek",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workdaypointstrend",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar dayOfWeek string // Optional filter to specify which day of weeks to be included in the response\n// Points trends of the requesting user\ndata, response, err := apiInstance.GetGamificationScorecardsPointsTrends(startWorkday, endWorkday, dayOfWeek)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsPointsTrends: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsprofilemetricuservaluestrends": {
    "operationId": "getgamificationscorecardsprofilemetricuservaluestrends",
    "functionName": "GetGamificationScorecardsProfileMetricUserValuesTrends",
    "signature": "GetGamificationScorecardsProfileMetricUserValuesTrends(profileId, metricId, userId, startWorkday, endWorkday, referenceWorkday, timeZone)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "referenceWorkday",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Metricvaluetrendaverage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // performanceProfileId\nvar metricId string // metricId\nvar userId string // \nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar referenceWorkday time.Time // Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar timeZone string // Timezone for the workday. Defaults to UTC\n// Average performance values trends by metric of a user\ndata, response, err := apiInstance.GetGamificationScorecardsProfileMetricUserValuesTrends(profileId, metricId, userId, startWorkday, endWorkday, referenceWorkday, timeZone)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsProfileMetricUserValuesTrends: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsprofilemetricusersvaluestrends": {
    "operationId": "getgamificationscorecardsprofilemetricusersvaluestrends",
    "functionName": "GetGamificationScorecardsProfileMetricUsersValuesTrends",
    "signature": "GetGamificationScorecardsProfileMetricUsersValuesTrends(profileId, metricId, filterType, startWorkday, endWorkday, filterId, referenceWorkday, timeZone)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "referenceWorkday",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Metricvaluetrendaverage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // performanceProfileId\nvar metricId string // metricId\nvar filterType string // Filter type for the query request.\nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar filterId string // ID for the filter type. Only required when filterType is Division.\nvar referenceWorkday time.Time // Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar timeZone string // Timezone for the workday. Defaults to UTC\n// Average performance values trends by metric of a division or a performance profile\ndata, response, err := apiInstance.GetGamificationScorecardsProfileMetricUsersValuesTrends(profileId, metricId, filterType, startWorkday, endWorkday, filterId, referenceWorkday, timeZone)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsProfileMetricUsersValuesTrends: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsprofilemetricvaluestrends": {
    "operationId": "getgamificationscorecardsprofilemetricvaluestrends",
    "functionName": "GetGamificationScorecardsProfileMetricValuesTrends",
    "signature": "GetGamificationScorecardsProfileMetricValuesTrends(profileId, metricId, startWorkday, endWorkday, filterType, referenceWorkday, timeZone)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "referenceWorkday",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Metricvaluetrendaverage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // performanceProfileId\nvar metricId string // metricId\nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar filterType string // Filter type for the query request. If not set, returns the values trends of the requesting user\nvar referenceWorkday time.Time // Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar timeZone string // Timezone for the workday. Defaults to UTC\n// Average performance values trends by metric of the requesting user\ndata, response, err := apiInstance.GetGamificationScorecardsProfileMetricValuesTrends(profileId, metricId, startWorkday, endWorkday, filterType, referenceWorkday, timeZone)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsProfileMetricValuesTrends: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsuser": {
    "operationId": "getgamificationscorecardsuser",
    "functionName": "GetGamificationScorecardsUser",
    "signature": "GetGamificationScorecardsUser(userId, workday, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Workdaymetriclisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // \nvar workday time.Time // Target querying workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar expand []string // Which fields, if any, to expand.\n// Workday performance metrics for a user\ndata, response, err := apiInstance.GetGamificationScorecardsUser(userId, workday, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsUser: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsuserattendance": {
    "operationId": "getgamificationscorecardsuserattendance",
    "functionName": "GetGamificationScorecardsUserAttendance",
    "signature": "GetGamificationScorecardsUserAttendance(userId, startWorkday, endWorkday)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Attendancestatuslisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // \nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Attendance status metrics for a user\ndata, response, err := apiInstance.GetGamificationScorecardsUserAttendance(userId, startWorkday, endWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsUserAttendance: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsuserbestpoints": {
    "operationId": "getgamificationscorecardsuserbestpoints",
    "functionName": "GetGamificationScorecardsUserBestpoints",
    "signature": "GetGamificationScorecardsUserBestpoints(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userbestpoints",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // \n// Best points of a user\ndata, response, err := apiInstance.GetGamificationScorecardsUserBestpoints(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsUserBestpoints: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsuserpointsalltime": {
    "operationId": "getgamificationscorecardsuserpointsalltime",
    "functionName": "GetGamificationScorecardsUserPointsAlltime",
    "signature": "GetGamificationScorecardsUserPointsAlltime(userId, endWorkday)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Alltimepoints",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // \nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// All-time points for a user\ndata, response, err := apiInstance.GetGamificationScorecardsUserPointsAlltime(userId, endWorkday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsUserPointsAlltime: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsuserpointstrends": {
    "operationId": "getgamificationscorecardsuserpointstrends",
    "functionName": "GetGamificationScorecardsUserPointsTrends",
    "signature": "GetGamificationScorecardsUserPointsTrends(userId, startWorkday, endWorkday, dayOfWeek)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "dayOfWeek",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workdaypointstrend",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // \nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar dayOfWeek string // Optional filter to specify which day of weeks to be included in the response\n// Points trend for a user\ndata, response, err := apiInstance.GetGamificationScorecardsUserPointsTrends(userId, startWorkday, endWorkday, dayOfWeek)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsUserPointsTrends: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsuservaluestrends": {
    "operationId": "getgamificationscorecardsuservaluestrends",
    "functionName": "GetGamificationScorecardsUserValuesTrends",
    "signature": "GetGamificationScorecardsUserValuesTrends(userId, startWorkday, endWorkday, timeZone)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workdayvaluestrend",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // \nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar timeZone string // Timezone for the workday. Defaults to UTC\n// Values trends of a user\ndata, response, err := apiInstance.GetGamificationScorecardsUserValuesTrends(userId, startWorkday, endWorkday, timeZone)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsUserValuesTrends: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsuserspointsaverage": {
    "operationId": "getgamificationscorecardsuserspointsaverage",
    "functionName": "GetGamificationScorecardsUsersPointsAverage",
    "signature": "GetGamificationScorecardsUsersPointsAverage(filterType, filterId, workday)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Singleworkdayaveragepoints",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar workday time.Time // The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Workday average points by target group\ndata, response, err := apiInstance.GetGamificationScorecardsUsersPointsAverage(filterType, filterId, workday)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsUsersPointsAverage: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsusersvaluesaverage": {
    "operationId": "getgamificationscorecardsusersvaluesaverage",
    "functionName": "GetGamificationScorecardsUsersValuesAverage",
    "signature": "GetGamificationScorecardsUsersValuesAverage(filterType, filterId, workday, timeZone)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Singleworkdayaveragevalues",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type. For example, division Id\nvar workday time.Time // The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar timeZone string // Timezone for the workday. Defaults to UTC\n// Workday average values by target group\ndata, response, err := apiInstance.GetGamificationScorecardsUsersValuesAverage(filterType, filterId, workday, timeZone)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsUsersValuesAverage: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsusersvaluestrends": {
    "operationId": "getgamificationscorecardsusersvaluestrends",
    "functionName": "GetGamificationScorecardsUsersValuesTrends",
    "signature": "GetGamificationScorecardsUsersValuesTrends(filterType, filterId, startWorkday, endWorkday, timeZone)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workdayvaluestrend",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar filterType string // Filter type for the query request.\nvar filterId string // ID for the filter type.\nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar timeZone string // Timezone for the workday. Defaults to UTC\n// Values trend by target group\ndata, response, err := apiInstance.GetGamificationScorecardsUsersValuesTrends(filterType, filterId, startWorkday, endWorkday, timeZone)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsUsersValuesTrends: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsvaluesaverage": {
    "operationId": "getgamificationscorecardsvaluesaverage",
    "functionName": "GetGamificationScorecardsValuesAverage",
    "signature": "GetGamificationScorecardsValuesAverage(workday, timeZone)",
    "parameters": [
      {
        "name": "workday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Singleworkdayaveragevalues",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar workday time.Time // The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar timeZone string // Timezone for the workday. Defaults to UTC\n// Average values of the requesting user's division or performance profile\ndata, response, err := apiInstance.GetGamificationScorecardsValuesAverage(workday, timeZone)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsValuesAverage: %v\\n\", err)\n}"
  },
  "getgamificationscorecardsvaluestrends": {
    "operationId": "getgamificationscorecardsvaluestrends",
    "functionName": "GetGamificationScorecardsValuesTrends",
    "signature": "GetGamificationScorecardsValuesTrends(startWorkday, endWorkday, filterType, referenceWorkday, timeZone)",
    "parameters": [
      {
        "name": "startWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "referenceWorkday",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workdayvaluestrend",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar startWorkday time.Time // Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar endWorkday time.Time // End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar filterType string // Filter type for the query request. If not set, then the request is for the requesting user.\nvar referenceWorkday time.Time // Reference workday for the trend. Used to determine the profile of the user as of this date. If not set, then the user's current profile will be used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar timeZone string // Timezone for the workday. Defaults to UTC\n// Values trends of the requesting user or group\ndata, response, err := apiInstance.GetGamificationScorecardsValuesTrends(startWorkday, endWorkday, filterType, referenceWorkday, timeZone)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationScorecardsValuesTrends: %v\\n\", err)\n}"
  },
  "getgamificationstatus": {
    "operationId": "getgamificationstatus",
    "functionName": "GetGamificationStatus",
    "signature": "GetGamificationStatus()",
    "return": "Gamificationstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\n// Gamification activation status\ndata, response, err := apiInstance.GetGamificationStatus()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationStatus: %v\\n\", err)\n}"
  },
  "getgamificationtemplate": {
    "operationId": "getgamificationtemplate",
    "functionName": "GetGamificationTemplate",
    "signature": "GetGamificationTemplate(templateId)",
    "parameters": [
      {
        "name": "templateId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Objectivetemplate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar templateId string // template id\n// Objective template by id\ndata, response, err := apiInstance.GetGamificationTemplate(templateId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationTemplate: %v\\n\", err)\n}"
  },
  "getgamificationtemplates": {
    "operationId": "getgamificationtemplates",
    "functionName": "GetGamificationTemplates",
    "signature": "GetGamificationTemplates()",
    "return": "Gettemplatesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\n// All objective templates\ndata, response, err := apiInstance.GetGamificationTemplates()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGamificationTemplates: %v\\n\", err)\n}"
  },
  "patchemployeeperformanceexternalmetricsdefinition": {
    "operationId": "patchemployeeperformanceexternalmetricsdefinition",
    "functionName": "PatchEmployeeperformanceExternalmetricsDefinition",
    "signature": "PatchEmployeeperformanceExternalmetricsDefinition(metricId, body)",
    "parameters": [
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Externalmetricdefinitionupdaterequest",
        "required": "true"
      }
    ],
    "return": "Externalmetricdefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar metricId string // Specifies the metric definition ID\nvar body platformclientv2.Externalmetricdefinitionupdaterequest // The External Metric Definition parameters to be updated\n// Update External Metric Definition\ndata, response, err := apiInstance.PatchEmployeeperformanceExternalmetricsDefinition(metricId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchEmployeeperformanceExternalmetricsDefinition: %v\\n\", err)\n}"
  },
  "postemployeeperformanceexternalmetricsdata": {
    "operationId": "postemployeeperformanceexternalmetricsdata",
    "functionName": "PostEmployeeperformanceExternalmetricsData",
    "signature": "PostEmployeeperformanceExternalmetricsData(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Externalmetricdatawriterequest",
        "required": "false"
      }
    ],
    "return": "Externalmetricdatawriteresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar body platformclientv2.Externalmetricdatawriterequest // The External Metric Data to be added\n// Write External Metric Data\ndata, response, err := apiInstance.PostEmployeeperformanceExternalmetricsData(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostEmployeeperformanceExternalmetricsData: %v\\n\", err)\n}"
  },
  "postemployeeperformanceexternalmetricsdefinitions": {
    "operationId": "postemployeeperformanceexternalmetricsdefinitions",
    "functionName": "PostEmployeeperformanceExternalmetricsDefinitions",
    "signature": "PostEmployeeperformanceExternalmetricsDefinitions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Externalmetricdefinitioncreaterequest",
        "required": "false"
      }
    ],
    "return": "Externalmetricdefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar body platformclientv2.Externalmetricdefinitioncreaterequest // The External Metric Definition to be created\n// Create External Metric Definition\ndata, response, err := apiInstance.PostEmployeeperformanceExternalmetricsDefinitions(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostEmployeeperformanceExternalmetricsDefinitions: %v\\n\", err)\n}"
  },
  "postgamificationprofileactivate": {
    "operationId": "postgamificationprofileactivate",
    "functionName": "PostGamificationProfileActivate",
    "signature": "PostGamificationProfileActivate(profileId)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Performanceprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // performanceProfileId\n// Activate a performance profile\ndata, response, err := apiInstance.PostGamificationProfileActivate(profileId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGamificationProfileActivate: %v\\n\", err)\n}"
  },
  "postgamificationprofiledeactivate": {
    "operationId": "postgamificationprofiledeactivate",
    "functionName": "PostGamificationProfileDeactivate",
    "signature": "PostGamificationProfileDeactivate(profileId)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Performanceprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // performanceProfileId\n// Deactivate a performance profile\ndata, response, err := apiInstance.PostGamificationProfileDeactivate(profileId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGamificationProfileDeactivate: %v\\n\", err)\n}"
  },
  "postgamificationprofilemembers": {
    "operationId": "postgamificationprofilemembers",
    "functionName": "PostGamificationProfileMembers",
    "signature": "PostGamificationProfileMembers(profileId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Assignusers",
        "required": "true"
      }
    ],
    "return": "Assignment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // Profile Id\nvar body platformclientv2.Assignusers // assignUsers\n// Assign members to a given performance profile\ndata, response, err := apiInstance.PostGamificationProfileMembers(profileId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGamificationProfileMembers: %v\\n\", err)\n}"
  },
  "postgamificationprofilemembersvalidate": {
    "operationId": "postgamificationprofilemembersvalidate",
    "functionName": "PostGamificationProfileMembersValidate",
    "signature": "PostGamificationProfileMembersValidate(profileId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Validateassignusers",
        "required": "true"
      }
    ],
    "return": "Assignmentvalidation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // Profile Id\nvar body platformclientv2.Validateassignusers // memberAssignments\n// Validate member assignment\ndata, response, err := apiInstance.PostGamificationProfileMembersValidate(profileId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGamificationProfileMembersValidate: %v\\n\", err)\n}"
  },
  "postgamificationprofilemetriclink": {
    "operationId": "postgamificationprofilemetriclink",
    "functionName": "PostGamificationProfileMetricLink",
    "signature": "PostGamificationProfileMetricLink(sourceProfileId, sourceMetricId, body)",
    "parameters": [
      {
        "name": "sourceProfileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "sourceMetricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Targetperformanceprofile",
        "required": "true"
      }
    ],
    "return": "Metric",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar sourceProfileId string // Source Performance Profile Id\nvar sourceMetricId string // Source Metric Id\nvar body platformclientv2.Targetperformanceprofile // linkedMetric\n// Creates a linked metric\ndata, response, err := apiInstance.PostGamificationProfileMetricLink(sourceProfileId, sourceMetricId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGamificationProfileMetricLink: %v\\n\", err)\n}"
  },
  "postgamificationprofilemetrics": {
    "operationId": "postgamificationprofilemetrics",
    "functionName": "PostGamificationProfileMetrics",
    "signature": "PostGamificationProfileMetrics(profileId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createmetric",
        "required": "true"
      }
    ],
    "return": "Metric",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // Performance Profile Id\nvar body platformclientv2.Createmetric // Metric\n// Creates a gamified metric with a given metric definition and metric objective under in a performance profile\ndata, response, err := apiInstance.PostGamificationProfileMetrics(profileId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGamificationProfileMetrics: %v\\n\", err)\n}"
  },
  "postgamificationprofiles": {
    "operationId": "postgamificationprofiles",
    "functionName": "PostGamificationProfiles",
    "signature": "PostGamificationProfiles(body, copyMetrics)",
    "parameters": [
      {
        "name": "body",
        "type": "Createperformanceprofile",
        "required": "true"
      },
      {
        "name": "copyMetrics",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Performanceprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar body platformclientv2.Createperformanceprofile // performanceProfile\nvar copyMetrics bool // Flag to copy metrics. If set to false, there will be no metrics associated with the new profile. If set to true or is absent (the default behavior), all metrics from the default profile will be copied over into the new profile.\n// Create a new custom performance profile\ndata, response, err := apiInstance.PostGamificationProfiles(body, copyMetrics)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGamificationProfiles: %v\\n\", err)\n}"
  },
  "postgamificationprofilesuserquery": {
    "operationId": "postgamificationprofilesuserquery",
    "functionName": "PostGamificationProfilesUserQuery",
    "signature": "PostGamificationProfilesUserQuery(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userprofilesindaterangerequest",
        "required": "true"
      }
    ],
    "return": "Userprofilesindaterange",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar userId string // The ID of a user.\nvar body platformclientv2.Userprofilesindaterangerequest // The date range of work day.\n// Query performance profiles in date range for a user\ndata, response, err := apiInstance.PostGamificationProfilesUserQuery(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGamificationProfilesUserQuery: %v\\n\", err)\n}"
  },
  "postgamificationprofilesusersmequery": {
    "operationId": "postgamificationprofilesusersmequery",
    "functionName": "PostGamificationProfilesUsersMeQuery",
    "signature": "PostGamificationProfilesUsersMeQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Userprofilesindaterangerequest",
        "required": "true"
      }
    ],
    "return": "Userprofilesindaterange",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar body platformclientv2.Userprofilesindaterangerequest // The date range of work day.\n// Query performance profiles in date range for the current user\ndata, response, err := apiInstance.PostGamificationProfilesUsersMeQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGamificationProfilesUsersMeQuery: %v\\n\", err)\n}"
  },
  "putgamificationprofile": {
    "operationId": "putgamificationprofile",
    "functionName": "PutGamificationProfile",
    "signature": "PutGamificationProfile(profileId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Performanceprofile",
        "required": "false"
      }
    ],
    "return": "Performanceprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // performanceProfileId\nvar body platformclientv2.Performanceprofile // performanceProfile\n// Updates a performance profile\ndata, response, err := apiInstance.PutGamificationProfile(profileId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutGamificationProfile: %v\\n\", err)\n}"
  },
  "putgamificationprofilemetric": {
    "operationId": "putgamificationprofilemetric",
    "functionName": "PutGamificationProfileMetric",
    "signature": "PutGamificationProfileMetric(profileId, metricId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createmetric",
        "required": "true"
      }
    ],
    "return": "Metric",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar profileId string // Performance Profile Id\nvar metricId string // Metric Id\nvar body platformclientv2.Createmetric // Metric\n// Updates a metric in performance profile\ndata, response, err := apiInstance.PutGamificationProfileMetric(profileId, metricId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutGamificationProfileMetric: %v\\n\", err)\n}"
  },
  "putgamificationstatus": {
    "operationId": "putgamificationstatus",
    "functionName": "PutGamificationStatus",
    "signature": "PutGamificationStatus(status)",
    "parameters": [
      {
        "name": "status",
        "type": "Gamificationstatus",
        "required": "true"
      }
    ],
    "return": "Gamificationstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGamificationApiWithConfig(config)\n\nvar status platformclientv2.Gamificationstatus // Gamification status\n// Update gamification activation status\ndata, response, err := apiInstance.PutGamificationStatus(status)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutGamificationStatus: %v\\n\", err)\n}"
  },
  "getgdprrequest": {
    "operationId": "getgdprrequest",
    "functionName": "GetGdprRequest",
    "signature": "GetGdprRequest(requestId)",
    "parameters": [
      {
        "name": "requestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Gdprrequest",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGeneralDataProtectionRegulationApiWithConfig(config)\n\nvar requestId string // Request id\n// Get an existing GDPR request\ndata, response, err := apiInstance.GetGdprRequest(requestId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGdprRequest: %v\\n\", err)\n}"
  },
  "getgdprrequests": {
    "operationId": "getgdprrequests",
    "functionName": "GetGdprRequests",
    "signature": "GetGdprRequests(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Gdprrequestentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGeneralDataProtectionRegulationApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get all GDPR requests\ndata, response, err := apiInstance.GetGdprRequests(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGdprRequests: %v\\n\", err)\n}"
  },
  "getgdprsubjects": {
    "operationId": "getgdprsubjects",
    "functionName": "GetGdprSubjects",
    "signature": "GetGdprSubjects(searchType, searchValue)",
    "parameters": [
      {
        "name": "searchType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "searchValue",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Gdprsubjectentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGeneralDataProtectionRegulationApiWithConfig(config)\n\nvar searchType string // Search Type\nvar searchValue string // Search Value\n// Get GDPR subjects\ndata, response, err := apiInstance.GetGdprSubjects(searchType, searchValue)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGdprSubjects: %v\\n\", err)\n}"
  },
  "postgdprrequests": {
    "operationId": "postgdprrequests",
    "functionName": "PostGdprRequests",
    "signature": "PostGdprRequests(body, deleteConfirmed)",
    "parameters": [
      {
        "name": "body",
        "type": "Gdprrequest",
        "required": "true"
      },
      {
        "name": "deleteConfirmed",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Gdprrequest",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGeneralDataProtectionRegulationApiWithConfig(config)\n\nvar body platformclientv2.Gdprrequest // GDPR request\nvar deleteConfirmed bool // Confirm delete\n// Submit a new GDPR request\ndata, response, err := apiInstance.PostGdprRequests(body, deleteConfirmed)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGdprRequests: %v\\n\", err)\n}"
  },
  "getgeolocationssettings": {
    "operationId": "getgeolocationssettings",
    "functionName": "GetGeolocationsSettings",
    "signature": "GetGeolocationsSettings()",
    "return": "Geolocationsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGeolocationApiWithConfig(config)\n\n// Get a organization's GeolocationSettings\ndata, response, err := apiInstance.GetGeolocationsSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGeolocationsSettings: %v\\n\", err)\n}"
  },
  "getusergeolocation": {
    "operationId": "getusergeolocation",
    "functionName": "GetUserGeolocation",
    "signature": "GetUserGeolocation(userId, clientId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Geolocation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // user Id\nvar clientId string // client Id\n// Get a user's Geolocation\ndata, response, err := apiInstance.GetUserGeolocation(userId, clientId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserGeolocation: %v\\n\", err)\n}"
  },
  "patchgeolocationssettings": {
    "operationId": "patchgeolocationssettings",
    "functionName": "PatchGeolocationsSettings",
    "signature": "PatchGeolocationsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Geolocationsettings",
        "required": "true"
      }
    ],
    "return": "Geolocationsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGeolocationApiWithConfig(config)\n\nvar body platformclientv2.Geolocationsettings // Geolocation settings\n// Patch a organization's GeolocationSettings\ndata, response, err := apiInstance.PatchGeolocationsSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchGeolocationsSettings: %v\\n\", err)\n}"
  },
  "patchusergeolocation": {
    "operationId": "patchusergeolocation",
    "functionName": "PatchUserGeolocation",
    "signature": "PatchUserGeolocation(userId, clientId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Geolocation",
        "required": "true"
      }
    ],
    "return": "Geolocation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // user Id\nvar clientId string // client Id\nvar body platformclientv2.Geolocation // Geolocation\n// Patch a user's Geolocation\ndata, response, err := apiInstance.PatchUserGeolocation(userId, clientId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUserGeolocation: %v\\n\", err)\n}"
  },
  "deletegreeting": {
    "operationId": "deletegreeting",
    "functionName": "DeleteGreeting",
    "signature": "DeleteGreeting(greetingId)",
    "parameters": [
      {
        "name": "greetingId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar greetingId string // Greeting ID\n// Deletes a Greeting with the given GreetingId\nresponse, err := apiInstance.DeleteGreeting(greetingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteGreeting: %v\\n\", err)\n}"
  },
  "getgreeting": {
    "operationId": "getgreeting",
    "functionName": "GetGreeting",
    "signature": "GetGreeting(greetingId)",
    "parameters": [
      {
        "name": "greetingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar greetingId string // Greeting ID\n// Get a Greeting with the given GreetingId\ndata, response, err := apiInstance.GetGreeting(greetingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGreeting: %v\\n\", err)\n}"
  },
  "getgreetingmedia": {
    "operationId": "getgreetingmedia",
    "functionName": "GetGreetingMedia",
    "signature": "GetGreetingMedia(greetingId, formatId)",
    "parameters": [
      {
        "name": "greetingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Greetingmediainfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar greetingId string // Greeting ID\nvar formatId string // The desired media format.\n// Get media playback URI for this greeting\ndata, response, err := apiInstance.GetGreetingMedia(greetingId, formatId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGreetingMedia: %v\\n\", err)\n}"
  },
  "getgreetings": {
    "operationId": "getgreetings",
    "functionName": "GetGreetings",
    "signature": "GetGreetings(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Domainentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Gets an Organization's Greetings\ndata, response, err := apiInstance.GetGreetings(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGreetings: %v\\n\", err)\n}"
  },
  "getgreetingsdefaults": {
    "operationId": "getgreetingsdefaults",
    "functionName": "GetGreetingsDefaults",
    "signature": "GetGreetingsDefaults()",
    "return": "Defaultgreetinglist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\n// Get an Organization's DefaultGreetingList\ndata, response, err := apiInstance.GetGreetingsDefaults()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGreetingsDefaults: %v\\n\", err)\n}"
  },
  "getgroupgreetings": {
    "operationId": "getgroupgreetings",
    "functionName": "GetGroupGreetings",
    "signature": "GetGroupGreetings(groupId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Greetinglisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar groupId string // Group ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of the Group's Greetings\ndata, response, err := apiInstance.GetGroupGreetings(groupId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGroupGreetings: %v\\n\", err)\n}"
  },
  "getgroupgreetingsdefaults": {
    "operationId": "getgroupgreetingsdefaults",
    "functionName": "GetGroupGreetingsDefaults",
    "signature": "GetGroupGreetingsDefaults(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Defaultgreetinglist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar groupId string // Group ID\n// Grabs the list of Default Greetings given a Group's ID\ndata, response, err := apiInstance.GetGroupGreetingsDefaults(groupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGroupGreetingsDefaults: %v\\n\", err)\n}"
  },
  "getusergreetings": {
    "operationId": "getusergreetings",
    "functionName": "GetUserGreetings",
    "signature": "GetUserGreetings(userId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Domainentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar userId string // User ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of the User's Greetings\ndata, response, err := apiInstance.GetUserGreetings(userId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserGreetings: %v\\n\", err)\n}"
  },
  "getusergreetingsdefaults": {
    "operationId": "getusergreetingsdefaults",
    "functionName": "GetUserGreetingsDefaults",
    "signature": "GetUserGreetingsDefaults(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Defaultgreetinglist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar userId string // User ID\n// Grabs the list of Default Greetings given a User's ID\ndata, response, err := apiInstance.GetUserGreetingsDefaults(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserGreetingsDefaults: %v\\n\", err)\n}"
  },
  "postgreetings": {
    "operationId": "postgreetings",
    "functionName": "PostGreetings",
    "signature": "PostGreetings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar body platformclientv2.Greeting // The Greeting to create\n// Create a Greeting for an Organization\ndata, response, err := apiInstance.PostGreetings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGreetings: %v\\n\", err)\n}"
  },
  "postgroupgreetings": {
    "operationId": "postgroupgreetings",
    "functionName": "PostGroupGreetings",
    "signature": "PostGroupGreetings(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar groupId string // Group ID\nvar body platformclientv2.Greeting // The Greeting to create\n// Creates a Greeting for a Group\ndata, response, err := apiInstance.PostGroupGreetings(groupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGroupGreetings: %v\\n\", err)\n}"
  },
  "postusergreetings": {
    "operationId": "postusergreetings",
    "functionName": "PostUserGreetings",
    "signature": "PostUserGreetings(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Greeting // The Greeting to create\n// Creates a Greeting for a User\ndata, response, err := apiInstance.PostUserGreetings(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUserGreetings: %v\\n\", err)\n}"
  },
  "putgreeting": {
    "operationId": "putgreeting",
    "functionName": "PutGreeting",
    "signature": "PutGreeting(greetingId, body)",
    "parameters": [
      {
        "name": "greetingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar greetingId string // Greeting ID\nvar body platformclientv2.Greeting // The updated Greeting\n// Updates the Greeting with the given GreetingId\ndata, response, err := apiInstance.PutGreeting(greetingId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutGreeting: %v\\n\", err)\n}"
  },
  "putgreetingsdefaults": {
    "operationId": "putgreetingsdefaults",
    "functionName": "PutGreetingsDefaults",
    "signature": "PutGreetingsDefaults(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Defaultgreetinglist",
        "required": "true"
      }
    ],
    "return": "Defaultgreetinglist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar body platformclientv2.Defaultgreetinglist // The updated defaultGreetingList\n// Update an Organization's DefaultGreetingList\ndata, response, err := apiInstance.PutGreetingsDefaults(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutGreetingsDefaults: %v\\n\", err)\n}"
  },
  "putgroupgreetingsdefaults": {
    "operationId": "putgroupgreetingsdefaults",
    "functionName": "PutGroupGreetingsDefaults",
    "signature": "PutGroupGreetingsDefaults(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Defaultgreetinglist",
        "required": "true"
      }
    ],
    "return": "Defaultgreetinglist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar groupId string // Group ID\nvar body platformclientv2.Defaultgreetinglist // The updated defaultGreetingList\n// Updates the DefaultGreetingList of the specified Group\ndata, response, err := apiInstance.PutGroupGreetingsDefaults(groupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutGroupGreetingsDefaults: %v\\n\", err)\n}"
  },
  "putusergreetingsdefaults": {
    "operationId": "putusergreetingsdefaults",
    "functionName": "PutUserGreetingsDefaults",
    "signature": "PutUserGreetingsDefaults(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Defaultgreetinglist",
        "required": "true"
      }
    ],
    "return": "Defaultgreetinglist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGreetingsApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Defaultgreetinglist // The updated defaultGreetingList\n// Updates the DefaultGreetingList of the specified User\ndata, response, err := apiInstance.PutUserGreetingsDefaults(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserGreetingsDefaults: %v\\n\", err)\n}"
  },
  "deletegroup": {
    "operationId": "deletegroup",
    "functionName": "DeleteGroup",
    "signature": "DeleteGroup(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\n// Delete group\nresponse, err := apiInstance.DeleteGroup(groupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteGroup: %v\\n\", err)\n}"
  },
  "deletegroupdynamicsettings": {
    "operationId": "deletegroupdynamicsettings",
    "functionName": "DeleteGroupDynamicsettings",
    "signature": "DeleteGroupDynamicsettings(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\n// Remove dynamic group definition\nresponse, err := apiInstance.DeleteGroupDynamicsettings(groupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteGroupDynamicsettings: %v\\n\", err)\n}"
  },
  "deletegroupmembers": {
    "operationId": "deletegroupmembers",
    "functionName": "DeleteGroupMembers",
    "signature": "DeleteGroupMembers(groupId, ids)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "ids",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\nvar ids string // Comma separated list of userIds to remove\n// Remove members\ndata, response, err := apiInstance.DeleteGroupMembers(groupId, ids)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteGroupMembers: %v\\n\", err)\n}"
  },
  "getfieldconfig": {
    "operationId": "getfieldconfig",
    "functionName": "GetFieldconfig",
    "signature": "GetFieldconfig(varType)",
    "parameters": [
      {
        "name": "varType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Fieldconfig",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar varType string // Field type\n// Fetch field config for an entity type\ndata, response, err := apiInstance.GetFieldconfig(varType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetFieldconfig: %v\\n\", err)\n}"
  },
  "getgroup": {
    "operationId": "getgroup",
    "functionName": "GetGroup",
    "signature": "GetGroup(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Group",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\n// Get group\ndata, response, err := apiInstance.GetGroup(groupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGroup: %v\\n\", err)\n}"
  },
  "getgroupdynamicsettings": {
    "operationId": "getgroupdynamicsettings",
    "functionName": "GetGroupDynamicsettings",
    "signature": "GetGroupDynamicsettings(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dynamicgroupdefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\n// Get dynamic group definition\ndata, response, err := apiInstance.GetGroupDynamicsettings(groupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGroupDynamicsettings: %v\\n\", err)\n}"
  },
  "getgroupindividuals": {
    "operationId": "getgroupindividuals",
    "functionName": "GetGroupIndividuals",
    "signature": "GetGroupIndividuals(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\n// Get all individuals associated with the group\ndata, response, err := apiInstance.GetGroupIndividuals(groupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGroupIndividuals: %v\\n\", err)\n}"
  },
  "getgroupmembers": {
    "operationId": "getgroupmembers",
    "functionName": "GetGroupMembers",
    "signature": "GetGroupMembers(groupId, pageSize, pageNumber, sortOrder, expand)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Userentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Ascending or descending sort order\nvar expand []string // Which fields, if any, to expand\n// Get group members, includes individuals, owners, and dynamically included people\ndata, response, err := apiInstance.GetGroupMembers(groupId, pageSize, pageNumber, sortOrder, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGroupMembers: %v\\n\", err)\n}"
  },
  "getgroupprofile": {
    "operationId": "getgroupprofile",
    "functionName": "GetGroupProfile",
    "signature": "GetGroupProfile(groupId, fields)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fields",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Groupprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // groupId\nvar fields string // Comma separated fields to return.  Allowable values can be found by querying /api/v2/fieldconfig?type=group and using the key for the elements returned by the fieldList\n// Get group profile\ndata, response, err := apiInstance.GetGroupProfile(groupId, fields)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGroupProfile: %v\\n\", err)\n}"
  },
  "getgroups": {
    "operationId": "getgroups",
    "functionName": "GetGroups",
    "signature": "GetGroups(pageSize, pageNumber, id, jabberId, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "jabberId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Groupentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar id []string // id\nvar jabberId []string // A list of jabberIds to fetch by bulk (cannot be used with the \\\"id\\\" parameter)\nvar sortOrder string // Ascending or descending sort order\n// Get a group list\ndata, response, err := apiInstance.GetGroups(pageSize, pageNumber, id, jabberId, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGroups: %v\\n\", err)\n}"
  },
  "getgroupssearch": {
    "operationId": "getgroupssearch",
    "functionName": "GetGroupsSearch",
    "signature": "GetGroupsSearch(q64, expand)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Groupssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar q64 string // q64\nvar expand []string // expand\n// Search groups using the q64 value returned from a previous search\ndata, response, err := apiInstance.GetGroupsSearch(q64, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetGroupsSearch: %v\\n\", err)\n}"
  },
  "getprofilesgroups": {
    "operationId": "getprofilesgroups",
    "functionName": "GetProfilesGroups",
    "signature": "GetProfilesGroups(pageSize, pageNumber, id, jabberId, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "jabberId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Groupprofileentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar id []string // id\nvar jabberId []string // A list of jabberIds to fetch by bulk (cannot be used with the \\\"id\\\" parameter)\nvar sortOrder string // Ascending or descending sort order\n// Get group profile listing\ndata, response, err := apiInstance.GetProfilesGroups(pageSize, pageNumber, id, jabberId, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetProfilesGroups: %v\\n\", err)\n}"
  },
  "postgroupmembers": {
    "operationId": "postgroupmembers",
    "functionName": "PostGroupMembers",
    "signature": "PostGroupMembers(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Groupmembersupdate",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\nvar body platformclientv2.Groupmembersupdate // Add members\n// Add members\ndata, response, err := apiInstance.PostGroupMembers(groupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGroupMembers: %v\\n\", err)\n}"
  },
  "postgroups": {
    "operationId": "postgroups",
    "functionName": "PostGroups",
    "signature": "PostGroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Groupcreate",
        "required": "true"
      }
    ],
    "return": "Group",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar body platformclientv2.Groupcreate // Group\n// Create a group\ndata, response, err := apiInstance.PostGroups(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGroups: %v\\n\", err)\n}"
  },
  "postgroupsdynamicsettingspreview": {
    "operationId": "postgroupsdynamicsettingspreview",
    "functionName": "PostGroupsDynamicsettingsPreview",
    "signature": "PostGroupsDynamicsettingsPreview(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Dynamicgroupquery",
        "required": "true"
      }
    ],
    "return": "Dynamicgroupquerypreview",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar body platformclientv2.Dynamicgroupquery // Group query to preview\n// Preview the number of users selected for a dynamic group definition query\ndata, response, err := apiInstance.PostGroupsDynamicsettingsPreview(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGroupsDynamicsettingsPreview: %v\\n\", err)\n}"
  },
  "postgroupssearch": {
    "operationId": "postgroupssearch",
    "functionName": "PostGroupsSearch",
    "signature": "PostGroupsSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Groupsearchrequest",
        "required": "true"
      }
    ],
    "return": "Groupssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar body platformclientv2.Groupsearchrequest // Search request options\n// Search groups\ndata, response, err := apiInstance.PostGroupsSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostGroupsSearch: %v\\n\", err)\n}"
  },
  "putgroup": {
    "operationId": "putgroup",
    "functionName": "PutGroup",
    "signature": "PutGroup(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Groupupdate",
        "required": "false"
      }
    ],
    "return": "Group",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\nvar body platformclientv2.Groupupdate // Group\n// Update group\ndata, response, err := apiInstance.PutGroup(groupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutGroup: %v\\n\", err)\n}"
  },
  "putgroupdynamicsettings": {
    "operationId": "putgroupdynamicsettings",
    "functionName": "PutGroupDynamicsettings",
    "signature": "PutGroupDynamicsettings(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dynamicgroupquery",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewGroupsApiWithConfig(config)\n\nvar groupId string // Group ID\nvar body platformclientv2.Dynamicgroupquery // Create/Update dynamic groups\n// Create / Update dynamic group definition\nresponse, err := apiInstance.PutGroupDynamicsettings(groupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PutGroupDynamicsettings: %v\\n\", err)\n}"
  },
  "deleteidentityprovidersadfs": {
    "operationId": "deleteidentityprovidersadfs",
    "functionName": "DeleteIdentityprovidersAdfs",
    "signature": "DeleteIdentityprovidersAdfs()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete ADFS Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersAdfs()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersAdfs: %v\\n\", err)\n}"
  },
  "deleteidentityproviderscic": {
    "operationId": "deleteidentityproviderscic",
    "functionName": "DeleteIdentityprovidersCic",
    "signature": "DeleteIdentityprovidersCic()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete Customer Interaction Center (CIC) Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersCic()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersCic: %v\\n\", err)\n}"
  },
  "deleteidentityprovidersgeneric": {
    "operationId": "deleteidentityprovidersgeneric",
    "functionName": "DeleteIdentityprovidersGeneric",
    "signature": "DeleteIdentityprovidersGeneric()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete Generic SAML Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersGeneric()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersGeneric: %v\\n\", err)\n}"
  },
  "deleteidentityprovidersgsuite": {
    "operationId": "deleteidentityprovidersgsuite",
    "functionName": "DeleteIdentityprovidersGsuite",
    "signature": "DeleteIdentityprovidersGsuite()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete G Suite Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersGsuite()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersGsuite: %v\\n\", err)\n}"
  },
  "deleteidentityprovidersidentitynow": {
    "operationId": "deleteidentityprovidersidentitynow",
    "functionName": "DeleteIdentityprovidersIdentitynow",
    "signature": "DeleteIdentityprovidersIdentitynow()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete IdentityNow Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersIdentitynow()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersIdentitynow: %v\\n\", err)\n}"
  },
  "deleteidentityprovidersokta": {
    "operationId": "deleteidentityprovidersokta",
    "functionName": "DeleteIdentityprovidersOkta",
    "signature": "DeleteIdentityprovidersOkta()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete Okta Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersOkta()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersOkta: %v\\n\", err)\n}"
  },
  "deleteidentityprovidersonelogin": {
    "operationId": "deleteidentityprovidersonelogin",
    "functionName": "DeleteIdentityprovidersOnelogin",
    "signature": "DeleteIdentityprovidersOnelogin()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete OneLogin Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersOnelogin()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersOnelogin: %v\\n\", err)\n}"
  },
  "deleteidentityprovidersping": {
    "operationId": "deleteidentityprovidersping",
    "functionName": "DeleteIdentityprovidersPing",
    "signature": "DeleteIdentityprovidersPing()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete Ping Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersPing()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersPing: %v\\n\", err)\n}"
  },
  "deleteidentityproviderspurecloud": {
    "operationId": "deleteidentityproviderspurecloud",
    "functionName": "DeleteIdentityprovidersPurecloud",
    "signature": "DeleteIdentityprovidersPurecloud()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete PureCloud Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersPurecloud()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersPurecloud: %v\\n\", err)\n}"
  },
  "deleteidentityproviderspureengage": {
    "operationId": "deleteidentityproviderspureengage",
    "functionName": "DeleteIdentityprovidersPureengage",
    "signature": "DeleteIdentityprovidersPureengage()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete PureEngage Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersPureengage()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersPureengage: %v\\n\", err)\n}"
  },
  "deleteidentityproviderssalesforce": {
    "operationId": "deleteidentityproviderssalesforce",
    "functionName": "DeleteIdentityprovidersSalesforce",
    "signature": "DeleteIdentityprovidersSalesforce()",
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Delete Salesforce Identity Provider\ndata, response, err := apiInstance.DeleteIdentityprovidersSalesforce()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIdentityprovidersSalesforce: %v\\n\", err)\n}"
  },
  "getidentityproviders": {
    "operationId": "getidentityproviders",
    "functionName": "GetIdentityproviders",
    "signature": "GetIdentityproviders()",
    "return": "Oauthproviderentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// The list of identity providers\ndata, response, err := apiInstance.GetIdentityproviders()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityproviders: %v\\n\", err)\n}"
  },
  "getidentityprovidersadfs": {
    "operationId": "getidentityprovidersadfs",
    "functionName": "GetIdentityprovidersAdfs",
    "signature": "GetIdentityprovidersAdfs()",
    "return": "Adfs",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get ADFS Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersAdfs()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersAdfs: %v\\n\", err)\n}"
  },
  "getidentityproviderscic": {
    "operationId": "getidentityproviderscic",
    "functionName": "GetIdentityprovidersCic",
    "signature": "GetIdentityprovidersCic()",
    "return": "Customerinteractioncenter",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get Customer Interaction Center (CIC) Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersCic()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersCic: %v\\n\", err)\n}"
  },
  "getidentityprovidersgeneric": {
    "operationId": "getidentityprovidersgeneric",
    "functionName": "GetIdentityprovidersGeneric",
    "signature": "GetIdentityprovidersGeneric()",
    "return": "Genericsaml",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get Generic SAML Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersGeneric()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersGeneric: %v\\n\", err)\n}"
  },
  "getidentityprovidersgsuite": {
    "operationId": "getidentityprovidersgsuite",
    "functionName": "GetIdentityprovidersGsuite",
    "signature": "GetIdentityprovidersGsuite()",
    "return": "Gsuite",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get G Suite Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersGsuite()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersGsuite: %v\\n\", err)\n}"
  },
  "getidentityprovidersidentitynow": {
    "operationId": "getidentityprovidersidentitynow",
    "functionName": "GetIdentityprovidersIdentitynow",
    "signature": "GetIdentityprovidersIdentitynow()",
    "return": "Identitynow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get IdentityNow Provider\ndata, response, err := apiInstance.GetIdentityprovidersIdentitynow()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersIdentitynow: %v\\n\", err)\n}"
  },
  "getidentityprovidersokta": {
    "operationId": "getidentityprovidersokta",
    "functionName": "GetIdentityprovidersOkta",
    "signature": "GetIdentityprovidersOkta()",
    "return": "Okta",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get Okta Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersOkta()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersOkta: %v\\n\", err)\n}"
  },
  "getidentityprovidersonelogin": {
    "operationId": "getidentityprovidersonelogin",
    "functionName": "GetIdentityprovidersOnelogin",
    "signature": "GetIdentityprovidersOnelogin()",
    "return": "Onelogin",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get OneLogin Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersOnelogin()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersOnelogin: %v\\n\", err)\n}"
  },
  "getidentityprovidersping": {
    "operationId": "getidentityprovidersping",
    "functionName": "GetIdentityprovidersPing",
    "signature": "GetIdentityprovidersPing()",
    "return": "Pingidentity",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get Ping Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersPing()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersPing: %v\\n\", err)\n}"
  },
  "getidentityproviderspurecloud": {
    "operationId": "getidentityproviderspurecloud",
    "functionName": "GetIdentityprovidersPurecloud",
    "signature": "GetIdentityprovidersPurecloud()",
    "return": "Purecloud",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get PureCloud Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersPurecloud()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersPurecloud: %v\\n\", err)\n}"
  },
  "getidentityproviderspureengage": {
    "operationId": "getidentityproviderspureengage",
    "functionName": "GetIdentityprovidersPureengage",
    "signature": "GetIdentityprovidersPureengage()",
    "return": "Pureengage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get PureEngage Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersPureengage()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersPureengage: %v\\n\", err)\n}"
  },
  "getidentityproviderssalesforce": {
    "operationId": "getidentityproviderssalesforce",
    "functionName": "GetIdentityprovidersSalesforce",
    "signature": "GetIdentityprovidersSalesforce()",
    "return": "Salesforce",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\n// Get Salesforce Identity Provider\ndata, response, err := apiInstance.GetIdentityprovidersSalesforce()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIdentityprovidersSalesforce: %v\\n\", err)\n}"
  },
  "putidentityprovidersadfs": {
    "operationId": "putidentityprovidersadfs",
    "functionName": "PutIdentityprovidersAdfs",
    "signature": "PutIdentityprovidersAdfs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Adfs",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Adfs // Provider\n// Update/Create ADFS Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersAdfs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersAdfs: %v\\n\", err)\n}"
  },
  "putidentityproviderscic": {
    "operationId": "putidentityproviderscic",
    "functionName": "PutIdentityprovidersCic",
    "signature": "PutIdentityprovidersCic(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Customerinteractioncenter",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Customerinteractioncenter // Provider\n// Update/Create Customer Interaction Center (CIC) Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersCic(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersCic: %v\\n\", err)\n}"
  },
  "putidentityprovidersgeneric": {
    "operationId": "putidentityprovidersgeneric",
    "functionName": "PutIdentityprovidersGeneric",
    "signature": "PutIdentityprovidersGeneric(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Genericsaml",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Genericsaml // Provider\n// Update/Create Generic SAML Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersGeneric(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersGeneric: %v\\n\", err)\n}"
  },
  "putidentityprovidersgsuite": {
    "operationId": "putidentityprovidersgsuite",
    "functionName": "PutIdentityprovidersGsuite",
    "signature": "PutIdentityprovidersGsuite(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Gsuite",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Gsuite // Provider\n// Update/Create G Suite Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersGsuite(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersGsuite: %v\\n\", err)\n}"
  },
  "putidentityprovidersidentitynow": {
    "operationId": "putidentityprovidersidentitynow",
    "functionName": "PutIdentityprovidersIdentitynow",
    "signature": "PutIdentityprovidersIdentitynow(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Identitynow",
        "required": "true"
      }
    ],
    "return": "Identitynow",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Identitynow // Provider\n// Update/Create IdentityNow Provider\ndata, response, err := apiInstance.PutIdentityprovidersIdentitynow(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersIdentitynow: %v\\n\", err)\n}"
  },
  "putidentityprovidersokta": {
    "operationId": "putidentityprovidersokta",
    "functionName": "PutIdentityprovidersOkta",
    "signature": "PutIdentityprovidersOkta(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Okta",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Okta // Provider\n// Update/Create Okta Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersOkta(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersOkta: %v\\n\", err)\n}"
  },
  "putidentityprovidersonelogin": {
    "operationId": "putidentityprovidersonelogin",
    "functionName": "PutIdentityprovidersOnelogin",
    "signature": "PutIdentityprovidersOnelogin(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Onelogin",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Onelogin // Provider\n// Update/Create OneLogin Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersOnelogin(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersOnelogin: %v\\n\", err)\n}"
  },
  "putidentityprovidersping": {
    "operationId": "putidentityprovidersping",
    "functionName": "PutIdentityprovidersPing",
    "signature": "PutIdentityprovidersPing(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Pingidentity",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Pingidentity // Provider\n// Update/Create Ping Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersPing(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersPing: %v\\n\", err)\n}"
  },
  "putidentityproviderspurecloud": {
    "operationId": "putidentityproviderspurecloud",
    "functionName": "PutIdentityprovidersPurecloud",
    "signature": "PutIdentityprovidersPurecloud(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Purecloud",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Purecloud // Provider\n// Update/Create PureCloud Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersPurecloud(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersPurecloud: %v\\n\", err)\n}"
  },
  "putidentityproviderspureengage": {
    "operationId": "putidentityproviderspureengage",
    "functionName": "PutIdentityprovidersPureengage",
    "signature": "PutIdentityprovidersPureengage(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Pureengage",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Pureengage // Provider\n// Update/Create PureEngage Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersPureengage(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersPureengage: %v\\n\", err)\n}"
  },
  "putidentityproviderssalesforce": {
    "operationId": "putidentityproviderssalesforce",
    "functionName": "PutIdentityprovidersSalesforce",
    "signature": "PutIdentityprovidersSalesforce(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Salesforce",
        "required": "true"
      }
    ],
    "return": "Oauthprovider",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIdentityProviderApiWithConfig(config)\n\nvar body platformclientv2.Salesforce // Provider\n// Update/Create Salesforce Identity Provider\ndata, response, err := apiInstance.PutIdentityprovidersSalesforce(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIdentityprovidersSalesforce: %v\\n\", err)\n}"
  },
  "getinfrastructureascodeaccelerator": {
    "operationId": "getinfrastructureascodeaccelerator",
    "functionName": "GetInfrastructureascodeAccelerator",
    "signature": "GetInfrastructureascodeAccelerator(acceleratorId, preferredLanguage)",
    "parameters": [
      {
        "name": "acceleratorId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "preferredLanguage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Acceleratorspecification",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewInfrastructureAsCodeApiWithConfig(config)\n\nvar acceleratorId string // Accelerator ID\nvar preferredLanguage string // Preferred Language\n// Get information about an accelerator\ndata, response, err := apiInstance.GetInfrastructureascodeAccelerator(acceleratorId, preferredLanguage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetInfrastructureascodeAccelerator: %v\\n\", err)\n}"
  },
  "getinfrastructureascodeaccelerators": {
    "operationId": "getinfrastructureascodeaccelerators",
    "functionName": "GetInfrastructureascodeAccelerators",
    "signature": "GetInfrastructureascodeAccelerators(pageSize, pageNumber, sortBy, sortOrder, name, description, origin, varType, classification, tags)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "origin",
        "type": "string",
        "required": "false"
      },
      {
        "name": "varType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "classification",
        "type": "string",
        "required": "false"
      },
      {
        "name": "tags",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Acceleratorlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewInfrastructureAsCodeApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar sortOrder string // Sort order\nvar name string // Filter by name\nvar description string // Filter by description\nvar origin string // Filter by origin\nvar varType string // Filter by type\nvar classification string // Filter by classification\nvar tags string // Filter by tags\n// Get a list of available accelerators\ndata, response, err := apiInstance.GetInfrastructureascodeAccelerators(pageSize, pageNumber, sortBy, sortOrder, name, description, origin, varType, classification, tags)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetInfrastructureascodeAccelerators: %v\\n\", err)\n}"
  },
  "getinfrastructureascodejob": {
    "operationId": "getinfrastructureascodejob",
    "functionName": "GetInfrastructureascodeJob",
    "signature": "GetInfrastructureascodeJob(jobId, details)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "details",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Infrastructureascodejob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewInfrastructureAsCodeApiWithConfig(config)\n\nvar jobId string // Job ID\nvar details bool // Include details of execution, including job results or error information\n// Get job status and results\ndata, response, err := apiInstance.GetInfrastructureascodeJob(jobId, details)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetInfrastructureascodeJob: %v\\n\", err)\n}"
  },
  "getinfrastructureascodejobs": {
    "operationId": "getinfrastructureascodejobs",
    "functionName": "GetInfrastructureascodeJobs",
    "signature": "GetInfrastructureascodeJobs(maxResults, includeErrors, sortBy, sortOrder, acceleratorId, submittedBy, status)",
    "parameters": [
      {
        "name": "maxResults",
        "type": "int",
        "required": "false"
      },
      {
        "name": "includeErrors",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "acceleratorId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "submittedBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "status",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Infrastructureascodejob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewInfrastructureAsCodeApiWithConfig(config)\n\nvar maxResults int // Number of jobs to show\nvar includeErrors bool // Include error messages\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar acceleratorId string // Find only jobs associated with this accelerator\nvar submittedBy string // Find only jobs submitted by this user\nvar status string // Find only jobs in this state\n// Get job history\ndata, response, err := apiInstance.GetInfrastructureascodeJobs(maxResults, includeErrors, sortBy, sortOrder, acceleratorId, submittedBy, status)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetInfrastructureascodeJobs: %v\\n\", err)\n}"
  },
  "postinfrastructureascodejobs": {
    "operationId": "postinfrastructureascodejobs",
    "functionName": "PostInfrastructureascodeJobs",
    "signature": "PostInfrastructureascodeJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Acceleratorinput",
        "required": "true"
      }
    ],
    "return": "Infrastructureascodejob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewInfrastructureAsCodeApiWithConfig(config)\n\nvar body platformclientv2.Acceleratorinput // \n// Create a Job\ndata, response, err := apiInstance.PostInfrastructureascodeJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostInfrastructureascodeJobs: %v\\n\", err)\n}"
  },
  "deleteintegration": {
    "operationId": "deleteintegration",
    "functionName": "DeleteIntegration",
    "signature": "DeleteIntegration(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Integration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // Integration Id\n// Delete integration.\ndata, response, err := apiInstance.DeleteIntegration(integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIntegration: %v\\n\", err)\n}"
  },
  "deleteintegrationsaction": {
    "operationId": "deleteintegrationsaction",
    "functionName": "DeleteIntegrationsAction",
    "signature": "DeleteIntegrationsAction(actionId)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\n// Delete an Action\nresponse, err := apiInstance.DeleteIntegrationsAction(actionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIntegrationsAction: %v\\n\", err)\n}"
  },
  "deleteintegrationsactiondraft": {
    "operationId": "deleteintegrationsactiondraft",
    "functionName": "DeleteIntegrationsActionDraft",
    "signature": "DeleteIntegrationsActionDraft(actionId)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\n// Delete a Draft\nresponse, err := apiInstance.DeleteIntegrationsActionDraft(actionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIntegrationsActionDraft: %v\\n\", err)\n}"
  },
  "deleteintegrationscredential": {
    "operationId": "deleteintegrationscredential",
    "functionName": "DeleteIntegrationsCredential",
    "signature": "DeleteIntegrationsCredential(credentialId)",
    "parameters": [
      {
        "name": "credentialId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar credentialId string // Credential ID\n// Delete a set of credentials\nresponse, err := apiInstance.DeleteIntegrationsCredential(credentialId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteIntegrationsCredential: %v\\n\", err)\n}"
  },
  "getintegration": {
    "operationId": "getintegration",
    "functionName": "GetIntegration",
    "signature": "GetIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Integration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // Integration Id\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\n// Get integration.\ndata, response, err := apiInstance.GetIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegration: %v\\n\", err)\n}"
  },
  "getintegrationconfigcurrent": {
    "operationId": "getintegrationconfigcurrent",
    "functionName": "GetIntegrationConfigCurrent",
    "signature": "GetIntegrationConfigCurrent(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Integrationconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // Integration Id\n// Get integration configuration.\ndata, response, err := apiInstance.GetIntegrationConfigCurrent(integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationConfigCurrent: %v\\n\", err)\n}"
  },
  "getintegrations": {
    "operationId": "getintegrations",
    "functionName": "GetIntegrations",
    "signature": "GetIntegrations(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Integrationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\n// List integrations\ndata, response, err := apiInstance.GetIntegrations(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrations: %v\\n\", err)\n}"
  },
  "getintegrationsaction": {
    "operationId": "getintegrationsaction",
    "functionName": "GetIntegrationsAction",
    "signature": "GetIntegrationsAction(actionId, expand, includeConfig)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeConfig",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Action",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar expand string // Indicates a field in the response which should be expanded.\nvar includeConfig bool // Return config in response.\n// Retrieves a single Action matching id.\ndata, response, err := apiInstance.GetIntegrationsAction(actionId, expand, includeConfig)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsAction: %v\\n\", err)\n}"
  },
  "getintegrationsactiondraft": {
    "operationId": "getintegrationsactiondraft",
    "functionName": "GetIntegrationsActionDraft",
    "signature": "GetIntegrationsActionDraft(actionId, expand, includeConfig)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeConfig",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Action",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar expand string // Indicates a field in the response which should be expanded.\nvar includeConfig bool // Return config in response.\n// Retrieve a Draft\ndata, response, err := apiInstance.GetIntegrationsActionDraft(actionId, expand, includeConfig)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsActionDraft: %v\\n\", err)\n}"
  },
  "getintegrationsactiondraftschema": {
    "operationId": "getintegrationsactiondraftschema",
    "functionName": "GetIntegrationsActionDraftSchema",
    "signature": "GetIntegrationsActionDraftSchema(actionId, fileName)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Jsonschemadocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar fileName string // Name of schema file to be retrieved for this draft.\n// Retrieve schema for a Draft based on filename.\ndata, response, err := apiInstance.GetIntegrationsActionDraftSchema(actionId, fileName)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsActionDraftSchema: %v\\n\", err)\n}"
  },
  "getintegrationsactiondrafttemplate": {
    "operationId": "getintegrationsactiondrafttemplate",
    "functionName": "GetIntegrationsActionDraftTemplate",
    "signature": "GetIntegrationsActionDraftTemplate(actionId, fileName)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar fileName string // Name of template file to be retrieved for this action draft.\n// Retrieve templates for a Draft based on filename.\ndata, response, err := apiInstance.GetIntegrationsActionDraftTemplate(actionId, fileName)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsActionDraftTemplate: %v\\n\", err)\n}"
  },
  "getintegrationsactiondraftvalidation": {
    "operationId": "getintegrationsactiondraftvalidation",
    "functionName": "GetIntegrationsActionDraftValidation",
    "signature": "GetIntegrationsActionDraftValidation(actionId)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Draftvalidationresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\n// Validate current Draft configuration.\ndata, response, err := apiInstance.GetIntegrationsActionDraftValidation(actionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsActionDraftValidation: %v\\n\", err)\n}"
  },
  "getintegrationsactionschema": {
    "operationId": "getintegrationsactionschema",
    "functionName": "GetIntegrationsActionSchema",
    "signature": "GetIntegrationsActionSchema(actionId, fileName)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Jsonschemadocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar fileName string // Name of schema file to be retrieved for this action.\n// Retrieve schema for an action based on filename.\ndata, response, err := apiInstance.GetIntegrationsActionSchema(actionId, fileName)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsActionSchema: %v\\n\", err)\n}"
  },
  "getintegrationsactiontemplate": {
    "operationId": "getintegrationsactiontemplate",
    "functionName": "GetIntegrationsActionTemplate",
    "signature": "GetIntegrationsActionTemplate(actionId, fileName)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar fileName string // Name of template file to be retrieved for this action.\n// Retrieve text of templates for an action based on filename.\ndata, response, err := apiInstance.GetIntegrationsActionTemplate(actionId, fileName)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsActionTemplate: %v\\n\", err)\n}"
  },
  "getintegrationsactions": {
    "operationId": "getintegrationsactions",
    "functionName": "GetIntegrationsActions",
    "signature": "GetIntegrationsActions(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "category",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeAuthActions",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Actionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar sortBy string // Root level field name to sort on.\nvar sortOrder string // Direction to sort 'sortBy' field.\nvar category string // Filter by category name.\nvar name string // Filter by partial or complete action name.\nvar ids string // Filter by action Id. Can be a comma separated list to request multiple actions.  Limit of 50 Ids.\nvar secure string // Filter based on 'secure' configuration option. True will only return actions marked as secure. False will return only non-secure actions. Do not use filter if you want all Actions.\nvar includeAuthActions string // Whether or not to include authentication actions in the response. These actions are not directly executable. Some integrations create them and will run them as needed to refresh authentication information for other actions.\n// Retrieves all actions associated with filters passed in via query param.\ndata, response, err := apiInstance.GetIntegrationsActions(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsActions: %v\\n\", err)\n}"
  },
  "getintegrationsactionscategories": {
    "operationId": "getintegrationsactionscategories",
    "functionName": "GetIntegrationsActionsCategories",
    "signature": "GetIntegrationsActionsCategories(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, secure)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Categoryentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar sortBy string // Root level field name to sort on.  Only 'name' is supported on this endpoint.\nvar sortOrder string // Direction to sort 'sortBy' field.\nvar secure string // Filter to only include secure actions. True will only include actions marked secured. False will include only unsecure actions. Do not use filter if you want all Actions.\n// Retrieves all categories of available Actions\ndata, response, err := apiInstance.GetIntegrationsActionsCategories(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, secure)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsActionsCategories: %v\\n\", err)\n}"
  },
  "getintegrationsactionsdrafts": {
    "operationId": "getintegrationsactionsdrafts",
    "functionName": "GetIntegrationsActionsDrafts",
    "signature": "GetIntegrationsActionsDrafts(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "category",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeAuthActions",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Actionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar sortBy string // Root level field name to sort on.\nvar sortOrder string // Direction to sort 'sortBy' field.\nvar category string // Filter by category name.\nvar name string // Filter by partial or complete action name.\nvar ids string // Filter by action Id. Can be a comma separated list to request multiple actions.  Limit of 50 Ids.\nvar secure string // Filter based on 'secure' configuration option. True will only return actions marked as secure. False will return only non-secure actions. Do not use filter if you want all Actions.\nvar includeAuthActions string // Whether or not to include authentication actions in the response. These actions are not directly executable. Some integrations create them and will run them as needed to refresh authentication information for other actions.\n// Retrieves all action drafts associated with the filters passed in via query param.\ndata, response, err := apiInstance.GetIntegrationsActionsDrafts(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsActionsDrafts: %v\\n\", err)\n}"
  },
  "getintegrationsbotconnectorintegrationidbot": {
    "operationId": "getintegrationsbotconnectorintegrationidbot",
    "functionName": "GetIntegrationsBotconnectorIntegrationIdBot",
    "signature": "GetIntegrationsBotconnectorIntegrationIdBot(integrationId, botId, version)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "version",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Botconnectorbot",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // The integration ID for this group of bots\nvar botId string // The botID for this bot\nvar version string // Specific Version\n// Get a specific botConnector bot, plus versions, for this integration\ndata, response, err := apiInstance.GetIntegrationsBotconnectorIntegrationIdBot(integrationId, botId, version)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsBotconnectorIntegrationIdBot: %v\\n\", err)\n}"
  },
  "getintegrationsbotconnectorintegrationidbotversions": {
    "operationId": "getintegrationsbotconnectorintegrationidbotversions",
    "functionName": "GetIntegrationsBotconnectorIntegrationIdBotVersions",
    "signature": "GetIntegrationsBotconnectorIntegrationIdBotVersions(integrationId, botId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Botconnectorbotversionsummaryentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // The integration ID for this bot group\nvar botId string // The botID for this bot\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get a list of bot versions for a bot\ndata, response, err := apiInstance.GetIntegrationsBotconnectorIntegrationIdBotVersions(integrationId, botId, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsBotconnectorIntegrationIdBotVersions: %v\\n\", err)\n}"
  },
  "getintegrationsbotconnectorintegrationidbots": {
    "operationId": "getintegrationsbotconnectorintegrationidbots",
    "functionName": "GetIntegrationsBotconnectorIntegrationIdBots",
    "signature": "GetIntegrationsBotconnectorIntegrationIdBots(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Botlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // The integration ID for this group of bots\n// Get a list of botConnector bots for this integration\ndata, response, err := apiInstance.GetIntegrationsBotconnectorIntegrationIdBots(integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsBotconnectorIntegrationIdBots: %v\\n\", err)\n}"
  },
  "getintegrationsbotconnectorintegrationidbotssummaries": {
    "operationId": "getintegrationsbotconnectorintegrationidbotssummaries",
    "functionName": "GetIntegrationsBotconnectorIntegrationIdBotsSummaries",
    "signature": "GetIntegrationsBotconnectorIntegrationIdBotsSummaries(integrationId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Botconnectorbotsummaryentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // The integration ID for this group of bots\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get a summary list of botConnector bots for this integration\ndata, response, err := apiInstance.GetIntegrationsBotconnectorIntegrationIdBotsSummaries(integrationId, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsBotconnectorIntegrationIdBotsSummaries: %v\\n\", err)\n}"
  },
  "getintegrationsclientapps": {
    "operationId": "getintegrationsclientapps",
    "functionName": "GetIntegrationsClientapps",
    "signature": "GetIntegrationsClientapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Clientappentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\n// List permitted client app integrations for the logged in user\ndata, response, err := apiInstance.GetIntegrationsClientapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsClientapps: %v\\n\", err)\n}"
  },
  "getintegrationsclientappsunifiedcommunications": {
    "operationId": "getintegrationsclientappsunifiedcommunications",
    "functionName": "GetIntegrationsClientappsUnifiedcommunications",
    "signature": "GetIntegrationsClientappsUnifiedcommunications(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Ucintegrationlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\n// UC integration client application configuration.\ndata, response, err := apiInstance.GetIntegrationsClientappsUnifiedcommunications(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsClientappsUnifiedcommunications: %v\\n\", err)\n}"
  },
  "getintegrationscredential": {
    "operationId": "getintegrationscredential",
    "functionName": "GetIntegrationsCredential",
    "signature": "GetIntegrationsCredential(credentialId)",
    "parameters": [
      {
        "name": "credentialId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Credential",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar credentialId string // Credential ID\n// Get a single credential with sensitive fields redacted\ndata, response, err := apiInstance.GetIntegrationsCredential(credentialId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsCredential: %v\\n\", err)\n}"
  },
  "getintegrationscredentials": {
    "operationId": "getintegrationscredentials",
    "functionName": "GetIntegrationsCredentials",
    "signature": "GetIntegrationsCredentials(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Credentialinfolisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// List multiple sets of credentials\ndata, response, err := apiInstance.GetIntegrationsCredentials(pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsCredentials: %v\\n\", err)\n}"
  },
  "getintegrationscredentialstypes": {
    "operationId": "getintegrationscredentialstypes",
    "functionName": "GetIntegrationsCredentialsTypes",
    "signature": "GetIntegrationsCredentialsTypes()",
    "return": "Credentialtypelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\n// List all credential types\ndata, response, err := apiInstance.GetIntegrationsCredentialsTypes()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsCredentialsTypes: %v\\n\", err)\n}"
  },
  "getintegrationsspeechdialogflowagent": {
    "operationId": "getintegrationsspeechdialogflowagent",
    "functionName": "GetIntegrationsSpeechDialogflowAgent",
    "signature": "GetIntegrationsSpeechDialogflowAgent(agentId)",
    "parameters": [
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dialogflowagent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar agentId string // The agent ID\n// Get details about a Dialogflow agent\ndata, response, err := apiInstance.GetIntegrationsSpeechDialogflowAgent(agentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechDialogflowAgent: %v\\n\", err)\n}"
  },
  "getintegrationsspeechdialogflowagents": {
    "operationId": "getintegrationsspeechdialogflowagents",
    "functionName": "GetIntegrationsSpeechDialogflowAgents",
    "signature": "GetIntegrationsSpeechDialogflowAgents(pageNumber, pageSize, name)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Dialogflowagentsummaryentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar name string // Filter on agent name\n// Get a list of Dialogflow agents in the customers' Google accounts\ndata, response, err := apiInstance.GetIntegrationsSpeechDialogflowAgents(pageNumber, pageSize, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechDialogflowAgents: %v\\n\", err)\n}"
  },
  "getintegrationsspeechlexbotalias": {
    "operationId": "getintegrationsspeechlexbotalias",
    "functionName": "GetIntegrationsSpeechLexBotAlias",
    "signature": "GetIntegrationsSpeechLexBotAlias(aliasId)",
    "parameters": [
      {
        "name": "aliasId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Lexbotalias",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar aliasId string // The alias ID\n// Get details about a Lex bot alias\ndata, response, err := apiInstance.GetIntegrationsSpeechLexBotAlias(aliasId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechLexBotAlias: %v\\n\", err)\n}"
  },
  "getintegrationsspeechlexbotbotidaliases": {
    "operationId": "getintegrationsspeechlexbotbotidaliases",
    "functionName": "GetIntegrationsSpeechLexBotBotIdAliases",
    "signature": "GetIntegrationsSpeechLexBotBotIdAliases(botId, pageNumber, pageSize, status, name)",
    "parameters": [
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "status",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Lexbotaliasentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar botId string // The bot ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar status string // Filter on alias status\nvar name string // Filter on alias name\n// Get a list of aliases for a bot in the customer's AWS accounts\ndata, response, err := apiInstance.GetIntegrationsSpeechLexBotBotIdAliases(botId, pageNumber, pageSize, status, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechLexBotBotIdAliases: %v\\n\", err)\n}"
  },
  "getintegrationsspeechlexbots": {
    "operationId": "getintegrationsspeechlexbots",
    "functionName": "GetIntegrationsSpeechLexBots",
    "signature": "GetIntegrationsSpeechLexBots(pageNumber, pageSize, name)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Lexbotentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar name string // Filter on bot name\n// Get a list of Lex bots in the customers' AWS accounts\ndata, response, err := apiInstance.GetIntegrationsSpeechLexBots(pageNumber, pageSize, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechLexBots: %v\\n\", err)\n}"
  },
  "getintegrationsspeechnuancenuanceintegrationidbot": {
    "operationId": "getintegrationsspeechnuancenuanceintegrationidbot",
    "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBot",
    "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBot(nuanceIntegrationId, botId, expand, targetChannel)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "targetChannel",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Nuancebot",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar botId string // The Nuance bot ID to get\nvar expand []string // expand\nvar targetChannel string // targetChannel\n// Get a Nuance bot in the specified Integration\ndata, response, err := apiInstance.GetIntegrationsSpeechNuanceNuanceIntegrationIdBot(nuanceIntegrationId, botId, expand, targetChannel)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechNuanceNuanceIntegrationIdBot: %v\\n\", err)\n}"
  },
  "getintegrationsspeechnuancenuanceintegrationidbotjob": {
    "operationId": "getintegrationsspeechnuancenuanceintegrationidbotjob",
    "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJob",
    "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJob(nuanceIntegrationId, botId, jobId)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar botId string // The Nuance bot ID\nvar jobId string // The asynchronous job ID\n// Get the status of an asynchronous Nuance bot GET job\ndata, response, err := apiInstance.GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJob(nuanceIntegrationId, botId, jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJob: %v\\n\", err)\n}"
  },
  "getintegrationsspeechnuancenuanceintegrationidbotjobresults": {
    "operationId": "getintegrationsspeechnuancenuanceintegrationidbotjobresults",
    "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults",
    "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults(nuanceIntegrationId, botId, jobId)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Nuancebot",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar botId string // The Nuance bot ID\nvar jobId string // The asynchronous job ID\n// Get the result of an asynchronous Nuance bot GET job\ndata, response, err := apiInstance.GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults(nuanceIntegrationId, botId, jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechNuanceNuanceIntegrationIdBotJobResults: %v\\n\", err)\n}"
  },
  "getintegrationsspeechnuancenuanceintegrationidbots": {
    "operationId": "getintegrationsspeechnuancenuanceintegrationidbots",
    "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBots",
    "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBots(nuanceIntegrationId, pageNumber, pageSize, onlyRegisteredBots)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "onlyRegisteredBots",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Nuancebotentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar onlyRegisteredBots bool // Limit bots to the ones configured for Genesys Cloud usage\n// Get a list of Nuance bots available in the specified Integration\ndata, response, err := apiInstance.GetIntegrationsSpeechNuanceNuanceIntegrationIdBots(nuanceIntegrationId, pageNumber, pageSize, onlyRegisteredBots)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechNuanceNuanceIntegrationIdBots: %v\\n\", err)\n}"
  },
  "getintegrationsspeechnuancenuanceintegrationidbotsjob": {
    "operationId": "getintegrationsspeechnuancenuanceintegrationidbotsjob",
    "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob",
    "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob(nuanceIntegrationId, jobId)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Asyncjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar jobId string // The asynchronous job ID\n// Get the status of an asynchronous Nuance bots GET job\ndata, response, err := apiInstance.GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob(nuanceIntegrationId, jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJob: %v\\n\", err)\n}"
  },
  "getintegrationsspeechnuancenuanceintegrationidbotsjobresults": {
    "operationId": "getintegrationsspeechnuancenuanceintegrationidbotsjobresults",
    "functionName": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults",
    "signature": "GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults(nuanceIntegrationId, jobId)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Nuancebotentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar jobId string // The asynchronous job ID\n// Get the result of an asynchronous Nuance bots GET job\ndata, response, err := apiInstance.GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults(nuanceIntegrationId, jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobResults: %v\\n\", err)\n}"
  },
  "getintegrationsspeechttsengine": {
    "operationId": "getintegrationsspeechttsengine",
    "functionName": "GetIntegrationsSpeechTtsEngine",
    "signature": "GetIntegrationsSpeechTtsEngine(engineId, includeVoices)",
    "parameters": [
      {
        "name": "engineId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeVoices",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Ttsengineentity",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar engineId string // The engine ID\nvar includeVoices bool // Include voices for the engine\n// Get details about a TTS engine\ndata, response, err := apiInstance.GetIntegrationsSpeechTtsEngine(engineId, includeVoices)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechTtsEngine: %v\\n\", err)\n}"
  },
  "getintegrationsspeechttsenginevoice": {
    "operationId": "getintegrationsspeechttsenginevoice",
    "functionName": "GetIntegrationsSpeechTtsEngineVoice",
    "signature": "GetIntegrationsSpeechTtsEngineVoice(engineId, voiceId)",
    "parameters": [
      {
        "name": "engineId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "voiceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Ttsvoiceentity",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar engineId string // The engine ID\nvar voiceId string // The voice ID\n// Get details about a specific voice for a TTS engine\ndata, response, err := apiInstance.GetIntegrationsSpeechTtsEngineVoice(engineId, voiceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechTtsEngineVoice: %v\\n\", err)\n}"
  },
  "getintegrationsspeechttsenginevoices": {
    "operationId": "getintegrationsspeechttsenginevoices",
    "functionName": "GetIntegrationsSpeechTtsEngineVoices",
    "signature": "GetIntegrationsSpeechTtsEngineVoices(engineId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "engineId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Ttsvoiceentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar engineId string // The engine ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get a list of voices for a TTS engine\ndata, response, err := apiInstance.GetIntegrationsSpeechTtsEngineVoices(engineId, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechTtsEngineVoices: %v\\n\", err)\n}"
  },
  "getintegrationsspeechttsengines": {
    "operationId": "getintegrationsspeechttsengines",
    "functionName": "GetIntegrationsSpeechTtsEngines",
    "signature": "GetIntegrationsSpeechTtsEngines(pageNumber, pageSize, includeVoices, name, language)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "includeVoices",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "language",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Ttsengineentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar includeVoices bool // Include voices for the engine\nvar name string // Filter on engine name\nvar language string // Filter on supported language. If includeVoices=true then the voices are also filtered.\n// Get a list of TTS engines enabled for org\ndata, response, err := apiInstance.GetIntegrationsSpeechTtsEngines(pageNumber, pageSize, includeVoices, name, language)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechTtsEngines: %v\\n\", err)\n}"
  },
  "getintegrationsspeechttssettings": {
    "operationId": "getintegrationsspeechttssettings",
    "functionName": "GetIntegrationsSpeechTtsSettings",
    "signature": "GetIntegrationsSpeechTtsSettings()",
    "return": "Ttssettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\n// Get TTS settings for an org\ndata, response, err := apiInstance.GetIntegrationsSpeechTtsSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsSpeechTtsSettings: %v\\n\", err)\n}"
  },
  "getintegrationstype": {
    "operationId": "getintegrationstype",
    "functionName": "GetIntegrationsType",
    "signature": "GetIntegrationsType(typeId)",
    "parameters": [
      {
        "name": "typeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Integrationtype",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar typeId string // Integration Type Id\n// Get integration type.\ndata, response, err := apiInstance.GetIntegrationsType(typeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsType: %v\\n\", err)\n}"
  },
  "getintegrationstypeconfigschema": {
    "operationId": "getintegrationstypeconfigschema",
    "functionName": "GetIntegrationsTypeConfigschema",
    "signature": "GetIntegrationsTypeConfigschema(typeId, configType)",
    "parameters": [
      {
        "name": "typeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "configType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Jsonschemadocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar typeId string // Integration Type Id\nvar configType string // Config schema type\n// Get properties config schema for an integration type.\ndata, response, err := apiInstance.GetIntegrationsTypeConfigschema(typeId, configType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsTypeConfigschema: %v\\n\", err)\n}"
  },
  "getintegrationstypes": {
    "operationId": "getintegrationstypes",
    "functionName": "GetIntegrationsTypes",
    "signature": "GetIntegrationsTypes(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Integrationtypeentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\n// List integration types\ndata, response, err := apiInstance.GetIntegrationsTypes(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsTypes: %v\\n\", err)\n}"
  },
  "getintegrationsuserapps": {
    "operationId": "getintegrationsuserapps",
    "functionName": "GetIntegrationsUserapps",
    "signature": "GetIntegrationsUserapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, appHost)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "appHost",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userappentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar appHost string // The type of UserApp to filter by\n// List permitted user app integrations for the logged in user\ndata, response, err := apiInstance.GetIntegrationsUserapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, appHost)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIntegrationsUserapps: %v\\n\", err)\n}"
  },
  "patchintegration": {
    "operationId": "patchintegration",
    "functionName": "PatchIntegration",
    "signature": "PatchIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Integration",
        "required": "false"
      }
    ],
    "return": "Integration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // Integration Id\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar body platformclientv2.Integration // Integration Update\n// Update an integration.\ndata, response, err := apiInstance.PatchIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchIntegration: %v\\n\", err)\n}"
  },
  "patchintegrationsaction": {
    "operationId": "patchintegrationsaction",
    "functionName": "PatchIntegrationsAction",
    "signature": "PatchIntegrationsAction(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updateactioninput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar body platformclientv2.Updateactioninput // Input used to patch the Action.\n// Patch an Action\ndata, response, err := apiInstance.PatchIntegrationsAction(actionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchIntegrationsAction: %v\\n\", err)\n}"
  },
  "patchintegrationsactiondraft": {
    "operationId": "patchintegrationsactiondraft",
    "functionName": "PatchIntegrationsActionDraft",
    "signature": "PatchIntegrationsActionDraft(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updatedraftinput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar body platformclientv2.Updatedraftinput // Input used to patch the Action Draft.\n// Update an existing Draft\ndata, response, err := apiInstance.PatchIntegrationsActionDraft(actionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchIntegrationsActionDraft: %v\\n\", err)\n}"
  },
  "postintegrations": {
    "operationId": "postintegrations",
    "functionName": "PostIntegrations",
    "signature": "PostIntegrations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createintegrationrequest",
        "required": "false"
      }
    ],
    "return": "Integration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar body platformclientv2.Createintegrationrequest // Integration\n// Create an integration.\ndata, response, err := apiInstance.PostIntegrations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrations: %v\\n\", err)\n}"
  },
  "postintegrationsactiondraft": {
    "operationId": "postintegrationsactiondraft",
    "functionName": "PostIntegrationsActionDraft",
    "signature": "PostIntegrationsActionDraft(actionId)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\n// Create a new Draft from existing Action\ndata, response, err := apiInstance.PostIntegrationsActionDraft(actionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsActionDraft: %v\\n\", err)\n}"
  },
  "postintegrationsactiondraftpublish": {
    "operationId": "postintegrationsactiondraftpublish",
    "functionName": "PostIntegrationsActionDraftPublish",
    "signature": "PostIntegrationsActionDraftPublish(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Publishdraftinput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar body platformclientv2.Publishdraftinput // Input used to patch the Action.\n// Publish a Draft and make it the active Action configuration\ndata, response, err := apiInstance.PostIntegrationsActionDraftPublish(actionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsActionDraftPublish: %v\\n\", err)\n}"
  },
  "postintegrationsactiondrafttest": {
    "operationId": "postintegrationsactiondrafttest",
    "functionName": "PostIntegrationsActionDraftTest",
    "signature": "PostIntegrationsActionDraftTest(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "interface{}",
        "required": "true"
      }
    ],
    "return": "Testexecutionresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar body platformclientv2.interface{} // Map of parameters used for variable substitution.\n// Test the execution of a draft. Responses will show execution steps broken out with intermediate results to help in debugging.\ndata, response, err := apiInstance.PostIntegrationsActionDraftTest(actionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsActionDraftTest: %v\\n\", err)\n}"
  },
  "postintegrationsactionexecute": {
    "operationId": "postintegrationsactionexecute",
    "functionName": "PostIntegrationsActionExecute",
    "signature": "PostIntegrationsActionExecute(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "interface{}",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar body platformclientv2.interface{} // Map of parameters used for variable substitution.\n// Execute Action and return response from 3rd party.  Responses will follow the schemas defined on the Action for success and error.\ndata, response, err := apiInstance.PostIntegrationsActionExecute(actionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsActionExecute: %v\\n\", err)\n}"
  },
  "postintegrationsactiontest": {
    "operationId": "postintegrationsactiontest",
    "functionName": "PostIntegrationsActionTest",
    "signature": "PostIntegrationsActionTest(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "interface{}",
        "required": "true"
      }
    ],
    "return": "Testexecutionresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar actionId string // actionId\nvar body platformclientv2.interface{} // Map of parameters used for variable substitution.\n// Test the execution of an action. Responses will show execution steps broken out with intermediate results to help in debugging.\ndata, response, err := apiInstance.PostIntegrationsActionTest(actionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsActionTest: %v\\n\", err)\n}"
  },
  "postintegrationsactions": {
    "operationId": "postintegrationsactions",
    "functionName": "PostIntegrationsActions",
    "signature": "PostIntegrationsActions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Postactioninput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar body platformclientv2.Postactioninput // Input used to create Action.\n// Create a new Action\ndata, response, err := apiInstance.PostIntegrationsActions(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsActions: %v\\n\", err)\n}"
  },
  "postintegrationsactionsdrafts": {
    "operationId": "postintegrationsactionsdrafts",
    "functionName": "PostIntegrationsActionsDrafts",
    "signature": "PostIntegrationsActionsDrafts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Postactioninput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar body platformclientv2.Postactioninput // Input used to create Action Draft.\n// Create a new Draft\ndata, response, err := apiInstance.PostIntegrationsActionsDrafts(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsActionsDrafts: %v\\n\", err)\n}"
  },
  "postintegrationscredentials": {
    "operationId": "postintegrationscredentials",
    "functionName": "PostIntegrationsCredentials",
    "signature": "PostIntegrationsCredentials(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Credential",
        "required": "false"
      }
    ],
    "return": "Credentialinfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar body platformclientv2.Credential // Credential\n// Create a set of credentials\ndata, response, err := apiInstance.PostIntegrationsCredentials(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsCredentials: %v\\n\", err)\n}"
  },
  "postintegrationsspeechnuancenuanceintegrationidbotjobs": {
    "operationId": "postintegrationsspeechnuancenuanceintegrationidbotjobs",
    "functionName": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs",
    "signature": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs(nuanceIntegrationId, botId, expand, body)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Asyncjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar botId string // The Nuance bot ID\nvar expand []string // expand\nvar body platformclientv2.string // targetChannel\n// Get a Nuance bot in the specified Integration asynchronously\ndata, response, err := apiInstance.PostIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs(nuanceIntegrationId, botId, expand, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsSpeechNuanceNuanceIntegrationIdBotJobs: %v\\n\", err)\n}"
  },
  "postintegrationsspeechnuancenuanceintegrationidbotsjobs": {
    "operationId": "postintegrationsspeechnuancenuanceintegrationidbotsjobs",
    "functionName": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs",
    "signature": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs(nuanceIntegrationId, pageNumber, pageSize, onlyRegisteredBots)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "onlyRegisteredBots",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Asyncjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar onlyRegisteredBots bool // Limit bots to the ones configured for Genesys Cloud usage\n// Get a list of Nuance bots in the specified Integration asynchronously\ndata, response, err := apiInstance.PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs(nuanceIntegrationId, pageNumber, pageSize, onlyRegisteredBots)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsJobs: %v\\n\", err)\n}"
  },
  "postintegrationsspeechnuancenuanceintegrationidbotslaunchvalidate": {
    "operationId": "postintegrationsspeechnuancenuanceintegrationidbotslaunchvalidate",
    "functionName": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate",
    "signature": "PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate(nuanceIntegrationId, settings)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "settings",
        "type": "Botexecutionconfiguration",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar settings platformclientv2.Botexecutionconfiguration // \n// Try out a single credential for a Nuance bot to know if the secret is correct\nresponse, err := apiInstance.PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate(nuanceIntegrationId, settings)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchValidate: %v\\n\", err)\n}"
  },
  "putintegrationconfigcurrent": {
    "operationId": "putintegrationconfigcurrent",
    "functionName": "PutIntegrationConfigCurrent",
    "signature": "PutIntegrationConfigCurrent(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Integrationconfiguration",
        "required": "false"
      }
    ],
    "return": "Integrationconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // Integration Id\nvar body platformclientv2.Integrationconfiguration // Integration Configuration\n// Update integration configuration.\ndata, response, err := apiInstance.PutIntegrationConfigCurrent(integrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIntegrationConfigCurrent: %v\\n\", err)\n}"
  },
  "putintegrationsbotconnectorintegrationidbots": {
    "operationId": "putintegrationsbotconnectorintegrationidbots",
    "functionName": "PutIntegrationsBotconnectorIntegrationIdBots",
    "signature": "PutIntegrationsBotconnectorIntegrationIdBots(integrationId, botList)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botList",
        "type": "Botlist",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar integrationId string // The integration ID for this group of bots\nvar botList platformclientv2.Botlist // \n// Set a list of botConnector bots plus versions for this integration\nresponse, err := apiInstance.PutIntegrationsBotconnectorIntegrationIdBots(integrationId, botList)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PutIntegrationsBotconnectorIntegrationIdBots: %v\\n\", err)\n}"
  },
  "putintegrationscredential": {
    "operationId": "putintegrationscredential",
    "functionName": "PutIntegrationsCredential",
    "signature": "PutIntegrationsCredential(credentialId, body)",
    "parameters": [
      {
        "name": "credentialId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Credential",
        "required": "false"
      }
    ],
    "return": "Credentialinfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar credentialId string // Credential ID\nvar body platformclientv2.Credential // Credential\n// Update a set of credentials\ndata, response, err := apiInstance.PutIntegrationsCredential(credentialId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIntegrationsCredential: %v\\n\", err)\n}"
  },
  "putintegrationsspeechnuancenuanceintegrationidbotslaunchsettings": {
    "operationId": "putintegrationsspeechnuancenuanceintegrationidbotslaunchsettings",
    "functionName": "PutIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings",
    "signature": "PutIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings(nuanceIntegrationId, settings)",
    "parameters": [
      {
        "name": "nuanceIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "settings",
        "type": "Nuancebotlaunchsettings",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar nuanceIntegrationId string // The integration ID for this group of bots\nvar settings platformclientv2.Nuancebotlaunchsettings // \n// Update the Nuance bot list for the specific bots made available to Genesys Cloud in the specified Integration\nresponse, err := apiInstance.PutIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings(nuanceIntegrationId, settings)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PutIntegrationsSpeechNuanceNuanceIntegrationIdBotsLaunchSettings: %v\\n\", err)\n}"
  },
  "putintegrationsspeechttssettings": {
    "operationId": "putintegrationsspeechttssettings",
    "functionName": "PutIntegrationsSpeechTtsSettings",
    "signature": "PutIntegrationsSpeechTtsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Ttssettings",
        "required": "true"
      }
    ],
    "return": "Ttssettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar body platformclientv2.Ttssettings // Updated TtsSettings\n// Update TTS settings for an org\ndata, response, err := apiInstance.PutIntegrationsSpeechTtsSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIntegrationsSpeechTtsSettings: %v\\n\", err)\n}"
  },
  "putintegrationsunifiedcommunicationthirdpartypresences": {
    "operationId": "putintegrationsunifiedcommunicationthirdpartypresences",
    "functionName": "PutIntegrationsUnifiedcommunicationThirdpartypresences",
    "signature": "PutIntegrationsUnifiedcommunicationThirdpartypresences(ucIntegrationId, body)",
    "parameters": [
      {
        "name": "ucIntegrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Ucthirdpartypresence",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewIntegrationsApiWithConfig(config)\n\nvar ucIntegrationId string // UC Integration ID\nvar body platformclientv2.[]Ucthirdpartypresence // List of User presences\n// Bulk integration presence ingestion\ndata, response, err := apiInstance.PutIntegrationsUnifiedcommunicationThirdpartypresences(ucIntegrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutIntegrationsUnifiedcommunicationThirdpartypresences: %v\\n\", err)\n}"
  },
  "deletejourneyactionmap": {
    "operationId": "deletejourneyactionmap",
    "functionName": "DeleteJourneyActionmap",
    "signature": "DeleteJourneyActionmap(actionMapId)",
    "parameters": [
      {
        "name": "actionMapId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar actionMapId string // ID of the action map.\n// Delete single action map.\nresponse, err := apiInstance.DeleteJourneyActionmap(actionMapId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteJourneyActionmap: %v\\n\", err)\n}"
  },
  "deletejourneyactiontemplate": {
    "operationId": "deletejourneyactiontemplate",
    "functionName": "DeleteJourneyActiontemplate",
    "signature": "DeleteJourneyActiontemplate(actionTemplateId, hardDelete)",
    "parameters": [
      {
        "name": "actionTemplateId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "hardDelete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar actionTemplateId string // ID of the action template.\nvar hardDelete bool // Determines whether Action Template should be soft-deleted (have it's state set to deleted) or hard-deleted (permanently removed). Set to false (soft-delete) by default.\n// Delete a single action template.\nresponse, err := apiInstance.DeleteJourneyActiontemplate(actionTemplateId, hardDelete)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteJourneyActiontemplate: %v\\n\", err)\n}"
  },
  "deletejourneyoutcome": {
    "operationId": "deletejourneyoutcome",
    "functionName": "DeleteJourneyOutcome",
    "signature": "DeleteJourneyOutcome(outcomeId)",
    "parameters": [
      {
        "name": "outcomeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar outcomeId string // ID of the outcome.\n// Delete an outcome.\nresponse, err := apiInstance.DeleteJourneyOutcome(outcomeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteJourneyOutcome: %v\\n\", err)\n}"
  },
  "deletejourneyoutcomespredictor": {
    "operationId": "deletejourneyoutcomespredictor",
    "functionName": "DeleteJourneyOutcomesPredictor",
    "signature": "DeleteJourneyOutcomesPredictor(predictorId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar predictorId string // ID of predictor\n// Delete an outcome predictor.\nresponse, err := apiInstance.DeleteJourneyOutcomesPredictor(predictorId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteJourneyOutcomesPredictor: %v\\n\", err)\n}"
  },
  "deletejourneysegment": {
    "operationId": "deletejourneysegment",
    "functionName": "DeleteJourneySegment",
    "signature": "DeleteJourneySegment(segmentId)",
    "parameters": [
      {
        "name": "segmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar segmentId string // ID of the segment.\n// Delete a segment.\nresponse, err := apiInstance.DeleteJourneySegment(segmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteJourneySegment: %v\\n\", err)\n}"
  },
  "getjourneyactionmap": {
    "operationId": "getjourneyactionmap",
    "functionName": "GetJourneyActionmap",
    "signature": "GetJourneyActionmap(actionMapId)",
    "parameters": [
      {
        "name": "actionMapId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Actionmap",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar actionMapId string // ID of the action map.\n// Retrieve a single action map.\ndata, response, err := apiInstance.GetJourneyActionmap(actionMapId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyActionmap: %v\\n\", err)\n}"
  },
  "getjourneyactionmaps": {
    "operationId": "getjourneyactionmaps",
    "functionName": "GetJourneyActionmaps",
    "signature": "GetJourneyActionmaps(pageNumber, pageSize, sortBy, filterField, filterValue, actionMapIds, queryFields, queryValue)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "filterField",
        "type": "string",
        "required": "false"
      },
      {
        "name": "filterValue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "actionMapIds",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "queryFields",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "queryValue",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Actionmaplisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Field(s) to sort by. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate).\nvar filterField string // Field to filter by (e.g. filterField=weight or filterField=action.actionTemplate.id). Requires 'filterField' to also be set.\nvar filterValue string // Value to filter by. Requires 'filterValue' to also be set.\nvar actionMapIds []string // IDs of action maps to return. Use of this parameter is not compatible with pagination, filtering, sorting or querying. A maximum of 100 action maps are allowed per request.\nvar queryFields []string // Action Map field(s) to query on. Requires 'queryValue' to also be set.\nvar queryValue string // Value to query on. Requires 'queryFields' to also be set.\n// Retrieve all action maps.\ndata, response, err := apiInstance.GetJourneyActionmaps(pageNumber, pageSize, sortBy, filterField, filterValue, actionMapIds, queryFields, queryValue)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyActionmaps: %v\\n\", err)\n}"
  },
  "getjourneyactionmapsestimatesjob": {
    "operationId": "getjourneyactionmapsestimatesjob",
    "functionName": "GetJourneyActionmapsEstimatesJob",
    "signature": "GetJourneyActionmapsEstimatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar jobId string // ID of the job.\n// Get status of job.\ndata, response, err := apiInstance.GetJourneyActionmapsEstimatesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyActionmapsEstimatesJob: %v\\n\", err)\n}"
  },
  "getjourneyactionmapsestimatesjobresults": {
    "operationId": "getjourneyactionmapsestimatesjobresults",
    "functionName": "GetJourneyActionmapsEstimatesJobResults",
    "signature": "GetJourneyActionmapsEstimatesJobResults(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Actionmapestimateresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar jobId string // ID of the job.\n// Get estimates from completed job.\ndata, response, err := apiInstance.GetJourneyActionmapsEstimatesJobResults(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyActionmapsEstimatesJobResults: %v\\n\", err)\n}"
  },
  "getjourneyactiontarget": {
    "operationId": "getjourneyactiontarget",
    "functionName": "GetJourneyActiontarget",
    "signature": "GetJourneyActiontarget(actionTargetId)",
    "parameters": [
      {
        "name": "actionTargetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Actiontarget",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar actionTargetId string // ID of the action target.\n// Retrieve a single action target.\ndata, response, err := apiInstance.GetJourneyActiontarget(actionTargetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyActiontarget: %v\\n\", err)\n}"
  },
  "getjourneyactiontargets": {
    "operationId": "getjourneyactiontargets",
    "functionName": "GetJourneyActiontargets",
    "signature": "GetJourneyActiontargets(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Actiontargetlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Retrieve all action targets.\ndata, response, err := apiInstance.GetJourneyActiontargets(pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyActiontargets: %v\\n\", err)\n}"
  },
  "getjourneyactiontemplate": {
    "operationId": "getjourneyactiontemplate",
    "functionName": "GetJourneyActiontemplate",
    "signature": "GetJourneyActiontemplate(actionTemplateId)",
    "parameters": [
      {
        "name": "actionTemplateId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Actiontemplate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar actionTemplateId string // ID of the action template.\n// Retrieve a single action template.\ndata, response, err := apiInstance.GetJourneyActiontemplate(actionTemplateId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyActiontemplate: %v\\n\", err)\n}"
  },
  "getjourneyactiontemplates": {
    "operationId": "getjourneyactiontemplates",
    "functionName": "GetJourneyActiontemplates",
    "signature": "GetJourneyActiontemplates(pageNumber, pageSize, sortBy, mediaType, state, queryFields, queryValue)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "mediaType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queryFields",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "queryValue",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Actiontemplatelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Field(s) to sort by. Prefix with '-' for descending (e.g. sortBy=name,-createdDate).\nvar mediaType string // Media type\nvar state string // Action template state.\nvar queryFields []string // ActionTemplate field(s) to query on. Requires 'queryValue' to also be set.\nvar queryValue string // Value to query on. Requires 'queryFields' to also be set.\n// Retrieve all action templates.\ndata, response, err := apiInstance.GetJourneyActiontemplates(pageNumber, pageSize, sortBy, mediaType, state, queryFields, queryValue)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyActiontemplates: %v\\n\", err)\n}"
  },
  "getjourneydeploymentcustomerping": {
    "operationId": "getjourneydeploymentcustomerping",
    "functionName": "GetJourneyDeploymentCustomerPing",
    "signature": "GetJourneyDeploymentCustomerPing(deploymentId, customerCookieId, sessionId, dl, dt, appNamespace, sinceLastBeaconMilliseconds)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "customerCookieId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "dl",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dt",
        "type": "string",
        "required": "false"
      },
      {
        "name": "appNamespace",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sinceLastBeaconMilliseconds",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Deploymentping",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar deploymentId string // The ID of the deployment sending the ping.\nvar customerCookieId string // ID of the customer associated with the ping.\nvar sessionId string // UUID of the customer session. Use the same Session Id for all pings, AppEvents and ActionEvents in the session\nvar dl string // Document Location: 1) Web Page URL if overridden or URL fragment identifier (window.location.hash). OR  2) Application screen name that the ping request was sent from in the app. e.g. 'home' or 'help. Pings without this parameter will not return actions.\nvar dt string // Document Title.  A human readable name for the page or screen\nvar appNamespace string // Namespace of the application (e.g. com.genesys.bancodinero). Used for domain filtering in application sessions\nvar sinceLastBeaconMilliseconds int // How long (milliseconds) since the last app event or beacon was sent. The response may return a pollInternvalMilliseconds to reduce the frequency of pings.\n// Send a ping.\ndata, response, err := apiInstance.GetJourneyDeploymentCustomerPing(deploymentId, customerCookieId, sessionId, dl, dt, appNamespace, sinceLastBeaconMilliseconds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyDeploymentCustomerPing: %v\\n\", err)\n}"
  },
  "getjourneyoutcome": {
    "operationId": "getjourneyoutcome",
    "functionName": "GetJourneyOutcome",
    "signature": "GetJourneyOutcome(outcomeId)",
    "parameters": [
      {
        "name": "outcomeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outcome",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar outcomeId string // ID of the outcome.\n// Retrieve a single outcome.\ndata, response, err := apiInstance.GetJourneyOutcome(outcomeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyOutcome: %v\\n\", err)\n}"
  },
  "getjourneyoutcomes": {
    "operationId": "getjourneyoutcomes",
    "functionName": "GetJourneyOutcomes",
    "signature": "GetJourneyOutcomes(pageNumber, pageSize, sortBy, outcomeIds, queryFields, queryValue)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "outcomeIds",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "queryFields",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "queryValue",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Outcomelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate).\nvar outcomeIds []string // IDs of outcomes to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 20 outcomes are allowed per request.\nvar queryFields []string // Outcome field(s) to query on. Requires 'queryValue' to also be set.\nvar queryValue string // Value to query on. Requires 'queryFields' to also be set.\n// Retrieve all outcomes.\ndata, response, err := apiInstance.GetJourneyOutcomes(pageNumber, pageSize, sortBy, outcomeIds, queryFields, queryValue)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyOutcomes: %v\\n\", err)\n}"
  },
  "getjourneyoutcomesattributionsjob": {
    "operationId": "getjourneyoutcomesattributionsjob",
    "functionName": "GetJourneyOutcomesAttributionsJob",
    "signature": "GetJourneyOutcomesAttributionsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outcomeattributionjobstateresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar jobId string // ID of the job.\n// Get job status.\ndata, response, err := apiInstance.GetJourneyOutcomesAttributionsJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyOutcomesAttributionsJob: %v\\n\", err)\n}"
  },
  "getjourneyoutcomesattributionsjobresults": {
    "operationId": "getjourneyoutcomesattributionsjobresults",
    "functionName": "GetJourneyOutcomesAttributionsJobResults",
    "signature": "GetJourneyOutcomesAttributionsJobResults(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outcomeattributionresponselisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar jobId string // ID of the job.\n// Get outcome attribution entities from completed job.\ndata, response, err := apiInstance.GetJourneyOutcomesAttributionsJobResults(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyOutcomesAttributionsJobResults: %v\\n\", err)\n}"
  },
  "getjourneyoutcomespredictor": {
    "operationId": "getjourneyoutcomespredictor",
    "functionName": "GetJourneyOutcomesPredictor",
    "signature": "GetJourneyOutcomesPredictor(predictorId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outcomepredictor",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar predictorId string // ID of predictor\n// Retrieve a single outcome predictor.\ndata, response, err := apiInstance.GetJourneyOutcomesPredictor(predictorId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyOutcomesPredictor: %v\\n\", err)\n}"
  },
  "getjourneyoutcomespredictors": {
    "operationId": "getjourneyoutcomespredictors",
    "functionName": "GetJourneyOutcomesPredictors",
    "signature": "GetJourneyOutcomesPredictors()",
    "return": "Outcomepredictorlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\n// Retrieve all outcome predictors.\ndata, response, err := apiInstance.GetJourneyOutcomesPredictors()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneyOutcomesPredictors: %v\\n\", err)\n}"
  },
  "getjourneysegment": {
    "operationId": "getjourneysegment",
    "functionName": "GetJourneySegment",
    "signature": "GetJourneySegment(segmentId)",
    "parameters": [
      {
        "name": "segmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Journeysegment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar segmentId string // ID of the segment.\n// Retrieve a single segment.\ndata, response, err := apiInstance.GetJourneySegment(segmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneySegment: %v\\n\", err)\n}"
  },
  "getjourneysegments": {
    "operationId": "getjourneysegments",
    "functionName": "GetJourneySegments",
    "signature": "GetJourneySegments(sortBy, pageSize, pageNumber, isActive, segmentIds, queryFields, queryValue)",
    "parameters": [
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "isActive",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "segmentIds",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "queryFields",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "queryValue",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Segmentlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar sortBy string // Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate).\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar isActive bool // Determines whether or not to show only active segments.\nvar segmentIds []string // IDs of segments to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 100 segments are allowed per request.\nvar queryFields []string // Segment field(s) to query on. Requires 'queryValue' to also be set.\nvar queryValue string // Value to query on. Requires 'queryFields' to also be set.\n// Retrieve all segments.\ndata, response, err := apiInstance.GetJourneySegments(sortBy, pageSize, pageNumber, isActive, segmentIds, queryFields, queryValue)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneySegments: %v\\n\", err)\n}"
  },
  "getjourneysession": {
    "operationId": "getjourneysession",
    "functionName": "GetJourneySession",
    "signature": "GetJourneySession(sessionId)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Session",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar sessionId string // ID of the session.\n// Retrieve a single session.\ndata, response, err := apiInstance.GetJourneySession(sessionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneySession: %v\\n\", err)\n}"
  },
  "getjourneysessionevents": {
    "operationId": "getjourneysessionevents",
    "functionName": "GetJourneySessionEvents",
    "signature": "GetJourneySessionEvents(sessionId, pageSize, after)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Eventlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar sessionId string // System-generated UUID that represents the session the event is a part of.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\n// Retrieve all events for a given session.\ndata, response, err := apiInstance.GetJourneySessionEvents(sessionId, pageSize, after)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneySessionEvents: %v\\n\", err)\n}"
  },
  "getjourneysessionoutcomescores": {
    "operationId": "getjourneysessionoutcomescores",
    "functionName": "GetJourneySessionOutcomescores",
    "signature": "GetJourneySessionOutcomescores(sessionId)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outcomescoresresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar sessionId string // ID of the session.\n// Retrieve latest outcome score associated with a session for all outcomes.\ndata, response, err := apiInstance.GetJourneySessionOutcomescores(sessionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneySessionOutcomescores: %v\\n\", err)\n}"
  },
  "getjourneysessionsegments": {
    "operationId": "getjourneysessionsegments",
    "functionName": "GetJourneySessionSegments",
    "signature": "GetJourneySessionSegments(sessionId, pageSize, after, segmentScope, assignmentState)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "segmentScope",
        "type": "string",
        "required": "false"
      },
      {
        "name": "assignmentState",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Segmentassignmentlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar sessionId string // ID of the session to query for segment assignments.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar segmentScope string // Scope to filter on. If not specified, both session-scoped and customer-scoped assignments are returned.\nvar assignmentState string // Assignment state to filter on. If not specified, both assigned and unassigned assignments are returned.\n// Retrieve segment assignments by session ID.\ndata, response, err := apiInstance.GetJourneySessionSegments(sessionId, pageSize, after, segmentScope, assignmentState)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetJourneySessionSegments: %v\\n\", err)\n}"
  },
  "patchjourneyactionmap": {
    "operationId": "patchjourneyactionmap",
    "functionName": "PatchJourneyActionmap",
    "signature": "PatchJourneyActionmap(actionMapId, body)",
    "parameters": [
      {
        "name": "actionMapId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Patchactionmap",
        "required": "false"
      }
    ],
    "return": "Actionmap",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar actionMapId string // ID of the action map.\nvar body platformclientv2.Patchactionmap // \n// Update single action map.\ndata, response, err := apiInstance.PatchJourneyActionmap(actionMapId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchJourneyActionmap: %v\\n\", err)\n}"
  },
  "patchjourneyactiontarget": {
    "operationId": "patchjourneyactiontarget",
    "functionName": "PatchJourneyActiontarget",
    "signature": "PatchJourneyActiontarget(actionTargetId, body)",
    "parameters": [
      {
        "name": "actionTargetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Patchactiontarget",
        "required": "false"
      }
    ],
    "return": "Actiontarget",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar actionTargetId string // ID of the action target.\nvar body platformclientv2.Patchactiontarget // \n// Update a single action target.\ndata, response, err := apiInstance.PatchJourneyActiontarget(actionTargetId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchJourneyActiontarget: %v\\n\", err)\n}"
  },
  "patchjourneyactiontemplate": {
    "operationId": "patchjourneyactiontemplate",
    "functionName": "PatchJourneyActiontemplate",
    "signature": "PatchJourneyActiontemplate(actionTemplateId, body)",
    "parameters": [
      {
        "name": "actionTemplateId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Patchactiontemplate",
        "required": "false"
      }
    ],
    "return": "Actiontemplate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar actionTemplateId string // ID of the action template.\nvar body platformclientv2.Patchactiontemplate // \n// Update a single action template.\ndata, response, err := apiInstance.PatchJourneyActiontemplate(actionTemplateId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchJourneyActiontemplate: %v\\n\", err)\n}"
  },
  "patchjourneyoutcome": {
    "operationId": "patchjourneyoutcome",
    "functionName": "PatchJourneyOutcome",
    "signature": "PatchJourneyOutcome(outcomeId, body)",
    "parameters": [
      {
        "name": "outcomeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Patchoutcome",
        "required": "false"
      }
    ],
    "return": "Outcome",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar outcomeId string // ID of the outcome.\nvar body platformclientv2.Patchoutcome // \n// Update an outcome.\ndata, response, err := apiInstance.PatchJourneyOutcome(outcomeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchJourneyOutcome: %v\\n\", err)\n}"
  },
  "patchjourneysegment": {
    "operationId": "patchjourneysegment",
    "functionName": "PatchJourneySegment",
    "signature": "PatchJourneySegment(segmentId, body)",
    "parameters": [
      {
        "name": "segmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Patchsegment",
        "required": "false"
      }
    ],
    "return": "Journeysegment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar segmentId string // ID of the segment.\nvar body platformclientv2.Patchsegment // \n// Update a segment.\ndata, response, err := apiInstance.PatchJourneySegment(segmentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchJourneySegment: %v\\n\", err)\n}"
  },
  "postjourneyactionmaps": {
    "operationId": "postjourneyactionmaps",
    "functionName": "PostJourneyActionmaps",
    "signature": "PostJourneyActionmaps(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Actionmap",
        "required": "false"
      }
    ],
    "return": "Actionmap",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar body platformclientv2.Actionmap // \n// Create an action map.\ndata, response, err := apiInstance.PostJourneyActionmaps(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostJourneyActionmaps: %v\\n\", err)\n}"
  },
  "postjourneyactionmapsestimatesjobs": {
    "operationId": "postjourneyactionmapsestimatesjobs",
    "functionName": "PostJourneyActionmapsEstimatesJobs",
    "signature": "PostJourneyActionmapsEstimatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Actionmapestimaterequest",
        "required": "true"
      }
    ],
    "return": "Estimatejobasyncresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar body platformclientv2.Actionmapestimaterequest // audience estimator request\n// Query for estimates\ndata, response, err := apiInstance.PostJourneyActionmapsEstimatesJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostJourneyActionmapsEstimatesJobs: %v\\n\", err)\n}"
  },
  "postjourneyactiontemplates": {
    "operationId": "postjourneyactiontemplates",
    "functionName": "PostJourneyActiontemplates",
    "signature": "PostJourneyActiontemplates(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Actiontemplate",
        "required": "false"
      }
    ],
    "return": "Actiontemplate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar body platformclientv2.Actiontemplate // \n// Create a single action template.\ndata, response, err := apiInstance.PostJourneyActiontemplates(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostJourneyActiontemplates: %v\\n\", err)\n}"
  },
  "postjourneydeploymentactionevent": {
    "operationId": "postjourneydeploymentactionevent",
    "functionName": "PostJourneyDeploymentActionevent",
    "signature": "PostJourneyDeploymentActionevent(deploymentId, body)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Actioneventrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar deploymentId string // The ID of the deployment sending the beacon.\nvar body platformclientv2.Actioneventrequest // \n// Sends an action event, which is used for changing the state of actions that have been offered to the user.\nresponse, err := apiInstance.PostJourneyDeploymentActionevent(deploymentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostJourneyDeploymentActionevent: %v\\n\", err)\n}"
  },
  "postjourneydeploymentappevents": {
    "operationId": "postjourneydeploymentappevents",
    "functionName": "PostJourneyDeploymentAppevents",
    "signature": "PostJourneyDeploymentAppevents(deploymentId, body)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Appeventrequest",
        "required": "false"
      }
    ],
    "return": "Appeventresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar deploymentId string // The ID of the deployment sending the app event.\nvar body platformclientv2.Appeventrequest // \n// Send a journey app event, used for tracking customer activity on an application.\ndata, response, err := apiInstance.PostJourneyDeploymentAppevents(deploymentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostJourneyDeploymentAppevents: %v\\n\", err)\n}"
  },
  "postjourneyoutcomes": {
    "operationId": "postjourneyoutcomes",
    "functionName": "PostJourneyOutcomes",
    "signature": "PostJourneyOutcomes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Outcome",
        "required": "false"
      }
    ],
    "return": "Outcome",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar body platformclientv2.Outcome // \n// Create an outcome.\ndata, response, err := apiInstance.PostJourneyOutcomes(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostJourneyOutcomes: %v\\n\", err)\n}"
  },
  "postjourneyoutcomesattributionsjobs": {
    "operationId": "postjourneyoutcomesattributionsjobs",
    "functionName": "PostJourneyOutcomesAttributionsJobs",
    "signature": "PostJourneyOutcomesAttributionsJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Outcomeattributionlisting",
        "required": "false"
      }
    ],
    "return": "Outcomeattributionasyncresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar body platformclientv2.Outcomeattributionlisting // outcome attribution request\n// Create Outcome Attributions\ndata, response, err := apiInstance.PostJourneyOutcomesAttributionsJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostJourneyOutcomesAttributionsJobs: %v\\n\", err)\n}"
  },
  "postjourneyoutcomespredictors": {
    "operationId": "postjourneyoutcomespredictors",
    "functionName": "PostJourneyOutcomesPredictors",
    "signature": "PostJourneyOutcomesPredictors(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Outcomepredictorrequest",
        "required": "false"
      }
    ],
    "return": "Outcomepredictor",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar body platformclientv2.Outcomepredictorrequest // \n// Create an outcome predictor.\ndata, response, err := apiInstance.PostJourneyOutcomesPredictors(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostJourneyOutcomesPredictors: %v\\n\", err)\n}"
  },
  "postjourneysegments": {
    "operationId": "postjourneysegments",
    "functionName": "PostJourneySegments",
    "signature": "PostJourneySegments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Journeysegment",
        "required": "false"
      }
    ],
    "return": "Journeysegment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewJourneyApiWithConfig(config)\n\nvar body platformclientv2.Journeysegment // \n// Create a segment.\ndata, response, err := apiInstance.PostJourneySegments(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostJourneySegments: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebase": {
    "operationId": "deleteknowledgeknowledgebase",
    "functionName": "DeleteKnowledgeKnowledgebase",
    "signature": "DeleteKnowledgeKnowledgebase(knowledgeBaseId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\n// Delete knowledge base\ndata, response, err := apiInstance.DeleteKnowledgeKnowledgebase(knowledgeBaseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebase: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebasecategory": {
    "operationId": "deleteknowledgeknowledgebasecategory",
    "functionName": "DeleteKnowledgeKnowledgebaseCategory",
    "signature": "DeleteKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Categoryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar categoryId string // Category ID\n// Delete category\ndata, response, err := apiInstance.DeleteKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebaseCategory: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebasedocument": {
    "operationId": "deleteknowledgeknowledgebasedocument",
    "functionName": "DeleteKnowledgeKnowledgebaseDocument",
    "signature": "DeleteKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID.\nvar documentId string // Document ID.\n// Delete document.\nresponse, err := apiInstance.DeleteKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebaseDocument: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebasedocumentvariation": {
    "operationId": "deleteknowledgeknowledgebasedocumentvariation",
    "functionName": "DeleteKnowledgeKnowledgebaseDocumentVariation",
    "signature": "DeleteKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId)",
    "parameters": [
      {
        "name": "documentVariationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar documentVariationId string // Globally unique identifier for a document variation.\nvar documentId string // Globally unique identifier for a document.\nvar knowledgeBaseId string // Globally unique identifier for a knowledge base.\n// Delete a variation for a document.\nresponse, err := apiInstance.DeleteKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebaseDocumentVariation: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebaseexportjob": {
    "operationId": "deleteknowledgeknowledgebaseexportjob",
    "functionName": "DeleteKnowledgeKnowledgebaseExportJob",
    "signature": "DeleteKnowledgeKnowledgebaseExportJob(knowledgeBaseId, exportJobId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "exportJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar exportJobId string // Export job ID\n// Delete export job\nresponse, err := apiInstance.DeleteKnowledgeKnowledgebaseExportJob(knowledgeBaseId, exportJobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebaseExportJob: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebaseimportjob": {
    "operationId": "deleteknowledgeknowledgebaseimportjob",
    "functionName": "DeleteKnowledgeKnowledgebaseImportJob",
    "signature": "DeleteKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar importJobId string // Import job ID\n// Delete import job\nresponse, err := apiInstance.DeleteKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebaseImportJob: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebaselabel": {
    "operationId": "deleteknowledgeknowledgebaselabel",
    "functionName": "DeleteKnowledgeKnowledgebaseLabel",
    "signature": "DeleteKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "labelId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Labelresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar labelId string // Label ID\n// Delete label\ndata, response, err := apiInstance.DeleteKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebaseLabel: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebaselanguagecategory": {
    "operationId": "deleteknowledgeknowledgebaselanguagecategory",
    "functionName": "DeleteKnowledgeKnowledgebaseLanguageCategory",
    "signature": "DeleteKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgecategory",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar categoryId string // Category ID\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\n// Delete category\ndata, response, err := apiInstance.DeleteKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebaseLanguageCategory: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebaselanguagedocument": {
    "operationId": "deleteknowledgeknowledgebaselanguagedocument",
    "functionName": "DeleteKnowledgeKnowledgebaseLanguageDocument",
    "signature": "DeleteKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgedocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar documentId string // Document ID\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\n// Delete document\ndata, response, err := apiInstance.DeleteKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebaseLanguageDocument: %v\\n\", err)\n}"
  },
  "deleteknowledgeknowledgebaselanguagedocumentsimport": {
    "operationId": "deleteknowledgeknowledgebaselanguagedocumentsimport",
    "functionName": "DeleteKnowledgeKnowledgebaseLanguageDocumentsImport",
    "signature": "DeleteKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar importId string // Import ID\n// Delete import operation\nresponse, err := apiInstance.DeleteKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteKnowledgeKnowledgebaseLanguageDocumentsImport: %v\\n\", err)\n}"
  },
  "getknowledgeguestsessioncategories": {
    "operationId": "getknowledgeguestsessioncategories",
    "functionName": "GetKnowledgeGuestSessionCategories",
    "signature": "GetKnowledgeGuestSessionCategories(sessionId, before, after, pageSize, parentId, isRoot, name, sortBy, expand, includeDocumentCount)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "parentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "isRoot",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeDocumentCount",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Guestcategoryresponselisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar sessionId string // Knowledge guest session ID.\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar parentId string // If specified, retrieves the children categories by parent category ID.\nvar isRoot bool // If specified, retrieves only the root categories.\nvar name string // Filter to return the categories that starts with the given category name.\nvar sortBy string // Name: sort by category names alphabetically; Hierarchy: sort by the full path of hierarchical category names alphabetically\nvar expand string // The specified entity attribute will be filled. Supported value:\\\"Ancestors\\\": every ancestors will be filled via the parent attribute recursively,but only the id, name, parentId will be present for the ancestors.\nvar includeDocumentCount bool // If specified, retrieves the number of documents related to category.\n// Get categories\ndata, response, err := apiInstance.GetKnowledgeGuestSessionCategories(sessionId, before, after, pageSize, parentId, isRoot, name, sortBy, expand, includeDocumentCount)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeGuestSessionCategories: %v\\n\", err)\n}"
  },
  "getknowledgeguestsessiondocument": {
    "operationId": "getknowledgeguestsessiondocument",
    "functionName": "GetKnowledgeGuestSessionDocument",
    "signature": "GetKnowledgeGuestSessionDocument(sessionId, documentId)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgeguestdocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar sessionId string // Knowledge guest session ID.\nvar documentId string // Document ID\n// Get a knowledge document by ID.\ndata, response, err := apiInstance.GetKnowledgeGuestSessionDocument(sessionId, documentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeGuestSessionDocument: %v\\n\", err)\n}"
  },
  "getknowledgeguestsessiondocuments": {
    "operationId": "getknowledgeguestsessiondocuments",
    "functionName": "GetKnowledgeGuestSessionDocuments",
    "signature": "GetKnowledgeGuestSessionDocuments(sessionId, categoryId, pageSize)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "categoryId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Knowledgeguestdocumentresponselisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar sessionId string // Knowledge guest session ID.\nvar categoryId []string // If specified, retrieves documents associated with category ids, comma separated values expected.\nvar pageSize int // Number of entities to return. Maximum of 200.\n// Get documents.\ndata, response, err := apiInstance.GetKnowledgeGuestSessionDocuments(sessionId, categoryId, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeGuestSessionDocuments: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebase": {
    "operationId": "getknowledgeknowledgebase",
    "functionName": "GetKnowledgeKnowledgebase",
    "signature": "GetKnowledgeKnowledgebase(knowledgeBaseId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\n// Get knowledge base\ndata, response, err := apiInstance.GetKnowledgeKnowledgebase(knowledgeBaseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebase: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasecategories": {
    "operationId": "getknowledgeknowledgebasecategories",
    "functionName": "GetKnowledgeKnowledgebaseCategories",
    "signature": "GetKnowledgeKnowledgebaseCategories(knowledgeBaseId, before, after, pageSize, parentId, isRoot, name, sortBy, expand, includeDocumentCount)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "parentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "isRoot",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeDocumentCount",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Categoryresponselisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar parentId string // If specified, retrieves the children categories by parent category ID.\nvar isRoot bool // If specified, retrieves only the root categories.\nvar name string // Filter to return the categories that starts with the given category name.\nvar sortBy string // Name: sort by category names alphabetically; Hierarchy: sort by the full path of hierarchical category names alphabetically\nvar expand string // The specified entity attribute will be filled. Supported value:\\\"Ancestors\\\": every ancestors will be filled via the parent attribute recursively,but only the id, name, parentId will be present for the ancestors.\nvar includeDocumentCount bool // If specified, retrieves the number of documents related to category.\n// Get categories\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseCategories(knowledgeBaseId, before, after, pageSize, parentId, isRoot, name, sortBy, expand, includeDocumentCount)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseCategories: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasecategory": {
    "operationId": "getknowledgeknowledgebasecategory",
    "functionName": "GetKnowledgeKnowledgebaseCategory",
    "signature": "GetKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Categoryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar categoryId string // Category ID\n// Get category\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseCategory: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocument": {
    "operationId": "getknowledgeknowledgebasedocument",
    "functionName": "GetKnowledgeKnowledgebaseDocument",
    "signature": "GetKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId, expand, state)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID.\nvar documentId string // Document ID.\nvar expand []string // The specified entity attributes will be filled. Comma separated values expected. Max No. of variations that can be returned on expand is 20.\nvar state string // \\\"when state is \\\"Draft\\\", draft version of the document is returned,otherwise by default published version is returned in the response.\n// Get document.\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId, expand, state)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocument: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocumentfeedback": {
    "operationId": "getknowledgeknowledgebasedocumentfeedback",
    "functionName": "GetKnowledgeKnowledgebaseDocumentFeedback",
    "signature": "GetKnowledgeKnowledgebaseDocumentFeedback(knowledgeBaseId, documentId, before, after, pageSize, onlyCommented, documentVersionId, documentVariationId, appType, queryType, userId, queueId, state)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "onlyCommented",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "documentVersionId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "documentVariationId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "appType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queryType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queueId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentfeedbackresponselisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID.\nvar documentId string // Document ID.\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar onlyCommented bool // If true, only feedback records that have comment are returned. If false, feedback records with and without comment are returned. Default: false.\nvar documentVersionId string // Document version ID to filter by. Supported only if onlyCommented=true is set.\nvar documentVariationId string // Document variation ID to filter by. Supported only if onlyCommented=true is set.\nvar appType string // Application type to filter by. Supported only if onlyCommented=true is set.\nvar queryType string // Query type to filter by. Supported only if onlyCommented=true is set.\nvar userId string // The ID of the user, who created the feedback, to filter by. Supported only if onlyCommented=true is set.\nvar queueId string // Queue ID to filter by. Supported only if onlyCommented=true is set.\nvar state string // State to filter by. Supported only if onlyCommented=true is set. Default: Final\n// Get a list of feedback records given on a document\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocumentFeedback(knowledgeBaseId, documentId, before, after, pageSize, onlyCommented, documentVersionId, documentVariationId, appType, queryType, userId, queueId, state)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocumentFeedback: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocumentfeedbackfeedbackid": {
    "operationId": "getknowledgeknowledgebasedocumentfeedbackfeedbackid",
    "functionName": "GetKnowledgeKnowledgebaseDocumentFeedbackFeedbackId",
    "signature": "GetKnowledgeKnowledgebaseDocumentFeedbackFeedbackId(knowledgeBaseId, documentId, feedbackId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "feedbackId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgedocumentfeedbackresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID.\nvar documentId string // Document ID.\nvar feedbackId string // Feedback ID.\n// Get a single feedback record given on a document\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocumentFeedbackFeedbackId(knowledgeBaseId, documentId, feedbackId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocumentFeedbackFeedbackId: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocumentvariation": {
    "operationId": "getknowledgeknowledgebasedocumentvariation",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVariation",
    "signature": "GetKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId, documentState)",
    "parameters": [
      {
        "name": "documentVariationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentState",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Documentvariation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar documentVariationId string // Globally unique identifier for a document variation.\nvar documentId string // Globally unique identifier for a document.\nvar knowledgeBaseId string // Globally unique identifier for a knowledge base.\nvar documentState string // The state of the document.\n// Get a variation for a document.\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId, documentState)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocumentVariation: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocumentvariations": {
    "operationId": "getknowledgeknowledgebasedocumentvariations",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVariations",
    "signature": "GetKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId, documentId, before, after, pageSize, documentState)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "documentState",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Documentvariationlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Globally unique identifier for the knowledge base.\nvar documentId string // Globally unique identifier for the document.\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar documentState string // The state of the document.\n// Get variations for a document.\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId, documentId, before, after, pageSize, documentState)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocumentVariations: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocumentversion": {
    "operationId": "getknowledgeknowledgebasedocumentversion",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVersion",
    "signature": "GetKnowledgeKnowledgebaseDocumentVersion(knowledgeBaseId, documentId, versionId, expand)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Globally unique identifier for the knowledge base.\nvar documentId string // Globally unique identifier for the document.\nvar versionId string // Globally unique identifier for the document version.\nvar expand []string // The specified entity attributes will be filled. Comma separated values expected.\n// Get document version.\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocumentVersion(knowledgeBaseId, documentId, versionId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocumentVersion: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocumentversionvariation": {
    "operationId": "getknowledgeknowledgebasedocumentversionvariation",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVersionVariation",
    "signature": "GetKnowledgeKnowledgebaseDocumentVersionVariation(knowledgeBaseId, documentId, versionId, variationId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "variationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgedocumentversionvariation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Globally unique identifier for the knowledge base.\nvar documentId string // Globally unique identifier for the document.\nvar versionId string // Globally unique identifier for the document version.\nvar variationId string // Globally unique identifier for the document version variation.\n// Get variation for the given document version.\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocumentVersionVariation(knowledgeBaseId, documentId, versionId, variationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocumentVersionVariation: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocumentversionvariations": {
    "operationId": "getknowledgeknowledgebasedocumentversionvariations",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVersionVariations",
    "signature": "GetKnowledgeKnowledgebaseDocumentVersionVariations(knowledgeBaseId, documentId, versionId, before, after, pageSize)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentversionvariationlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Globally unique identifier for the knowledge base.\nvar documentId string // Globally unique identifier for the document.\nvar versionId string // Globally unique identifier for the document version.\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\n// Get variations for the given document version.\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocumentVersionVariations(knowledgeBaseId, documentId, versionId, before, after, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocumentVersionVariations: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocumentversions": {
    "operationId": "getknowledgeknowledgebasedocumentversions",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVersions",
    "signature": "GetKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId, documentId, before, after, pageSize, expand)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentversionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Globally unique identifier for the knowledge base.\nvar documentId string // Globally unique identifier for the document.\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar expand []string // The specified entity attributes will be filled. Comma separated values expected.\n// Get document versions.\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId, documentId, before, after, pageSize, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocumentVersions: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebasedocuments": {
    "operationId": "getknowledgeknowledgebasedocuments",
    "functionName": "GetKnowledgeKnowledgebaseDocuments",
    "signature": "GetKnowledgeKnowledgebaseDocuments(knowledgeBaseId, before, after, pageSize, interval, documentId, categoryId, includeSubcategories, includeDrafts, labelIds, expand, externalIds)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "documentId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "categoryId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "includeSubcategories",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeDrafts",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "labelIds",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "externalIds",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentresponselisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar interval string // Retrieves the documents modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ\nvar documentId []string // Retrieves the specified documents, comma separated values expected.\nvar categoryId []string // If specified, retrieves documents associated with category ids, comma separated values expected.\nvar includeSubcategories bool // Works along with 'categoryId' query parameter. If specified, retrieves documents associated with category ids and its children categories.\nvar includeDrafts bool // If includeDrafts is true, Documents in the draft state are also returned in the response.\nvar labelIds []string // If specified, retrieves documents associated with label ids, comma separated values expected.\nvar expand []string // The specified entity attributes will be filled. Comma separated values expected.\nvar externalIds []string // If specified, retrieves documents associated with external ids, comma separated values expected.\n// Get documents.\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseDocuments(knowledgeBaseId, before, after, pageSize, interval, documentId, categoryId, includeSubcategories, includeDrafts, labelIds, expand, externalIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseDocuments: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaseexportjob": {
    "operationId": "getknowledgeknowledgebaseexportjob",
    "functionName": "GetKnowledgeKnowledgebaseExportJob",
    "signature": "GetKnowledgeKnowledgebaseExportJob(knowledgeBaseId, exportJobId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "exportJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgeexportjobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar exportJobId string // Export job ID\n// Get export job report\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseExportJob(knowledgeBaseId, exportJobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseExportJob: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaseimportjob": {
    "operationId": "getknowledgeknowledgebaseimportjob",
    "functionName": "GetKnowledgeKnowledgebaseImportJob",
    "signature": "GetKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId, expand)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importJobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Knowledgeimportjobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar importJobId string // Import job ID\nvar expand []string // If expand contains 'urls' downloadURL and failedEntitiesURL will be filled.\n// Get import job report\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseImportJob: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselabel": {
    "operationId": "getknowledgeknowledgebaselabel",
    "functionName": "GetKnowledgeKnowledgebaseLabel",
    "signature": "GetKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "labelId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Labelresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar labelId string // Label ID\n// Get label\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLabel: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselabels": {
    "operationId": "getknowledgeknowledgebaselabels",
    "functionName": "GetKnowledgeKnowledgebaseLabels",
    "signature": "GetKnowledgeKnowledgebaseLabels(knowledgeBaseId, before, after, pageSize, name, includeDocumentCount)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeDocumentCount",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Labellisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar name string // Filter to return the labels that contains the given phrase in the name.\nvar includeDocumentCount bool // If specified, retrieves the number of documents related to label.\n// Get labels\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLabels(knowledgeBaseId, before, after, pageSize, name, includeDocumentCount)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLabels: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselanguagecategories": {
    "operationId": "getknowledgeknowledgebaselanguagecategories",
    "functionName": "GetKnowledgeKnowledgebaseLanguageCategories",
    "signature": "GetKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId, languageCode, before, after, limit, pageSize, name)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Categorylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar limit string // Number of entities to return. Maximum of 200. Deprecated in favour of pageSize\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar name string // Filter to return the categories that starts with the given category name.\n// Get categories\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId, languageCode, before, after, limit, pageSize, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLanguageCategories: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselanguagecategory": {
    "operationId": "getknowledgeknowledgebaselanguagecategory",
    "functionName": "GetKnowledgeKnowledgebaseLanguageCategory",
    "signature": "GetKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgeextendedcategory",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar categoryId string // Category ID\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\n// Get category\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLanguageCategory: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselanguagedocument": {
    "operationId": "getknowledgeknowledgebaselanguagedocument",
    "functionName": "GetKnowledgeKnowledgebaseLanguageDocument",
    "signature": "GetKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgedocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar documentId string // Document ID\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\n// Get document\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLanguageDocument: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselanguagedocumentupload": {
    "operationId": "getknowledgeknowledgebaselanguagedocumentupload",
    "functionName": "GetKnowledgeKnowledgebaseLanguageDocumentUpload",
    "signature": "GetKnowledgeKnowledgebaseLanguageDocumentUpload(documentId, knowledgeBaseId, languageCode, uploadId)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "uploadId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgedocumentcontentupload",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar documentId string // Document ID\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar uploadId string // UploadId\n// Get document content upload status\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLanguageDocumentUpload(documentId, knowledgeBaseId, languageCode, uploadId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLanguageDocumentUpload: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselanguagedocuments": {
    "operationId": "getknowledgeknowledgebaselanguagedocuments",
    "functionName": "GetKnowledgeKnowledgebaseLanguageDocuments",
    "signature": "GetKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, before, after, limit, pageSize, categories, title, sortBy, sortOrder, documentIds)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "categories",
        "type": "string",
        "required": "false"
      },
      {
        "name": "title",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "documentIds",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Documentlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar limit string // Number of entities to return. Maximum of 200. Deprecated in favour of pageSize\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar categories string // Filter by categories ids, comma separated values expected.\nvar title string // Filter by document title.\nvar sortBy string // Sort by.\nvar sortOrder string // Sort Order.\nvar documentIds []string // Comma-separated list of document identifiers to fetch by.\n// Get documents\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, before, after, limit, pageSize, categories, title, sortBy, sortOrder, documentIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLanguageDocuments: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselanguagedocumentsimport": {
    "operationId": "getknowledgeknowledgebaselanguagedocumentsimport",
    "functionName": "GetKnowledgeKnowledgebaseLanguageDocumentsImport",
    "signature": "GetKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgeimport",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar importId string // Import ID\n// Get import operation report\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLanguageDocumentsImport: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselanguagetraining": {
    "operationId": "getknowledgeknowledgebaselanguagetraining",
    "functionName": "GetKnowledgeKnowledgebaseLanguageTraining",
    "signature": "GetKnowledgeKnowledgebaseLanguageTraining(knowledgeBaseId, languageCode, trainingId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trainingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgetraining",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar trainingId string // Training ID\n// Get training detail\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLanguageTraining(knowledgeBaseId, languageCode, trainingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLanguageTraining: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaselanguagetrainings": {
    "operationId": "getknowledgeknowledgebaselanguagetrainings",
    "functionName": "GetKnowledgeKnowledgebaseLanguageTrainings",
    "signature": "GetKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId, languageCode, before, after, limit, pageSize, knowledgeDocumentsState)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "knowledgeDocumentsState",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Traininglisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar limit string // Number of entities to return. Maximum of 200. Deprecated in favour of pageSize\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar knowledgeDocumentsState string // Return the training with the specified state of the trained documents.\n// Get all trainings information for a knowledgebase\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId, languageCode, before, after, limit, pageSize, knowledgeDocumentsState)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseLanguageTrainings: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaseunansweredgroup": {
    "operationId": "getknowledgeknowledgebaseunansweredgroup",
    "functionName": "GetKnowledgeKnowledgebaseUnansweredGroup",
    "signature": "GetKnowledgeKnowledgebaseUnansweredGroup(knowledgeBaseId, groupId, app, dateStart, dateEnd)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "app",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dateStart",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "dateEnd",
        "type": "time.Time",
        "required": "false"
      }
    ],
    "return": "Unansweredgroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar groupId string // The ID of the group to be retrieved.\nvar app string // The app value to be used for filtering phrases.\nvar dateStart time.Time // The start date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar dateEnd time.Time // The end date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get knowledge base unanswered group for a particular groupId\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseUnansweredGroup(knowledgeBaseId, groupId, app, dateStart, dateEnd)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseUnansweredGroup: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaseunansweredgroupphrasegroup": {
    "operationId": "getknowledgeknowledgebaseunansweredgroupphrasegroup",
    "functionName": "GetKnowledgeKnowledgebaseUnansweredGroupPhrasegroup",
    "signature": "GetKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId, groupId, phraseGroupId, app, dateStart, dateEnd)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "phraseGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "app",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dateStart",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "dateEnd",
        "type": "time.Time",
        "required": "false"
      }
    ],
    "return": "Unansweredphrasegroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar groupId string // The ID of the group to be retrieved.\nvar phraseGroupId string // The ID of the phraseGroup to be retrieved.\nvar app string // The app value to be used for filtering phrases.\nvar dateStart time.Time // The start date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar dateEnd time.Time // The end date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get knowledge base unanswered phrase group for a particular phraseGroupId\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId, groupId, phraseGroupId, app, dateStart, dateEnd)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseUnansweredGroupPhrasegroup: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebaseunansweredgroups": {
    "operationId": "getknowledgeknowledgebaseunansweredgroups",
    "functionName": "GetKnowledgeKnowledgebaseUnansweredGroups",
    "signature": "GetKnowledgeKnowledgebaseUnansweredGroups(knowledgeBaseId, app, dateStart, dateEnd)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "app",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dateStart",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "dateEnd",
        "type": "time.Time",
        "required": "false"
      }
    ],
    "return": "Unansweredgroups",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar app string // The app value to be used for filtering phrases.\nvar dateStart time.Time // The start date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar dateEnd time.Time // The end date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get knowledge base unanswered groups\ndata, response, err := apiInstance.GetKnowledgeKnowledgebaseUnansweredGroups(knowledgeBaseId, app, dateStart, dateEnd)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebaseUnansweredGroups: %v\\n\", err)\n}"
  },
  "getknowledgeknowledgebases": {
    "operationId": "getknowledgeknowledgebases",
    "functionName": "GetKnowledgeKnowledgebases",
    "signature": "GetKnowledgeKnowledgebases(before, after, limit, pageSize, name, coreLanguage, published, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "coreLanguage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "published",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Knowledgebaselisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar limit string // Number of entities to return. Maximum of 100. Deprecated in favour of pageSize\nvar pageSize string // Number of entities to return. Maximum of 100.\nvar name string // Filter by Name.\nvar coreLanguage string // Filter by core language.\nvar published bool // Filter by published status.\nvar sortBy string // Sort by.\nvar sortOrder string // Sort Order.\n// Get knowledge bases\ndata, response, err := apiInstance.GetKnowledgeKnowledgebases(before, after, limit, pageSize, name, coreLanguage, published, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetKnowledgeKnowledgebases: %v\\n\", err)\n}"
  },
  "patchknowledgeguestsessiondocumentssearchsearchid": {
    "operationId": "patchknowledgeguestsessiondocumentssearchsearchid",
    "functionName": "PatchKnowledgeGuestSessionDocumentsSearchSearchId",
    "signature": "PatchKnowledgeGuestSessionDocumentsSearchSearchId(sessionId, searchId, body)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "searchId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Searchupdaterequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar sessionId string // Knowledge guest session ID.\nvar searchId string // Search Result ID\nvar body platformclientv2.Searchupdaterequest // \n// Update search result.\nresponse, err := apiInstance.PatchKnowledgeGuestSessionDocumentsSearchSearchId(sessionId, searchId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeGuestSessionDocumentsSearchSearchId: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebase": {
    "operationId": "patchknowledgeknowledgebase",
    "functionName": "PatchKnowledgeKnowledgebase",
    "signature": "PatchKnowledgeKnowledgebase(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgebaseupdaterequest",
        "required": "true"
      }
    ],
    "return": "Knowledgebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Knowledgebaseupdaterequest // \n// Update knowledge base\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebase(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebase: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebasecategory": {
    "operationId": "patchknowledgeknowledgebasecategory",
    "functionName": "PatchKnowledgeKnowledgebaseCategory",
    "signature": "PatchKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Categoryupdaterequest",
        "required": "true"
      }
    ],
    "return": "Categoryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar categoryId string // Category ID\nvar body platformclientv2.Categoryupdaterequest // \n// Update category\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseCategory: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebasedocument": {
    "operationId": "patchknowledgeknowledgebasedocument",
    "functionName": "PatchKnowledgeKnowledgebaseDocument",
    "signature": "PatchKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentreq",
        "required": "true"
      }
    ],
    "return": "Knowledgedocumentresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID.\nvar documentId string // Document ID.\nvar body platformclientv2.Knowledgedocumentreq // \n// Update document.\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseDocument: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebasedocumentvariation": {
    "operationId": "patchknowledgeknowledgebasedocumentvariation",
    "functionName": "PatchKnowledgeKnowledgebaseDocumentVariation",
    "signature": "PatchKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "documentVariationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Documentvariation",
        "required": "true"
      }
    ],
    "return": "Documentvariation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar documentVariationId string // Globally unique identifier for a document variation.\nvar documentId string // Globally unique identifier for a document.\nvar knowledgeBaseId string // Globally unique identifier for a knowledge base.\nvar body platformclientv2.Documentvariation // \n// Update a variation for a document.\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseDocumentVariation: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebasedocumentssearchsearchid": {
    "operationId": "patchknowledgeknowledgebasedocumentssearchsearchid",
    "functionName": "PatchKnowledgeKnowledgebaseDocumentsSearchSearchId",
    "signature": "PatchKnowledgeKnowledgebaseDocumentsSearchSearchId(knowledgeBaseId, searchId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "searchId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Searchupdaterequest",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // The ID of knowledge base containing the documents to query.\nvar searchId string // Search Result ID\nvar body platformclientv2.Searchupdaterequest // \n// Update search result.\nresponse, err := apiInstance.PatchKnowledgeKnowledgebaseDocumentsSearchSearchId(knowledgeBaseId, searchId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseDocumentsSearchSearchId: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebaseimportjob": {
    "operationId": "patchknowledgeknowledgebaseimportjob",
    "functionName": "PatchKnowledgeKnowledgebaseImportJob",
    "signature": "PatchKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importJobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Importstatusrequest",
        "required": "true"
      }
    ],
    "return": "Knowledgeimportjobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar importJobId string // Import job ID\nvar body platformclientv2.Importstatusrequest // \n// Start import job\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseImportJob: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebaselabel": {
    "operationId": "patchknowledgeknowledgebaselabel",
    "functionName": "PatchKnowledgeKnowledgebaseLabel",
    "signature": "PatchKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "labelId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Labelupdaterequest",
        "required": "true"
      }
    ],
    "return": "Labelresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar labelId string // Label ID\nvar body platformclientv2.Labelupdaterequest // \n// Update label\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseLabel: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebaselanguagecategory": {
    "operationId": "patchknowledgeknowledgebaselanguagecategory",
    "functionName": "PatchKnowledgeKnowledgebaseLanguageCategory",
    "signature": "PatchKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgecategoryrequest",
        "required": "true"
      }
    ],
    "return": "Knowledgeextendedcategory",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar categoryId string // Category ID\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar body platformclientv2.Knowledgecategoryrequest // \n// Update category\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseLanguageCategory: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebaselanguagedocument": {
    "operationId": "patchknowledgeknowledgebaselanguagedocument",
    "functionName": "PatchKnowledgeKnowledgebaseLanguageDocument",
    "signature": "PatchKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentrequest",
        "required": "true"
      }
    ],
    "return": "Knowledgedocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar documentId string // Document ID\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar body platformclientv2.Knowledgedocumentrequest // \n// Update document\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseLanguageDocument: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebaselanguagedocuments": {
    "operationId": "patchknowledgeknowledgebaselanguagedocuments",
    "functionName": "PatchKnowledgeKnowledgebaseLanguageDocuments",
    "signature": "PatchKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Knowledgedocumentbulkrequest",
        "required": "true"
      }
    ],
    "return": "Documentlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar body platformclientv2.[]Knowledgedocumentbulkrequest // \n// Update documents collection\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseLanguageDocuments: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebaselanguagedocumentsimport": {
    "operationId": "patchknowledgeknowledgebaselanguagedocumentsimport",
    "functionName": "PatchKnowledgeKnowledgebaseLanguageDocumentsImport",
    "signature": "PatchKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Importstatusrequest",
        "required": "true"
      }
    ],
    "return": "Knowledgeimport",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar importId string // Import ID\nvar body platformclientv2.Importstatusrequest // \n// Start import operation\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseLanguageDocumentsImport: %v\\n\", err)\n}"
  },
  "patchknowledgeknowledgebaseunansweredgroupphrasegroup": {
    "operationId": "patchknowledgeknowledgebaseunansweredgroupphrasegroup",
    "functionName": "PatchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup",
    "signature": "PatchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId, groupId, phraseGroupId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "phraseGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Unansweredphrasegrouppatchrequestbody",
        "required": "true"
      }
    ],
    "return": "Unansweredphrasegroupupdateresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar groupId string // The ID of the group to be updated.\nvar phraseGroupId string // The ID of the phraseGroup to be updated.\nvar body platformclientv2.Unansweredphrasegrouppatchrequestbody // Request body of the update unanswered group endpoint.\n// Update a Knowledge base unanswered phrase group\ndata, response, err := apiInstance.PatchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId, groupId, phraseGroupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup: %v\\n\", err)\n}"
  },
  "postknowledgedocumentuploads": {
    "operationId": "postknowledgedocumentuploads",
    "functionName": "PostKnowledgeDocumentuploads",
    "signature": "PostKnowledgeDocumentuploads(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Uploadurlrequest",
        "required": "true"
      }
    ],
    "return": "Uploadurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUploadsApiWithConfig(config)\n\nvar body platformclientv2.Uploadurlrequest // query\n// Creates a presigned URL for uploading a knowledge import file with a set of documents\ndata, response, err := apiInstance.PostKnowledgeDocumentuploads(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeDocumentuploads: %v\\n\", err)\n}"
  },
  "postknowledgeguestsessiondocumentfeedback": {
    "operationId": "postknowledgeguestsessiondocumentfeedback",
    "functionName": "PostKnowledgeGuestSessionDocumentFeedback",
    "signature": "PostKnowledgeGuestSessionDocumentFeedback(sessionId, documentId, body)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgeguestdocumentfeedback",
        "required": "false"
      }
    ],
    "return": "Knowledgeguestdocumentfeedback",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar sessionId string // Knowledge guest session ID.\nvar documentId string // Document ID.\nvar body platformclientv2.Knowledgeguestdocumentfeedback // \n// Give feedback on a document\ndata, response, err := apiInstance.PostKnowledgeGuestSessionDocumentFeedback(sessionId, documentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeGuestSessionDocumentFeedback: %v\\n\", err)\n}"
  },
  "postknowledgeguestsessiondocumentssearch": {
    "operationId": "postknowledgeguestsessiondocumentssearch",
    "functionName": "PostKnowledgeGuestSessionDocumentsSearch",
    "signature": "PostKnowledgeGuestSessionDocumentsSearch(sessionId, expand, body)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentguestsearchrequest",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentguestsearch",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar sessionId string // Knowledge guest session ID.\nvar expand []string // Fields, if any, to expand for each document in the search result matching the query.\nvar body platformclientv2.Knowledgedocumentguestsearchrequest // \n// Search the documents in a guest session.\ndata, response, err := apiInstance.PostKnowledgeGuestSessionDocumentsSearch(sessionId, expand, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeGuestSessionDocumentsSearch: %v\\n\", err)\n}"
  },
  "postknowledgeguestsessiondocumentssearchsuggestions": {
    "operationId": "postknowledgeguestsessiondocumentssearchsuggestions",
    "functionName": "PostKnowledgeGuestSessionDocumentsSearchSuggestions",
    "signature": "PostKnowledgeGuestSessionDocumentsSearchSuggestions(sessionId, body)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgeguestdocumentsuggestionrequest",
        "required": "false"
      }
    ],
    "return": "Knowledgeguestdocumentsuggestion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar sessionId string // Knowledge guest session ID.\nvar body platformclientv2.Knowledgeguestdocumentsuggestionrequest // \n// Query the knowledge documents to provide suggestions for auto completion.\ndata, response, err := apiInstance.PostKnowledgeGuestSessionDocumentsSearchSuggestions(sessionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeGuestSessionDocumentsSearchSuggestions: %v\\n\", err)\n}"
  },
  "postknowledgeguestsessions": {
    "operationId": "postknowledgeguestsessions",
    "functionName": "PostKnowledgeGuestSessions",
    "signature": "PostKnowledgeGuestSessions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Knowledgeguestsession",
        "required": "true"
      }
    ],
    "return": "Knowledgeguestsession",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar body platformclientv2.Knowledgeguestsession // \n// Create guest session\ndata, response, err := apiInstance.PostKnowledgeGuestSessions(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeGuestSessions: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasecategories": {
    "operationId": "postknowledgeknowledgebasecategories",
    "functionName": "PostKnowledgeKnowledgebaseCategories",
    "signature": "PostKnowledgeKnowledgebaseCategories(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Categorycreaterequest",
        "required": "true"
      }
    ],
    "return": "Categoryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Categorycreaterequest // \n// Create new category\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseCategories(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseCategories: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocumentfeedback": {
    "operationId": "postknowledgeknowledgebasedocumentfeedback",
    "functionName": "PostKnowledgeKnowledgebaseDocumentFeedback",
    "signature": "PostKnowledgeKnowledgebaseDocumentFeedback(knowledgeBaseId, documentId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentfeedback",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentfeedbackresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID.\nvar documentId string // Document ID.\nvar body platformclientv2.Knowledgedocumentfeedback // \n// Give feedback on a document\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseDocumentFeedback(knowledgeBaseId, documentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocumentFeedback: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocumentvariations": {
    "operationId": "postknowledgeknowledgebasedocumentvariations",
    "functionName": "PostKnowledgeKnowledgebaseDocumentVariations",
    "signature": "PostKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId, documentId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Documentvariation",
        "required": "true"
      }
    ],
    "return": "Documentvariation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Globally unique identifier for the knowledge base.\nvar documentId string // Globally unique identifier for the document.\nvar body platformclientv2.Documentvariation // \n// Create a variation for a document.\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId, documentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocumentVariations: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocumentversions": {
    "operationId": "postknowledgeknowledgebasedocumentversions",
    "functionName": "PostKnowledgeKnowledgebaseDocumentVersions",
    "signature": "PostKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId, documentId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentversion",
        "required": "true"
      }
    ],
    "return": "Knowledgedocumentversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Globally unique identifier for the knowledge base.\nvar documentId string // Globally unique identifier for the document.\nvar body platformclientv2.Knowledgedocumentversion // \n// Creates or restores a document version.\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId, documentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocumentVersions: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocumentviews": {
    "operationId": "postknowledgeknowledgebasedocumentviews",
    "functionName": "PostKnowledgeKnowledgebaseDocumentViews",
    "signature": "PostKnowledgeKnowledgebaseDocumentViews(knowledgeBaseId, documentId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentview",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID.\nvar documentId string // Document ID.\nvar body platformclientv2.Knowledgedocumentview // \n// Create view for a document.\nresponse, err := apiInstance.PostKnowledgeKnowledgebaseDocumentViews(knowledgeBaseId, documentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocumentViews: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocuments": {
    "operationId": "postknowledgeknowledgebasedocuments",
    "functionName": "PostKnowledgeKnowledgebaseDocuments",
    "signature": "PostKnowledgeKnowledgebaseDocuments(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentreq",
        "required": "true"
      }
    ],
    "return": "Knowledgedocumentresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Knowledgedocumentreq // \n// Create document.\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseDocuments(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocuments: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocumentsbulkremove": {
    "operationId": "postknowledgeknowledgebasedocumentsbulkremove",
    "functionName": "PostKnowledgeKnowledgebaseDocumentsBulkRemove",
    "signature": "PostKnowledgeKnowledgebaseDocumentsBulkRemove(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentbulkremoverequest",
        "required": "true"
      }
    ],
    "return": "Bulkresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Knowledgedocumentbulkremoverequest // \n// Bulk remove documents.\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseDocumentsBulkRemove(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocumentsBulkRemove: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocumentsbulkupdate": {
    "operationId": "postknowledgeknowledgebasedocumentsbulkupdate",
    "functionName": "PostKnowledgeKnowledgebaseDocumentsBulkUpdate",
    "signature": "PostKnowledgeKnowledgebaseDocumentsBulkUpdate(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentbulkupdaterequest",
        "required": "true"
      }
    ],
    "return": "Bulkresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Knowledgedocumentbulkupdaterequest // \n// Bulk update documents.\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseDocumentsBulkUpdate(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocumentsBulkUpdate: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocumentssearch": {
    "operationId": "postknowledgeknowledgebasedocumentssearch",
    "functionName": "PostKnowledgeKnowledgebaseDocumentsSearch",
    "signature": "PostKnowledgeKnowledgebaseDocumentsSearch(knowledgeBaseId, expand, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentsearchrequest",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentsearch",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // The ID of knowledge base containing the documents to query.\nvar expand []string // Fields, if any, to expand for each document in the search result matching the query.\nvar body platformclientv2.Knowledgedocumentsearchrequest // \n// Search the documents in a knowledge base.\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseDocumentsSearch(knowledgeBaseId, expand, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocumentsSearch: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocumentssearchsuggestions": {
    "operationId": "postknowledgeknowledgebasedocumentssearchsuggestions",
    "functionName": "PostKnowledgeKnowledgebaseDocumentsSearchSuggestions",
    "signature": "PostKnowledgeKnowledgebaseDocumentsSearchSuggestions(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentsuggestionrequest",
        "required": "false"
      }
    ],
    "return": "Knowledgedocumentsuggestion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // The ID of knowledge base containing the documents to query.\nvar body platformclientv2.Knowledgedocumentsuggestionrequest // \n// Query the knowledge documents to provide suggestions for auto completion.\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseDocumentsSearchSuggestions(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocumentsSearchSuggestions: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasedocumentsversionsbulkadd": {
    "operationId": "postknowledgeknowledgebasedocumentsversionsbulkadd",
    "functionName": "PostKnowledgeKnowledgebaseDocumentsVersionsBulkAdd",
    "signature": "PostKnowledgeKnowledgebaseDocumentsVersionsBulkAdd(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentbulkversionaddrequest",
        "required": "true"
      }
    ],
    "return": "Bulkresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Knowledgedocumentbulkversionaddrequest // \n// Bulk add document versions.\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseDocumentsVersionsBulkAdd(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseDocumentsVersionsBulkAdd: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebaseexportjobs": {
    "operationId": "postknowledgeknowledgebaseexportjobs",
    "functionName": "PostKnowledgeKnowledgebaseExportJobs",
    "signature": "PostKnowledgeKnowledgebaseExportJobs(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgeexportjobrequest",
        "required": "true"
      }
    ],
    "return": "Knowledgeexportjobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Knowledgeexportjobrequest // \n// Create export job\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseExportJobs(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseExportJobs: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebaseimportjobs": {
    "operationId": "postknowledgeknowledgebaseimportjobs",
    "functionName": "PostKnowledgeKnowledgebaseImportJobs",
    "signature": "PostKnowledgeKnowledgebaseImportJobs(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgeimportjobrequest",
        "required": "true"
      }
    ],
    "return": "Knowledgeimportjobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Knowledgeimportjobrequest // \n// Create import job\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseImportJobs(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseImportJobs: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebaselabels": {
    "operationId": "postknowledgeknowledgebaselabels",
    "functionName": "PostKnowledgeKnowledgebaseLabels",
    "signature": "PostKnowledgeKnowledgebaseLabels(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Labelcreaterequest",
        "required": "true"
      }
    ],
    "return": "Labelresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Labelcreaterequest // \n// Create new label\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseLabels(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseLabels: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebaselanguagecategories": {
    "operationId": "postknowledgeknowledgebaselanguagecategories",
    "functionName": "PostKnowledgeKnowledgebaseLanguageCategories",
    "signature": "PostKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgecategoryrequest",
        "required": "true"
      }
    ],
    "return": "Knowledgeextendedcategory",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar body platformclientv2.Knowledgecategoryrequest // \n// Create new category\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseLanguageCategories: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebaselanguagedocumentuploads": {
    "operationId": "postknowledgeknowledgebaselanguagedocumentuploads",
    "functionName": "PostKnowledgeKnowledgebaseLanguageDocumentUploads",
    "signature": "PostKnowledgeKnowledgebaseLanguageDocumentUploads(documentId, knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentcontentupload",
        "required": "true"
      }
    ],
    "return": "Knowledgedocumentcontentupload",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar documentId string // Document ID\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar body platformclientv2.Knowledgedocumentcontentupload // \n// Upload Article Content\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseLanguageDocumentUploads(documentId, knowledgeBaseId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseLanguageDocumentUploads: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebaselanguagedocuments": {
    "operationId": "postknowledgeknowledgebaselanguagedocuments",
    "functionName": "PostKnowledgeKnowledgebaseLanguageDocuments",
    "signature": "PostKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgedocumentrequest",
        "required": "true"
      }
    ],
    "return": "Knowledgedocument",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar body platformclientv2.Knowledgedocumentrequest // \n// Create document\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseLanguageDocuments: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebaselanguagedocumentsimports": {
    "operationId": "postknowledgeknowledgebaselanguagedocumentsimports",
    "functionName": "PostKnowledgeKnowledgebaseLanguageDocumentsImports",
    "signature": "PostKnowledgeKnowledgebaseLanguageDocumentsImports(knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgeimport",
        "required": "true"
      }
    ],
    "return": "Knowledgeimport",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar body platformclientv2.Knowledgeimport // \n// Create import operation\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseLanguageDocumentsImports(knowledgeBaseId, languageCode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseLanguageDocumentsImports: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebaselanguagetrainingpromote": {
    "operationId": "postknowledgeknowledgebaselanguagetrainingpromote",
    "functionName": "PostKnowledgeKnowledgebaseLanguageTrainingPromote",
    "signature": "PostKnowledgeKnowledgebaseLanguageTrainingPromote(knowledgeBaseId, languageCode, trainingId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trainingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgetraining",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\nvar trainingId string // Training ID\n// Promote trained documents from draft state to active.\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseLanguageTrainingPromote(knowledgeBaseId, languageCode, trainingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseLanguageTrainingPromote: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebaselanguagetrainings": {
    "operationId": "postknowledgeknowledgebaselanguagetrainings",
    "functionName": "PostKnowledgeKnowledgebaseLanguageTrainings",
    "signature": "PostKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Knowledgetraining",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar languageCode string // Language code, format: iso2-LOCALE\n// Trigger training\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId, languageCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseLanguageTrainings: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebasesearch": {
    "operationId": "postknowledgeknowledgebasesearch",
    "functionName": "PostKnowledgeKnowledgebaseSearch",
    "signature": "PostKnowledgeKnowledgebaseSearch(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Knowledgesearchrequest",
        "required": "false"
      }
    ],
    "return": "Knowledgesearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar knowledgeBaseId string // Knowledge base ID\nvar body platformclientv2.Knowledgesearchrequest // \n// Search Documents\ndata, response, err := apiInstance.PostKnowledgeKnowledgebaseSearch(knowledgeBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebaseSearch: %v\\n\", err)\n}"
  },
  "postknowledgeknowledgebases": {
    "operationId": "postknowledgeknowledgebases",
    "functionName": "PostKnowledgeKnowledgebases",
    "signature": "PostKnowledgeKnowledgebases(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Knowledgebasecreaterequest",
        "required": "true"
      }
    ],
    "return": "Knowledgebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewKnowledgeApiWithConfig(config)\n\nvar body platformclientv2.Knowledgebasecreaterequest // \n// Create new knowledge base\ndata, response, err := apiInstance.PostKnowledgeKnowledgebases(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostKnowledgeKnowledgebases: %v\\n\", err)\n}"
  },
  "deletelanguageunderstandingdomain": {
    "operationId": "deletelanguageunderstandingdomain",
    "functionName": "DeleteLanguageunderstandingDomain",
    "signature": "DeleteLanguageunderstandingDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\n// Delete an NLU Domain.\nresponse, err := apiInstance.DeleteLanguageunderstandingDomain(domainId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteLanguageunderstandingDomain: %v\\n\", err)\n}"
  },
  "deletelanguageunderstandingdomainfeedbackfeedbackid": {
    "operationId": "deletelanguageunderstandingdomainfeedbackfeedbackid",
    "functionName": "DeleteLanguageunderstandingDomainFeedbackFeedbackId",
    "signature": "DeleteLanguageunderstandingDomainFeedbackFeedbackId(domainId, feedbackId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "feedbackId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar feedbackId string // ID of the Feedback\n// Delete the feedback on the NLU Domain Version.\nresponse, err := apiInstance.DeleteLanguageunderstandingDomainFeedbackFeedbackId(domainId, feedbackId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteLanguageunderstandingDomainFeedbackFeedbackId: %v\\n\", err)\n}"
  },
  "deletelanguageunderstandingdomainversion": {
    "operationId": "deletelanguageunderstandingdomainversion",
    "functionName": "DeleteLanguageunderstandingDomainVersion",
    "signature": "DeleteLanguageunderstandingDomainVersion(domainId, domainVersionId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar domainVersionId string // ID of the NLU domain version.\n// Delete an NLU Domain Version\nresponse, err := apiInstance.DeleteLanguageunderstandingDomainVersion(domainId, domainVersionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteLanguageunderstandingDomainVersion: %v\\n\", err)\n}"
  },
  "deletelanguageunderstandingminer": {
    "operationId": "deletelanguageunderstandingminer",
    "functionName": "DeleteLanguageunderstandingMiner",
    "signature": "DeleteLanguageunderstandingMiner(minerId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\n// Delete a miner.\nresponse, err := apiInstance.DeleteLanguageunderstandingMiner(minerId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteLanguageunderstandingMiner: %v\\n\", err)\n}"
  },
  "deletelanguageunderstandingminerdraft": {
    "operationId": "deletelanguageunderstandingminerdraft",
    "functionName": "DeleteLanguageunderstandingMinerDraft",
    "signature": "DeleteLanguageunderstandingMinerDraft(minerId, draftId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "draftId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar draftId string // Draft ID\n// Delete a draft\nresponse, err := apiInstance.DeleteLanguageunderstandingMinerDraft(minerId, draftId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteLanguageunderstandingMinerDraft: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingdomain": {
    "operationId": "getlanguageunderstandingdomain",
    "functionName": "GetLanguageunderstandingDomain",
    "signature": "GetLanguageunderstandingDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Nludomain",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\n// Find an NLU Domain.\ndata, response, err := apiInstance.GetLanguageunderstandingDomain(domainId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingDomain: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingdomainfeedback": {
    "operationId": "getlanguageunderstandingdomainfeedback",
    "functionName": "GetLanguageunderstandingDomainFeedback",
    "signature": "GetLanguageunderstandingDomainFeedback(domainId, intentName, assessment, dateStart, dateEnd, includeDeleted, language, pageNumber, pageSize, enableCursorPagination, includeTrainingUtterances, after, fields)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "intentName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "assessment",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dateStart",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "dateEnd",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "includeDeleted",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "language",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "enableCursorPagination",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeTrainingUtterances",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "fields",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Nlufeedbacklisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar intentName string // The top intent name to retrieve feedback for.\nvar assessment string // The top assessment to retrieve feedback for.\nvar dateStart time.Time // Begin of time window as ISO-8601 date.\nvar dateEnd time.Time // End of time window as ISO-8601 date.\nvar includeDeleted bool // Whether to include soft-deleted items in the result.\nvar language string // Whether to filter response based on the language, e.g. en-us, pt-br.\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar enableCursorPagination bool // Enable Cursor Pagination\nvar includeTrainingUtterances bool // Include Training Utterances. By default they're included.\nvar after string // The cursor that points to the end of the set of entities that has been returned. This is considered only when enableCursorPagination=true\nvar fields []string // Fields and properties to get, comma-separated\n// Get all feedback in the given NLU Domain Version.\ndata, response, err := apiInstance.GetLanguageunderstandingDomainFeedback(domainId, intentName, assessment, dateStart, dateEnd, includeDeleted, language, pageNumber, pageSize, enableCursorPagination, includeTrainingUtterances, after, fields)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingDomainFeedback: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingdomainfeedbackfeedbackid": {
    "operationId": "getlanguageunderstandingdomainfeedbackfeedbackid",
    "functionName": "GetLanguageunderstandingDomainFeedbackFeedbackId",
    "signature": "GetLanguageunderstandingDomainFeedbackFeedbackId(domainId, feedbackId, fields)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "feedbackId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fields",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Nlufeedbackresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar feedbackId string // ID of the Feedback\nvar fields []string // Fields and properties to get, comma-separated\n// Find a Feedback\ndata, response, err := apiInstance.GetLanguageunderstandingDomainFeedbackFeedbackId(domainId, feedbackId, fields)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingDomainFeedbackFeedbackId: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingdomainversion": {
    "operationId": "getlanguageunderstandingdomainversion",
    "functionName": "GetLanguageunderstandingDomainVersion",
    "signature": "GetLanguageunderstandingDomainVersion(domainId, domainVersionId, includeUtterances)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeUtterances",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Nludomainversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar domainVersionId string // ID of the NLU domain version.\nvar includeUtterances bool // Whether utterances for intent definition should be included when marshalling response.\n// Find an NLU Domain Version.\ndata, response, err := apiInstance.GetLanguageunderstandingDomainVersion(domainId, domainVersionId, includeUtterances)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingDomainVersion: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingdomainversionreport": {
    "operationId": "getlanguageunderstandingdomainversionreport",
    "functionName": "GetLanguageunderstandingDomainVersionReport",
    "signature": "GetLanguageunderstandingDomainVersionReport(domainId, domainVersionId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Nludomainversionqualityreport",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar domainVersionId string // ID of the NLU domain version.\n// Retrieved quality report for the specified NLU Domain Version\ndata, response, err := apiInstance.GetLanguageunderstandingDomainVersionReport(domainId, domainVersionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingDomainVersionReport: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingdomainversions": {
    "operationId": "getlanguageunderstandingdomainversions",
    "functionName": "GetLanguageunderstandingDomainVersions",
    "signature": "GetLanguageunderstandingDomainVersions(domainId, includeUtterances, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeUtterances",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Nludomainversionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar includeUtterances bool // Whether utterances for intent definition should be included when marshalling response.\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get all NLU Domain Versions for a given Domain.\ndata, response, err := apiInstance.GetLanguageunderstandingDomainVersions(domainId, includeUtterances, pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingDomainVersions: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingdomains": {
    "operationId": "getlanguageunderstandingdomains",
    "functionName": "GetLanguageunderstandingDomains",
    "signature": "GetLanguageunderstandingDomains(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Nludomainlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\n// Get all NLU Domains.\ndata, response, err := apiInstance.GetLanguageunderstandingDomains(pageNumber, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingDomains: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingminer": {
    "operationId": "getlanguageunderstandingminer",
    "functionName": "GetLanguageunderstandingMiner",
    "signature": "GetLanguageunderstandingMiner(minerId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Miner",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\n// Get information about a miner.\ndata, response, err := apiInstance.GetLanguageunderstandingMiner(minerId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingMiner: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingminerdraft": {
    "operationId": "getlanguageunderstandingminerdraft",
    "functionName": "GetLanguageunderstandingMinerDraft",
    "signature": "GetLanguageunderstandingMinerDraft(minerId, draftId, draftIntentId, draftTopicId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "draftId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "draftIntentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "draftTopicId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Draft",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar draftId string // Draft ID\nvar draftIntentId string // Parameter to filter a specific intent.\nvar draftTopicId string // Parameter to filter a specific topic.\n// Get information about a draft.\ndata, response, err := apiInstance.GetLanguageunderstandingMinerDraft(minerId, draftId, draftIntentId, draftTopicId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingMinerDraft: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingminerdrafts": {
    "operationId": "getlanguageunderstandingminerdrafts",
    "functionName": "GetLanguageunderstandingMinerDrafts",
    "signature": "GetLanguageunderstandingMinerDrafts(minerId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Draftlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\n// Retrieve the list of drafts created.\ndata, response, err := apiInstance.GetLanguageunderstandingMinerDrafts(minerId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingMinerDrafts: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingminerintent": {
    "operationId": "getlanguageunderstandingminerintent",
    "functionName": "GetLanguageunderstandingMinerIntent",
    "signature": "GetLanguageunderstandingMinerIntent(minerId, intentId, expand)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "intentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Minerintent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar intentId string // The ID of the intent to be retrieved.\nvar expand string // Option to fetch utterances\n// Get information about a mined intent\ndata, response, err := apiInstance.GetLanguageunderstandingMinerIntent(minerId, intentId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingMinerIntent: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingminerintents": {
    "operationId": "getlanguageunderstandingminerintents",
    "functionName": "GetLanguageunderstandingMinerIntents",
    "signature": "GetLanguageunderstandingMinerIntents(minerId, expand)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Minedintentslisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar expand string // Option to fetch utterances.\n// Retrieve a list of mined intents.\ndata, response, err := apiInstance.GetLanguageunderstandingMinerIntents(minerId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingMinerIntents: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingminertopic": {
    "operationId": "getlanguageunderstandingminertopic",
    "functionName": "GetLanguageunderstandingMinerTopic",
    "signature": "GetLanguageunderstandingMinerTopic(minerId, topicId, expand)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "topicId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Minertopic",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar topicId string // The ID of the topic to be retrieved.\nvar expand string // Option to fetch phrases\n// Retrieves details of a particular topic.\ndata, response, err := apiInstance.GetLanguageunderstandingMinerTopic(minerId, topicId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingMinerTopic: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingminertopicphrase": {
    "operationId": "getlanguageunderstandingminertopicphrase",
    "functionName": "GetLanguageunderstandingMinerTopicPhrase",
    "signature": "GetLanguageunderstandingMinerTopicPhrase(minerId, topicId, phraseId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "topicId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "phraseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Minertopicphrase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar topicId string // The ID of the topic to be retrieved.\nvar phraseId string // The ID of the phrase to be retrieved.\n// Retrieves utterances related to a phrase in a topic.\ndata, response, err := apiInstance.GetLanguageunderstandingMinerTopicPhrase(minerId, topicId, phraseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingMinerTopicPhrase: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingminertopics": {
    "operationId": "getlanguageunderstandingminertopics",
    "functionName": "GetLanguageunderstandingMinerTopics",
    "signature": "GetLanguageunderstandingMinerTopics(minerId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Minertopicslisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\n// Retrieve a list of mined topics.\ndata, response, err := apiInstance.GetLanguageunderstandingMinerTopics(minerId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingMinerTopics: %v\\n\", err)\n}"
  },
  "getlanguageunderstandingminers": {
    "operationId": "getlanguageunderstandingminers",
    "functionName": "GetLanguageunderstandingMiners",
    "signature": "GetLanguageunderstandingMiners(minerType)",
    "parameters": [
      {
        "name": "minerType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Minerlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerType string // Type of miner, either intent or topic\n// Retrieve the list of miners created.\ndata, response, err := apiInstance.GetLanguageunderstandingMiners(minerType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguageunderstandingMiners: %v\\n\", err)\n}"
  },
  "patchlanguageunderstandingdomain": {
    "operationId": "patchlanguageunderstandingdomain",
    "functionName": "PatchLanguageunderstandingDomain",
    "signature": "PatchLanguageunderstandingDomain(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Nludomain",
        "required": "true"
      }
    ],
    "return": "Nludomain",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar body platformclientv2.Nludomain // The updated NLU Domain.\n// Update an NLU Domain.\ndata, response, err := apiInstance.PatchLanguageunderstandingDomain(domainId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchLanguageunderstandingDomain: %v\\n\", err)\n}"
  },
  "patchlanguageunderstandingminerdraft": {
    "operationId": "patchlanguageunderstandingminerdraft",
    "functionName": "PatchLanguageunderstandingMinerDraft",
    "signature": "PatchLanguageunderstandingMinerDraft(minerId, draftId, body)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "draftId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Draftrequest",
        "required": "false"
      }
    ],
    "return": "Draft",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar draftId string // Draft ID\nvar body platformclientv2.Draftrequest // \n// Save information for the draft. Either topic draft or intent draft should be sent.\ndata, response, err := apiInstance.PatchLanguageunderstandingMinerDraft(minerId, draftId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchLanguageunderstandingMinerDraft: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingdomainfeedback": {
    "operationId": "postlanguageunderstandingdomainfeedback",
    "functionName": "PostLanguageunderstandingDomainFeedback",
    "signature": "PostLanguageunderstandingDomainFeedback(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Nlufeedbackrequest",
        "required": "true"
      }
    ],
    "return": "Nlufeedbackresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar body platformclientv2.Nlufeedbackrequest // The Feedback to create.\n// Create feedback for the NLU Domain Version.\ndata, response, err := apiInstance.PostLanguageunderstandingDomainFeedback(domainId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingDomainFeedback: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingdomainversiondetect": {
    "operationId": "postlanguageunderstandingdomainversiondetect",
    "functionName": "PostLanguageunderstandingDomainVersionDetect",
    "signature": "PostLanguageunderstandingDomainVersionDetect(domainId, domainVersionId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Nludetectionrequest",
        "required": "true"
      }
    ],
    "return": "Nludetectionresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar domainVersionId string // ID of the NLU domain version.\nvar body platformclientv2.Nludetectionrequest // The input data to perform detection on.\n// Detect intent, entities, etc. in the submitted text using the specified NLU domain version.\ndata, response, err := apiInstance.PostLanguageunderstandingDomainVersionDetect(domainId, domainVersionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingDomainVersionDetect: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingdomainversionpublish": {
    "operationId": "postlanguageunderstandingdomainversionpublish",
    "functionName": "PostLanguageunderstandingDomainVersionPublish",
    "signature": "PostLanguageunderstandingDomainVersionPublish(domainId, domainVersionId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Nludomainversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar domainVersionId string // ID of the NLU domain version.\n// Publish the draft NLU Domain Version.\ndata, response, err := apiInstance.PostLanguageunderstandingDomainVersionPublish(domainId, domainVersionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingDomainVersionPublish: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingdomainversiontrain": {
    "operationId": "postlanguageunderstandingdomainversiontrain",
    "functionName": "PostLanguageunderstandingDomainVersionTrain",
    "signature": "PostLanguageunderstandingDomainVersionTrain(domainId, domainVersionId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Nludomainversiontrainingresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar domainVersionId string // ID of the NLU domain version.\n// Train the draft NLU Domain Version.\ndata, response, err := apiInstance.PostLanguageunderstandingDomainVersionTrain(domainId, domainVersionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingDomainVersionTrain: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingdomainversions": {
    "operationId": "postlanguageunderstandingdomainversions",
    "functionName": "PostLanguageunderstandingDomainVersions",
    "signature": "PostLanguageunderstandingDomainVersions(domainId, body, includeUtterances)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Nludomainversion",
        "required": "true"
      },
      {
        "name": "includeUtterances",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Nludomainversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar body platformclientv2.Nludomainversion // The NLU Domain Version to create.\nvar includeUtterances bool // Whether utterances for intent definition should be included when marshalling response.\n// Create an NLU Domain Version.\ndata, response, err := apiInstance.PostLanguageunderstandingDomainVersions(domainId, body, includeUtterances)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingDomainVersions: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingdomains": {
    "operationId": "postlanguageunderstandingdomains",
    "functionName": "PostLanguageunderstandingDomains",
    "signature": "PostLanguageunderstandingDomains(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Nludomain",
        "required": "true"
      }
    ],
    "return": "Nludomain",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar body platformclientv2.Nludomain // The NLU Domain to create.\n// Create an NLU Domain.\ndata, response, err := apiInstance.PostLanguageunderstandingDomains(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingDomains: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingminerdrafts": {
    "operationId": "postlanguageunderstandingminerdrafts",
    "functionName": "PostLanguageunderstandingMinerDrafts",
    "signature": "PostLanguageunderstandingMinerDrafts(minerId, body)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Draft",
        "required": "true"
      }
    ],
    "return": "Draft",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar body platformclientv2.Draft // Details for creating draft resource\n// Create a new draft resource.\ndata, response, err := apiInstance.PostLanguageunderstandingMinerDrafts(minerId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingMinerDrafts: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingminerexecute": {
    "operationId": "postlanguageunderstandingminerexecute",
    "functionName": "PostLanguageunderstandingMinerExecute",
    "signature": "PostLanguageunderstandingMinerExecute(minerId, body)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Minerexecuterequest",
        "required": "false"
      }
    ],
    "return": "Miner",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar body platformclientv2.Minerexecuterequest // \n// Start the mining process. Specify date range pair with mediaType, queueIds, participantType for mining data from Genesys Cloud. Specify only uploadKey for mining through an external file.\ndata, response, err := apiInstance.PostLanguageunderstandingMinerExecute(minerId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingMinerExecute: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingminers": {
    "operationId": "postlanguageunderstandingminers",
    "functionName": "PostLanguageunderstandingMiners",
    "signature": "PostLanguageunderstandingMiners(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Miner",
        "required": "true"
      }
    ],
    "return": "Miner",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar body platformclientv2.Miner // Details for creating a new miner resource.\n// Create a unique miner.\ndata, response, err := apiInstance.PostLanguageunderstandingMiners(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingMiners: %v\\n\", err)\n}"
  },
  "putlanguageunderstandingdomainversion": {
    "operationId": "putlanguageunderstandingdomainversion",
    "functionName": "PutLanguageunderstandingDomainVersion",
    "signature": "PutLanguageunderstandingDomainVersion(domainId, domainVersionId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Nludomainversion",
        "required": "true"
      }
    ],
    "return": "Nludomainversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguageUnderstandingApiWithConfig(config)\n\nvar domainId string // ID of the NLU domain.\nvar domainVersionId string // ID of the NLU domain version.\nvar body platformclientv2.Nludomainversion // The updated NLU Domain Version.\n// Update an NLU Domain Version.\ndata, response, err := apiInstance.PutLanguageunderstandingDomainVersion(domainId, domainVersionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutLanguageunderstandingDomainVersion: %v\\n\", err)\n}"
  },
  "deletelanguage": {
    "operationId": "deletelanguage",
    "functionName": "DeleteLanguage",
    "signature": "DeleteLanguage(languageId)",
    "parameters": [
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguagesApiWithConfig(config)\n\nvar languageId string // Language ID\n// Delete Language (Deprecated)\nresponse, err := apiInstance.DeleteLanguage(languageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteLanguage: %v\\n\", err)\n}"
  },
  "getlanguage": {
    "operationId": "getlanguage",
    "functionName": "GetLanguage",
    "signature": "GetLanguage(languageId)",
    "parameters": [
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguagesApiWithConfig(config)\n\nvar languageId string // Language ID\n// Get Language (Deprecated)\ndata, response, err := apiInstance.GetLanguage(languageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguage: %v\\n\", err)\n}"
  },
  "getlanguages": {
    "operationId": "getlanguages",
    "functionName": "GetLanguages",
    "signature": "GetLanguages(pageSize, pageNumber, sortOrder, name)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Languageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguagesApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Ascending or descending sort order\nvar name string // Name\n// Get the list of supported languages. (Deprecated)\ndata, response, err := apiInstance.GetLanguages(pageSize, pageNumber, sortOrder, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguages: %v\\n\", err)\n}"
  },
  "getlanguagestranslations": {
    "operationId": "getlanguagestranslations",
    "functionName": "GetLanguagesTranslations",
    "signature": "GetLanguagesTranslations()",
    "return": "Availabletranslations",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguagesApiWithConfig(config)\n\n// Get all available languages for translation\ndata, response, err := apiInstance.GetLanguagesTranslations()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguagesTranslations: %v\\n\", err)\n}"
  },
  "getlanguagestranslationsbuiltin": {
    "operationId": "getlanguagestranslationsbuiltin",
    "functionName": "GetLanguagesTranslationsBuiltin",
    "signature": "GetLanguagesTranslationsBuiltin(language)",
    "parameters": [
      {
        "name": "language",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "map[string]interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguagesApiWithConfig(config)\n\nvar language string // The language of the builtin translation to retrieve\n// Get the builtin translation for a language\ndata, response, err := apiInstance.GetLanguagesTranslationsBuiltin(language)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguagesTranslationsBuiltin: %v\\n\", err)\n}"
  },
  "getlanguagestranslationsorganization": {
    "operationId": "getlanguagestranslationsorganization",
    "functionName": "GetLanguagesTranslationsOrganization",
    "signature": "GetLanguagesTranslationsOrganization(language)",
    "parameters": [
      {
        "name": "language",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "map[string]interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguagesApiWithConfig(config)\n\nvar language string // The language of the translation to retrieve for the organization\n// Get effective translation for an organization by language\ndata, response, err := apiInstance.GetLanguagesTranslationsOrganization(language)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguagesTranslationsOrganization: %v\\n\", err)\n}"
  },
  "getlanguagestranslationsuser": {
    "operationId": "getlanguagestranslationsuser",
    "functionName": "GetLanguagesTranslationsUser",
    "signature": "GetLanguagesTranslationsUser(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "map[string]interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguagesApiWithConfig(config)\n\nvar userId string // The user id\n// Get effective language translation for a user\ndata, response, err := apiInstance.GetLanguagesTranslationsUser(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLanguagesTranslationsUser: %v\\n\", err)\n}"
  },
  "postlanguages": {
    "operationId": "postlanguages",
    "functionName": "PostLanguages",
    "signature": "PostLanguages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Language",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLanguagesApiWithConfig(config)\n\nvar body platformclientv2.Language // Language\n// Create Language (Deprecated)\ndata, response, err := apiInstance.PostLanguages(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguages: %v\\n\", err)\n}"
  },
  "deletelearningassignment": {
    "operationId": "deletelearningassignment",
    "functionName": "DeleteLearningAssignment",
    "signature": "DeleteLearningAssignment(assignmentId)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar assignmentId string // The Learning Assignment ID\n// Delete a learning assignment\nresponse, err := apiInstance.DeleteLearningAssignment(assignmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteLearningAssignment: %v\\n\", err)\n}"
  },
  "deletelearningmodule": {
    "operationId": "deletelearningmodule",
    "functionName": "DeleteLearningModule",
    "signature": "DeleteLearningModule(moduleId)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // The ID of the learning module\n// Delete a learning module\nresponse, err := apiInstance.DeleteLearningModule(moduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteLearningModule: %v\\n\", err)\n}"
  },
  "getlearningassignment": {
    "operationId": "getlearningassignment",
    "functionName": "GetLearningAssignment",
    "signature": "GetLearningAssignment(assignmentId, expand)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Learningassignment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar assignmentId string // The ID of Learning Assignment\nvar expand []string // Fields to expand in response\n// Get Learning Assignment\ndata, response, err := apiInstance.GetLearningAssignment(assignmentId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningAssignment: %v\\n\", err)\n}"
  },
  "getlearningassignments": {
    "operationId": "getlearningassignments",
    "functionName": "GetLearningAssignments",
    "signature": "GetLearningAssignments(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, pass, minPercentageScore, maxPercentageScore, sortOrder, sortBy, userId, types, states, expand)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pass",
        "type": "string",
        "required": "false"
      },
      {
        "name": "minPercentageScore",
        "type": "float32",
        "required": "false"
      },
      {
        "name": "maxPercentageScore",
        "type": "float32",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "userId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "types",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "states",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Learningassignmentsdomainentity",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // Specifies the ID of the learning module. Fetch assignments for learning module ID\nvar interval string // Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar completionInterval string // Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar overdue string // Specifies if only the non-overdue (overdue is \\\"False\\\") or overdue (overdue is \\\"True\\\") assignments are returned. If overdue is \\\"Any\\\" or if the overdue parameter is not supplied, all assignments are returned\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar pass string // Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") assignments (completed with assessment)are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all assignments are returned\nvar minPercentageScore float32 // The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)\nvar maxPercentageScore float32 // The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)\nvar sortOrder string // Specifies result set sort order; if not specified, default sort order is descending (Desc)\nvar sortBy string // Specifies which field to sort the results by, default sort is by recommendedCompletionDate\nvar userId []string // Specifies the list of user IDs to be queried, up to 100 user IDs.\nvar types []string // Specifies the module types to filter by\nvar states []string // Specifies the assignment states to filter by\nvar expand []string // Specifies the expand option for returning additional information\n// List of Learning module Assignments\ndata, response, err := apiInstance.GetLearningAssignments(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, pass, minPercentageScore, maxPercentageScore, sortOrder, sortBy, userId, types, states, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningAssignments: %v\\n\", err)\n}"
  },
  "getlearningassignmentsme": {
    "operationId": "getlearningassignmentsme",
    "functionName": "GetLearningAssignmentsMe",
    "signature": "GetLearningAssignmentsMe(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, pass, minPercentageScore, maxPercentageScore, sortOrder, sortBy, types, states, expand)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pass",
        "type": "string",
        "required": "false"
      },
      {
        "name": "minPercentageScore",
        "type": "float32",
        "required": "false"
      },
      {
        "name": "maxPercentageScore",
        "type": "float32",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "types",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "states",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Learningassignmentsdomainentity",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // Specifies the ID of the learning module. Fetch assignments for learning module ID\nvar interval string // Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar completionInterval string // Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar overdue string // Specifies if only the non-overdue (overdue is \\\"False\\\") or overdue (overdue is \\\"True\\\") assignments are returned. If overdue is \\\"Any\\\" or if the overdue parameter is not supplied, all assignments are returned\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar pass string // Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") assignments (completed with assessment)are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all assignments are returned\nvar minPercentageScore float32 // The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)\nvar maxPercentageScore float32 // The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive)\nvar sortOrder string // Specifies result set sort order; if not specified, default sort order is descending (Desc)\nvar sortBy string // Specifies which field to sort the results by, default sort is by recommendedCompletionDate\nvar types []string // Specifies the module types to filter by\nvar states []string // Specifies the assignment states to filter by\nvar expand []string // Specifies the expand option for returning additional information\n// List of Learning Assignments assigned to current user\ndata, response, err := apiInstance.GetLearningAssignmentsMe(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, pass, minPercentageScore, maxPercentageScore, sortOrder, sortBy, types, states, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningAssignmentsMe: %v\\n\", err)\n}"
  },
  "getlearningmodule": {
    "operationId": "getlearningmodule",
    "functionName": "GetLearningModule",
    "signature": "GetLearningModule(moduleId, expand)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Learningmodule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // The ID of the learning module\nvar expand []string // Fields to expand in response(case insensitive)\n// Get a learning module\ndata, response, err := apiInstance.GetLearningModule(moduleId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningModule: %v\\n\", err)\n}"
  },
  "getlearningmodulejob": {
    "operationId": "getlearningmodulejob",
    "functionName": "GetLearningModuleJob",
    "signature": "GetLearningModuleJob(moduleId, jobId)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Learningmodulejobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // The ID of the learning module\nvar jobId string // The ID of the learning module job\n// Get a specific Learning Module job status\ndata, response, err := apiInstance.GetLearningModuleJob(moduleId, jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningModuleJob: %v\\n\", err)\n}"
  },
  "getlearningmodulerule": {
    "operationId": "getlearningmodulerule",
    "functionName": "GetLearningModuleRule",
    "signature": "GetLearningModuleRule(moduleId)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Learningmodulerule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // The ID of the learning module\n// Get a learning module rule\ndata, response, err := apiInstance.GetLearningModuleRule(moduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningModuleRule: %v\\n\", err)\n}"
  },
  "getlearningmoduleversion": {
    "operationId": "getlearningmoduleversion",
    "functionName": "GetLearningModuleVersion",
    "signature": "GetLearningModuleVersion(moduleId, versionId, expand)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Learningmodule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // The ID of the learning module\nvar versionId string // The version of learning module\nvar expand []string // Fields to expand in response(case insensitive)\n// Get specific version of a published module\ndata, response, err := apiInstance.GetLearningModuleVersion(moduleId, versionId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningModuleVersion: %v\\n\", err)\n}"
  },
  "getlearningmodules": {
    "operationId": "getlearningmodules",
    "functionName": "GetLearningModules",
    "signature": "GetLearningModules(isArchived, types, pageSize, pageNumber, sortOrder, sortBy, searchTerm, expand, isPublished, statuses)",
    "parameters": [
      {
        "name": "isArchived",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "types",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "searchTerm",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "isPublished",
        "type": "string",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Learningmodulesdomainentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar isArchived bool // Archive status\nvar types []string // Specifies the module types.\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Sort order\nvar sortBy string // Sort by\nvar searchTerm string // Search Term (searchable by name)\nvar expand []string // Fields to expand in response(case insensitive)\nvar isPublished string // Specifies if only the Unpublished (isPublished is \\\"False\\\") or Published (isPublished is \\\"True\\\") modules are returned. If isPublished is \\\"Any\\\" or omitted, both types are returned\nvar statuses []string // Specifies the module statuses to filter by\n// Get all learning modules of an organization\ndata, response, err := apiInstance.GetLearningModules(isArchived, types, pageSize, pageNumber, sortOrder, sortBy, searchTerm, expand, isPublished, statuses)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningModules: %v\\n\", err)\n}"
  },
  "getlearningmodulesassignments": {
    "operationId": "getlearningmodulesassignments",
    "functionName": "GetLearningModulesAssignments",
    "signature": "GetLearningModulesAssignments(userIds, pageSize, pageNumber, searchTerm, overdue, assignmentStates, expand)",
    "parameters": [
      {
        "name": "userIds",
        "type": "[]string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "searchTerm",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "assignmentStates",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Assignedlearningmoduledomainentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar userIds []string // The IDs of the users to include\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar searchTerm string // Search Term (searches by name and description)\nvar overdue string // Specifies if only modules with overdue/not overdue (overdue is \\\"True\\\" or \\\"False\\\") assignments are returned. If overdue is \\\"Any\\\" or omitted, both are returned and can including modules that are unassigned.\nvar assignmentStates []string // Specifies the assignment states to return.\nvar expand []string // Fields to expand in response(case insensitive)\n// Get all learning modules of an organization including assignments for a specific user\ndata, response, err := apiInstance.GetLearningModulesAssignments(userIds, pageSize, pageNumber, searchTerm, overdue, assignmentStates, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningModulesAssignments: %v\\n\", err)\n}"
  },
  "getlearningmodulescoverartcoverartid": {
    "operationId": "getlearningmodulescoverartcoverartid",
    "functionName": "GetLearningModulesCoverartCoverArtId",
    "signature": "GetLearningModulesCoverartCoverArtId(coverArtId)",
    "parameters": [
      {
        "name": "coverArtId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Learningmodulecoverartresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar coverArtId string // Key identifier for the cover art\n// Get a specific Learning Module cover art using ID\ndata, response, err := apiInstance.GetLearningModulesCoverartCoverArtId(coverArtId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLearningModulesCoverartCoverArtId: %v\\n\", err)\n}"
  },
  "patchlearningassignment": {
    "operationId": "patchlearningassignment",
    "functionName": "PatchLearningAssignment",
    "signature": "PatchLearningAssignment(assignmentId, body)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Learningassignmentupdate",
        "required": "false"
      }
    ],
    "return": "Learningassignment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar assignmentId string // The ID of Learning Assignment\nvar body platformclientv2.Learningassignmentupdate // The Learning Assignment to be updated\n// Update Learning Assignment\ndata, response, err := apiInstance.PatchLearningAssignment(assignmentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchLearningAssignment: %v\\n\", err)\n}"
  },
  "patchlearningassignmentreschedule": {
    "operationId": "patchlearningassignmentreschedule",
    "functionName": "PatchLearningAssignmentReschedule",
    "signature": "PatchLearningAssignmentReschedule(assignmentId, body)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Learningassignmentreschedule",
        "required": "false"
      }
    ],
    "return": "Learningassignment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar assignmentId string // The ID of Learning Assignment\nvar body platformclientv2.Learningassignmentreschedule // The Learning assignment reschedule model\n// Reschedule Learning Assignment\ndata, response, err := apiInstance.PatchLearningAssignmentReschedule(assignmentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchLearningAssignmentReschedule: %v\\n\", err)\n}"
  },
  "postlearningassessmentsscoring": {
    "operationId": "postlearningassessmentsscoring",
    "functionName": "PostLearningAssessmentsScoring",
    "signature": "PostLearningAssessmentsScoring(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Learningassessmentscoringrequest",
        "required": "true"
      }
    ],
    "return": "Assessmentscoringset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar body platformclientv2.Learningassessmentscoringrequest // Assessment form and answers to score\n// Score learning assessment for preview\ndata, response, err := apiInstance.PostLearningAssessmentsScoring(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningAssessmentsScoring: %v\\n\", err)\n}"
  },
  "postlearningassignmentreassign": {
    "operationId": "postlearningassignmentreassign",
    "functionName": "PostLearningAssignmentReassign",
    "signature": "PostLearningAssignmentReassign(assignmentId)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Learningassignment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar assignmentId string // The Learning Assignment ID\n// Reassign Learning Assignment\ndata, response, err := apiInstance.PostLearningAssignmentReassign(assignmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningAssignmentReassign: %v\\n\", err)\n}"
  },
  "postlearningassignmentreset": {
    "operationId": "postlearningassignmentreset",
    "functionName": "PostLearningAssignmentReset",
    "signature": "PostLearningAssignmentReset(assignmentId)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Learningassignment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar assignmentId string // The Learning Assignment ID\n// Reset Learning Assignment\ndata, response, err := apiInstance.PostLearningAssignmentReset(assignmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningAssignmentReset: %v\\n\", err)\n}"
  },
  "postlearningassignments": {
    "operationId": "postlearningassignments",
    "functionName": "PostLearningAssignments",
    "signature": "PostLearningAssignments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Learningassignmentcreate",
        "required": "false"
      }
    ],
    "return": "Learningassignment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar body platformclientv2.Learningassignmentcreate // The Learning Assignment to be created\n// Create Learning Assignment\ndata, response, err := apiInstance.PostLearningAssignments(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningAssignments: %v\\n\", err)\n}"
  },
  "postlearningassignmentsaggregatesquery": {
    "operationId": "postlearningassignmentsaggregatesquery",
    "functionName": "PostLearningAssignmentsAggregatesQuery",
    "signature": "PostLearningAssignmentsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Learningassignmentaggregateparam",
        "required": "true"
      }
    ],
    "return": "Learningassignmentaggregateresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar body platformclientv2.Learningassignmentaggregateparam // Aggregate Request\n// Retrieve aggregated assignment data\ndata, response, err := apiInstance.PostLearningAssignmentsAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningAssignmentsAggregatesQuery: %v\\n\", err)\n}"
  },
  "postlearningassignmentsbulkadd": {
    "operationId": "postlearningassignmentsbulkadd",
    "functionName": "PostLearningAssignmentsBulkadd",
    "signature": "PostLearningAssignmentsBulkadd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "[]Learningassignmentitem",
        "required": "false"
      }
    ],
    "return": "Learningassignmentbulkaddresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar body platformclientv2.[]Learningassignmentitem // The learning assignments to be created\n// Add multiple learning assignments\ndata, response, err := apiInstance.PostLearningAssignmentsBulkadd(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningAssignmentsBulkadd: %v\\n\", err)\n}"
  },
  "postlearningassignmentsbulkremove": {
    "operationId": "postlearningassignmentsbulkremove",
    "functionName": "PostLearningAssignmentsBulkremove",
    "signature": "PostLearningAssignmentsBulkremove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Learningassignmentbulkremoveresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar body platformclientv2.[]string // The IDs of the learning assignments to be removed\n// Remove multiple Learning Assignments\ndata, response, err := apiInstance.PostLearningAssignmentsBulkremove(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningAssignmentsBulkremove: %v\\n\", err)\n}"
  },
  "postlearningmodulejobs": {
    "operationId": "postlearningmodulejobs",
    "functionName": "PostLearningModuleJobs",
    "signature": "PostLearningModuleJobs(moduleId, body)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Learningmodulejobrequest",
        "required": "true"
      }
    ],
    "return": "Learningmodulejobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // The ID of the learning module\nvar body platformclientv2.Learningmodulejobrequest // The learning module job request\n// Starts a specified operation on learning module\ndata, response, err := apiInstance.PostLearningModuleJobs(moduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningModuleJobs: %v\\n\", err)\n}"
  },
  "postlearningmodulepublish": {
    "operationId": "postlearningmodulepublish",
    "functionName": "PostLearningModulePublish",
    "signature": "PostLearningModulePublish(moduleId, body)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Learningmodulepublishrequest",
        "required": "false"
      }
    ],
    "return": "Learningmodulepublishresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // The ID of the learning module\nvar body platformclientv2.Learningmodulepublishrequest // The request body\n// Publish a Learning module\ndata, response, err := apiInstance.PostLearningModulePublish(moduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningModulePublish: %v\\n\", err)\n}"
  },
  "postlearningmodules": {
    "operationId": "postlearningmodules",
    "functionName": "PostLearningModules",
    "signature": "PostLearningModules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Learningmodulerequest",
        "required": "true"
      }
    ],
    "return": "Learningmodule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar body platformclientv2.Learningmodulerequest // The learning module to be created\n// Create a new learning module\ndata, response, err := apiInstance.PostLearningModules(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningModules: %v\\n\", err)\n}"
  },
  "postlearningrulesquery": {
    "operationId": "postlearningrulesquery",
    "functionName": "PostLearningRulesQuery",
    "signature": "PostLearningRulesQuery(pageSize, pageNumber, body)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Learningassignmentuserquery",
        "required": "true"
      }
    ],
    "return": "Learningassignmentuserlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar body platformclientv2.Learningassignmentuserquery // The learning module rule to fetch users\n// Get users for learning module rule\ndata, response, err := apiInstance.PostLearningRulesQuery(pageSize, pageNumber, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningRulesQuery: %v\\n\", err)\n}"
  },
  "postlearningscheduleslotsquery": {
    "operationId": "postlearningscheduleslotsquery",
    "functionName": "PostLearningScheduleslotsQuery",
    "signature": "PostLearningScheduleslotsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Learningscheduleslotsqueryrequest",
        "required": "true"
      }
    ],
    "return": "Learningscheduleslotsqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar body platformclientv2.Learningscheduleslotsqueryrequest // The slot search request\n// Get list of possible slots where a learning activity can be scheduled.\ndata, response, err := apiInstance.PostLearningScheduleslotsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLearningScheduleslotsQuery: %v\\n\", err)\n}"
  },
  "putlearningmodule": {
    "operationId": "putlearningmodule",
    "functionName": "PutLearningModule",
    "signature": "PutLearningModule(moduleId, body)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Learningmodulerequest",
        "required": "true"
      }
    ],
    "return": "Learningmodule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // The ID of the learning module\nvar body platformclientv2.Learningmodulerequest // The learning module to be updated\n// Update a learning module\ndata, response, err := apiInstance.PutLearningModule(moduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutLearningModule: %v\\n\", err)\n}"
  },
  "putlearningmodulerule": {
    "operationId": "putlearningmodulerule",
    "functionName": "PutLearningModuleRule",
    "signature": "PutLearningModuleRule(moduleId, body)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Learningmodulerule",
        "required": "true"
      }
    ],
    "return": "Learningmodulerule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLearningApiWithConfig(config)\n\nvar moduleId string // The ID of the learning module\nvar body platformclientv2.Learningmodulerule // The learning module rule to be updated\n// Update a learning module rule\ndata, response, err := apiInstance.PutLearningModuleRule(moduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutLearningModuleRule: %v\\n\", err)\n}"
  },
  "getlicensedefinition": {
    "operationId": "getlicensedefinition",
    "functionName": "GetLicenseDefinition",
    "signature": "GetLicenseDefinition(licenseId)",
    "parameters": [
      {
        "name": "licenseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Licensedefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLicenseApiWithConfig(config)\n\nvar licenseId string // ID\n// Get PureCloud license definition.\ndata, response, err := apiInstance.GetLicenseDefinition(licenseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLicenseDefinition: %v\\n\", err)\n}"
  },
  "getlicensedefinitions": {
    "operationId": "getlicensedefinitions",
    "functionName": "GetLicenseDefinitions",
    "signature": "GetLicenseDefinitions()",
    "return": "[]Licensedefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLicenseApiWithConfig(config)\n\n// Get all PureCloud license definitions available for the organization.\ndata, response, err := apiInstance.GetLicenseDefinitions()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLicenseDefinitions: %v\\n\", err)\n}"
  },
  "getlicensetoggle": {
    "operationId": "getlicensetoggle",
    "functionName": "GetLicenseToggle",
    "signature": "GetLicenseToggle(featureName)",
    "parameters": [
      {
        "name": "featureName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Licenseorgtoggle",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLicenseApiWithConfig(config)\n\nvar featureName string // featureName\n// Deprecated - no alternative required. This operation will always return 'true' for requested toggles\ndata, response, err := apiInstance.GetLicenseToggle(featureName)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLicenseToggle: %v\\n\", err)\n}"
  },
  "getlicenseuser": {
    "operationId": "getlicenseuser",
    "functionName": "GetLicenseUser",
    "signature": "GetLicenseUser(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Licenseuser",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLicenseApiWithConfig(config)\n\nvar userId string // ID\n// Get licenses for specified user.\ndata, response, err := apiInstance.GetLicenseUser(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLicenseUser: %v\\n\", err)\n}"
  },
  "getlicenseusers": {
    "operationId": "getlicenseusers",
    "functionName": "GetLicenseUsers",
    "signature": "GetLicenseUsers(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Userlicensesentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLicenseApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a page of users and their licenses\ndata, response, err := apiInstance.GetLicenseUsers(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLicenseUsers: %v\\n\", err)\n}"
  },
  "postlicenseinfer": {
    "operationId": "postlicenseinfer",
    "functionName": "PostLicenseInfer",
    "signature": "PostLicenseInfer(body)",
    "parameters": [
      {
        "name": "body",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "[]string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLicenseApiWithConfig(config)\n\nvar body platformclientv2.[]string // The roleIds to use while inferring licenses\n// Get a list of licenses inferred based on a list of roleIds\ndata, response, err := apiInstance.PostLicenseInfer(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLicenseInfer: %v\\n\", err)\n}"
  },
  "postlicenseorganization": {
    "operationId": "postlicenseorganization",
    "functionName": "PostLicenseOrganization",
    "signature": "PostLicenseOrganization(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Licensebatchassignmentrequest",
        "required": "false"
      }
    ],
    "return": "[]Licenseupdatestatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLicenseApiWithConfig(config)\n\nvar body platformclientv2.Licensebatchassignmentrequest // The license assignments to update.\n// Update the organization's license assignments in a batch.\ndata, response, err := apiInstance.PostLicenseOrganization(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLicenseOrganization: %v\\n\", err)\n}"
  },
  "postlicensetoggle": {
    "operationId": "postlicensetoggle",
    "functionName": "PostLicenseToggle",
    "signature": "PostLicenseToggle(featureName)",
    "parameters": [
      {
        "name": "featureName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Licenseorgtoggle",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLicenseApiWithConfig(config)\n\nvar featureName string // featureName\n// Deprecated. No alternative required - this endpoint has no effect\ndata, response, err := apiInstance.PostLicenseToggle(featureName)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLicenseToggle: %v\\n\", err)\n}"
  },
  "postlicenseusers": {
    "operationId": "postlicenseusers",
    "functionName": "PostLicenseUsers",
    "signature": "PostLicenseUsers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "map[string]interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLicenseApiWithConfig(config)\n\nvar body platformclientv2.[]string // The user IDs to fetch.\n// Fetch user licenses in a batch.\ndata, response, err := apiInstance.PostLicenseUsers(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLicenseUsers: %v\\n\", err)\n}"
  },
  "deletelocation": {
    "operationId": "deletelocation",
    "functionName": "DeleteLocation",
    "signature": "DeleteLocation(locationId)",
    "parameters": [
      {
        "name": "locationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLocationsApiWithConfig(config)\n\nvar locationId string // Location ID\n// Delete a location\nresponse, err := apiInstance.DeleteLocation(locationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteLocation: %v\\n\", err)\n}"
  },
  "getlocation": {
    "operationId": "getlocation",
    "functionName": "GetLocation",
    "signature": "GetLocation(locationId, expand)",
    "parameters": [
      {
        "name": "locationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Locationdefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLocationsApiWithConfig(config)\n\nvar locationId string // Location ID\nvar expand []string // Which fields, if any, to expand\n// Get Location by ID.\ndata, response, err := apiInstance.GetLocation(locationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLocation: %v\\n\", err)\n}"
  },
  "getlocationsublocations": {
    "operationId": "getlocationsublocations",
    "functionName": "GetLocationSublocations",
    "signature": "GetLocationSublocations(locationId)",
    "parameters": [
      {
        "name": "locationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Locationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLocationsApiWithConfig(config)\n\nvar locationId string // Location ID\n// Get sublocations for location ID.\ndata, response, err := apiInstance.GetLocationSublocations(locationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLocationSublocations: %v\\n\", err)\n}"
  },
  "getlocations": {
    "operationId": "getlocations",
    "functionName": "GetLocations",
    "signature": "GetLocations(pageSize, pageNumber, id, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Locationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLocationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar id []string // id\nvar sortOrder string // Sort order\n// Get a list of all locations.\ndata, response, err := apiInstance.GetLocations(pageSize, pageNumber, id, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLocations: %v\\n\", err)\n}"
  },
  "getlocationssearch": {
    "operationId": "getlocationssearch",
    "functionName": "GetLocationsSearch",
    "signature": "GetLocationsSearch(q64, expand)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Locationssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar q64 string // q64\nvar expand []string // Provides more details about a specified resource\n// Search locations using the q64 value returned from a previous search\ndata, response, err := apiInstance.GetLocationsSearch(q64, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetLocationsSearch: %v\\n\", err)\n}"
  },
  "patchlocation": {
    "operationId": "patchlocation",
    "functionName": "PatchLocation",
    "signature": "PatchLocation(locationId, body)",
    "parameters": [
      {
        "name": "locationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Locationupdatedefinition",
        "required": "true"
      }
    ],
    "return": "Locationdefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLocationsApiWithConfig(config)\n\nvar locationId string // Location ID\nvar body platformclientv2.Locationupdatedefinition // Location\n// Update a location\ndata, response, err := apiInstance.PatchLocation(locationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchLocation: %v\\n\", err)\n}"
  },
  "postlocations": {
    "operationId": "postlocations",
    "functionName": "PostLocations",
    "signature": "PostLocations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Locationcreatedefinition",
        "required": "true"
      }
    ],
    "return": "Locationdefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewLocationsApiWithConfig(config)\n\nvar body platformclientv2.Locationcreatedefinition // Location\n// Create a location\ndata, response, err := apiInstance.PostLocations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLocations: %v\\n\", err)\n}"
  },
  "postlocationssearch": {
    "operationId": "postlocationssearch",
    "functionName": "PostLocationsSearch",
    "signature": "PostLocationsSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Locationsearchrequest",
        "required": "true"
      }
    ],
    "return": "Locationssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar body platformclientv2.Locationsearchrequest // Search request options\n// Search locations\ndata, response, err := apiInstance.PostLocationsSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLocationsSearch: %v\\n\", err)\n}"
  },
  "deletemessagingsetting": {
    "operationId": "deletemessagingsetting",
    "functionName": "DeleteMessagingSetting",
    "signature": "DeleteMessagingSetting(messageSettingId)",
    "parameters": [
      {
        "name": "messageSettingId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar messageSettingId string // Message Settings ID\n// Delete a messaging setting\nresponse, err := apiInstance.DeleteMessagingSetting(messageSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteMessagingSetting: %v\\n\", err)\n}"
  },
  "deletemessagingsettingsdefault": {
    "operationId": "deletemessagingsettingsdefault",
    "functionName": "DeleteMessagingSettingsDefault",
    "signature": "DeleteMessagingSettingsDefault()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\n// Delete the organization's default setting, a global default will be applied to integrations without settings\nresponse, err := apiInstance.DeleteMessagingSettingsDefault()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteMessagingSettingsDefault: %v\\n\", err)\n}"
  },
  "deletemessagingsupportedcontentsupportedcontentid": {
    "operationId": "deletemessagingsupportedcontentsupportedcontentid",
    "functionName": "DeleteMessagingSupportedcontentSupportedContentId",
    "signature": "DeleteMessagingSupportedcontentSupportedContentId(supportedContentId)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar supportedContentId string // Supported Content ID\n// Delete a supported content profile\nresponse, err := apiInstance.DeleteMessagingSupportedcontentSupportedContentId(supportedContentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteMessagingSupportedcontentSupportedContentId: %v\\n\", err)\n}"
  },
  "getmessagingsetting": {
    "operationId": "getmessagingsetting",
    "functionName": "GetMessagingSetting",
    "signature": "GetMessagingSetting(messageSettingId)",
    "parameters": [
      {
        "name": "messageSettingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar messageSettingId string // Message Settings ID\n// Get a messaging setting\ndata, response, err := apiInstance.GetMessagingSetting(messageSettingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetMessagingSetting: %v\\n\", err)\n}"
  },
  "getmessagingsettings": {
    "operationId": "getmessagingsettings",
    "functionName": "GetMessagingSettings",
    "signature": "GetMessagingSettings(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Messagingconfiglisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of messaging settings\ndata, response, err := apiInstance.GetMessagingSettings(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetMessagingSettings: %v\\n\", err)\n}"
  },
  "getmessagingsettingsdefault": {
    "operationId": "getmessagingsettingsdefault",
    "functionName": "GetMessagingSettingsDefault",
    "signature": "GetMessagingSettingsDefault()",
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\n// Get the organization's default settings that will be used as the default when creating an integration.\ndata, response, err := apiInstance.GetMessagingSettingsDefault()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetMessagingSettingsDefault: %v\\n\", err)\n}"
  },
  "getmessagingsupportedcontent": {
    "operationId": "getmessagingsupportedcontent",
    "functionName": "GetMessagingSupportedcontent",
    "signature": "GetMessagingSupportedcontent(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Supportedcontentlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of Supported Content profiles\ndata, response, err := apiInstance.GetMessagingSupportedcontent(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetMessagingSupportedcontent: %v\\n\", err)\n}"
  },
  "getmessagingsupportedcontentsupportedcontentid": {
    "operationId": "getmessagingsupportedcontentsupportedcontentid",
    "functionName": "GetMessagingSupportedcontentSupportedContentId",
    "signature": "GetMessagingSupportedcontentSupportedContentId(supportedContentId)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Supportedcontent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar supportedContentId string // Supported Content ID\n// Get a supported content profile\ndata, response, err := apiInstance.GetMessagingSupportedcontentSupportedContentId(supportedContentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetMessagingSupportedcontentSupportedContentId: %v\\n\", err)\n}"
  },
  "patchmessagingsetting": {
    "operationId": "patchmessagingsetting",
    "functionName": "PatchMessagingSetting",
    "signature": "PatchMessagingSetting(messageSettingId, body)",
    "parameters": [
      {
        "name": "messageSettingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Messagingsettingrequest",
        "required": "true"
      }
    ],
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar messageSettingId string // Message Settings ID\nvar body platformclientv2.Messagingsettingrequest // MessagingSetting\n// Update a messaging setting\ndata, response, err := apiInstance.PatchMessagingSetting(messageSettingId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchMessagingSetting: %v\\n\", err)\n}"
  },
  "patchmessagingsupportedcontentsupportedcontentid": {
    "operationId": "patchmessagingsupportedcontentsupportedcontentid",
    "functionName": "PatchMessagingSupportedcontentSupportedContentId",
    "signature": "PatchMessagingSupportedcontentSupportedContentId(supportedContentId, body)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Supportedcontent",
        "required": "true"
      }
    ],
    "return": "Supportedcontent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar supportedContentId string // Supported Content ID\nvar body platformclientv2.Supportedcontent // SupportedContent\n// Update a supported content profile\ndata, response, err := apiInstance.PatchMessagingSupportedcontentSupportedContentId(supportedContentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchMessagingSupportedcontentSupportedContentId: %v\\n\", err)\n}"
  },
  "postmessagingsettings": {
    "operationId": "postmessagingsettings",
    "functionName": "PostMessagingSettings",
    "signature": "PostMessagingSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Messagingsettingrequest",
        "required": "true"
      }
    ],
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar body platformclientv2.Messagingsettingrequest // MessagingSetting\n// Create a messaging setting\ndata, response, err := apiInstance.PostMessagingSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostMessagingSettings: %v\\n\", err)\n}"
  },
  "postmessagingsupportedcontent": {
    "operationId": "postmessagingsupportedcontent",
    "functionName": "PostMessagingSupportedcontent",
    "signature": "PostMessagingSupportedcontent(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Supportedcontent",
        "required": "true"
      }
    ],
    "return": "Supportedcontent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar body platformclientv2.Supportedcontent // SupportedContent\n// Create a Supported Content profile\ndata, response, err := apiInstance.PostMessagingSupportedcontent(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostMessagingSupportedcontent: %v\\n\", err)\n}"
  },
  "putmessagingsettingsdefault": {
    "operationId": "putmessagingsettingsdefault",
    "functionName": "PutMessagingSettingsDefault",
    "signature": "PutMessagingSettingsDefault(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Messagingsettingdefaultrequest",
        "required": "true"
      }
    ],
    "return": "Messagingsetting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMessagingApiWithConfig(config)\n\nvar body platformclientv2.Messagingsettingdefaultrequest // Messaging Setting ID\n// Set the organization's default settings that may be applied to an integration when it is created.\ndata, response, err := apiInstance.PutMessagingSettingsDefault(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutMessagingSettingsDefault: %v\\n\", err)\n}"
  },
  "deletemobiledevice": {
    "operationId": "deletemobiledevice",
    "functionName": "DeleteMobiledevice",
    "signature": "DeleteMobiledevice(deviceId)",
    "parameters": [
      {
        "name": "deviceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMobileDevicesApiWithConfig(config)\n\nvar deviceId string // Device ID\n// Delete device\nresponse, err := apiInstance.DeleteMobiledevice(deviceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteMobiledevice: %v\\n\", err)\n}"
  },
  "getmobiledevice": {
    "operationId": "getmobiledevice",
    "functionName": "GetMobiledevice",
    "signature": "GetMobiledevice(deviceId)",
    "parameters": [
      {
        "name": "deviceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userdevice",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMobileDevicesApiWithConfig(config)\n\nvar deviceId string // Device ID\n// Get device\ndata, response, err := apiInstance.GetMobiledevice(deviceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetMobiledevice: %v\\n\", err)\n}"
  },
  "getmobiledevices": {
    "operationId": "getmobiledevices",
    "functionName": "GetMobiledevices",
    "signature": "GetMobiledevices(pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Directoryuserdeviceslisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMobileDevicesApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Ascending or descending sort order\n// Get a list of all devices.\ndata, response, err := apiInstance.GetMobiledevices(pageSize, pageNumber, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetMobiledevices: %v\\n\", err)\n}"
  },
  "postmobiledevices": {
    "operationId": "postmobiledevices",
    "functionName": "PostMobiledevices",
    "signature": "PostMobiledevices(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Userdevice",
        "required": "true"
      }
    ],
    "return": "Userdevice",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMobileDevicesApiWithConfig(config)\n\nvar body platformclientv2.Userdevice // Device\n// Create User device\ndata, response, err := apiInstance.PostMobiledevices(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostMobiledevices: %v\\n\", err)\n}"
  },
  "putmobiledevice": {
    "operationId": "putmobiledevice",
    "functionName": "PutMobiledevice",
    "signature": "PutMobiledevice(deviceId, body)",
    "parameters": [
      {
        "name": "deviceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userdevice",
        "required": "false"
      }
    ],
    "return": "Userdevice",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewMobileDevicesApiWithConfig(config)\n\nvar deviceId string // Device ID\nvar body platformclientv2.Userdevice // Device\n// Update device\ndata, response, err := apiInstance.PutMobiledevice(deviceId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutMobiledevice: %v\\n\", err)\n}"
  },
  "deletenotificationschannelsubscriptions": {
    "operationId": "deletenotificationschannelsubscriptions",
    "functionName": "DeleteNotificationsChannelSubscriptions",
    "signature": "DeleteNotificationsChannelSubscriptions(channelId)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewNotificationsApiWithConfig(config)\n\nvar channelId string // Channel ID\n// Remove all subscriptions\nresponse, err := apiInstance.DeleteNotificationsChannelSubscriptions(channelId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteNotificationsChannelSubscriptions: %v\\n\", err)\n}"
  },
  "getnotificationsavailabletopics": {
    "operationId": "getnotificationsavailabletopics",
    "functionName": "GetNotificationsAvailabletopics",
    "signature": "GetNotificationsAvailabletopics(expand, includePreview)",
    "parameters": [
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "includePreview",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Availabletopicentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewNotificationsApiWithConfig(config)\n\nvar expand []string // Which fields, if any, to expand\nvar includePreview bool // Whether or not to include Preview topics\n// Get available notification topics.\ndata, response, err := apiInstance.GetNotificationsAvailabletopics(expand, includePreview)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetNotificationsAvailabletopics: %v\\n\", err)\n}"
  },
  "getnotificationschannelsubscriptions": {
    "operationId": "getnotificationschannelsubscriptions",
    "functionName": "GetNotificationsChannelSubscriptions",
    "signature": "GetNotificationsChannelSubscriptions(channelId)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Channeltopicentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewNotificationsApiWithConfig(config)\n\nvar channelId string // Channel ID\n// The list of all subscriptions for this channel\ndata, response, err := apiInstance.GetNotificationsChannelSubscriptions(channelId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetNotificationsChannelSubscriptions: %v\\n\", err)\n}"
  },
  "getnotificationschannels": {
    "operationId": "getnotificationschannels",
    "functionName": "GetNotificationsChannels",
    "signature": "GetNotificationsChannels(includechannels)",
    "parameters": [
      {
        "name": "includechannels",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Channelentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewNotificationsApiWithConfig(config)\n\nvar includechannels string // Show user's channels for this specific token or across all tokens for this user and app.  Channel Ids for other access tokens will not be shown, but will be presented to show their existence.\n// The list of existing channels\ndata, response, err := apiInstance.GetNotificationsChannels(includechannels)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetNotificationsChannels: %v\\n\", err)\n}"
  },
  "headnotificationschannel": {
    "operationId": "headnotificationschannel",
    "functionName": "HeadNotificationsChannel",
    "signature": "HeadNotificationsChannel(channelId)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewNotificationsApiWithConfig(config)\n\nvar channelId string // Channel ID\n// Verify a channel still exists and is valid\nresponse, err := apiInstance.HeadNotificationsChannel(channelId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling HeadNotificationsChannel: %v\\n\", err)\n}"
  },
  "postnotificationschannelsubscriptions": {
    "operationId": "postnotificationschannelsubscriptions",
    "functionName": "PostNotificationsChannelSubscriptions",
    "signature": "PostNotificationsChannelSubscriptions(channelId, body, ignoreErrors)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Channeltopic",
        "required": "true"
      },
      {
        "name": "ignoreErrors",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Channeltopicentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewNotificationsApiWithConfig(config)\n\nvar channelId string // Channel ID\nvar body platformclientv2.[]Channeltopic // Body\nvar ignoreErrors bool // Optionally prevent throwing of errors for failed permissions checks.\n// Add a list of subscriptions to the existing list of subscriptions\ndata, response, err := apiInstance.PostNotificationsChannelSubscriptions(channelId, body, ignoreErrors)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostNotificationsChannelSubscriptions: %v\\n\", err)\n}"
  },
  "postnotificationschannels": {
    "operationId": "postnotificationschannels",
    "functionName": "PostNotificationsChannels",
    "signature": "PostNotificationsChannels()",
    "return": "Channel",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewNotificationsApiWithConfig(config)\n\n// Create a new channel\ndata, response, err := apiInstance.PostNotificationsChannels()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostNotificationsChannels: %v\\n\", err)\n}"
  },
  "putnotificationschannelsubscriptions": {
    "operationId": "putnotificationschannelsubscriptions",
    "functionName": "PutNotificationsChannelSubscriptions",
    "signature": "PutNotificationsChannelSubscriptions(channelId, body, ignoreErrors)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Channeltopic",
        "required": "true"
      },
      {
        "name": "ignoreErrors",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Channeltopicentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewNotificationsApiWithConfig(config)\n\nvar channelId string // Channel ID\nvar body platformclientv2.[]Channeltopic // Body\nvar ignoreErrors bool // Optionally prevent throwing of errors for failed permissions checks.\n// Replace the current list of subscriptions with a new list.\ndata, response, err := apiInstance.PutNotificationsChannelSubscriptions(channelId, body, ignoreErrors)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutNotificationsChannelSubscriptions: %v\\n\", err)\n}"
  },
  "deleteoauthclient": {
    "operationId": "deleteoauthclient",
    "functionName": "DeleteOauthClient",
    "signature": "DeleteOauthClient(clientId)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\nvar clientId string // Client ID\n// Delete OAuth Client\nresponse, err := apiInstance.DeleteOauthClient(clientId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOauthClient: %v\\n\", err)\n}"
  },
  "getoauthauthorization": {
    "operationId": "getoauthauthorization",
    "functionName": "GetOauthAuthorization",
    "signature": "GetOauthAuthorization(clientId, acceptLanguage)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "acceptLanguage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Oauthauthorization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\nvar clientId string // The ID of client\nvar acceptLanguage string // The language in which to display the client descriptions.\n// Get a client that is authorized by the resource owner\ndata, response, err := apiInstance.GetOauthAuthorization(clientId, acceptLanguage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOauthAuthorization: %v\\n\", err)\n}"
  },
  "getoauthauthorizations": {
    "operationId": "getoauthauthorizations",
    "functionName": "GetOauthAuthorizations",
    "signature": "GetOauthAuthorizations(acceptLanguage)",
    "parameters": [
      {
        "name": "acceptLanguage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Oauthauthorizationlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\nvar acceptLanguage string // The language in which to display the client descriptions.\n// List clients that have been authorized, requested, or revoked by the resource owner\ndata, response, err := apiInstance.GetOauthAuthorizations(acceptLanguage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOauthAuthorizations: %v\\n\", err)\n}"
  },
  "getoauthclient": {
    "operationId": "getoauthclient",
    "functionName": "GetOauthClient",
    "signature": "GetOauthClient(clientId)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Oauthclient",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\nvar clientId string // Client ID\n// Get OAuth Client\ndata, response, err := apiInstance.GetOauthClient(clientId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOauthClient: %v\\n\", err)\n}"
  },
  "getoauthclientusagequeryresult": {
    "operationId": "getoauthclientusagequeryresult",
    "functionName": "GetOauthClientUsageQueryResult",
    "signature": "GetOauthClientUsageQueryResult(executionId, clientId)",
    "parameters": [
      {
        "name": "executionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Apiusagequeryresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsageApiWithConfig(config)\n\nvar executionId string // ID of the query execution\nvar clientId string // Client ID\n// Get the results of a usage query\ndata, response, err := apiInstance.GetOauthClientUsageQueryResult(executionId, clientId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOauthClientUsageQueryResult: %v\\n\", err)\n}"
  },
  "getoauthclientusagesummary": {
    "operationId": "getoauthclientusagesummary",
    "functionName": "GetOauthClientUsageSummary",
    "signature": "GetOauthClientUsageSummary(clientId, days)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "days",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Usageexecutionresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsageApiWithConfig(config)\n\nvar clientId string // Client ID\nvar days string // Previous number of days to query\n// Get a summary of OAuth client API usage\ndata, response, err := apiInstance.GetOauthClientUsageSummary(clientId, days)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOauthClientUsageSummary: %v\\n\", err)\n}"
  },
  "getoauthclients": {
    "operationId": "getoauthclients",
    "functionName": "GetOauthClients",
    "signature": "GetOauthClients()",
    "return": "Oauthcliententitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\n// The list of OAuth clients\ndata, response, err := apiInstance.GetOauthClients()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOauthClients: %v\\n\", err)\n}"
  },
  "getoauthscope": {
    "operationId": "getoauthscope",
    "functionName": "GetOauthScope",
    "signature": "GetOauthScope(scopeId, acceptLanguage)",
    "parameters": [
      {
        "name": "scopeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "acceptLanguage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Oauthscope",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\nvar scopeId string // Scope ID\nvar acceptLanguage string // The language with which to display the scope description.\n// An OAuth scope\ndata, response, err := apiInstance.GetOauthScope(scopeId, acceptLanguage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOauthScope: %v\\n\", err)\n}"
  },
  "getoauthscopes": {
    "operationId": "getoauthscopes",
    "functionName": "GetOauthScopes",
    "signature": "GetOauthScopes(acceptLanguage)",
    "parameters": [
      {
        "name": "acceptLanguage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Oauthscopelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\nvar acceptLanguage string // The language with which to display the scope descriptions.\n// The list of OAuth scopes\ndata, response, err := apiInstance.GetOauthScopes(acceptLanguage)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOauthScopes: %v\\n\", err)\n}"
  },
  "postoauthclientsecret": {
    "operationId": "postoauthclientsecret",
    "functionName": "PostOauthClientSecret",
    "signature": "PostOauthClientSecret(clientId)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Oauthclient",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\nvar clientId string // Client ID\n// Regenerate Client Secret\ndata, response, err := apiInstance.PostOauthClientSecret(clientId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOauthClientSecret: %v\\n\", err)\n}"
  },
  "postoauthclientusagequery": {
    "operationId": "postoauthclientusagequery",
    "functionName": "PostOauthClientUsageQuery",
    "signature": "PostOauthClientUsageQuery(clientId, body)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Apiusageclientquery",
        "required": "true"
      }
    ],
    "return": "Usageexecutionresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsageApiWithConfig(config)\n\nvar clientId string // Client ID\nvar body platformclientv2.Apiusageclientquery // Query\n// Query for OAuth client API usage\ndata, response, err := apiInstance.PostOauthClientUsageQuery(clientId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOauthClientUsageQuery: %v\\n\", err)\n}"
  },
  "postoauthclients": {
    "operationId": "postoauthclients",
    "functionName": "PostOauthClients",
    "signature": "PostOauthClients(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Oauthclientrequest",
        "required": "true"
      }
    ],
    "return": "Oauthclient",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\nvar body platformclientv2.Oauthclientrequest // Client\n// Create OAuth client\ndata, response, err := apiInstance.PostOauthClients(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOauthClients: %v\\n\", err)\n}"
  },
  "putoauthclient": {
    "operationId": "putoauthclient",
    "functionName": "PutOauthClient",
    "signature": "PutOauthClient(clientId, body)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Oauthclientrequest",
        "required": "true"
      }
    ],
    "return": "Oauthclient",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOAuthApiWithConfig(config)\n\nvar clientId string // Client ID\nvar body platformclientv2.Oauthclientrequest // Client\n// Update OAuth Client\ndata, response, err := apiInstance.PutOauthClient(clientId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOauthClient: %v\\n\", err)\n}"
  },
  "getusageeventsdefinition": {
    "operationId": "getusageeventsdefinition",
    "functionName": "GetUsageEventsDefinition",
    "signature": "GetUsageEventsDefinition(eventDefinitionId)",
    "parameters": [
      {
        "name": "eventDefinitionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Eventdefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOperationalEventsApiWithConfig(config)\n\nvar eventDefinitionId string // EventDefinition id\n// Get an operational event definition by its id\ndata, response, err := apiInstance.GetUsageEventsDefinition(eventDefinitionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsageEventsDefinition: %v\\n\", err)\n}"
  },
  "getusageeventsdefinitions": {
    "operationId": "getusageeventsdefinitions",
    "functionName": "GetUsageEventsDefinitions",
    "signature": "GetUsageEventsDefinitions()",
    "return": "Eventdefinitionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOperationalEventsApiWithConfig(config)\n\n// Get all operational event definitions\ndata, response, err := apiInstance.GetUsageEventsDefinitions()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsageEventsDefinitions: %v\\n\", err)\n}"
  },
  "getorganizationsauthenticationsettings": {
    "operationId": "getorganizationsauthenticationsettings",
    "functionName": "GetOrganizationsAuthenticationSettings",
    "signature": "GetOrganizationsAuthenticationSettings()",
    "return": "Orgauthsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\n// Gets the organization's settings\ndata, response, err := apiInstance.GetOrganizationsAuthenticationSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsAuthenticationSettings: %v\\n\", err)\n}"
  },
  "getorganizationsembeddedintegration": {
    "operationId": "getorganizationsembeddedintegration",
    "functionName": "GetOrganizationsEmbeddedintegration",
    "signature": "GetOrganizationsEmbeddedintegration()",
    "return": "Embeddedintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\n// Get the list of domains that will be allowed to embed PureCloud applications\ndata, response, err := apiInstance.GetOrganizationsEmbeddedintegration()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsEmbeddedintegration: %v\\n\", err)\n}"
  },
  "getorganizationsipaddressauthentication": {
    "operationId": "getorganizationsipaddressauthentication",
    "functionName": "GetOrganizationsIpaddressauthentication",
    "signature": "GetOrganizationsIpaddressauthentication()",
    "return": "Ipaddressauthentication",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\n// Get organization IP address whitelist settings\ndata, response, err := apiInstance.GetOrganizationsIpaddressauthentication()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsIpaddressauthentication: %v\\n\", err)\n}"
  },
  "getorganizationslimitschangerequest": {
    "operationId": "getorganizationslimitschangerequest",
    "functionName": "GetOrganizationsLimitsChangerequest",
    "signature": "GetOrganizationsLimitsChangerequest(requestId)",
    "parameters": [
      {
        "name": "requestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Limitchangerequestdetails",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar requestId string // Unique id for the limit change request\n// Get a limit change request\ndata, response, err := apiInstance.GetOrganizationsLimitsChangerequest(requestId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsLimitsChangerequest: %v\\n\", err)\n}"
  },
  "getorganizationslimitschangerequests": {
    "operationId": "getorganizationslimitschangerequests",
    "functionName": "GetOrganizationsLimitsChangerequests",
    "signature": "GetOrganizationsLimitsChangerequests(after, before, status, pageSize, expand)",
    "parameters": [
      {
        "name": "after",
        "type": "int",
        "required": "false"
      },
      {
        "name": "before",
        "type": "int",
        "required": "false"
      },
      {
        "name": "status",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Limitchangerequestsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar after int // Timestamp indicating the date to begin after when searching for requests.\nvar before int // Timestamp indicating the date to end before when searching for requests.\nvar status string // Status of the request to be filtered by\nvar pageSize int // Page Size\nvar expand []string // Which fields, if any, to expand.\n// Get the available limit change requests\ndata, response, err := apiInstance.GetOrganizationsLimitsChangerequests(after, before, status, pageSize, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsLimitsChangerequests: %v\\n\", err)\n}"
  },
  "getorganizationslimitsdocs": {
    "operationId": "getorganizationslimitsdocs",
    "functionName": "GetOrganizationsLimitsDocs",
    "signature": "GetOrganizationsLimitsDocs()",
    "return": "Urlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\n// Get a link to the limit documentation\ndata, response, err := apiInstance.GetOrganizationsLimitsDocs()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsLimitsDocs: %v\\n\", err)\n}"
  },
  "getorganizationslimitsnamespace": {
    "operationId": "getorganizationslimitsnamespace",
    "functionName": "GetOrganizationsLimitsNamespace",
    "signature": "GetOrganizationsLimitsNamespace(namespaceName)",
    "parameters": [
      {
        "name": "namespaceName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Limitsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar namespaceName string // The namespace to fetch limits for\n// Get the effective limits in a namespace for an organization\ndata, response, err := apiInstance.GetOrganizationsLimitsNamespace(namespaceName)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsLimitsNamespace: %v\\n\", err)\n}"
  },
  "getorganizationslimitsnamespacedefaults": {
    "operationId": "getorganizationslimitsnamespacedefaults",
    "functionName": "GetOrganizationsLimitsNamespaceDefaults",
    "signature": "GetOrganizationsLimitsNamespaceDefaults(namespaceName)",
    "parameters": [
      {
        "name": "namespaceName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Limitsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar namespaceName string // The namespace to fetch defaults limits for\n// Get the default limits in a namespace for an organization\ndata, response, err := apiInstance.GetOrganizationsLimitsNamespaceDefaults(namespaceName)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsLimitsNamespaceDefaults: %v\\n\", err)\n}"
  },
  "getorganizationslimitsnamespaces": {
    "operationId": "getorganizationslimitsnamespaces",
    "functionName": "GetOrganizationsLimitsNamespaces",
    "signature": "GetOrganizationsLimitsNamespaces(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get the available limit namespaces\ndata, response, err := apiInstance.GetOrganizationsLimitsNamespaces(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsLimitsNamespaces: %v\\n\", err)\n}"
  },
  "getorganizationsme": {
    "operationId": "getorganizationsme",
    "functionName": "GetOrganizationsMe",
    "signature": "GetOrganizationsMe()",
    "return": "Organization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\n// Get organization.\ndata, response, err := apiInstance.GetOrganizationsMe()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsMe: %v\\n\", err)\n}"
  },
  "getorganizationswhitelist": {
    "operationId": "getorganizationswhitelist",
    "functionName": "GetOrganizationsWhitelist",
    "signature": "GetOrganizationsWhitelist()",
    "return": "Orgwhitelistsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\n// This route is deprecated, please use /api/v2/organizations/authentication/settings instead\ndata, response, err := apiInstance.GetOrganizationsWhitelist()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrganizationsWhitelist: %v\\n\", err)\n}"
  },
  "patchorganizationsauthenticationsettings": {
    "operationId": "patchorganizationsauthenticationsettings",
    "functionName": "PatchOrganizationsAuthenticationSettings",
    "signature": "PatchOrganizationsAuthenticationSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Orgauthsettings",
        "required": "true"
      }
    ],
    "return": "Orgauthsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar body platformclientv2.Orgauthsettings // Org settings\n// Update the organization's settings\ndata, response, err := apiInstance.PatchOrganizationsAuthenticationSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchOrganizationsAuthenticationSettings: %v\\n\", err)\n}"
  },
  "patchorganizationsfeature": {
    "operationId": "patchorganizationsfeature",
    "functionName": "PatchOrganizationsFeature",
    "signature": "PatchOrganizationsFeature(featureName, enabled)",
    "parameters": [
      {
        "name": "featureName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "enabled",
        "type": "Featurestate",
        "required": "true"
      }
    ],
    "return": "Organizationfeatures",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar featureName string // Organization feature\nvar enabled platformclientv2.Featurestate // New state of feature\n// Update organization\ndata, response, err := apiInstance.PatchOrganizationsFeature(featureName, enabled)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchOrganizationsFeature: %v\\n\", err)\n}"
  },
  "putorganizationsembeddedintegration": {
    "operationId": "putorganizationsembeddedintegration",
    "functionName": "PutOrganizationsEmbeddedintegration",
    "signature": "PutOrganizationsEmbeddedintegration(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Embeddedintegration",
        "required": "true"
      }
    ],
    "return": "Embeddedintegration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar body platformclientv2.Embeddedintegration // Whitelist settings\n// Update the list of domains that will be allowed to embed PureCloud applications\ndata, response, err := apiInstance.PutOrganizationsEmbeddedintegration(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrganizationsEmbeddedintegration: %v\\n\", err)\n}"
  },
  "putorganizationsipaddressauthentication": {
    "operationId": "putorganizationsipaddressauthentication",
    "functionName": "PutOrganizationsIpaddressauthentication",
    "signature": "PutOrganizationsIpaddressauthentication(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Ipaddressauthentication",
        "required": "true"
      }
    ],
    "return": "Ipaddressauthentication",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar body platformclientv2.Ipaddressauthentication // IP address Whitelist settings\n// Update organization IP address whitelist settings\ndata, response, err := apiInstance.PutOrganizationsIpaddressauthentication(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrganizationsIpaddressauthentication: %v\\n\", err)\n}"
  },
  "putorganizationsme": {
    "operationId": "putorganizationsme",
    "functionName": "PutOrganizationsMe",
    "signature": "PutOrganizationsMe(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Organization",
        "required": "false"
      }
    ],
    "return": "Organization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar body platformclientv2.Organization // Organization\n// Update organization.\ndata, response, err := apiInstance.PutOrganizationsMe(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrganizationsMe: %v\\n\", err)\n}"
  },
  "putorganizationswhitelist": {
    "operationId": "putorganizationswhitelist",
    "functionName": "PutOrganizationsWhitelist",
    "signature": "PutOrganizationsWhitelist(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Orgwhitelistsettings",
        "required": "true"
      }
    ],
    "return": "Orgwhitelistsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationApiWithConfig(config)\n\nvar body platformclientv2.Orgwhitelistsettings // Whitelist settings\n// This route is deprecated, please use /api/v2/organizations/authentication/settings instead\ndata, response, err := apiInstance.PutOrganizationsWhitelist(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrganizationsWhitelist: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrustee": {
    "operationId": "deleteorgauthorizationtrustee",
    "functionName": "DeleteOrgauthorizationTrustee",
    "signature": "DeleteOrgauthorizationTrustee(trusteeOrgId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\n// Delete Org Trust\nresponse, err := apiInstance.DeleteOrgauthorizationTrustee(trusteeOrgId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrustee: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrusteecloneduser": {
    "operationId": "deleteorgauthorizationtrusteecloneduser",
    "functionName": "DeleteOrgauthorizationTrusteeCloneduser",
    "signature": "DeleteOrgauthorizationTrusteeCloneduser(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeUserId string // Id of the cloned user to delete\n// Deletes cloned user\nresponse, err := apiInstance.DeleteOrgauthorizationTrusteeCloneduser(trusteeOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrusteeCloneduser: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrusteegroup": {
    "operationId": "deleteorgauthorizationtrusteegroup",
    "functionName": "DeleteOrgauthorizationTrusteeGroup",
    "signature": "DeleteOrgauthorizationTrusteeGroup(trusteeOrgId, trusteeGroupId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeGroupId string // Trustee Group Id\n// Delete Trustee Group\nresponse, err := apiInstance.DeleteOrgauthorizationTrusteeGroup(trusteeOrgId, trusteeGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrusteeGroup: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrusteegrouproles": {
    "operationId": "deleteorgauthorizationtrusteegrouproles",
    "functionName": "DeleteOrgauthorizationTrusteeGroupRoles",
    "signature": "DeleteOrgauthorizationTrusteeGroupRoles(trusteeOrgId, trusteeGroupId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeGroupId string // Trustee Group Id\n// Delete Trustee Group Roles\nresponse, err := apiInstance.DeleteOrgauthorizationTrusteeGroupRoles(trusteeOrgId, trusteeGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrusteeGroupRoles: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrusteeuser": {
    "operationId": "deleteorgauthorizationtrusteeuser",
    "functionName": "DeleteOrgauthorizationTrusteeUser",
    "signature": "DeleteOrgauthorizationTrusteeUser(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeUserId string // Trustee User Id\n// Delete Trustee User\nresponse, err := apiInstance.DeleteOrgauthorizationTrusteeUser(trusteeOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrusteeUser: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrusteeuserroles": {
    "operationId": "deleteorgauthorizationtrusteeuserroles",
    "functionName": "DeleteOrgauthorizationTrusteeUserRoles",
    "signature": "DeleteOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeUserId string // Trustee User Id\n// Delete Trustee User Roles\nresponse, err := apiInstance.DeleteOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrusteeUserRoles: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrustees": {
    "operationId": "deleteorgauthorizationtrustees",
    "functionName": "DeleteOrgauthorizationTrustees",
    "signature": "DeleteOrgauthorizationTrustees(id)",
    "parameters": [
      {
        "name": "id",
        "type": "[]string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar id []string // Comma separated list of trustee ids to remove\n// Delete Bulk Org Trustees\nresponse, err := apiInstance.DeleteOrgauthorizationTrustees(id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrustees: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrustor": {
    "operationId": "deleteorgauthorizationtrustor",
    "functionName": "DeleteOrgauthorizationTrustor",
    "signature": "DeleteOrgauthorizationTrustor(trustorOrgId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\n// Delete Org Trust\nresponse, err := apiInstance.DeleteOrgauthorizationTrustor(trustorOrgId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrustor: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrustorcloneduser": {
    "operationId": "deleteorgauthorizationtrustorcloneduser",
    "functionName": "DeleteOrgauthorizationTrustorCloneduser",
    "signature": "DeleteOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\nvar trusteeUserId string // Trustee User Id\n// Delete Cloned User\nresponse, err := apiInstance.DeleteOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrustorCloneduser: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrustorgroup": {
    "operationId": "deleteorgauthorizationtrustorgroup",
    "functionName": "DeleteOrgauthorizationTrustorGroup",
    "signature": "DeleteOrgauthorizationTrustorGroup(trustorOrgId, trustorGroupId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trustorGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\nvar trustorGroupId string // Trustor Group Id\n// Delete Trustee Group\nresponse, err := apiInstance.DeleteOrgauthorizationTrustorGroup(trustorOrgId, trustorGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrustorGroup: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrustoruser": {
    "operationId": "deleteorgauthorizationtrustoruser",
    "functionName": "DeleteOrgauthorizationTrustorUser",
    "signature": "DeleteOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\nvar trusteeUserId string // Trustee User Id\n// Delete Trustee User\nresponse, err := apiInstance.DeleteOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrustorUser: %v\\n\", err)\n}"
  },
  "deleteorgauthorizationtrustors": {
    "operationId": "deleteorgauthorizationtrustors",
    "functionName": "DeleteOrgauthorizationTrustors",
    "signature": "DeleteOrgauthorizationTrustors(id)",
    "parameters": [
      {
        "name": "id",
        "type": "[]string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar id []string // Comma separated list of trustor ids to remove\n// Delete Bulk Org Trustors\nresponse, err := apiInstance.DeleteOrgauthorizationTrustors(id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrgauthorizationTrustors: %v\\n\", err)\n}"
  },
  "getorgauthorizationpairing": {
    "operationId": "getorgauthorizationpairing",
    "functionName": "GetOrgauthorizationPairing",
    "signature": "GetOrgauthorizationPairing(pairingId)",
    "parameters": [
      {
        "name": "pairingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustrequest",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar pairingId string // Pairing Id\n// Get Pairing Info\ndata, response, err := apiInstance.GetOrgauthorizationPairing(pairingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationPairing: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustee": {
    "operationId": "getorgauthorizationtrustee",
    "functionName": "GetOrgauthorizationTrustee",
    "signature": "GetOrgauthorizationTrustee(trusteeOrgId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustee",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\n// Get Org Trust\ndata, response, err := apiInstance.GetOrgauthorizationTrustee(trusteeOrgId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustee: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrusteeclonedusers": {
    "operationId": "getorgauthorizationtrusteeclonedusers",
    "functionName": "GetOrgauthorizationTrusteeClonedusers",
    "signature": "GetOrgauthorizationTrusteeClonedusers(trusteeOrgId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Cloneduserentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\n// The list of cloned users from the trustee organization (i.e. users with a native user record).\ndata, response, err := apiInstance.GetOrgauthorizationTrusteeClonedusers(trusteeOrgId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrusteeClonedusers: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrusteegroup": {
    "operationId": "getorgauthorizationtrusteegroup",
    "functionName": "GetOrgauthorizationTrusteeGroup",
    "signature": "GetOrgauthorizationTrusteeGroup(trusteeOrgId, trusteeGroupId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustgroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeGroupId string // Trustee Group Id\n// Get Trustee Group\ndata, response, err := apiInstance.GetOrgauthorizationTrusteeGroup(trusteeOrgId, trusteeGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrusteeGroup: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrusteegrouproles": {
    "operationId": "getorgauthorizationtrusteegrouproles",
    "functionName": "GetOrgauthorizationTrusteeGroupRoles",
    "signature": "GetOrgauthorizationTrusteeGroupRoles(trusteeOrgId, trusteeGroupId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userauthorization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeGroupId string // Trustee Group Id\n// Get Trustee Group Roles\ndata, response, err := apiInstance.GetOrgauthorizationTrusteeGroupRoles(trusteeOrgId, trusteeGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrusteeGroupRoles: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrusteegroups": {
    "operationId": "getorgauthorizationtrusteegroups",
    "functionName": "GetOrgauthorizationTrusteeGroups",
    "signature": "GetOrgauthorizationTrusteeGroups(trusteeOrgId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Trustgroupentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// The list of trustee groups for this organization (i.e. groups granted access to this organization).\ndata, response, err := apiInstance.GetOrgauthorizationTrusteeGroups(trusteeOrgId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrusteeGroups: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrusteeuser": {
    "operationId": "getorgauthorizationtrusteeuser",
    "functionName": "GetOrgauthorizationTrusteeUser",
    "signature": "GetOrgauthorizationTrusteeUser(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustuser",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeUserId string // Trustee User Id\n// Get Trustee User\ndata, response, err := apiInstance.GetOrgauthorizationTrusteeUser(trusteeOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrusteeUser: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrusteeuserroles": {
    "operationId": "getorgauthorizationtrusteeuserroles",
    "functionName": "GetOrgauthorizationTrusteeUserRoles",
    "signature": "GetOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userauthorization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeUserId string // Trustee User Id\n// Get Trustee User Roles\ndata, response, err := apiInstance.GetOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrusteeUserRoles: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrusteeusers": {
    "operationId": "getorgauthorizationtrusteeusers",
    "functionName": "GetOrgauthorizationTrusteeUsers",
    "signature": "GetOrgauthorizationTrusteeUsers(trusteeOrgId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Trustuserentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// The list of trustee users for this organization (i.e. users granted access to this organization).\ndata, response, err := apiInstance.GetOrgauthorizationTrusteeUsers(trusteeOrgId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrusteeUsers: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustees": {
    "operationId": "getorgauthorizationtrustees",
    "functionName": "GetOrgauthorizationTrustees",
    "signature": "GetOrgauthorizationTrustees(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Trustentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// The list of trustees for this organization (i.e. organizations granted access to this organization).\ndata, response, err := apiInstance.GetOrgauthorizationTrustees(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustees: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrusteesdefault": {
    "operationId": "getorgauthorizationtrusteesdefault",
    "functionName": "GetOrgauthorizationTrusteesDefault",
    "signature": "GetOrgauthorizationTrusteesDefault()",
    "return": "Trustee",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\n// Get organization authorization trust with Customer Care, if one exists.\ndata, response, err := apiInstance.GetOrgauthorizationTrusteesDefault()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrusteesDefault: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustor": {
    "operationId": "getorgauthorizationtrustor",
    "functionName": "GetOrgauthorizationTrustor",
    "signature": "GetOrgauthorizationTrustor(trustorOrgId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustor",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\n// Get Org Trust\ndata, response, err := apiInstance.GetOrgauthorizationTrustor(trustorOrgId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustor: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustorcloneduser": {
    "operationId": "getorgauthorizationtrustorcloneduser",
    "functionName": "GetOrgauthorizationTrustorCloneduser",
    "signature": "GetOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Cloneduser",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\nvar trusteeUserId string // Trustee User Id\n// Get Cloned User\ndata, response, err := apiInstance.GetOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustorCloneduser: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustorclonedusers": {
    "operationId": "getorgauthorizationtrustorclonedusers",
    "functionName": "GetOrgauthorizationTrustorClonedusers",
    "signature": "GetOrgauthorizationTrustorClonedusers(trustorOrgId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Cloneduserentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\n// The list of cloned users in the trustor organization (i.e. users with a native user record).\ndata, response, err := apiInstance.GetOrgauthorizationTrustorClonedusers(trustorOrgId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustorClonedusers: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustorgroup": {
    "operationId": "getorgauthorizationtrustorgroup",
    "functionName": "GetOrgauthorizationTrustorGroup",
    "signature": "GetOrgauthorizationTrustorGroup(trustorOrgId, trustorGroupId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trustorGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustgroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\nvar trustorGroupId string // Trustor Group Id\n// Get Trustee Group\ndata, response, err := apiInstance.GetOrgauthorizationTrustorGroup(trustorOrgId, trustorGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustorGroup: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustorgroups": {
    "operationId": "getorgauthorizationtrustorgroups",
    "functionName": "GetOrgauthorizationTrustorGroups",
    "signature": "GetOrgauthorizationTrustorGroups(trustorOrgId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Trustgroupentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustee Organization Id\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// The list of groups in the trustor organization (i.e. groups granted access).\ndata, response, err := apiInstance.GetOrgauthorizationTrustorGroups(trustorOrgId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustorGroups: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustoruser": {
    "operationId": "getorgauthorizationtrustoruser",
    "functionName": "GetOrgauthorizationTrustorUser",
    "signature": "GetOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustuser",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\nvar trusteeUserId string // Trustee User Id\n// Get Trustee User\ndata, response, err := apiInstance.GetOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustorUser: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustorusers": {
    "operationId": "getorgauthorizationtrustorusers",
    "functionName": "GetOrgauthorizationTrustorUsers",
    "signature": "GetOrgauthorizationTrustorUsers(trustorOrgId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Trustuserentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustee Organization Id\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// The list of users in the trustor organization (i.e. users granted access).\ndata, response, err := apiInstance.GetOrgauthorizationTrustorUsers(trustorOrgId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustorUsers: %v\\n\", err)\n}"
  },
  "getorgauthorizationtrustors": {
    "operationId": "getorgauthorizationtrustors",
    "functionName": "GetOrgauthorizationTrustors",
    "signature": "GetOrgauthorizationTrustors(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Trustorentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// The list of organizations that have authorized/trusted your organization.\ndata, response, err := apiInstance.GetOrgauthorizationTrustors(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrgauthorizationTrustors: %v\\n\", err)\n}"
  },
  "postorgauthorizationpairings": {
    "operationId": "postorgauthorizationpairings",
    "functionName": "PostOrgauthorizationPairings",
    "signature": "PostOrgauthorizationPairings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Trustrequestcreate",
        "required": "true"
      }
    ],
    "return": "Trustrequest",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar body platformclientv2.Trustrequestcreate // Pairing Info\n// A pairing id is created by the trustee and given to the trustor to create a trust.\ndata, response, err := apiInstance.PostOrgauthorizationPairings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOrgauthorizationPairings: %v\\n\", err)\n}"
  },
  "postorgauthorizationtrusteegroups": {
    "operationId": "postorgauthorizationtrusteegroups",
    "functionName": "PostOrgauthorizationTrusteeGroups",
    "signature": "PostOrgauthorizationTrusteeGroups(trusteeOrgId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Trustmembercreate",
        "required": "true"
      }
    ],
    "return": "Trustgroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar body platformclientv2.Trustmembercreate // Trust\n// Add a group to the trust.\ndata, response, err := apiInstance.PostOrgauthorizationTrusteeGroups(trusteeOrgId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOrgauthorizationTrusteeGroups: %v\\n\", err)\n}"
  },
  "postorgauthorizationtrusteeusers": {
    "operationId": "postorgauthorizationtrusteeusers",
    "functionName": "PostOrgauthorizationTrusteeUsers",
    "signature": "PostOrgauthorizationTrusteeUsers(trusteeOrgId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Trustmembercreate",
        "required": "true"
      }
    ],
    "return": "Trustuser",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar body platformclientv2.Trustmembercreate // Trust\n// Add a user to the trust.\ndata, response, err := apiInstance.PostOrgauthorizationTrusteeUsers(trusteeOrgId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOrgauthorizationTrusteeUsers: %v\\n\", err)\n}"
  },
  "postorgauthorizationtrustees": {
    "operationId": "postorgauthorizationtrustees",
    "functionName": "PostOrgauthorizationTrustees",
    "signature": "PostOrgauthorizationTrustees(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Trustcreate",
        "required": "true"
      }
    ],
    "return": "Trustee",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar body platformclientv2.Trustcreate // Trust\n// Create a new organization authorization trust. This is required to grant other organizations access to your organization.\ndata, response, err := apiInstance.PostOrgauthorizationTrustees(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOrgauthorizationTrustees: %v\\n\", err)\n}"
  },
  "postorgauthorizationtrusteesaudits": {
    "operationId": "postorgauthorizationtrusteesaudits",
    "functionName": "PostOrgauthorizationTrusteesAudits",
    "signature": "PostOrgauthorizationTrusteesAudits(body, pageSize, pageNumber, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "body",
        "type": "Trusteeauditqueryrequest",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar body platformclientv2.Trusteeauditqueryrequest // Values to scope the request.\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Get Org Trustee Audits\ndata, response, err := apiInstance.PostOrgauthorizationTrusteesAudits(body, pageSize, pageNumber, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOrgauthorizationTrusteesAudits: %v\\n\", err)\n}"
  },
  "postorgauthorizationtrusteesdefault": {
    "operationId": "postorgauthorizationtrusteesdefault",
    "functionName": "PostOrgauthorizationTrusteesDefault",
    "signature": "PostOrgauthorizationTrusteesDefault(assignDefaultRole, autoExpire)",
    "parameters": [
      {
        "name": "assignDefaultRole",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "autoExpire",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Trustee",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar assignDefaultRole bool // Assign Admin role to default pairing with Customer Care\nvar autoExpire bool // Automatically expire pairing after 30 days\n// Create a new organization authorization trust with Customer Care. This is required to grant your regional Customer Care organization access to your organization.\ndata, response, err := apiInstance.PostOrgauthorizationTrusteesDefault(assignDefaultRole, autoExpire)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOrgauthorizationTrusteesDefault: %v\\n\", err)\n}"
  },
  "postorgauthorizationtrustoraudits": {
    "operationId": "postorgauthorizationtrustoraudits",
    "functionName": "PostOrgauthorizationTrustorAudits",
    "signature": "PostOrgauthorizationTrustorAudits(body, pageSize, pageNumber, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "body",
        "type": "Trustorauditqueryrequest",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar body platformclientv2.Trustorauditqueryrequest // Values to scope the request.\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Get Org Trustor Audits\ndata, response, err := apiInstance.PostOrgauthorizationTrustorAudits(body, pageSize, pageNumber, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOrgauthorizationTrustorAudits: %v\\n\", err)\n}"
  },
  "putorgauthorizationtrustee": {
    "operationId": "putorgauthorizationtrustee",
    "functionName": "PutOrgauthorizationTrustee",
    "signature": "PutOrgauthorizationTrustee(trusteeOrgId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Trustupdate",
        "required": "true"
      }
    ],
    "return": "Trustee",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar body platformclientv2.Trustupdate // Client\n// Update Org Trust\ndata, response, err := apiInstance.PutOrgauthorizationTrustee(trusteeOrgId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrgauthorizationTrustee: %v\\n\", err)\n}"
  },
  "putorgauthorizationtrusteegrouproledivisions": {
    "operationId": "putorgauthorizationtrusteegrouproledivisions",
    "functionName": "PutOrgauthorizationTrusteeGroupRoledivisions",
    "signature": "PutOrgauthorizationTrusteeGroupRoledivisions(trusteeOrgId, trusteeGroupId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Roledivisiongrants",
        "required": "true"
      }
    ],
    "return": "Userauthorization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeGroupId string // Trustee Group Id\nvar body platformclientv2.Roledivisiongrants // Set of roles with corresponding divisions to apply\n// Update Trustee Group Roles\ndata, response, err := apiInstance.PutOrgauthorizationTrusteeGroupRoledivisions(trusteeOrgId, trusteeGroupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrgauthorizationTrusteeGroupRoledivisions: %v\\n\", err)\n}"
  },
  "putorgauthorizationtrusteegrouproles": {
    "operationId": "putorgauthorizationtrusteegrouproles",
    "functionName": "PutOrgauthorizationTrusteeGroupRoles",
    "signature": "PutOrgauthorizationTrusteeGroupRoles(trusteeOrgId, trusteeGroupId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "Userauthorization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeGroupId string // Trustee Group Id\nvar body platformclientv2.[]string // List of roles\n// Update Trustee Group Roles\ndata, response, err := apiInstance.PutOrgauthorizationTrusteeGroupRoles(trusteeOrgId, trusteeGroupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrgauthorizationTrusteeGroupRoles: %v\\n\", err)\n}"
  },
  "putorgauthorizationtrusteeuserroledivisions": {
    "operationId": "putorgauthorizationtrusteeuserroledivisions",
    "functionName": "PutOrgauthorizationTrusteeUserRoledivisions",
    "signature": "PutOrgauthorizationTrusteeUserRoledivisions(trusteeOrgId, trusteeUserId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Roledivisiongrants",
        "required": "true"
      }
    ],
    "return": "Userauthorization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeUserId string // Trustee User Id\nvar body platformclientv2.Roledivisiongrants // Set of roles with corresponding divisions to apply\n// Update Trustee User Roles\ndata, response, err := apiInstance.PutOrgauthorizationTrusteeUserRoledivisions(trusteeOrgId, trusteeUserId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrgauthorizationTrusteeUserRoledivisions: %v\\n\", err)\n}"
  },
  "putorgauthorizationtrusteeuserroles": {
    "operationId": "putorgauthorizationtrusteeuserroles",
    "functionName": "PutOrgauthorizationTrusteeUserRoles",
    "signature": "PutOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "Userauthorization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trusteeOrgId string // Trustee Organization Id\nvar trusteeUserId string // Trustee User Id\nvar body platformclientv2.[]string // List of roles\n// Update Trustee User Roles\ndata, response, err := apiInstance.PutOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrgauthorizationTrusteeUserRoles: %v\\n\", err)\n}"
  },
  "putorgauthorizationtrustorcloneduser": {
    "operationId": "putorgauthorizationtrustorcloneduser",
    "functionName": "PutOrgauthorizationTrustorCloneduser",
    "signature": "PutOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Cloneduser",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\nvar trusteeUserId string // Trustee User Id\n// Creates a clone of the trustee user in the trustor org.\ndata, response, err := apiInstance.PutOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrgauthorizationTrustorCloneduser: %v\\n\", err)\n}"
  },
  "putorgauthorizationtrustorgroup": {
    "operationId": "putorgauthorizationtrustorgroup",
    "functionName": "PutOrgauthorizationTrustorGroup",
    "signature": "PutOrgauthorizationTrustorGroup(trustorOrgId, trustorGroupId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trustorGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustgroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\nvar trustorGroupId string // Trustor Group Id\n// Add a Trustee Group to the trust.\ndata, response, err := apiInstance.PutOrgauthorizationTrustorGroup(trustorOrgId, trustorGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrgauthorizationTrustorGroup: %v\\n\", err)\n}"
  },
  "putorgauthorizationtrustoruser": {
    "operationId": "putorgauthorizationtrustoruser",
    "functionName": "PutOrgauthorizationTrustorUser",
    "signature": "PutOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustuser",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOrganizationAuthorizationApiWithConfig(config)\n\nvar trustorOrgId string // Trustor Organization Id\nvar trusteeUserId string // Trustee User Id\n// Add a Trustee user to the trust.\ndata, response, err := apiInstance.PutOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrgauthorizationTrustorUser: %v\\n\", err)\n}"
  },
  "deleteoutboundattemptlimit": {
    "operationId": "deleteoutboundattemptlimit",
    "functionName": "DeleteOutboundAttemptlimit",
    "signature": "DeleteOutboundAttemptlimit(attemptLimitsId)",
    "parameters": [
      {
        "name": "attemptLimitsId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar attemptLimitsId string // Attempt limits ID\n// Delete attempt limits\nresponse, err := apiInstance.DeleteOutboundAttemptlimit(attemptLimitsId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundAttemptlimit: %v\\n\", err)\n}"
  },
  "deleteoutboundcallabletimeset": {
    "operationId": "deleteoutboundcallabletimeset",
    "functionName": "DeleteOutboundCallabletimeset",
    "signature": "DeleteOutboundCallabletimeset(callableTimeSetId)",
    "parameters": [
      {
        "name": "callableTimeSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar callableTimeSetId string // Callable Time Set ID\n// Delete callable time set\nresponse, err := apiInstance.DeleteOutboundCallabletimeset(callableTimeSetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundCallabletimeset: %v\\n\", err)\n}"
  },
  "deleteoutboundcallanalysisresponseset": {
    "operationId": "deleteoutboundcallanalysisresponseset",
    "functionName": "DeleteOutboundCallanalysisresponseset",
    "signature": "DeleteOutboundCallanalysisresponseset(callAnalysisSetId)",
    "parameters": [
      {
        "name": "callAnalysisSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar callAnalysisSetId string // Call Analysis Response Set ID\n// Delete a dialer call analysis response set.\nresponse, err := apiInstance.DeleteOutboundCallanalysisresponseset(callAnalysisSetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundCallanalysisresponseset: %v\\n\", err)\n}"
  },
  "deleteoutboundcampaign": {
    "operationId": "deleteoutboundcampaign",
    "functionName": "DeleteOutboundCampaign",
    "signature": "DeleteOutboundCampaign(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Delete a campaign.\ndata, response, err := apiInstance.DeleteOutboundCampaign(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundCampaign: %v\\n\", err)\n}"
  },
  "deleteoutboundcampaignprogress": {
    "operationId": "deleteoutboundcampaignprogress",
    "functionName": "DeleteOutboundCampaignProgress",
    "signature": "DeleteOutboundCampaignProgress(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Reset campaign progress and recycle the campaign\nresponse, err := apiInstance.DeleteOutboundCampaignProgress(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundCampaignProgress: %v\\n\", err)\n}"
  },
  "deleteoutboundcampaignrule": {
    "operationId": "deleteoutboundcampaignrule",
    "functionName": "DeleteOutboundCampaignrule",
    "signature": "DeleteOutboundCampaignrule(campaignRuleId)",
    "parameters": [
      {
        "name": "campaignRuleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignRuleId string // Campaign Rule ID\n// Delete Campaign Rule\nresponse, err := apiInstance.DeleteOutboundCampaignrule(campaignRuleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundCampaignrule: %v\\n\", err)\n}"
  },
  "deleteoutboundcontactlist": {
    "operationId": "deleteoutboundcontactlist",
    "functionName": "DeleteOutboundContactlist",
    "signature": "DeleteOutboundContactlist(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // ContactList ID\n// Delete a contact list.\nresponse, err := apiInstance.DeleteOutboundContactlist(contactListId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundContactlist: %v\\n\", err)\n}"
  },
  "deleteoutboundcontactlistcontact": {
    "operationId": "deleteoutboundcontactlistcontact",
    "functionName": "DeleteOutboundContactlistContact",
    "signature": "DeleteOutboundContactlistContact(contactListId, contactId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // Contact List ID\nvar contactId string // Contact ID\n// Delete a contact.\nresponse, err := apiInstance.DeleteOutboundContactlistContact(contactListId, contactId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundContactlistContact: %v\\n\", err)\n}"
  },
  "deleteoutboundcontactlistcontacts": {
    "operationId": "deleteoutboundcontactlistcontacts",
    "functionName": "DeleteOutboundContactlistContacts",
    "signature": "DeleteOutboundContactlistContacts(contactListId, contactIds)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contactIds",
        "type": "[]string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // Contact List ID\nvar contactIds []string // ContactIds to delete.\n// Delete contacts from a contact list.\nresponse, err := apiInstance.DeleteOutboundContactlistContacts(contactListId, contactIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundContactlistContacts: %v\\n\", err)\n}"
  },
  "deleteoutboundcontactlistfilter": {
    "operationId": "deleteoutboundcontactlistfilter",
    "functionName": "DeleteOutboundContactlistfilter",
    "signature": "DeleteOutboundContactlistfilter(contactListFilterId)",
    "parameters": [
      {
        "name": "contactListFilterId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListFilterId string // Contact List Filter ID\n// Delete Contact List Filter\nresponse, err := apiInstance.DeleteOutboundContactlistfilter(contactListFilterId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundContactlistfilter: %v\\n\", err)\n}"
  },
  "deleteoutboundcontactlists": {
    "operationId": "deleteoutboundcontactlists",
    "functionName": "DeleteOutboundContactlists",
    "signature": "DeleteOutboundContactlists(id)",
    "parameters": [
      {
        "name": "id",
        "type": "[]string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar id []string // contact list id(s) to delete\n// Delete multiple contact lists.\nresponse, err := apiInstance.DeleteOutboundContactlists(id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundContactlists: %v\\n\", err)\n}"
  },
  "deleteoutbounddigitalruleset": {
    "operationId": "deleteoutbounddigitalruleset",
    "functionName": "DeleteOutboundDigitalruleset",
    "signature": "DeleteOutboundDigitalruleset(digitalRuleSetId)",
    "parameters": [
      {
        "name": "digitalRuleSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar digitalRuleSetId string // The Digital Rule Set ID\n// Delete an Outbound Digital Rule Set\nresponse, err := apiInstance.DeleteOutboundDigitalruleset(digitalRuleSetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundDigitalruleset: %v\\n\", err)\n}"
  },
  "deleteoutbounddnclist": {
    "operationId": "deleteoutbounddnclist",
    "functionName": "DeleteOutboundDnclist",
    "signature": "DeleteOutboundDnclist(dncListId)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\n// Delete dialer DNC list\nresponse, err := apiInstance.DeleteOutboundDnclist(dncListId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundDnclist: %v\\n\", err)\n}"
  },
  "deleteoutbounddnclistcustomexclusioncolumns": {
    "operationId": "deleteoutbounddnclistcustomexclusioncolumns",
    "functionName": "DeleteOutboundDnclistCustomexclusioncolumns",
    "signature": "DeleteOutboundDnclistCustomexclusioncolumns(dncListId, expiredOnly)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expiredOnly",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar expiredOnly bool // Set to true to only remove DNC entries that are expired\n// Deletes all or expired custom exclusion column entries from a DNC list.\nresponse, err := apiInstance.DeleteOutboundDnclistCustomexclusioncolumns(dncListId, expiredOnly)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundDnclistCustomexclusioncolumns: %v\\n\", err)\n}"
  },
  "deleteoutbounddnclistemailaddresses": {
    "operationId": "deleteoutbounddnclistemailaddresses",
    "functionName": "DeleteOutboundDnclistEmailaddresses",
    "signature": "DeleteOutboundDnclistEmailaddresses(dncListId, expiredOnly)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expiredOnly",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar expiredOnly bool // Set to true to only remove DNC entries that are expired\n// Deletes all or expired email addresses from a DNC list.\nresponse, err := apiInstance.DeleteOutboundDnclistEmailaddresses(dncListId, expiredOnly)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundDnclistEmailaddresses: %v\\n\", err)\n}"
  },
  "deleteoutbounddnclistphonenumbers": {
    "operationId": "deleteoutbounddnclistphonenumbers",
    "functionName": "DeleteOutboundDnclistPhonenumbers",
    "signature": "DeleteOutboundDnclistPhonenumbers(dncListId, expiredOnly)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expiredOnly",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar expiredOnly bool // Set to true to only remove DNC entries that are expired\n// Deletes all or expired phone numbers from a DNC list.\nresponse, err := apiInstance.DeleteOutboundDnclistPhonenumbers(dncListId, expiredOnly)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundDnclistPhonenumbers: %v\\n\", err)\n}"
  },
  "deleteoutboundmessagingcampaign": {
    "operationId": "deleteoutboundmessagingcampaign",
    "functionName": "DeleteOutboundMessagingcampaign",
    "signature": "DeleteOutboundMessagingcampaign(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messagingcampaign",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // The Messaging Campaign ID\n// Delete an Outbound Messaging Campaign\ndata, response, err := apiInstance.DeleteOutboundMessagingcampaign(messagingCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundMessagingcampaign: %v\\n\", err)\n}"
  },
  "deleteoutboundmessagingcampaignprogress": {
    "operationId": "deleteoutboundmessagingcampaignprogress",
    "functionName": "DeleteOutboundMessagingcampaignProgress",
    "signature": "DeleteOutboundMessagingcampaignProgress(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // The Messaging Campaign ID\n// Reset messaging campaign progress and recycle the messaging campaign\nresponse, err := apiInstance.DeleteOutboundMessagingcampaignProgress(messagingCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundMessagingcampaignProgress: %v\\n\", err)\n}"
  },
  "deleteoutboundruleset": {
    "operationId": "deleteoutboundruleset",
    "functionName": "DeleteOutboundRuleset",
    "signature": "DeleteOutboundRuleset(ruleSetId)",
    "parameters": [
      {
        "name": "ruleSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar ruleSetId string // Rule Set ID\n// Delete a Rule Set.\nresponse, err := apiInstance.DeleteOutboundRuleset(ruleSetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundRuleset: %v\\n\", err)\n}"
  },
  "deleteoutboundschedulescampaign": {
    "operationId": "deleteoutboundschedulescampaign",
    "functionName": "DeleteOutboundSchedulesCampaign",
    "signature": "DeleteOutboundSchedulesCampaign(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Delete a dialer campaign schedule.\nresponse, err := apiInstance.DeleteOutboundSchedulesCampaign(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundSchedulesCampaign: %v\\n\", err)\n}"
  },
  "deleteoutboundschedulesemailcampaign": {
    "operationId": "deleteoutboundschedulesemailcampaign",
    "functionName": "DeleteOutboundSchedulesEmailcampaign",
    "signature": "DeleteOutboundSchedulesEmailcampaign(emailCampaignId)",
    "parameters": [
      {
        "name": "emailCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar emailCampaignId string // Email Campaign ID\n// Delete an email campaign schedule.\nresponse, err := apiInstance.DeleteOutboundSchedulesEmailcampaign(emailCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundSchedulesEmailcampaign: %v\\n\", err)\n}"
  },
  "deleteoutboundschedulesmessagingcampaign": {
    "operationId": "deleteoutboundschedulesmessagingcampaign",
    "functionName": "DeleteOutboundSchedulesMessagingcampaign",
    "signature": "DeleteOutboundSchedulesMessagingcampaign(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // Messaging Campaign ID\n// Delete a messaging campaign schedule.\nresponse, err := apiInstance.DeleteOutboundSchedulesMessagingcampaign(messagingCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundSchedulesMessagingcampaign: %v\\n\", err)\n}"
  },
  "deleteoutboundschedulessequence": {
    "operationId": "deleteoutboundschedulessequence",
    "functionName": "DeleteOutboundSchedulesSequence",
    "signature": "DeleteOutboundSchedulesSequence(sequenceId)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar sequenceId string // Sequence ID\n// Delete a dialer sequence schedule.\nresponse, err := apiInstance.DeleteOutboundSchedulesSequence(sequenceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundSchedulesSequence: %v\\n\", err)\n}"
  },
  "deleteoutboundsequence": {
    "operationId": "deleteoutboundsequence",
    "functionName": "DeleteOutboundSequence",
    "signature": "DeleteOutboundSequence(sequenceId)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar sequenceId string // Campaign Sequence ID\n// Delete a dialer campaign sequence.\nresponse, err := apiInstance.DeleteOutboundSequence(sequenceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOutboundSequence: %v\\n\", err)\n}"
  },
  "getoutboundattemptlimit": {
    "operationId": "getoutboundattemptlimit",
    "functionName": "GetOutboundAttemptlimit",
    "signature": "GetOutboundAttemptlimit(attemptLimitsId)",
    "parameters": [
      {
        "name": "attemptLimitsId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Attemptlimits",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar attemptLimitsId string // Attempt limits ID\n// Get attempt limits\ndata, response, err := apiInstance.GetOutboundAttemptlimit(attemptLimitsId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundAttemptlimit: %v\\n\", err)\n}"
  },
  "getoutboundattemptlimits": {
    "operationId": "getoutboundattemptlimits",
    "functionName": "GetOutboundAttemptlimits",
    "signature": "GetOutboundAttemptlimits(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Attemptlimitsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar allowEmptyResult bool // Whether to return an empty page when there are no results for that page\nvar filterType string // Filter type\nvar name string // Name\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query attempt limits list\ndata, response, err := apiInstance.GetOutboundAttemptlimits(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundAttemptlimits: %v\\n\", err)\n}"
  },
  "getoutboundcallabletimeset": {
    "operationId": "getoutboundcallabletimeset",
    "functionName": "GetOutboundCallabletimeset",
    "signature": "GetOutboundCallabletimeset(callableTimeSetId)",
    "parameters": [
      {
        "name": "callableTimeSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Callabletimeset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar callableTimeSetId string // Callable Time Set ID\n// Get callable time set\ndata, response, err := apiInstance.GetOutboundCallabletimeset(callableTimeSetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCallabletimeset: %v\\n\", err)\n}"
  },
  "getoutboundcallabletimesets": {
    "operationId": "getoutboundcallabletimesets",
    "functionName": "GetOutboundCallabletimesets",
    "signature": "GetOutboundCallabletimesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Callabletimesetentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar allowEmptyResult bool // Whether to return an empty page when there are no results for that page\nvar filterType string // Filter type\nvar name string // Name\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query callable time set list\ndata, response, err := apiInstance.GetOutboundCallabletimesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCallabletimesets: %v\\n\", err)\n}"
  },
  "getoutboundcallanalysisresponseset": {
    "operationId": "getoutboundcallanalysisresponseset",
    "functionName": "GetOutboundCallanalysisresponseset",
    "signature": "GetOutboundCallanalysisresponseset(callAnalysisSetId)",
    "parameters": [
      {
        "name": "callAnalysisSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Responseset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar callAnalysisSetId string // Call Analysis Response Set ID\n// Get a dialer call analysis response set.\ndata, response, err := apiInstance.GetOutboundCallanalysisresponseset(callAnalysisSetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCallanalysisresponseset: %v\\n\", err)\n}"
  },
  "getoutboundcallanalysisresponsesets": {
    "operationId": "getoutboundcallanalysisresponsesets",
    "functionName": "GetOutboundCallanalysisresponsesets",
    "signature": "GetOutboundCallanalysisresponsesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Responsesetentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar allowEmptyResult bool // Whether to return an empty page when there are no results for that page\nvar filterType string // Filter type\nvar name string // Name\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query a list of dialer call analysis response sets.\ndata, response, err := apiInstance.GetOutboundCallanalysisresponsesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCallanalysisresponsesets: %v\\n\", err)\n}"
  },
  "getoutboundcampaign": {
    "operationId": "getoutboundcampaign",
    "functionName": "GetOutboundCampaign",
    "signature": "GetOutboundCampaign(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Get dialer campaign.\ndata, response, err := apiInstance.GetOutboundCampaign(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaign: %v\\n\", err)\n}"
  },
  "getoutboundcampaignagentownedmappingpreviewresults": {
    "operationId": "getoutboundcampaignagentownedmappingpreviewresults",
    "functionName": "GetOutboundCampaignAgentownedmappingpreviewResults",
    "signature": "GetOutboundCampaignAgentownedmappingpreviewResults(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Agentownedmappingpreviewlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Get a preview of how agents will be mapped to this campaign's contact list.\ndata, response, err := apiInstance.GetOutboundCampaignAgentownedmappingpreviewResults(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignAgentownedmappingpreviewResults: %v\\n\", err)\n}"
  },
  "getoutboundcampaigndiagnostics": {
    "operationId": "getoutboundcampaigndiagnostics",
    "functionName": "GetOutboundCampaignDiagnostics",
    "signature": "GetOutboundCampaignDiagnostics(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaigndiagnostics",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Get campaign diagnostics\ndata, response, err := apiInstance.GetOutboundCampaignDiagnostics(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignDiagnostics: %v\\n\", err)\n}"
  },
  "getoutboundcampaigninteractions": {
    "operationId": "getoutboundcampaigninteractions",
    "functionName": "GetOutboundCampaignInteractions",
    "signature": "GetOutboundCampaignInteractions(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaigninteractions",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Get dialer campaign interactions.\ndata, response, err := apiInstance.GetOutboundCampaignInteractions(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignInteractions: %v\\n\", err)\n}"
  },
  "getoutboundcampaignprogress": {
    "operationId": "getoutboundcampaignprogress",
    "functionName": "GetOutboundCampaignProgress",
    "signature": "GetOutboundCampaignProgress(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaignprogress",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Get campaign progress\ndata, response, err := apiInstance.GetOutboundCampaignProgress(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignProgress: %v\\n\", err)\n}"
  },
  "getoutboundcampaignstats": {
    "operationId": "getoutboundcampaignstats",
    "functionName": "GetOutboundCampaignStats",
    "signature": "GetOutboundCampaignStats(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaignstats",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Get statistics about a Dialer Campaign\ndata, response, err := apiInstance.GetOutboundCampaignStats(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignStats: %v\\n\", err)\n}"
  },
  "getoutboundcampaignrule": {
    "operationId": "getoutboundcampaignrule",
    "functionName": "GetOutboundCampaignrule",
    "signature": "GetOutboundCampaignrule(campaignRuleId)",
    "parameters": [
      {
        "name": "campaignRuleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaignrule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignRuleId string // Campaign Rule ID\n// Get Campaign Rule\ndata, response, err := apiInstance.GetOutboundCampaignrule(campaignRuleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignrule: %v\\n\", err)\n}"
  },
  "getoutboundcampaignrules": {
    "operationId": "getoutboundcampaignrules",
    "functionName": "GetOutboundCampaignrules",
    "signature": "GetOutboundCampaignrules(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Campaignruleentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar allowEmptyResult bool // Whether to return an empty page when there are no results for that page\nvar filterType string // Filter type\nvar name string // Name\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query Campaign Rule list\ndata, response, err := apiInstance.GetOutboundCampaignrules(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignrules: %v\\n\", err)\n}"
  },
  "getoutboundcampaigns": {
    "operationId": "getoutboundcampaigns",
    "functionName": "GetOutboundCampaigns",
    "signature": "GetOutboundCampaigns(pageSize, pageNumber, filterType, name, id, contactListId, dncListIds, distributionQueueId, edgeGroupId, callAnalysisResponseSetId, divisionId, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "contactListId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dncListIds",
        "type": "string",
        "required": "false"
      },
      {
        "name": "distributionQueueId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "callAnalysisResponseSetId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Campaignentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar filterType string // Filter type\nvar name string // Name\nvar id []string // id\nvar contactListId string // Contact List ID\nvar dncListIds string // DNC list ID\nvar distributionQueueId string // Distribution queue ID\nvar edgeGroupId string // Edge group ID\nvar callAnalysisResponseSetId string // Call analysis response set ID\nvar divisionId []string // Division ID(s)\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query a list of dialer campaigns.\ndata, response, err := apiInstance.GetOutboundCampaigns(pageSize, pageNumber, filterType, name, id, contactListId, dncListIds, distributionQueueId, edgeGroupId, callAnalysisResponseSetId, divisionId, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaigns: %v\\n\", err)\n}"
  },
  "getoutboundcampaignsall": {
    "operationId": "getoutboundcampaignsall",
    "functionName": "GetOutboundCampaignsAll",
    "signature": "GetOutboundCampaignsAll(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "mediaType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Commoncampaignentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar id []string // Campaign ID(s)\nvar name string // Campaign name(s)\nvar divisionId []string // Division ID(s)\nvar mediaType []string // Media type(s)\nvar sortOrder string // Sort order\n// Query across all types of campaigns by division\ndata, response, err := apiInstance.GetOutboundCampaignsAll(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignsAll: %v\\n\", err)\n}"
  },
  "getoutboundcampaignsalldivisionviews": {
    "operationId": "getoutboundcampaignsalldivisionviews",
    "functionName": "GetOutboundCampaignsAllDivisionviews",
    "signature": "GetOutboundCampaignsAllDivisionviews(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "mediaType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Commoncampaigndivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar id []string // Campaign ID(s)\nvar name string // Campaign name(s)\nvar divisionId []string // Division ID(s)\nvar mediaType []string // Media type(s)\nvar sortOrder string // Sort order\n// Query across all types of campaigns\ndata, response, err := apiInstance.GetOutboundCampaignsAllDivisionviews(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignsAllDivisionviews: %v\\n\", err)\n}"
  },
  "getoutboundcampaignsdivisionview": {
    "operationId": "getoutboundcampaignsdivisionview",
    "functionName": "GetOutboundCampaignsDivisionview",
    "signature": "GetOutboundCampaignsDivisionview(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaigndivisionview",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Get a basic Campaign information object\ndata, response, err := apiInstance.GetOutboundCampaignsDivisionview(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignsDivisionview: %v\\n\", err)\n}"
  },
  "getoutboundcampaignsdivisionviews": {
    "operationId": "getoutboundcampaignsdivisionviews",
    "functionName": "GetOutboundCampaignsDivisionviews",
    "signature": "GetOutboundCampaignsDivisionviews(pageSize, pageNumber, filterType, name, id, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Campaigndivisionviewlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar filterType string // Filter type\nvar name string // Name\nvar id []string // id\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query a list of basic Campaign information objects\ndata, response, err := apiInstance.GetOutboundCampaignsDivisionviews(pageSize, pageNumber, filterType, name, id, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundCampaignsDivisionviews: %v\\n\", err)\n}"
  },
  "getoutboundcontactlist": {
    "operationId": "getoutboundcontactlist",
    "functionName": "GetOutboundContactlist",
    "signature": "GetOutboundContactlist(contactListId, includeImportStatus, includeSize)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeImportStatus",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Contactlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // ContactList ID\nvar includeImportStatus bool // Import status\nvar includeSize bool // Include size\n// Get a dialer contact list.\ndata, response, err := apiInstance.GetOutboundContactlist(contactListId, includeImportStatus, includeSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlist: %v\\n\", err)\n}"
  },
  "getoutboundcontactlistcontact": {
    "operationId": "getoutboundcontactlistcontact",
    "functionName": "GetOutboundContactlistContact",
    "signature": "GetOutboundContactlistContact(contactListId, contactId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dialercontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // Contact List ID\nvar contactId string // Contact ID\n// Get a contact.\ndata, response, err := apiInstance.GetOutboundContactlistContact(contactListId, contactId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlistContact: %v\\n\", err)\n}"
  },
  "getoutboundcontactlistexport": {
    "operationId": "getoutboundcontactlistexport",
    "functionName": "GetOutboundContactlistExport",
    "signature": "GetOutboundContactlistExport(contactListId, download)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "download",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Exporturi",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // ContactList ID\nvar download string // Redirect to download uri\n// Get the URI of a contact list export.\ndata, response, err := apiInstance.GetOutboundContactlistExport(contactListId, download)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlistExport: %v\\n\", err)\n}"
  },
  "getoutboundcontactlistimportstatus": {
    "operationId": "getoutboundcontactlistimportstatus",
    "functionName": "GetOutboundContactlistImportstatus",
    "signature": "GetOutboundContactlistImportstatus(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Importstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // ContactList ID\n// Get dialer contactList import status.\ndata, response, err := apiInstance.GetOutboundContactlistImportstatus(contactListId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlistImportstatus: %v\\n\", err)\n}"
  },
  "getoutboundcontactlisttimezonemappingpreview": {
    "operationId": "getoutboundcontactlisttimezonemappingpreview",
    "functionName": "GetOutboundContactlistTimezonemappingpreview",
    "signature": "GetOutboundContactlistTimezonemappingpreview(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Timezonemappingpreview",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // ContactList ID\n// Preview the result of applying Automatic Time Zone Mapping to a contact list\ndata, response, err := apiInstance.GetOutboundContactlistTimezonemappingpreview(contactListId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlistTimezonemappingpreview: %v\\n\", err)\n}"
  },
  "getoutboundcontactlistfilter": {
    "operationId": "getoutboundcontactlistfilter",
    "functionName": "GetOutboundContactlistfilter",
    "signature": "GetOutboundContactlistfilter(contactListFilterId)",
    "parameters": [
      {
        "name": "contactListFilterId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Contactlistfilter",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListFilterId string // Contact List Filter ID\n// Get Contact list filter\ndata, response, err := apiInstance.GetOutboundContactlistfilter(contactListFilterId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlistfilter: %v\\n\", err)\n}"
  },
  "getoutboundcontactlistfilters": {
    "operationId": "getoutboundcontactlistfilters",
    "functionName": "GetOutboundContactlistfilters",
    "signature": "GetOutboundContactlistfilters(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder, contactListId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "contactListId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Contactlistfilterentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar allowEmptyResult bool // Whether to return an empty page when there are no results for that page\nvar filterType string // Filter type\nvar name string // Name\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar contactListId string // Contact List ID\n// Query Contact list filters\ndata, response, err := apiInstance.GetOutboundContactlistfilters(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder, contactListId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlistfilters: %v\\n\", err)\n}"
  },
  "getoutboundcontactlists": {
    "operationId": "getoutboundcontactlists",
    "functionName": "GetOutboundContactlists",
    "signature": "GetOutboundContactlists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, id, divisionId, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "includeImportStatus",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Contactlistentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar includeImportStatus bool // Include import status\nvar includeSize bool // Include size\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar allowEmptyResult bool // Whether to return an empty page when there are no results for that page\nvar filterType string // Filter type\nvar name string // Name\nvar id []string // id\nvar divisionId []string // Division ID(s)\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query a list of contact lists.\ndata, response, err := apiInstance.GetOutboundContactlists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, id, divisionId, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlists: %v\\n\", err)\n}"
  },
  "getoutboundcontactlistsdivisionview": {
    "operationId": "getoutboundcontactlistsdivisionview",
    "functionName": "GetOutboundContactlistsDivisionview",
    "signature": "GetOutboundContactlistsDivisionview(contactListId, includeImportStatus, includeSize)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeImportStatus",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Contactlistdivisionview",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // Contactlist ID\nvar includeImportStatus bool // Include import status\nvar includeSize bool // Include size\n// Get a basic ContactList information object\ndata, response, err := apiInstance.GetOutboundContactlistsDivisionview(contactListId, includeImportStatus, includeSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlistsDivisionview: %v\\n\", err)\n}"
  },
  "getoutboundcontactlistsdivisionviews": {
    "operationId": "getoutboundcontactlistsdivisionviews",
    "functionName": "GetOutboundContactlistsDivisionviews",
    "signature": "GetOutboundContactlistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, id, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "includeImportStatus",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Contactlistdivisionviewlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar includeImportStatus bool // Include import status\nvar includeSize bool // Include size\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar filterType string // Filter type\nvar name string // Name\nvar id []string // id\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query a list of simplified contact list objects.\ndata, response, err := apiInstance.GetOutboundContactlistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, id, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundContactlistsDivisionviews: %v\\n\", err)\n}"
  },
  "getoutbounddigitalruleset": {
    "operationId": "getoutbounddigitalruleset",
    "functionName": "GetOutboundDigitalruleset",
    "signature": "GetOutboundDigitalruleset(digitalRuleSetId)",
    "parameters": [
      {
        "name": "digitalRuleSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Digitalruleset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar digitalRuleSetId string // The Digital Rule Set ID\n// Get an Outbound Digital Rule Set\ndata, response, err := apiInstance.GetOutboundDigitalruleset(digitalRuleSetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundDigitalruleset: %v\\n\", err)\n}"
  },
  "getoutbounddigitalrulesets": {
    "operationId": "getoutbounddigitalrulesets",
    "functionName": "GetOutboundDigitalrulesets",
    "signature": "GetOutboundDigitalrulesets(pageSize, pageNumber, sortBy, sortOrder, name, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Digitalrulesetentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar sortBy string // The field to sort by\nvar sortOrder string // The direction to sort\nvar name string // Name\nvar id []string // A list of digital rule set ids to bulk fetch\n// Query a list of Outbound Digital Rule Sets\ndata, response, err := apiInstance.GetOutboundDigitalrulesets(pageSize, pageNumber, sortBy, sortOrder, name, id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundDigitalrulesets: %v\\n\", err)\n}"
  },
  "getoutbounddnclist": {
    "operationId": "getoutbounddnclist",
    "functionName": "GetOutboundDnclist",
    "signature": "GetOutboundDnclist(dncListId, includeImportStatus, includeSize)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeImportStatus",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Dnclist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar includeImportStatus bool // Import status\nvar includeSize bool // Include size\n// Get dialer DNC list\ndata, response, err := apiInstance.GetOutboundDnclist(dncListId, includeImportStatus, includeSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundDnclist: %v\\n\", err)\n}"
  },
  "getoutbounddnclistexport": {
    "operationId": "getoutbounddnclistexport",
    "functionName": "GetOutboundDnclistExport",
    "signature": "GetOutboundDnclistExport(dncListId, download)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "download",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Exporturi",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar download string // Redirect to download uri\n// Get the URI of a DNC list export.\ndata, response, err := apiInstance.GetOutboundDnclistExport(dncListId, download)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundDnclistExport: %v\\n\", err)\n}"
  },
  "getoutbounddnclistimportstatus": {
    "operationId": "getoutbounddnclistimportstatus",
    "functionName": "GetOutboundDnclistImportstatus",
    "signature": "GetOutboundDnclistImportstatus(dncListId)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Importstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\n// Get dialer dncList import status.\ndata, response, err := apiInstance.GetOutboundDnclistImportstatus(dncListId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundDnclistImportstatus: %v\\n\", err)\n}"
  },
  "getoutbounddnclists": {
    "operationId": "getoutbounddnclists",
    "functionName": "GetOutboundDnclists",
    "signature": "GetOutboundDnclists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, dncSourceType, divisionId, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "includeImportStatus",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dncSourceType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Dnclistentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar includeImportStatus bool // Import status\nvar includeSize bool // Include size\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar allowEmptyResult bool // Whether to return an empty page when there are no results for that page\nvar filterType string // Filter type\nvar name string // Name\nvar dncSourceType string // DncSourceType\nvar divisionId []string // Division ID(s)\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query dialer DNC lists\ndata, response, err := apiInstance.GetOutboundDnclists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, dncSourceType, divisionId, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundDnclists: %v\\n\", err)\n}"
  },
  "getoutbounddnclistsdivisionview": {
    "operationId": "getoutbounddnclistsdivisionview",
    "functionName": "GetOutboundDnclistsDivisionview",
    "signature": "GetOutboundDnclistsDivisionview(dncListId, includeImportStatus, includeSize)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeImportStatus",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Dnclistdivisionview",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // Dnclist ID\nvar includeImportStatus bool // Include import status\nvar includeSize bool // Include size\n// Get a basic DncList information object\ndata, response, err := apiInstance.GetOutboundDnclistsDivisionview(dncListId, includeImportStatus, includeSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundDnclistsDivisionview: %v\\n\", err)\n}"
  },
  "getoutbounddnclistsdivisionviews": {
    "operationId": "getoutbounddnclistsdivisionviews",
    "functionName": "GetOutboundDnclistsDivisionviews",
    "signature": "GetOutboundDnclistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, dncSourceType, id, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "includeImportStatus",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dncSourceType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Dnclistdivisionviewlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar includeImportStatus bool // Include import status\nvar includeSize bool // Include size\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar filterType string // Filter type\nvar name string // Name\nvar dncSourceType string // DncSourceType\nvar id []string // id\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query a list of simplified dnc list objects.\ndata, response, err := apiInstance.GetOutboundDnclistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, dncSourceType, id, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundDnclistsDivisionviews: %v\\n\", err)\n}"
  },
  "getoutboundevent": {
    "operationId": "getoutboundevent",
    "functionName": "GetOutboundEvent",
    "signature": "GetOutboundEvent(eventId)",
    "parameters": [
      {
        "name": "eventId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Eventlog",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar eventId string // Event Log ID\n// Get Dialer Event\ndata, response, err := apiInstance.GetOutboundEvent(eventId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundEvent: %v\\n\", err)\n}"
  },
  "getoutboundevents": {
    "operationId": "getoutboundevents",
    "functionName": "GetOutboundEvents",
    "signature": "GetOutboundEvents(pageSize, pageNumber, filterType, category, level, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "category",
        "type": "string",
        "required": "false"
      },
      {
        "name": "level",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Dialerevententitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar filterType string // Filter type\nvar category string // Category\nvar level string // Level\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query Event Logs\ndata, response, err := apiInstance.GetOutboundEvents(pageSize, pageNumber, filterType, category, level, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundEvents: %v\\n\", err)\n}"
  },
  "getoutboundmessagingcampaign": {
    "operationId": "getoutboundmessagingcampaign",
    "functionName": "GetOutboundMessagingcampaign",
    "signature": "GetOutboundMessagingcampaign(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messagingcampaign",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // The Messaging Campaign ID\n// Get an Outbound Messaging Campaign\ndata, response, err := apiInstance.GetOutboundMessagingcampaign(messagingCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundMessagingcampaign: %v\\n\", err)\n}"
  },
  "getoutboundmessagingcampaigndiagnostics": {
    "operationId": "getoutboundmessagingcampaigndiagnostics",
    "functionName": "GetOutboundMessagingcampaignDiagnostics",
    "signature": "GetOutboundMessagingcampaignDiagnostics(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messagingcampaigndiagnostics",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // The Messaging Campaign ID\n// Get messaging campaign diagnostics\ndata, response, err := apiInstance.GetOutboundMessagingcampaignDiagnostics(messagingCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundMessagingcampaignDiagnostics: %v\\n\", err)\n}"
  },
  "getoutboundmessagingcampaignprogress": {
    "operationId": "getoutboundmessagingcampaignprogress",
    "functionName": "GetOutboundMessagingcampaignProgress",
    "signature": "GetOutboundMessagingcampaignProgress(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaignprogress",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // The Messaging Campaign ID\n// Get messaging campaign's progress\ndata, response, err := apiInstance.GetOutboundMessagingcampaignProgress(messagingCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundMessagingcampaignProgress: %v\\n\", err)\n}"
  },
  "getoutboundmessagingcampaigns": {
    "operationId": "getoutboundmessagingcampaigns",
    "functionName": "GetOutboundMessagingcampaigns",
    "signature": "GetOutboundMessagingcampaigns(pageSize, pageNumber, sortBy, sortOrder, name, contactListId, divisionId, varType, senderSmsPhoneNumber, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "contactListId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "varType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "senderSmsPhoneNumber",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Messagingcampaignentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar sortBy string // The field to sort by\nvar sortOrder string // The direction to sort\nvar name string // Name\nvar contactListId string // Contact List ID\nvar divisionId []string // Division ID(s)\nvar varType string // Campaign Type\nvar senderSmsPhoneNumber string // Sender SMS Phone Number\nvar id []string // A list of messaging campaign ids to bulk fetch\n// Query a list of Messaging Campaigns\ndata, response, err := apiInstance.GetOutboundMessagingcampaigns(pageSize, pageNumber, sortBy, sortOrder, name, contactListId, divisionId, varType, senderSmsPhoneNumber, id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundMessagingcampaigns: %v\\n\", err)\n}"
  },
  "getoutboundmessagingcampaignsdivisionview": {
    "operationId": "getoutboundmessagingcampaignsdivisionview",
    "functionName": "GetOutboundMessagingcampaignsDivisionview",
    "signature": "GetOutboundMessagingcampaignsDivisionview(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messagingcampaigndivisionview",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // The Messaging Campaign ID\n// Get a basic Messaging Campaign information object\ndata, response, err := apiInstance.GetOutboundMessagingcampaignsDivisionview(messagingCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundMessagingcampaignsDivisionview: %v\\n\", err)\n}"
  },
  "getoutboundmessagingcampaignsdivisionviews": {
    "operationId": "getoutboundmessagingcampaignsdivisionviews",
    "functionName": "GetOutboundMessagingcampaignsDivisionviews",
    "signature": "GetOutboundMessagingcampaignsDivisionviews(pageSize, pageNumber, sortOrder, name, varType, id, senderSmsPhoneNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "varType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "senderSmsPhoneNumber",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Messagingcampaigndivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar sortOrder string // The direction to sort\nvar name string // Name\nvar varType string // Campaign Type\nvar id []string // id\nvar senderSmsPhoneNumber string // Sender SMS Phone Number\n// Query a list of basic Messaging Campaign information objects\ndata, response, err := apiInstance.GetOutboundMessagingcampaignsDivisionviews(pageSize, pageNumber, sortOrder, name, varType, id, senderSmsPhoneNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundMessagingcampaignsDivisionviews: %v\\n\", err)\n}"
  },
  "getoutboundruleset": {
    "operationId": "getoutboundruleset",
    "functionName": "GetOutboundRuleset",
    "signature": "GetOutboundRuleset(ruleSetId)",
    "parameters": [
      {
        "name": "ruleSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Ruleset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar ruleSetId string // Rule Set ID\n// Get a Rule Set by ID.\ndata, response, err := apiInstance.GetOutboundRuleset(ruleSetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundRuleset: %v\\n\", err)\n}"
  },
  "getoutboundrulesets": {
    "operationId": "getoutboundrulesets",
    "functionName": "GetOutboundRulesets",
    "signature": "GetOutboundRulesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Rulesetentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar allowEmptyResult bool // Whether to return an empty page when there are no results for that page\nvar filterType string // Filter type\nvar name string // Name\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query a list of Rule Sets.\ndata, response, err := apiInstance.GetOutboundRulesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundRulesets: %v\\n\", err)\n}"
  },
  "getoutboundschedulescampaign": {
    "operationId": "getoutboundschedulescampaign",
    "functionName": "GetOutboundSchedulesCampaign",
    "signature": "GetOutboundSchedulesCampaign(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaignschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Get a dialer campaign schedule.\ndata, response, err := apiInstance.GetOutboundSchedulesCampaign(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSchedulesCampaign: %v\\n\", err)\n}"
  },
  "getoutboundschedulescampaigns": {
    "operationId": "getoutboundschedulescampaigns",
    "functionName": "GetOutboundSchedulesCampaigns",
    "signature": "GetOutboundSchedulesCampaigns()",
    "return": "[]Campaignschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\n// Query for a list of dialer campaign schedules.\ndata, response, err := apiInstance.GetOutboundSchedulesCampaigns()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSchedulesCampaigns: %v\\n\", err)\n}"
  },
  "getoutboundschedulesemailcampaign": {
    "operationId": "getoutboundschedulesemailcampaign",
    "functionName": "GetOutboundSchedulesEmailcampaign",
    "signature": "GetOutboundSchedulesEmailcampaign(emailCampaignId)",
    "parameters": [
      {
        "name": "emailCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emailcampaignschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar emailCampaignId string // Email Campaign ID\n// Get an email campaign schedule.\ndata, response, err := apiInstance.GetOutboundSchedulesEmailcampaign(emailCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSchedulesEmailcampaign: %v\\n\", err)\n}"
  },
  "getoutboundschedulesemailcampaigns": {
    "operationId": "getoutboundschedulesemailcampaigns",
    "functionName": "GetOutboundSchedulesEmailcampaigns",
    "signature": "GetOutboundSchedulesEmailcampaigns()",
    "return": "Messagingcampaignscheduleentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\n// Query for a list of email campaign schedules.\ndata, response, err := apiInstance.GetOutboundSchedulesEmailcampaigns()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSchedulesEmailcampaigns: %v\\n\", err)\n}"
  },
  "getoutboundschedulesmessagingcampaign": {
    "operationId": "getoutboundschedulesmessagingcampaign",
    "functionName": "GetOutboundSchedulesMessagingcampaign",
    "signature": "GetOutboundSchedulesMessagingcampaign(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Messagingcampaignschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // Messaging Campaign ID\n// Get a messaging campaign schedule.\ndata, response, err := apiInstance.GetOutboundSchedulesMessagingcampaign(messagingCampaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSchedulesMessagingcampaign: %v\\n\", err)\n}"
  },
  "getoutboundschedulesmessagingcampaigns": {
    "operationId": "getoutboundschedulesmessagingcampaigns",
    "functionName": "GetOutboundSchedulesMessagingcampaigns",
    "signature": "GetOutboundSchedulesMessagingcampaigns()",
    "return": "Messagingcampaignscheduleentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\n// Query for a list of messaging campaign schedules.\ndata, response, err := apiInstance.GetOutboundSchedulesMessagingcampaigns()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSchedulesMessagingcampaigns: %v\\n\", err)\n}"
  },
  "getoutboundschedulessequence": {
    "operationId": "getoutboundschedulessequence",
    "functionName": "GetOutboundSchedulesSequence",
    "signature": "GetOutboundSchedulesSequence(sequenceId)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Sequenceschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar sequenceId string // Sequence ID\n// Get a dialer sequence schedule.\ndata, response, err := apiInstance.GetOutboundSchedulesSequence(sequenceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSchedulesSequence: %v\\n\", err)\n}"
  },
  "getoutboundschedulessequences": {
    "operationId": "getoutboundschedulessequences",
    "functionName": "GetOutboundSchedulesSequences",
    "signature": "GetOutboundSchedulesSequences()",
    "return": "[]Sequenceschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\n// Query for a list of dialer sequence schedules.\ndata, response, err := apiInstance.GetOutboundSchedulesSequences()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSchedulesSequences: %v\\n\", err)\n}"
  },
  "getoutboundsequence": {
    "operationId": "getoutboundsequence",
    "functionName": "GetOutboundSequence",
    "signature": "GetOutboundSequence(sequenceId)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaignsequence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar sequenceId string // Campaign Sequence ID\n// Get a dialer campaign sequence.\ndata, response, err := apiInstance.GetOutboundSequence(sequenceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSequence: %v\\n\", err)\n}"
  },
  "getoutboundsequences": {
    "operationId": "getoutboundsequences",
    "functionName": "GetOutboundSequences",
    "signature": "GetOutboundSequences(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Campaignsequenceentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar pageSize int // Page size. The max that will be returned is 100.\nvar pageNumber int // Page number\nvar allowEmptyResult bool // Whether to return an empty page when there are no results for that page\nvar filterType string // Filter type\nvar name string // Name\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\n// Query a list of dialer campaign sequences.\ndata, response, err := apiInstance.GetOutboundSequences(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSequences: %v\\n\", err)\n}"
  },
  "getoutboundsettings": {
    "operationId": "getoutboundsettings",
    "functionName": "GetOutboundSettings",
    "signature": "GetOutboundSettings()",
    "return": "Outboundsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\n// Get the outbound settings for this organization\ndata, response, err := apiInstance.GetOutboundSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundSettings: %v\\n\", err)\n}"
  },
  "getoutboundwrapupcodemappings": {
    "operationId": "getoutboundwrapupcodemappings",
    "functionName": "GetOutboundWrapupcodemappings",
    "signature": "GetOutboundWrapupcodemappings()",
    "return": "Wrapupcodemapping",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\n// Get the Dialer wrap up code mapping.\ndata, response, err := apiInstance.GetOutboundWrapupcodemappings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOutboundWrapupcodemappings: %v\\n\", err)\n}"
  },
  "patchoutbounddnclistcustomexclusioncolumns": {
    "operationId": "patchoutbounddnclistcustomexclusioncolumns",
    "functionName": "PatchOutboundDnclistCustomexclusioncolumns",
    "signature": "PatchOutboundDnclistCustomexclusioncolumns(dncListId, body)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dncpatchcustomexclusioncolumnsrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar body platformclientv2.Dncpatchcustomexclusioncolumnsrequest // DNC Custom exclusion column entries\n// Add entries to or delete entries from a DNC list.\nresponse, err := apiInstance.PatchOutboundDnclistCustomexclusioncolumns(dncListId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchOutboundDnclistCustomexclusioncolumns: %v\\n\", err)\n}"
  },
  "patchoutbounddnclistemailaddresses": {
    "operationId": "patchoutbounddnclistemailaddresses",
    "functionName": "PatchOutboundDnclistEmailaddresses",
    "signature": "PatchOutboundDnclistEmailaddresses(dncListId, body)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dncpatchemailsrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar body platformclientv2.Dncpatchemailsrequest // DNC Emails\n// Add emails to or Delete emails from a DNC list.\nresponse, err := apiInstance.PatchOutboundDnclistEmailaddresses(dncListId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchOutboundDnclistEmailaddresses: %v\\n\", err)\n}"
  },
  "patchoutbounddnclistphonenumbers": {
    "operationId": "patchoutbounddnclistphonenumbers",
    "functionName": "PatchOutboundDnclistPhonenumbers",
    "signature": "PatchOutboundDnclistPhonenumbers(dncListId, body)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dncpatchphonenumbersrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar body platformclientv2.Dncpatchphonenumbersrequest // DNC Phone Numbers\n// Add numbers to or delete numbers from a DNC list.\nresponse, err := apiInstance.PatchOutboundDnclistPhonenumbers(dncListId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchOutboundDnclistPhonenumbers: %v\\n\", err)\n}"
  },
  "patchoutboundsettings": {
    "operationId": "patchoutboundsettings",
    "functionName": "PatchOutboundSettings",
    "signature": "PatchOutboundSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Outboundsettings",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Outboundsettings // outboundSettings\n// Update the outbound settings for this organization\nresponse, err := apiInstance.PatchOutboundSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchOutboundSettings: %v\\n\", err)\n}"
  },
  "postoutboundattemptlimits": {
    "operationId": "postoutboundattemptlimits",
    "functionName": "PostOutboundAttemptlimits",
    "signature": "PostOutboundAttemptlimits(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Attemptlimits",
        "required": "true"
      }
    ],
    "return": "Attemptlimits",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Attemptlimits // AttemptLimits\n// Create attempt limits\ndata, response, err := apiInstance.PostOutboundAttemptlimits(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundAttemptlimits: %v\\n\", err)\n}"
  },
  "postoutboundaudits": {
    "operationId": "postoutboundaudits",
    "functionName": "PostOutboundAudits",
    "signature": "PostOutboundAudits(body, pageSize, pageNumber, sortBy, sortOrder, facetsOnly)",
    "parameters": [
      {
        "name": "body",
        "type": "Dialerauditrequest",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "facetsOnly",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Auditsearchresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Dialerauditrequest // AuditSearch\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar facetsOnly bool // Facets only\n// Retrieves audits for dialer.\ndata, response, err := apiInstance.PostOutboundAudits(body, pageSize, pageNumber, sortBy, sortOrder, facetsOnly)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundAudits: %v\\n\", err)\n}"
  },
  "postoutboundcallabletimesets": {
    "operationId": "postoutboundcallabletimesets",
    "functionName": "PostOutboundCallabletimesets",
    "signature": "PostOutboundCallabletimesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Callabletimeset",
        "required": "true"
      }
    ],
    "return": "Callabletimeset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Callabletimeset // DialerCallableTimeSet\n// Create callable time set\ndata, response, err := apiInstance.PostOutboundCallabletimesets(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundCallabletimesets: %v\\n\", err)\n}"
  },
  "postoutboundcallanalysisresponsesets": {
    "operationId": "postoutboundcallanalysisresponsesets",
    "functionName": "PostOutboundCallanalysisresponsesets",
    "signature": "PostOutboundCallanalysisresponsesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Responseset",
        "required": "true"
      }
    ],
    "return": "Responseset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Responseset // ResponseSet\n// Create a dialer call analysis response set.\ndata, response, err := apiInstance.PostOutboundCallanalysisresponsesets(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundCallanalysisresponsesets: %v\\n\", err)\n}"
  },
  "postoutboundcampaignagentownedmappingpreview": {
    "operationId": "postoutboundcampaignagentownedmappingpreview",
    "functionName": "PostOutboundCampaignAgentownedmappingpreview",
    "signature": "PostOutboundCampaignAgentownedmappingpreview(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\n// Initiate request for a preview of how agents will be mapped to this campaign's contact list.\ndata, response, err := apiInstance.PostOutboundCampaignAgentownedmappingpreview(campaignId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundCampaignAgentownedmappingpreview: %v\\n\", err)\n}"
  },
  "postoutboundcampaigncallbackschedule": {
    "operationId": "postoutboundcampaigncallbackschedule",
    "functionName": "PostOutboundCampaignCallbackSchedule",
    "signature": "PostOutboundCampaignCallbackSchedule(campaignId, body)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Contactcallbackrequest",
        "required": "true"
      }
    ],
    "return": "Contactcallbackrequest",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\nvar body platformclientv2.Contactcallbackrequest // ContactCallbackRequest\n// Schedule a Callback for a Dialer Campaign (Deprecated)\ndata, response, err := apiInstance.PostOutboundCampaignCallbackSchedule(campaignId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundCampaignCallbackSchedule: %v\\n\", err)\n}"
  },
  "postoutboundcampaignrules": {
    "operationId": "postoutboundcampaignrules",
    "functionName": "PostOutboundCampaignrules",
    "signature": "PostOutboundCampaignrules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Campaignrule",
        "required": "true"
      }
    ],
    "return": "Campaignrule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Campaignrule // CampaignRule\n// Create Campaign Rule\ndata, response, err := apiInstance.PostOutboundCampaignrules(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundCampaignrules: %v\\n\", err)\n}"
  },
  "postoutboundcampaigns": {
    "operationId": "postoutboundcampaigns",
    "functionName": "PostOutboundCampaigns",
    "signature": "PostOutboundCampaigns(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Campaign",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Campaign // Campaign\n// Create a campaign.\ndata, response, err := apiInstance.PostOutboundCampaigns(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundCampaigns: %v\\n\", err)\n}"
  },
  "postoutboundcampaignsprogress": {
    "operationId": "postoutboundcampaignsprogress",
    "functionName": "PostOutboundCampaignsProgress",
    "signature": "PostOutboundCampaignsProgress(body)",
    "parameters": [
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "[]Campaignprogress",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.[]string // Campaign IDs\n// Get progress for a list of campaigns\ndata, response, err := apiInstance.PostOutboundCampaignsProgress(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundCampaignsProgress: %v\\n\", err)\n}"
  },
  "postoutboundcontactlistclear": {
    "operationId": "postoutboundcontactlistclear",
    "functionName": "PostOutboundContactlistClear",
    "signature": "PostOutboundContactlistClear(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // Contact List ID\n// Deletes all contacts out of a list. All outstanding recalls or rule-scheduled callbacks for non-preview campaigns configured with the contactlist will be cancelled.\nresponse, err := apiInstance.PostOutboundContactlistClear(contactListId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundContactlistClear: %v\\n\", err)\n}"
  },
  "postoutboundcontactlistcontacts": {
    "operationId": "postoutboundcontactlistcontacts",
    "functionName": "PostOutboundContactlistContacts",
    "signature": "PostOutboundContactlistContacts(contactListId, body, priority, clearSystemData, doNotQueue)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Writabledialercontact",
        "required": "true"
      },
      {
        "name": "priority",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "clearSystemData",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "doNotQueue",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "[]Dialercontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // Contact List ID\nvar body platformclientv2.[]Writabledialercontact // Contact\nvar priority bool // Contact priority. True means the contact(s) will be dialed next; false means the contact will go to the end of the contact queue.\nvar clearSystemData bool // Clear system data. True means the system columns (attempts, callable status, etc) stored on the contact will be cleared if the contact already exists; false means they won't.\nvar doNotQueue bool // Do not queue. True means that updated contacts will not have their positions in the queue altered, so contacts that have already been dialed will not be redialed. For new contacts, this parameter has no effect; False means that updated contacts will be re-queued, according to the 'priority' parameter.\n// Add contacts to a contact list.\ndata, response, err := apiInstance.PostOutboundContactlistContacts(contactListId, body, priority, clearSystemData, doNotQueue)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundContactlistContacts: %v\\n\", err)\n}"
  },
  "postoutboundcontactlistcontactsbulk": {
    "operationId": "postoutboundcontactlistcontactsbulk",
    "functionName": "PostOutboundContactlistContactsBulk",
    "signature": "PostOutboundContactlistContactsBulk(contactListId, body)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "[]Dialercontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // Contact List ID\nvar body platformclientv2.[]string // ContactIds to get.\n// Get contacts from a contact list.\ndata, response, err := apiInstance.PostOutboundContactlistContactsBulk(contactListId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundContactlistContactsBulk: %v\\n\", err)\n}"
  },
  "postoutboundcontactlistexport": {
    "operationId": "postoutboundcontactlistexport",
    "functionName": "PostOutboundContactlistExport",
    "signature": "PostOutboundContactlistExport(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Domainentityref",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // ContactList ID\n// Initiate the export of a contact list.\ndata, response, err := apiInstance.PostOutboundContactlistExport(contactListId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundContactlistExport: %v\\n\", err)\n}"
  },
  "postoutboundcontactlistfilters": {
    "operationId": "postoutboundcontactlistfilters",
    "functionName": "PostOutboundContactlistfilters",
    "signature": "PostOutboundContactlistfilters(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Contactlistfilter",
        "required": "true"
      }
    ],
    "return": "Contactlistfilter",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Contactlistfilter // ContactListFilter\n// Create Contact List Filter\ndata, response, err := apiInstance.PostOutboundContactlistfilters(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundContactlistfilters: %v\\n\", err)\n}"
  },
  "postoutboundcontactlistfilterspreview": {
    "operationId": "postoutboundcontactlistfilterspreview",
    "functionName": "PostOutboundContactlistfiltersPreview",
    "signature": "PostOutboundContactlistfiltersPreview(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Contactlistfilter",
        "required": "true"
      }
    ],
    "return": "Filterpreviewresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Contactlistfilter // ContactListFilter\n// Get a preview of the output of a contact list filter\ndata, response, err := apiInstance.PostOutboundContactlistfiltersPreview(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundContactlistfiltersPreview: %v\\n\", err)\n}"
  },
  "postoutboundcontactlists": {
    "operationId": "postoutboundcontactlists",
    "functionName": "PostOutboundContactlists",
    "signature": "PostOutboundContactlists(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Contactlist",
        "required": "true"
      }
    ],
    "return": "Contactlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Contactlist // ContactList\n// Create a contact List.\ndata, response, err := apiInstance.PostOutboundContactlists(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundContactlists: %v\\n\", err)\n}"
  },
  "postoutboundconversationdnc": {
    "operationId": "postoutboundconversationdnc",
    "functionName": "PostOutboundConversationDnc",
    "signature": "PostOutboundConversationDnc(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar conversationId string // Conversation ID\n// Add phone numbers to a Dialer DNC list.\nresponse, err := apiInstance.PostOutboundConversationDnc(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundConversationDnc: %v\\n\", err)\n}"
  },
  "postoutbounddigitalrulesets": {
    "operationId": "postoutbounddigitalrulesets",
    "functionName": "PostOutboundDigitalrulesets",
    "signature": "PostOutboundDigitalrulesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Digitalruleset",
        "required": "true"
      }
    ],
    "return": "Digitalruleset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Digitalruleset // Digital Rule Set\n// Create an Outbound Digital Rule Set\ndata, response, err := apiInstance.PostOutboundDigitalrulesets(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundDigitalrulesets: %v\\n\", err)\n}"
  },
  "postoutbounddnclistemailaddresses": {
    "operationId": "postoutbounddnclistemailaddresses",
    "functionName": "PostOutboundDnclistEmailaddresses",
    "signature": "PostOutboundDnclistEmailaddresses(dncListId, body)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar body platformclientv2.[]string // DNC email addresses\n// Add email addresses to a DNC list.\nresponse, err := apiInstance.PostOutboundDnclistEmailaddresses(dncListId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundDnclistEmailaddresses: %v\\n\", err)\n}"
  },
  "postoutbounddnclistexport": {
    "operationId": "postoutbounddnclistexport",
    "functionName": "PostOutboundDnclistExport",
    "signature": "PostOutboundDnclistExport(dncListId)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Domainentityref",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\n// Initiate the export of a dnc list.\ndata, response, err := apiInstance.PostOutboundDnclistExport(dncListId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundDnclistExport: %v\\n\", err)\n}"
  },
  "postoutbounddnclistphonenumbers": {
    "operationId": "postoutbounddnclistphonenumbers",
    "functionName": "PostOutboundDnclistPhonenumbers",
    "signature": "PostOutboundDnclistPhonenumbers(dncListId, body, expirationDateTime)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      },
      {
        "name": "expirationDateTime",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar body platformclientv2.[]string // DNC Phone Numbers\nvar expirationDateTime string // Expiration date for DNC phone numbers in yyyy-MM-ddTHH:mmZ format\n// Add phone numbers to a DNC list.\nresponse, err := apiInstance.PostOutboundDnclistPhonenumbers(dncListId, body, expirationDateTime)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundDnclistPhonenumbers: %v\\n\", err)\n}"
  },
  "postoutbounddnclists": {
    "operationId": "postoutbounddnclists",
    "functionName": "PostOutboundDnclists",
    "signature": "PostOutboundDnclists(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Dnclistcreate",
        "required": "true"
      }
    ],
    "return": "Dnclist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Dnclistcreate // DncList\n// Create dialer DNC list\ndata, response, err := apiInstance.PostOutboundDnclists(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundDnclists: %v\\n\", err)\n}"
  },
  "postoutboundmessagingcampaigns": {
    "operationId": "postoutboundmessagingcampaigns",
    "functionName": "PostOutboundMessagingcampaigns",
    "signature": "PostOutboundMessagingcampaigns(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Messagingcampaign",
        "required": "true"
      }
    ],
    "return": "Messagingcampaign",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Messagingcampaign // Messaging Campaign\n// Create a Messaging Campaign\ndata, response, err := apiInstance.PostOutboundMessagingcampaigns(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundMessagingcampaigns: %v\\n\", err)\n}"
  },
  "postoutboundmessagingcampaignsprogress": {
    "operationId": "postoutboundmessagingcampaignsprogress",
    "functionName": "PostOutboundMessagingcampaignsProgress",
    "signature": "PostOutboundMessagingcampaignsProgress(body)",
    "parameters": [
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "[]Campaignprogress",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.[]string // Messaging Campaign IDs\n// Get progress for a list of messaging campaigns\ndata, response, err := apiInstance.PostOutboundMessagingcampaignsProgress(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundMessagingcampaignsProgress: %v\\n\", err)\n}"
  },
  "postoutboundrulesets": {
    "operationId": "postoutboundrulesets",
    "functionName": "PostOutboundRulesets",
    "signature": "PostOutboundRulesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Ruleset",
        "required": "true"
      }
    ],
    "return": "Ruleset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Ruleset // RuleSet\n// Create a Rule Set.\ndata, response, err := apiInstance.PostOutboundRulesets(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundRulesets: %v\\n\", err)\n}"
  },
  "postoutboundsequences": {
    "operationId": "postoutboundsequences",
    "functionName": "PostOutboundSequences",
    "signature": "PostOutboundSequences(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Campaignsequence",
        "required": "true"
      }
    ],
    "return": "Campaignsequence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Campaignsequence // Organization\n// Create a new campaign sequence.\ndata, response, err := apiInstance.PostOutboundSequences(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostOutboundSequences: %v\\n\", err)\n}"
  },
  "putoutboundattemptlimit": {
    "operationId": "putoutboundattemptlimit",
    "functionName": "PutOutboundAttemptlimit",
    "signature": "PutOutboundAttemptlimit(attemptLimitsId, body)",
    "parameters": [
      {
        "name": "attemptLimitsId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Attemptlimits",
        "required": "true"
      }
    ],
    "return": "Attemptlimits",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar attemptLimitsId string // Attempt limits ID\nvar body platformclientv2.Attemptlimits // AttemptLimits\n// Update attempt limits\ndata, response, err := apiInstance.PutOutboundAttemptlimit(attemptLimitsId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundAttemptlimit: %v\\n\", err)\n}"
  },
  "putoutboundcallabletimeset": {
    "operationId": "putoutboundcallabletimeset",
    "functionName": "PutOutboundCallabletimeset",
    "signature": "PutOutboundCallabletimeset(callableTimeSetId, body)",
    "parameters": [
      {
        "name": "callableTimeSetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Callabletimeset",
        "required": "true"
      }
    ],
    "return": "Callabletimeset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar callableTimeSetId string // Callable Time Set ID\nvar body platformclientv2.Callabletimeset // DialerCallableTimeSet\n// Update callable time set\ndata, response, err := apiInstance.PutOutboundCallabletimeset(callableTimeSetId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundCallabletimeset: %v\\n\", err)\n}"
  },
  "putoutboundcallanalysisresponseset": {
    "operationId": "putoutboundcallanalysisresponseset",
    "functionName": "PutOutboundCallanalysisresponseset",
    "signature": "PutOutboundCallanalysisresponseset(callAnalysisSetId, body)",
    "parameters": [
      {
        "name": "callAnalysisSetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Responseset",
        "required": "true"
      }
    ],
    "return": "Responseset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar callAnalysisSetId string // Call Analysis Response Set ID\nvar body platformclientv2.Responseset // ResponseSet\n// Update a dialer call analysis response set.\ndata, response, err := apiInstance.PutOutboundCallanalysisresponseset(callAnalysisSetId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundCallanalysisresponseset: %v\\n\", err)\n}"
  },
  "putoutboundcampaign": {
    "operationId": "putoutboundcampaign",
    "functionName": "PutOutboundCampaign",
    "signature": "PutOutboundCampaign(campaignId, body)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Campaign",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\nvar body platformclientv2.Campaign // Campaign\n// Update a campaign.\ndata, response, err := apiInstance.PutOutboundCampaign(campaignId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundCampaign: %v\\n\", err)\n}"
  },
  "putoutboundcampaignagent": {
    "operationId": "putoutboundcampaignagent",
    "functionName": "PutOutboundCampaignAgent",
    "signature": "PutOutboundCampaignAgent(campaignId, userId, body)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Agent",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\nvar userId string // Agent's user ID\nvar body platformclientv2.Agent // agent\n// Send notification that an agent's state changed \ndata, response, err := apiInstance.PutOutboundCampaignAgent(campaignId, userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundCampaignAgent: %v\\n\", err)\n}"
  },
  "putoutboundcampaignrule": {
    "operationId": "putoutboundcampaignrule",
    "functionName": "PutOutboundCampaignrule",
    "signature": "PutOutboundCampaignrule(campaignRuleId, body)",
    "parameters": [
      {
        "name": "campaignRuleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Campaignrule",
        "required": "true"
      }
    ],
    "return": "Campaignrule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignRuleId string // Campaign Rule ID\nvar body platformclientv2.Campaignrule // CampaignRule\n// Update Campaign Rule\ndata, response, err := apiInstance.PutOutboundCampaignrule(campaignRuleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundCampaignrule: %v\\n\", err)\n}"
  },
  "putoutboundcontactlist": {
    "operationId": "putoutboundcontactlist",
    "functionName": "PutOutboundContactlist",
    "signature": "PutOutboundContactlist(contactListId, body)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Contactlist",
        "required": "true"
      }
    ],
    "return": "Contactlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // ContactList ID\nvar body platformclientv2.Contactlist // ContactList\n// Update a contact list.\ndata, response, err := apiInstance.PutOutboundContactlist(contactListId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundContactlist: %v\\n\", err)\n}"
  },
  "putoutboundcontactlistcontact": {
    "operationId": "putoutboundcontactlistcontact",
    "functionName": "PutOutboundContactlistContact",
    "signature": "PutOutboundContactlistContact(contactListId, contactId, body)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dialercontact",
        "required": "true"
      }
    ],
    "return": "Dialercontact",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListId string // Contact List ID\nvar contactId string // Contact ID\nvar body platformclientv2.Dialercontact // Contact\n// Update a contact.\ndata, response, err := apiInstance.PutOutboundContactlistContact(contactListId, contactId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundContactlistContact: %v\\n\", err)\n}"
  },
  "putoutboundcontactlistfilter": {
    "operationId": "putoutboundcontactlistfilter",
    "functionName": "PutOutboundContactlistfilter",
    "signature": "PutOutboundContactlistfilter(contactListFilterId, body)",
    "parameters": [
      {
        "name": "contactListFilterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Contactlistfilter",
        "required": "true"
      }
    ],
    "return": "Contactlistfilter",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar contactListFilterId string // Contact List Filter ID\nvar body platformclientv2.Contactlistfilter // ContactListFilter\n// Update Contact List Filter\ndata, response, err := apiInstance.PutOutboundContactlistfilter(contactListFilterId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundContactlistfilter: %v\\n\", err)\n}"
  },
  "putoutbounddigitalruleset": {
    "operationId": "putoutbounddigitalruleset",
    "functionName": "PutOutboundDigitalruleset",
    "signature": "PutOutboundDigitalruleset(digitalRuleSetId, body)",
    "parameters": [
      {
        "name": "digitalRuleSetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Digitalruleset",
        "required": "true"
      }
    ],
    "return": "Digitalruleset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar digitalRuleSetId string // The Digital Rule Set ID\nvar body platformclientv2.Digitalruleset // Digital Rule Set\n// Update an Outbound Digital Rule Set\ndata, response, err := apiInstance.PutOutboundDigitalruleset(digitalRuleSetId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundDigitalruleset: %v\\n\", err)\n}"
  },
  "putoutbounddnclist": {
    "operationId": "putoutbounddnclist",
    "functionName": "PutOutboundDnclist",
    "signature": "PutOutboundDnclist(dncListId, body)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dnclist",
        "required": "true"
      }
    ],
    "return": "Dnclist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar dncListId string // DncList ID\nvar body platformclientv2.Dnclist // DncList\n// Update dialer DNC list\ndata, response, err := apiInstance.PutOutboundDnclist(dncListId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundDnclist: %v\\n\", err)\n}"
  },
  "putoutboundmessagingcampaign": {
    "operationId": "putoutboundmessagingcampaign",
    "functionName": "PutOutboundMessagingcampaign",
    "signature": "PutOutboundMessagingcampaign(messagingCampaignId, body)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Messagingcampaign",
        "required": "true"
      }
    ],
    "return": "Messagingcampaign",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // The Messaging Campaign ID\nvar body platformclientv2.Messagingcampaign // MessagingCampaign\n// Update an Outbound Messaging Campaign\ndata, response, err := apiInstance.PutOutboundMessagingcampaign(messagingCampaignId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundMessagingcampaign: %v\\n\", err)\n}"
  },
  "putoutboundruleset": {
    "operationId": "putoutboundruleset",
    "functionName": "PutOutboundRuleset",
    "signature": "PutOutboundRuleset(ruleSetId, body)",
    "parameters": [
      {
        "name": "ruleSetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Ruleset",
        "required": "true"
      }
    ],
    "return": "Ruleset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar ruleSetId string // Rule Set ID\nvar body platformclientv2.Ruleset // RuleSet\n// Update a Rule Set.\ndata, response, err := apiInstance.PutOutboundRuleset(ruleSetId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundRuleset: %v\\n\", err)\n}"
  },
  "putoutboundschedulescampaign": {
    "operationId": "putoutboundschedulescampaign",
    "functionName": "PutOutboundSchedulesCampaign",
    "signature": "PutOutboundSchedulesCampaign(campaignId, body)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Campaignschedule",
        "required": "true"
      }
    ],
    "return": "Campaignschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar campaignId string // Campaign ID\nvar body platformclientv2.Campaignschedule // CampaignSchedule\n// Update a new campaign schedule.\ndata, response, err := apiInstance.PutOutboundSchedulesCampaign(campaignId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundSchedulesCampaign: %v\\n\", err)\n}"
  },
  "putoutboundschedulesemailcampaign": {
    "operationId": "putoutboundschedulesemailcampaign",
    "functionName": "PutOutboundSchedulesEmailcampaign",
    "signature": "PutOutboundSchedulesEmailcampaign(emailCampaignId, body)",
    "parameters": [
      {
        "name": "emailCampaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Emailcampaignschedule",
        "required": "true"
      }
    ],
    "return": "Emailcampaignschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar emailCampaignId string // Email Campaign ID\nvar body platformclientv2.Emailcampaignschedule // EmailCampaignSchedule\n// Update an email campaign schedule.\ndata, response, err := apiInstance.PutOutboundSchedulesEmailcampaign(emailCampaignId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundSchedulesEmailcampaign: %v\\n\", err)\n}"
  },
  "putoutboundschedulesmessagingcampaign": {
    "operationId": "putoutboundschedulesmessagingcampaign",
    "functionName": "PutOutboundSchedulesMessagingcampaign",
    "signature": "PutOutboundSchedulesMessagingcampaign(messagingCampaignId, body)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Messagingcampaignschedule",
        "required": "true"
      }
    ],
    "return": "Messagingcampaignschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar messagingCampaignId string // Messaging Campaign ID\nvar body platformclientv2.Messagingcampaignschedule // MessagingCampaignSchedule\n// Update a new messaging campaign schedule.\ndata, response, err := apiInstance.PutOutboundSchedulesMessagingcampaign(messagingCampaignId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundSchedulesMessagingcampaign: %v\\n\", err)\n}"
  },
  "putoutboundschedulessequence": {
    "operationId": "putoutboundschedulessequence",
    "functionName": "PutOutboundSchedulesSequence",
    "signature": "PutOutboundSchedulesSequence(sequenceId, body)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Sequenceschedule",
        "required": "true"
      }
    ],
    "return": "Sequenceschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar sequenceId string // Sequence ID\nvar body platformclientv2.Sequenceschedule // SequenceSchedule\n// Update a new sequence schedule.\ndata, response, err := apiInstance.PutOutboundSchedulesSequence(sequenceId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundSchedulesSequence: %v\\n\", err)\n}"
  },
  "putoutboundsequence": {
    "operationId": "putoutboundsequence",
    "functionName": "PutOutboundSequence",
    "signature": "PutOutboundSequence(sequenceId, body)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Campaignsequence",
        "required": "true"
      }
    ],
    "return": "Campaignsequence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar sequenceId string // Campaign Sequence ID\nvar body platformclientv2.Campaignsequence // Organization\n// Update a new campaign sequence.\ndata, response, err := apiInstance.PutOutboundSequence(sequenceId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundSequence: %v\\n\", err)\n}"
  },
  "putoutboundwrapupcodemappings": {
    "operationId": "putoutboundwrapupcodemappings",
    "functionName": "PutOutboundWrapupcodemappings",
    "signature": "PutOutboundWrapupcodemappings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Wrapupcodemapping",
        "required": "true"
      }
    ],
    "return": "Wrapupcodemapping",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewOutboundApiWithConfig(config)\n\nvar body platformclientv2.Wrapupcodemapping // wrapUpCodeMapping\n// Update the Dialer wrap up code mapping.\ndata, response, err := apiInstance.PutOutboundWrapupcodemappings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOutboundWrapupcodemappings: %v\\n\", err)\n}"
  },
  "deletepresencedefinition0": {
    "operationId": "deletepresencedefinition0",
    "functionName": "DeletePresenceDefinition0",
    "signature": "DeletePresenceDefinition0(definitionId)",
    "parameters": [
      {
        "name": "definitionId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar definitionId string // Presence Definition ID\n// Delete a Presence Definition\nresponse, err := apiInstance.DeletePresenceDefinition0(definitionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeletePresenceDefinition0: %v\\n\", err)\n}"
  },
  "deletepresencesource": {
    "operationId": "deletepresencesource",
    "functionName": "DeletePresenceSource",
    "signature": "DeletePresenceSource(sourceId)",
    "parameters": [
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar sourceId string // Presence Source ID\n// Delete a Presence Source\nresponse, err := apiInstance.DeletePresenceSource(sourceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeletePresenceSource: %v\\n\", err)\n}"
  },
  "deletepresencedefinition": {
    "operationId": "deletepresencedefinition",
    "functionName": "DeletePresencedefinition",
    "signature": "DeletePresencedefinition(presenceId)",
    "parameters": [
      {
        "name": "presenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar presenceId string // Organization Presence ID\n// Delete a Presence Definition\nresponse, err := apiInstance.DeletePresencedefinition(presenceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeletePresencedefinition: %v\\n\", err)\n}"
  },
  "getpresencedefinition0": {
    "operationId": "getpresencedefinition0",
    "functionName": "GetPresenceDefinition0",
    "signature": "GetPresenceDefinition0(definitionId, localeCode)",
    "parameters": [
      {
        "name": "definitionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "localeCode",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Organizationpresencedefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar definitionId string // Presence Definition ID\nvar localeCode string // The locale code to fetch for the presence definition. Use ALL to fetch everything.\n// Get a Presence Definition\ndata, response, err := apiInstance.GetPresenceDefinition0(definitionId, localeCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetPresenceDefinition0: %v\\n\", err)\n}"
  },
  "getpresencedefinitions0": {
    "operationId": "getpresencedefinitions0",
    "functionName": "GetPresenceDefinitions0",
    "signature": "GetPresenceDefinitions0(deactivated, divisionId, localeCode)",
    "parameters": [
      {
        "name": "deactivated",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "localeCode",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Organizationpresencedefinitionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar deactivated string // Deactivated query can be TRUE or FALSE\nvar divisionId []string // One or more division IDs. If nothing is provided, the definitions associated withthe list of divisions that the user has access to will be returned.\nvar localeCode string // The locale code to fetch for the presence definition. Use ALL to fetch everything.\n// Get a list of Presence Definitions\ndata, response, err := apiInstance.GetPresenceDefinitions0(deactivated, divisionId, localeCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetPresenceDefinitions0: %v\\n\", err)\n}"
  },
  "getpresencesettings": {
    "operationId": "getpresencesettings",
    "functionName": "GetPresenceSettings",
    "signature": "GetPresenceSettings()",
    "return": "Presencesettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\n// Get the presence settings\ndata, response, err := apiInstance.GetPresenceSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetPresenceSettings: %v\\n\", err)\n}"
  },
  "getpresencesource": {
    "operationId": "getpresencesource",
    "functionName": "GetPresenceSource",
    "signature": "GetPresenceSource(sourceId)",
    "parameters": [
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Source",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar sourceId string // Presence Source ID\n// Get a Presence Source\ndata, response, err := apiInstance.GetPresenceSource(sourceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetPresenceSource: %v\\n\", err)\n}"
  },
  "getpresencesources": {
    "operationId": "getpresencesources",
    "functionName": "GetPresenceSources",
    "signature": "GetPresenceSources(deactivated)",
    "parameters": [
      {
        "name": "deactivated",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Sourceentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar deactivated string // Deactivated query can be TRUE or FALSE\n// Get a list of Presence Sources\ndata, response, err := apiInstance.GetPresenceSources(deactivated)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetPresenceSources: %v\\n\", err)\n}"
  },
  "getpresenceuserprimarysource": {
    "operationId": "getpresenceuserprimarysource",
    "functionName": "GetPresenceUserPrimarysource",
    "signature": "GetPresenceUserPrimarysource(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userprimarysource",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar userId string // user ID\n// Get a user's Primary Presence Source\ndata, response, err := apiInstance.GetPresenceUserPrimarysource(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetPresenceUserPrimarysource: %v\\n\", err)\n}"
  },
  "getpresencedefinition": {
    "operationId": "getpresencedefinition",
    "functionName": "GetPresencedefinition",
    "signature": "GetPresencedefinition(presenceId, localeCode)",
    "parameters": [
      {
        "name": "presenceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "localeCode",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Organizationpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar presenceId string // Organization Presence ID\nvar localeCode string // The locale code to fetch for the presence definition. Use ALL to fetch everything.\n// Get a Presence Definition\ndata, response, err := apiInstance.GetPresencedefinition(presenceId, localeCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetPresencedefinition: %v\\n\", err)\n}"
  },
  "getpresencedefinitions": {
    "operationId": "getpresencedefinitions",
    "functionName": "GetPresencedefinitions",
    "signature": "GetPresencedefinitions(pageNumber, pageSize, deleted, localeCode)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "deleted",
        "type": "string",
        "required": "false"
      },
      {
        "name": "localeCode",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Organizationpresenceentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar deleted string // Deleted query can be TRUE, FALSE or ALL\nvar localeCode string // The locale code to fetch for each presence definition. Use ALL to fetch everything.\n// Get an Organization's list of Presence Definitions\ndata, response, err := apiInstance.GetPresencedefinitions(pageNumber, pageSize, deleted, localeCode)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetPresencedefinitions: %v\\n\", err)\n}"
  },
  "getsystempresences": {
    "operationId": "getsystempresences",
    "functionName": "GetSystempresences",
    "signature": "GetSystempresences()",
    "return": "[]Systempresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\n// Get the list of SystemPresences\ndata, response, err := apiInstance.GetSystempresences()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSystempresences: %v\\n\", err)\n}"
  },
  "getuserpresence": {
    "operationId": "getuserpresence",
    "functionName": "GetUserPresence",
    "signature": "GetUserPresence(userId, sourceId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar userId string // user Id\nvar sourceId string // Presence source ID\n// Get a user's Presence\ndata, response, err := apiInstance.GetUserPresence(userId, sourceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserPresence: %v\\n\", err)\n}"
  },
  "getuserpresencespurecloud": {
    "operationId": "getuserpresencespurecloud",
    "functionName": "GetUserPresencesPurecloud",
    "signature": "GetUserPresencesPurecloud(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar userId string // user Id\n// Get a user's Genesys Cloud presence.\ndata, response, err := apiInstance.GetUserPresencesPurecloud(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserPresencesPurecloud: %v\\n\", err)\n}"
  },
  "getuserspresencebulk": {
    "operationId": "getuserspresencebulk",
    "functionName": "GetUsersPresenceBulk",
    "signature": "GetUsersPresenceBulk(sourceId, id)",
    "parameters": [
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "[]Ucuserpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar sourceId string // The requested presence source ID.\nvar id []string // A comma separated list of user IDs to fetch their presence status in bulk. Limit 50.\n// Get bulk user presences for a single presence source\ndata, response, err := apiInstance.GetUsersPresenceBulk(sourceId, id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsersPresenceBulk: %v\\n\", err)\n}"
  },
  "getuserspresencespurecloudbulk": {
    "operationId": "getuserspresencespurecloudbulk",
    "functionName": "GetUsersPresencesPurecloudBulk",
    "signature": "GetUsersPresencesPurecloudBulk(id)",
    "parameters": [
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "[]Ucuserpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar id []string // A comma separated list of user IDs to fetch their presence status in bulk. Limit 50.\n// Get bulk user presences for a Genesys Cloud (PURECLOUD) presence source\ndata, response, err := apiInstance.GetUsersPresencesPurecloudBulk(id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsersPresencesPurecloudBulk: %v\\n\", err)\n}"
  },
  "patchuserpresence": {
    "operationId": "patchuserpresence",
    "functionName": "PatchUserPresence",
    "signature": "PatchUserPresence(userId, sourceId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userpresence",
        "required": "true"
      }
    ],
    "return": "Userpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar userId string // user Id\nvar sourceId string // Presence source ID\nvar body platformclientv2.Userpresence // User presence\n// Patch a user's Presence\ndata, response, err := apiInstance.PatchUserPresence(userId, sourceId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUserPresence: %v\\n\", err)\n}"
  },
  "patchuserpresencespurecloud": {
    "operationId": "patchuserpresencespurecloud",
    "functionName": "PatchUserPresencesPurecloud",
    "signature": "PatchUserPresencesPurecloud(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userpresence",
        "required": "true"
      }
    ],
    "return": "Userpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar userId string // user Id\nvar body platformclientv2.Userpresence // User presence\n// Patch a Genesys Cloud user's presence\ndata, response, err := apiInstance.PatchUserPresencesPurecloud(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUserPresencesPurecloud: %v\\n\", err)\n}"
  },
  "postpresencedefinitions0": {
    "operationId": "postpresencedefinitions0",
    "functionName": "PostPresenceDefinitions0",
    "signature": "PostPresenceDefinitions0(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Organizationpresencedefinition",
        "required": "true"
      }
    ],
    "return": "Organizationpresencedefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar body platformclientv2.Organizationpresencedefinition // The Presence Definition to create\n// Create a Presence Definition\ndata, response, err := apiInstance.PostPresenceDefinitions0(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostPresenceDefinitions0: %v\\n\", err)\n}"
  },
  "postpresencesources": {
    "operationId": "postpresencesources",
    "functionName": "PostPresenceSources",
    "signature": "PostPresenceSources(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Source",
        "required": "true"
      }
    ],
    "return": "Source",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar body platformclientv2.Source // The Presence Source to create\n// Create a Presence Source\ndata, response, err := apiInstance.PostPresenceSources(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostPresenceSources: %v\\n\", err)\n}"
  },
  "postpresencedefinitions": {
    "operationId": "postpresencedefinitions",
    "functionName": "PostPresencedefinitions",
    "signature": "PostPresencedefinitions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Organizationpresence",
        "required": "true"
      }
    ],
    "return": "Organizationpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar body platformclientv2.Organizationpresence // The Presence Definition to create\n// Create a Presence Definition\ndata, response, err := apiInstance.PostPresencedefinitions(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostPresencedefinitions: %v\\n\", err)\n}"
  },
  "putpresencedefinition0": {
    "operationId": "putpresencedefinition0",
    "functionName": "PutPresenceDefinition0",
    "signature": "PutPresenceDefinition0(definitionId, body)",
    "parameters": [
      {
        "name": "definitionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Organizationpresencedefinition",
        "required": "true"
      }
    ],
    "return": "Organizationpresencedefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar definitionId string // Presence Definition ID\nvar body platformclientv2.Organizationpresencedefinition // The updated Presence Definition\n// Update a Presence Definition\ndata, response, err := apiInstance.PutPresenceDefinition0(definitionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutPresenceDefinition0: %v\\n\", err)\n}"
  },
  "putpresencesettings": {
    "operationId": "putpresencesettings",
    "functionName": "PutPresenceSettings",
    "signature": "PutPresenceSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Presencesettings",
        "required": "true"
      }
    ],
    "return": "Presencesettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar body platformclientv2.Presencesettings // Presence Settings\n// Update the presence settings\ndata, response, err := apiInstance.PutPresenceSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutPresenceSettings: %v\\n\", err)\n}"
  },
  "putpresencesource": {
    "operationId": "putpresencesource",
    "functionName": "PutPresenceSource",
    "signature": "PutPresenceSource(sourceId, body)",
    "parameters": [
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Source",
        "required": "true"
      }
    ],
    "return": "Source",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar sourceId string // Presence Source ID\nvar body platformclientv2.Source // The updated Presence Source\n// Update a Presence Source\ndata, response, err := apiInstance.PutPresenceSource(sourceId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutPresenceSource: %v\\n\", err)\n}"
  },
  "putpresenceuserprimarysource": {
    "operationId": "putpresenceuserprimarysource",
    "functionName": "PutPresenceUserPrimarysource",
    "signature": "PutPresenceUserPrimarysource(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userprimarysource",
        "required": "true"
      }
    ],
    "return": "Userprimarysource",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar userId string // user ID\nvar body platformclientv2.Userprimarysource // Primary Source\n// Update a user's Primary Presence Source\ndata, response, err := apiInstance.PutPresenceUserPrimarysource(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutPresenceUserPrimarysource: %v\\n\", err)\n}"
  },
  "putpresencedefinition": {
    "operationId": "putpresencedefinition",
    "functionName": "PutPresencedefinition",
    "signature": "PutPresencedefinition(presenceId, body)",
    "parameters": [
      {
        "name": "presenceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Organizationpresence",
        "required": "true"
      }
    ],
    "return": "Organizationpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar presenceId string // Organization Presence ID\nvar body platformclientv2.Organizationpresence // The OrganizationPresence to update\n// Update a Presence Definition\ndata, response, err := apiInstance.PutPresencedefinition(presenceId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutPresencedefinition: %v\\n\", err)\n}"
  },
  "putuserspresencesbulk": {
    "operationId": "putuserspresencesbulk",
    "functionName": "PutUsersPresencesBulk",
    "signature": "PutUsersPresencesBulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "[]Mutableuserpresence",
        "required": "true"
      }
    ],
    "return": "[]Userpresence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewPresenceApiWithConfig(config)\n\nvar body platformclientv2.[]Mutableuserpresence // List of User presences\n// Update bulk user Presences\ndata, response, err := apiInstance.PutUsersPresencesBulk(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUsersPresencesBulk: %v\\n\", err)\n}"
  },
  "deleteprocessautomationtrigger": {
    "operationId": "deleteprocessautomationtrigger",
    "functionName": "DeleteProcessautomationTrigger",
    "signature": "DeleteProcessautomationTrigger(triggerId)",
    "parameters": [
      {
        "name": "triggerId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewProcessAutomationApiWithConfig(config)\n\nvar triggerId string // triggerId\n// Delete a Trigger\nresponse, err := apiInstance.DeleteProcessautomationTrigger(triggerId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteProcessautomationTrigger: %v\\n\", err)\n}"
  },
  "getprocessautomationtrigger": {
    "operationId": "getprocessautomationtrigger",
    "functionName": "GetProcessautomationTrigger",
    "signature": "GetProcessautomationTrigger(triggerId)",
    "parameters": [
      {
        "name": "triggerId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trigger",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewProcessAutomationApiWithConfig(config)\n\nvar triggerId string // triggerId\n// Retrieve a single Trigger matching id\ndata, response, err := apiInstance.GetProcessautomationTrigger(triggerId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetProcessautomationTrigger: %v\\n\", err)\n}"
  },
  "getprocessautomationtriggers": {
    "operationId": "getprocessautomationtriggers",
    "functionName": "GetProcessautomationTriggers",
    "signature": "GetProcessautomationTriggers(before, after, pageSize, topicName, enabled, hasDelayBy)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "topicName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "enabled",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "hasDelayBy",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Triggerentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewProcessAutomationApiWithConfig(config)\n\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar topicName string // Topic name(s). Separated by commas\nvar enabled bool // Boolean indicating desired enabled state of triggers\nvar hasDelayBy bool // Boolean to filter based on delayBySeconds being set in triggers. Default returns all, true returns only those with delayBySeconds set, false returns those without delayBySeconds set.\n// Retrieves all triggers, optionally filtered by query parameters.\ndata, response, err := apiInstance.GetProcessautomationTriggers(before, after, pageSize, topicName, enabled, hasDelayBy)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetProcessautomationTriggers: %v\\n\", err)\n}"
  },
  "getprocessautomationtriggerstopics": {
    "operationId": "getprocessautomationtriggerstopics",
    "functionName": "GetProcessautomationTriggersTopics",
    "signature": "GetProcessautomationTriggersTopics(before, after, pageSize)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Topiccursorentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewProcessAutomationApiWithConfig(config)\n\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize string // Number of entities to return. Maximum of 200.\n// Get topics available for organization\ndata, response, err := apiInstance.GetProcessautomationTriggersTopics(before, after, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetProcessautomationTriggersTopics: %v\\n\", err)\n}"
  },
  "postprocessautomationtriggertest": {
    "operationId": "postprocessautomationtriggertest",
    "functionName": "PostProcessautomationTriggerTest",
    "signature": "PostProcessautomationTriggerTest(triggerId, body)",
    "parameters": [
      {
        "name": "triggerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Testmoderesults",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewProcessAutomationApiWithConfig(config)\n\nvar triggerId string // triggerId\nvar body platformclientv2.string // eventBody\n// Test the matching of a Trigger based on provided event body\ndata, response, err := apiInstance.PostProcessautomationTriggerTest(triggerId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostProcessautomationTriggerTest: %v\\n\", err)\n}"
  },
  "postprocessautomationtriggers": {
    "operationId": "postprocessautomationtriggers",
    "functionName": "PostProcessautomationTriggers",
    "signature": "PostProcessautomationTriggers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createtriggerrequest",
        "required": "true"
      }
    ],
    "return": "Trigger",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewProcessAutomationApiWithConfig(config)\n\nvar body platformclientv2.Createtriggerrequest // Input used to create a Trigger.\n// Create a Trigger\ndata, response, err := apiInstance.PostProcessautomationTriggers(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostProcessautomationTriggers: %v\\n\", err)\n}"
  },
  "postprocessautomationtriggerstopictest": {
    "operationId": "postprocessautomationtriggerstopictest",
    "functionName": "PostProcessautomationTriggersTopicTest",
    "signature": "PostProcessautomationTriggersTopicTest(topicName, body)",
    "parameters": [
      {
        "name": "topicName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Testmodeeventresults",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewProcessAutomationApiWithConfig(config)\n\nvar topicName string // topicName\nvar body platformclientv2.string // eventBody\n// Test the matching of all organization Triggers on given topic using provided event body\ndata, response, err := apiInstance.PostProcessautomationTriggersTopicTest(topicName, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostProcessautomationTriggersTopicTest: %v\\n\", err)\n}"
  },
  "putprocessautomationtrigger": {
    "operationId": "putprocessautomationtrigger",
    "functionName": "PutProcessautomationTrigger",
    "signature": "PutProcessautomationTrigger(triggerId, body)",
    "parameters": [
      {
        "name": "triggerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updatetriggerrequest",
        "required": "true"
      }
    ],
    "return": "Trigger",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewProcessAutomationApiWithConfig(config)\n\nvar triggerId string // triggerId\nvar body platformclientv2.Updatetriggerrequest // Input to update Trigger. (topicName cannot be updated, a new trigger must be created to use a new topicName)\n// Update a Trigger\ndata, response, err := apiInstance.PutProcessautomationTrigger(triggerId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutProcessautomationTrigger: %v\\n\", err)\n}"
  },
  "deletequalitycalibration": {
    "operationId": "deletequalitycalibration",
    "functionName": "DeleteQualityCalibration",
    "signature": "DeleteQualityCalibration(calibrationId, calibratorId)",
    "parameters": [
      {
        "name": "calibrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "calibratorId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Calibration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar calibrationId string // Calibration ID\nvar calibratorId string // calibratorId\n// Delete a calibration by id.\ndata, response, err := apiInstance.DeleteQualityCalibration(calibrationId, calibratorId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteQualityCalibration: %v\\n\", err)\n}"
  },
  "deletequalityconversationevaluation": {
    "operationId": "deletequalityconversationevaluation",
    "functionName": "DeleteQualityConversationEvaluation",
    "signature": "DeleteQualityConversationEvaluation(conversationId, evaluationId, expand)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "evaluationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar evaluationId string // evaluationId\nvar expand string // evaluatorId, evaluationForm\n// Delete an evaluation\ndata, response, err := apiInstance.DeleteQualityConversationEvaluation(conversationId, evaluationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteQualityConversationEvaluation: %v\\n\", err)\n}"
  },
  "deletequalityform": {
    "operationId": "deletequalityform",
    "functionName": "DeleteQualityForm",
    "signature": "DeleteQualityForm(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\n// Delete an evaluation form.\nresponse, err := apiInstance.DeleteQualityForm(formId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteQualityForm: %v\\n\", err)\n}"
  },
  "deletequalityformsevaluation": {
    "operationId": "deletequalityformsevaluation",
    "functionName": "DeleteQualityFormsEvaluation",
    "signature": "DeleteQualityFormsEvaluation(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\n// Delete an evaluation form.\nresponse, err := apiInstance.DeleteQualityFormsEvaluation(formId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteQualityFormsEvaluation: %v\\n\", err)\n}"
  },
  "deletequalityformssurvey": {
    "operationId": "deletequalityformssurvey",
    "functionName": "DeleteQualityFormsSurvey",
    "signature": "DeleteQualityFormsSurvey(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\n// Delete a survey form.\nresponse, err := apiInstance.DeleteQualityFormsSurvey(formId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteQualityFormsSurvey: %v\\n\", err)\n}"
  },
  "getqualityagentsactivity": {
    "operationId": "getqualityagentsactivity",
    "functionName": "GetQualityAgentsActivity",
    "signature": "GetQualityAgentsActivity(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, startTime, endTime, agentUserId, evaluatorUserId, name, group, formContextId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "startTime",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "endTime",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "agentUserId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "evaluatorUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "group",
        "type": "string",
        "required": "false"
      },
      {
        "name": "formContextId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Agentactivityentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar startTime time.Time // Start time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\nvar endTime time.Time // End time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\nvar agentUserId []string // user id of agent requested\nvar evaluatorUserId string // user id of the evaluator\nvar name string // name\nvar group string // group id\nvar formContextId string // shared id between form versions\n// Gets a list of Agent Activities\ndata, response, err := apiInstance.GetQualityAgentsActivity(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, startTime, endTime, agentUserId, evaluatorUserId, name, group, formContextId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityAgentsActivity: %v\\n\", err)\n}"
  },
  "getqualitycalibration": {
    "operationId": "getqualitycalibration",
    "functionName": "GetQualityCalibration",
    "signature": "GetQualityCalibration(calibrationId, calibratorId, conversationId)",
    "parameters": [
      {
        "name": "calibrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "calibratorId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Calibration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar calibrationId string // Calibration ID\nvar calibratorId string // calibratorId\nvar conversationId string // conversationId\n// Get a calibration by id.  Requires either calibrator id or conversation id\ndata, response, err := apiInstance.GetQualityCalibration(calibrationId, calibratorId, conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityCalibration: %v\\n\", err)\n}"
  },
  "getqualitycalibrations": {
    "operationId": "getqualitycalibrations",
    "functionName": "GetQualityCalibrations",
    "signature": "GetQualityCalibrations(calibratorId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, conversationId, startTime, endTime)",
    "parameters": [
      {
        "name": "calibratorId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "startTime",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "endTime",
        "type": "time.Time",
        "required": "false"
      }
    ],
    "return": "Calibrationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar calibratorId string // user id of calibrator\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar conversationId string // conversation id\nvar startTime time.Time // Beginning of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\nvar endTime time.Time // end of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\n// Get the list of calibrations\ndata, response, err := apiInstance.GetQualityCalibrations(calibratorId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, conversationId, startTime, endTime)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityCalibrations: %v\\n\", err)\n}"
  },
  "getqualityconversationevaluation": {
    "operationId": "getqualityconversationevaluation",
    "functionName": "GetQualityConversationEvaluation",
    "signature": "GetQualityConversationEvaluation(conversationId, evaluationId, expand)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "evaluationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar evaluationId string // evaluationId\nvar expand string // agent, assignee, evaluator, evaluationForm\n// Get an evaluation\ndata, response, err := apiInstance.GetQualityConversationEvaluation(conversationId, evaluationId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityConversationEvaluation: %v\\n\", err)\n}"
  },
  "getqualityconversationsurveys": {
    "operationId": "getqualityconversationsurveys",
    "functionName": "GetQualityConversationSurveys",
    "signature": "GetQualityConversationSurveys(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Survey",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get the surveys for a conversation\ndata, response, err := apiInstance.GetQualityConversationSurveys(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityConversationSurveys: %v\\n\", err)\n}"
  },
  "getqualityconversationsauditsquerytransactionid": {
    "operationId": "getqualityconversationsauditsquerytransactionid",
    "functionName": "GetQualityConversationsAuditsQueryTransactionId",
    "signature": "GetQualityConversationsAuditsQueryTransactionId(transactionId)",
    "parameters": [
      {
        "name": "transactionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Qualityauditqueryexecutionstatusresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar transactionId string // Transaction ID\n// Get status of audit query execution\ndata, response, err := apiInstance.GetQualityConversationsAuditsQueryTransactionId(transactionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityConversationsAuditsQueryTransactionId: %v\\n\", err)\n}"
  },
  "getqualityconversationsauditsquerytransactionidresults": {
    "operationId": "getqualityconversationsauditsquerytransactionidresults",
    "functionName": "GetQualityConversationsAuditsQueryTransactionIdResults",
    "signature": "GetQualityConversationsAuditsQueryTransactionIdResults(transactionId, cursor, pageSize, expand)",
    "parameters": [
      {
        "name": "transactionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Qualityauditqueryexecutionresultsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar transactionId string // Transaction ID\nvar cursor string // Indicates where to resume query results (not required for first page)\nvar pageSize int // Page size\nvar expand []string // Which fields, if any, to expand\n// Get results of audit query\ndata, response, err := apiInstance.GetQualityConversationsAuditsQueryTransactionIdResults(transactionId, cursor, pageSize, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityConversationsAuditsQueryTransactionIdResults: %v\\n\", err)\n}"
  },
  "getqualityevaluationsquery": {
    "operationId": "getqualityevaluationsquery",
    "functionName": "GetQualityEvaluationsQuery",
    "signature": "GetQualityEvaluationsQuery(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, conversationId, agentUserId, evaluatorUserId, assigneeUserId, queueId, startTime, endTime, formContextId, evaluationState, isReleased, agentHasRead, expandAnswerTotalScores, maximum, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "agentUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "evaluatorUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "assigneeUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queueId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "startTime",
        "type": "string",
        "required": "false"
      },
      {
        "name": "endTime",
        "type": "string",
        "required": "false"
      },
      {
        "name": "formContextId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "evaluationState",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "isReleased",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "agentHasRead",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expandAnswerTotalScores",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "maximum",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // NOTE: Does not work when querying evaluations\nvar expand []string // variable name requested by expand list\nvar nextPage string // NOTE: Does not work when querying evaluations\nvar previousPage string // Previous page token\nvar conversationId string // conversationId specified\nvar agentUserId string // user id of the agent\nvar evaluatorUserId string // evaluator user id\nvar assigneeUserId string // assignee user id\nvar queueId string // queue id\nvar startTime string // start time of the evaluation query\nvar endTime string // end time of the evaluation query\nvar formContextId string // shared id between form versions\nvar evaluationState []string // \nvar isReleased bool // the evaluation has been released\nvar agentHasRead bool // agent has the evaluation\nvar expandAnswerTotalScores bool // get the total scores for evaluations\nvar maximum int // the maximum number of results to return\nvar sortOrder string // NOTE: Does not work when conversationId is supplied.\n// Queries Evaluations and returns a paged list\ndata, response, err := apiInstance.GetQualityEvaluationsQuery(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, conversationId, agentUserId, evaluatorUserId, assigneeUserId, queueId, startTime, endTime, formContextId, evaluationState, isReleased, agentHasRead, expandAnswerTotalScores, maximum, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityEvaluationsQuery: %v\\n\", err)\n}"
  },
  "getqualityevaluatorsactivity": {
    "operationId": "getqualityevaluatorsactivity",
    "functionName": "GetQualityEvaluatorsActivity",
    "signature": "GetQualityEvaluatorsActivity(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, startTime, endTime, name, permission, group)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "startTime",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "endTime",
        "type": "time.Time",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "permission",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "group",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluatoractivityentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar startTime time.Time // The start time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\nvar endTime time.Time // The end time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\nvar name string // Evaluator name\nvar permission []string // permission strings\nvar group string // group id\n// Get an evaluator activity\ndata, response, err := apiInstance.GetQualityEvaluatorsActivity(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, startTime, endTime, name, permission, group)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityEvaluatorsActivity: %v\\n\", err)\n}"
  },
  "getqualityform": {
    "operationId": "getqualityform",
    "functionName": "GetQualityForm",
    "signature": "GetQualityForm(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\n// Get an evaluation form\ndata, response, err := apiInstance.GetQualityForm(formId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityForm: %v\\n\", err)\n}"
  },
  "getqualityformversions": {
    "operationId": "getqualityformversions",
    "functionName": "GetQualityFormVersions",
    "signature": "GetQualityFormVersions(formId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Evaluationformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Gets all the revisions for a specific evaluation.\ndata, response, err := apiInstance.GetQualityFormVersions(formId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormVersions: %v\\n\", err)\n}"
  },
  "getqualityforms": {
    "operationId": "getqualityforms",
    "functionName": "GetQualityForms",
    "signature": "GetQualityForms(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluationformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar expand string // If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions\nvar name string // Name\nvar sortOrder string // Order to sort results, either asc or desc\n// Get the list of evaluation forms\ndata, response, err := apiInstance.GetQualityForms(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityForms: %v\\n\", err)\n}"
  },
  "getqualityformsevaluation": {
    "operationId": "getqualityformsevaluation",
    "functionName": "GetQualityFormsEvaluation",
    "signature": "GetQualityFormsEvaluation(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\n// Get an evaluation form\ndata, response, err := apiInstance.GetQualityFormsEvaluation(formId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormsEvaluation: %v\\n\", err)\n}"
  },
  "getqualityformsevaluationversions": {
    "operationId": "getqualityformsevaluationversions",
    "functionName": "GetQualityFormsEvaluationVersions",
    "signature": "GetQualityFormsEvaluationVersions(formId, pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluationformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Sort order\n// Gets all the revisions for a specific evaluation.\ndata, response, err := apiInstance.GetQualityFormsEvaluationVersions(formId, pageSize, pageNumber, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormsEvaluationVersions: %v\\n\", err)\n}"
  },
  "getqualityformsevaluations": {
    "operationId": "getqualityformsevaluations",
    "functionName": "GetQualityFormsEvaluations",
    "signature": "GetQualityFormsEvaluations(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluationformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar expand string // If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions\nvar name string // Name\nvar sortOrder string // Order to sort results, either asc or desc\n// Get the list of evaluation forms\ndata, response, err := apiInstance.GetQualityFormsEvaluations(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormsEvaluations: %v\\n\", err)\n}"
  },
  "getqualityformsevaluationsbulkcontexts": {
    "operationId": "getqualityformsevaluationsbulkcontexts",
    "functionName": "GetQualityFormsEvaluationsBulkContexts",
    "signature": "GetQualityFormsEvaluationsBulkContexts(contextId)",
    "parameters": [
      {
        "name": "contextId",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "[]Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar contextId []string // A comma-delimited list of valid evaluation form context ids\n// Retrieve a list of the latest published evaluation form versions by context ids\ndata, response, err := apiInstance.GetQualityFormsEvaluationsBulkContexts(contextId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormsEvaluationsBulkContexts: %v\\n\", err)\n}"
  },
  "getqualityformssurvey": {
    "operationId": "getqualityformssurvey",
    "functionName": "GetQualityFormsSurvey",
    "signature": "GetQualityFormsSurvey(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Surveyform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\n// Get a survey form\ndata, response, err := apiInstance.GetQualityFormsSurvey(formId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormsSurvey: %v\\n\", err)\n}"
  },
  "getqualityformssurveyversions": {
    "operationId": "getqualityformssurveyversions",
    "functionName": "GetQualityFormsSurveyVersions",
    "signature": "GetQualityFormsSurveyVersions(formId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Surveyformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Gets all the revisions for a specific survey.\ndata, response, err := apiInstance.GetQualityFormsSurveyVersions(formId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormsSurveyVersions: %v\\n\", err)\n}"
  },
  "getqualityformssurveys": {
    "operationId": "getqualityformssurveys",
    "functionName": "GetQualityFormsSurveys",
    "signature": "GetQualityFormsSurveys(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Surveyformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar expand string // If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions\nvar name string // Name\nvar sortOrder string // Order to sort results, either asc or desc\n// Get the list of survey forms\ndata, response, err := apiInstance.GetQualityFormsSurveys(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormsSurveys: %v\\n\", err)\n}"
  },
  "getqualityformssurveysbulk": {
    "operationId": "getqualityformssurveysbulk",
    "functionName": "GetQualityFormsSurveysBulk",
    "signature": "GetQualityFormsSurveysBulk(id)",
    "parameters": [
      {
        "name": "id",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "Surveyformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar id []string // A comma-delimited list of valid survey form ids\n// Retrieve a list of survey forms by their ids\ndata, response, err := apiInstance.GetQualityFormsSurveysBulk(id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormsSurveysBulk: %v\\n\", err)\n}"
  },
  "getqualityformssurveysbulkcontexts": {
    "operationId": "getqualityformssurveysbulkcontexts",
    "functionName": "GetQualityFormsSurveysBulkContexts",
    "signature": "GetQualityFormsSurveysBulkContexts(contextId, published)",
    "parameters": [
      {
        "name": "contextId",
        "type": "[]string",
        "required": "true"
      },
      {
        "name": "published",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "[]Surveyform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar contextId []string // A comma-delimited list of valid survey form context ids. The maximum number of ids allowed in this list is 100.\nvar published bool // If true, the latest published version will be included. If false, only the unpublished version will be included.\n// Retrieve a list of the latest form versions by context ids\ndata, response, err := apiInstance.GetQualityFormsSurveysBulkContexts(contextId, published)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityFormsSurveysBulkContexts: %v\\n\", err)\n}"
  },
  "getqualitypublishedform": {
    "operationId": "getqualitypublishedform",
    "functionName": "GetQualityPublishedform",
    "signature": "GetQualityPublishedform(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\n// Get the published evaluation forms.\ndata, response, err := apiInstance.GetQualityPublishedform(formId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityPublishedform: %v\\n\", err)\n}"
  },
  "getqualitypublishedforms": {
    "operationId": "getqualitypublishedforms",
    "functionName": "GetQualityPublishedforms",
    "signature": "GetQualityPublishedforms(pageSize, pageNumber, name, onlyLatestPerContext)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "onlyLatestPerContext",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Evaluationformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar name string // Name\nvar onlyLatestPerContext bool // onlyLatestPerContext\n// Get the published evaluation forms.\ndata, response, err := apiInstance.GetQualityPublishedforms(pageSize, pageNumber, name, onlyLatestPerContext)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityPublishedforms: %v\\n\", err)\n}"
  },
  "getqualitypublishedformsevaluation": {
    "operationId": "getqualitypublishedformsevaluation",
    "functionName": "GetQualityPublishedformsEvaluation",
    "signature": "GetQualityPublishedformsEvaluation(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\n// Get the most recent published version of an evaluation form.\ndata, response, err := apiInstance.GetQualityPublishedformsEvaluation(formId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityPublishedformsEvaluation: %v\\n\", err)\n}"
  },
  "getqualitypublishedformsevaluations": {
    "operationId": "getqualitypublishedformsevaluations",
    "functionName": "GetQualityPublishedformsEvaluations",
    "signature": "GetQualityPublishedformsEvaluations(pageSize, pageNumber, name, onlyLatestPerContext)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "onlyLatestPerContext",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Evaluationformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar name string // Name\nvar onlyLatestPerContext bool // onlyLatestPerContext\n// Get the published evaluation forms.\ndata, response, err := apiInstance.GetQualityPublishedformsEvaluations(pageSize, pageNumber, name, onlyLatestPerContext)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityPublishedformsEvaluations: %v\\n\", err)\n}"
  },
  "getqualitypublishedformssurvey": {
    "operationId": "getqualitypublishedformssurvey",
    "functionName": "GetQualityPublishedformsSurvey",
    "signature": "GetQualityPublishedformsSurvey(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Surveyform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\n// Get the most recent published version of a survey form.\ndata, response, err := apiInstance.GetQualityPublishedformsSurvey(formId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityPublishedformsSurvey: %v\\n\", err)\n}"
  },
  "getqualitypublishedformssurveys": {
    "operationId": "getqualitypublishedformssurveys",
    "functionName": "GetQualityPublishedformsSurveys",
    "signature": "GetQualityPublishedformsSurveys(pageSize, pageNumber, name, onlyLatestEnabledPerContext)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "onlyLatestEnabledPerContext",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Surveyformentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar name string // Name\nvar onlyLatestEnabledPerContext bool // onlyLatestEnabledPerContext\n// Get the published survey forms.\ndata, response, err := apiInstance.GetQualityPublishedformsSurveys(pageSize, pageNumber, name, onlyLatestEnabledPerContext)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualityPublishedformsSurveys: %v\\n\", err)\n}"
  },
  "getqualitysurvey": {
    "operationId": "getqualitysurvey",
    "functionName": "GetQualitySurvey",
    "signature": "GetQualitySurvey(surveyId)",
    "parameters": [
      {
        "name": "surveyId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Survey",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar surveyId string // surveyId\n// Get a survey for a conversation\ndata, response, err := apiInstance.GetQualitySurvey(surveyId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualitySurvey: %v\\n\", err)\n}"
  },
  "getqualitysurveysscorable": {
    "operationId": "getqualitysurveysscorable",
    "functionName": "GetQualitySurveysScorable",
    "signature": "GetQualitySurveysScorable(customerSurveyUrl)",
    "parameters": [
      {
        "name": "customerSurveyUrl",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Scorablesurvey",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar customerSurveyUrl string // customerSurveyUrl\n// Get a survey as an end-customer, for the purposes of scoring it.\ndata, response, err := apiInstance.GetQualitySurveysScorable(customerSurveyUrl)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetQualitySurveysScorable: %v\\n\", err)\n}"
  },
  "patchqualityformssurvey": {
    "operationId": "patchqualityformssurvey",
    "functionName": "PatchQualityFormsSurvey",
    "signature": "PatchQualityFormsSurvey(formId, body)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Surveyform",
        "required": "true"
      }
    ],
    "return": "Surveyform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\nvar body platformclientv2.Surveyform // Survey form\n// Disable a particular version of a survey form and invalidates any invitations that have already been sent to customers using this version of the form.\ndata, response, err := apiInstance.PatchQualityFormsSurvey(formId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchQualityFormsSurvey: %v\\n\", err)\n}"
  },
  "postqualitycalibrations": {
    "operationId": "postqualitycalibrations",
    "functionName": "PostQualityCalibrations",
    "signature": "PostQualityCalibrations(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "Calibrationcreate",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Calibration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Calibrationcreate // calibration\nvar expand string // calibratorId\n// Create a calibration\ndata, response, err := apiInstance.PostQualityCalibrations(body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityCalibrations: %v\\n\", err)\n}"
  },
  "postqualityconversationevaluations": {
    "operationId": "postqualityconversationevaluations",
    "functionName": "PostQualityConversationEvaluations",
    "signature": "PostQualityConversationEvaluations(conversationId, body, expand)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Evaluation",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar body platformclientv2.Evaluation // evaluation\nvar expand string // evaluatorId\n// Create an evaluation\ndata, response, err := apiInstance.PostQualityConversationEvaluations(conversationId, body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityConversationEvaluations: %v\\n\", err)\n}"
  },
  "postqualityconversationsauditsquery": {
    "operationId": "postqualityconversationsauditsquery",
    "functionName": "PostQualityConversationsAuditsQuery",
    "signature": "PostQualityConversationsAuditsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Qmauditqueryrequest",
        "required": "true"
      }
    ],
    "return": "Qualityauditqueryexecutionstatusresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Qmauditqueryrequest // query\n// Create audit query execution\ndata, response, err := apiInstance.PostQualityConversationsAuditsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityConversationsAuditsQuery: %v\\n\", err)\n}"
  },
  "postqualityevaluationsaggregatesqueryme": {
    "operationId": "postqualityevaluationsaggregatesqueryme",
    "functionName": "PostQualityEvaluationsAggregatesQueryMe",
    "signature": "PostQualityEvaluationsAggregatesQueryMe(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Evaluationaggregationqueryme",
        "required": "true"
      }
    ],
    "return": "Evaluationaggregatequeryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Evaluationaggregationqueryme // query\n// Query for evaluation aggregates for the current user\ndata, response, err := apiInstance.PostQualityEvaluationsAggregatesQueryMe(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityEvaluationsAggregatesQueryMe: %v\\n\", err)\n}"
  },
  "postqualityevaluationsscoring": {
    "operationId": "postqualityevaluationsscoring",
    "functionName": "PostQualityEvaluationsScoring",
    "signature": "PostQualityEvaluationsScoring(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Evaluationformandscoringset",
        "required": "true"
      }
    ],
    "return": "Evaluationscoringset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Evaluationformandscoringset // evaluationAndScoringSet\n// Score evaluation\ndata, response, err := apiInstance.PostQualityEvaluationsScoring(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityEvaluationsScoring: %v\\n\", err)\n}"
  },
  "postqualityforms": {
    "operationId": "postqualityforms",
    "functionName": "PostQualityForms",
    "signature": "PostQualityForms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Evaluationform",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Evaluationform // Evaluation form\n// Create an evaluation form.\ndata, response, err := apiInstance.PostQualityForms(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityForms: %v\\n\", err)\n}"
  },
  "postqualityformsevaluations": {
    "operationId": "postqualityformsevaluations",
    "functionName": "PostQualityFormsEvaluations",
    "signature": "PostQualityFormsEvaluations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Evaluationform",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Evaluationform // Evaluation form\n// Create an evaluation form.\ndata, response, err := apiInstance.PostQualityFormsEvaluations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityFormsEvaluations: %v\\n\", err)\n}"
  },
  "postqualityformssurveys": {
    "operationId": "postqualityformssurveys",
    "functionName": "PostQualityFormsSurveys",
    "signature": "PostQualityFormsSurveys(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Surveyform",
        "required": "true"
      }
    ],
    "return": "Surveyform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Surveyform // Survey form\n// Create a survey form.\ndata, response, err := apiInstance.PostQualityFormsSurveys(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityFormsSurveys: %v\\n\", err)\n}"
  },
  "postqualitypublishedforms": {
    "operationId": "postqualitypublishedforms",
    "functionName": "PostQualityPublishedforms",
    "signature": "PostQualityPublishedforms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Publishform",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Publishform // Publish request containing id of form to publish\n// Publish an evaluation form.\ndata, response, err := apiInstance.PostQualityPublishedforms(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityPublishedforms: %v\\n\", err)\n}"
  },
  "postqualitypublishedformsevaluations": {
    "operationId": "postqualitypublishedformsevaluations",
    "functionName": "PostQualityPublishedformsEvaluations",
    "signature": "PostQualityPublishedformsEvaluations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Publishform",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Publishform // Publish request containing id of form to publish\n// Publish an evaluation form.\ndata, response, err := apiInstance.PostQualityPublishedformsEvaluations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityPublishedformsEvaluations: %v\\n\", err)\n}"
  },
  "postqualitypublishedformssurveys": {
    "operationId": "postqualitypublishedformssurveys",
    "functionName": "PostQualityPublishedformsSurveys",
    "signature": "PostQualityPublishedformsSurveys(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Publishform",
        "required": "true"
      }
    ],
    "return": "Surveyform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Publishform // Survey form\n// Publish a survey form.\ndata, response, err := apiInstance.PostQualityPublishedformsSurveys(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualityPublishedformsSurveys: %v\\n\", err)\n}"
  },
  "postqualitysurveysscoring": {
    "operationId": "postqualitysurveysscoring",
    "functionName": "PostQualitySurveysScoring",
    "signature": "PostQualitySurveysScoring(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Surveyformandscoringset",
        "required": "true"
      }
    ],
    "return": "Surveyscoringset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar body platformclientv2.Surveyformandscoringset // surveyAndScoringSet\n// Score survey\ndata, response, err := apiInstance.PostQualitySurveysScoring(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostQualitySurveysScoring: %v\\n\", err)\n}"
  },
  "putqualitycalibration": {
    "operationId": "putqualitycalibration",
    "functionName": "PutQualityCalibration",
    "signature": "PutQualityCalibration(calibrationId, body)",
    "parameters": [
      {
        "name": "calibrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Calibration",
        "required": "true"
      }
    ],
    "return": "Calibration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar calibrationId string // Calibration ID\nvar body platformclientv2.Calibration // Calibration\n// Update a calibration to the specified calibration via PUT.  Editable fields include: evaluators, expertEvaluator, and scoringIndex\ndata, response, err := apiInstance.PutQualityCalibration(calibrationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutQualityCalibration: %v\\n\", err)\n}"
  },
  "putqualityconversationevaluation": {
    "operationId": "putqualityconversationevaluation",
    "functionName": "PutQualityConversationEvaluation",
    "signature": "PutQualityConversationEvaluation(conversationId, evaluationId, body, expand)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "evaluationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Evaluation",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar evaluationId string // evaluationId\nvar body platformclientv2.Evaluation // evaluation\nvar expand string // evaluatorId, evaluationForm, assignee, evaluator\n// Update an evaluation\ndata, response, err := apiInstance.PutQualityConversationEvaluation(conversationId, evaluationId, body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutQualityConversationEvaluation: %v\\n\", err)\n}"
  },
  "putqualityform": {
    "operationId": "putqualityform",
    "functionName": "PutQualityForm",
    "signature": "PutQualityForm(formId, body)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Evaluationform",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\nvar body platformclientv2.Evaluationform // Evaluation form\n// Update an evaluation form.\ndata, response, err := apiInstance.PutQualityForm(formId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutQualityForm: %v\\n\", err)\n}"
  },
  "putqualityformsevaluation": {
    "operationId": "putqualityformsevaluation",
    "functionName": "PutQualityFormsEvaluation",
    "signature": "PutQualityFormsEvaluation(formId, body)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Evaluationform",
        "required": "true"
      }
    ],
    "return": "Evaluationform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\nvar body platformclientv2.Evaluationform // Evaluation form\n// Update an evaluation form.\ndata, response, err := apiInstance.PutQualityFormsEvaluation(formId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutQualityFormsEvaluation: %v\\n\", err)\n}"
  },
  "putqualityformssurvey": {
    "operationId": "putqualityformssurvey",
    "functionName": "PutQualityFormsSurvey",
    "signature": "PutQualityFormsSurvey(formId, body)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Surveyform",
        "required": "true"
      }
    ],
    "return": "Surveyform",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar formId string // Form ID\nvar body platformclientv2.Surveyform // Survey form\n// Update a survey form.\ndata, response, err := apiInstance.PutQualityFormsSurvey(formId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutQualityFormsSurvey: %v\\n\", err)\n}"
  },
  "putqualitysurveysscorable": {
    "operationId": "putqualitysurveysscorable",
    "functionName": "PutQualitySurveysScorable",
    "signature": "PutQualitySurveysScorable(customerSurveyUrl, body)",
    "parameters": [
      {
        "name": "customerSurveyUrl",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Scorablesurvey",
        "required": "true"
      }
    ],
    "return": "Scorablesurvey",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewQualityApiWithConfig(config)\n\nvar customerSurveyUrl string // customerSurveyUrl\nvar body platformclientv2.Scorablesurvey // survey\n// Update a survey as an end-customer, for the purposes of scoring it.\ndata, response, err := apiInstance.PutQualitySurveysScorable(customerSurveyUrl, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutQualitySurveysScorable: %v\\n\", err)\n}"
  },
  "deleteconversationrecordingannotation": {
    "operationId": "deleteconversationrecordingannotation",
    "functionName": "DeleteConversationRecordingAnnotation",
    "signature": "DeleteConversationRecordingAnnotation(conversationId, recordingId, annotationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar recordingId string // Recording ID\nvar annotationId string // Annotation ID\n// Delete annotation\nresponse, err := apiInstance.DeleteConversationRecordingAnnotation(conversationId, recordingId, annotationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteConversationRecordingAnnotation: %v\\n\", err)\n}"
  },
  "deleteorphanrecording": {
    "operationId": "deleteorphanrecording",
    "functionName": "DeleteOrphanrecording",
    "signature": "DeleteOrphanrecording(orphanId)",
    "parameters": [
      {
        "name": "orphanId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Orphanrecording",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar orphanId string // Orphan ID\n// Deletes a single orphan recording\ndata, response, err := apiInstance.DeleteOrphanrecording(orphanId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteOrphanrecording: %v\\n\", err)\n}"
  },
  "deleterecordingcrossplatformmediaretentionpolicies": {
    "operationId": "deleterecordingcrossplatformmediaretentionpolicies",
    "functionName": "DeleteRecordingCrossplatformMediaretentionpolicies",
    "signature": "DeleteRecordingCrossplatformMediaretentionpolicies(ids)",
    "parameters": [
      {
        "name": "ids",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar ids string // \n// Delete media retention policies\nresponse, err := apiInstance.DeleteRecordingCrossplatformMediaretentionpolicies(ids)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRecordingCrossplatformMediaretentionpolicies: %v\\n\", err)\n}"
  },
  "deleterecordingcrossplatformmediaretentionpolicy": {
    "operationId": "deleterecordingcrossplatformmediaretentionpolicy",
    "functionName": "DeleteRecordingCrossplatformMediaretentionpolicy",
    "signature": "DeleteRecordingCrossplatformMediaretentionpolicy(policyId)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar policyId string // Policy ID\n// Delete a media retention policy\nresponse, err := apiInstance.DeleteRecordingCrossplatformMediaretentionpolicy(policyId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRecordingCrossplatformMediaretentionpolicy: %v\\n\", err)\n}"
  },
  "deleterecordingjob": {
    "operationId": "deleterecordingjob",
    "functionName": "DeleteRecordingJob",
    "signature": "DeleteRecordingJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar jobId string // jobId\n// Delete the recording bulk job\nresponse, err := apiInstance.DeleteRecordingJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRecordingJob: %v\\n\", err)\n}"
  },
  "deleterecordingmediaretentionpolicies": {
    "operationId": "deleterecordingmediaretentionpolicies",
    "functionName": "DeleteRecordingMediaretentionpolicies",
    "signature": "DeleteRecordingMediaretentionpolicies(ids)",
    "parameters": [
      {
        "name": "ids",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar ids string // \n// Delete media retention policies\nresponse, err := apiInstance.DeleteRecordingMediaretentionpolicies(ids)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRecordingMediaretentionpolicies: %v\\n\", err)\n}"
  },
  "deleterecordingmediaretentionpolicy": {
    "operationId": "deleterecordingmediaretentionpolicy",
    "functionName": "DeleteRecordingMediaretentionpolicy",
    "signature": "DeleteRecordingMediaretentionpolicy(policyId)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar policyId string // Policy ID\n// Delete a media retention policy\nresponse, err := apiInstance.DeleteRecordingMediaretentionpolicy(policyId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRecordingMediaretentionpolicy: %v\\n\", err)\n}"
  },
  "getconversationrecording": {
    "operationId": "getconversationrecording",
    "functionName": "GetConversationRecording",
    "signature": "GetConversationRecording(conversationId, recordingId, formatId, emailFormatId, chatFormatId, messageFormatId, download, fileName, locale, mediaFormats)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "emailFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "chatFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messageFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "download",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "locale",
        "type": "string",
        "required": "false"
      },
      {
        "name": "mediaFormats",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar recordingId string // Recording ID\nvar formatId string // The desired media format. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3,NONE\nvar emailFormatId string // The desired media format when downloading an email recording. Valid values:EML,NONE\nvar chatFormatId string // The desired media format when downloading a chat recording. Valid values:ZIP,NONE \nvar messageFormatId string // The desired media format when downloading a message recording. Valid values:ZIP,NONE\nvar download bool // requesting a download format of the recording. Valid values:true,false\nvar fileName string // the name of the downloaded fileName\nvar locale string // The locale for the requested file when downloading, as an ISO 639-1 code\nvar mediaFormats []string // All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3\n// Gets a specific recording.\ndata, response, err := apiInstance.GetConversationRecording(conversationId, recordingId, formatId, emailFormatId, chatFormatId, messageFormatId, download, fileName, locale, mediaFormats)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationRecording: %v\\n\", err)\n}"
  },
  "getconversationrecordingannotation": {
    "operationId": "getconversationrecordingannotation",
    "functionName": "GetConversationRecordingAnnotation",
    "signature": "GetConversationRecordingAnnotation(conversationId, recordingId, annotationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Annotation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar recordingId string // Recording ID\nvar annotationId string // Annotation ID\n// Get annotation\ndata, response, err := apiInstance.GetConversationRecordingAnnotation(conversationId, recordingId, annotationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationRecordingAnnotation: %v\\n\", err)\n}"
  },
  "getconversationrecordingannotations": {
    "operationId": "getconversationrecordingannotations",
    "functionName": "GetConversationRecordingAnnotations",
    "signature": "GetConversationRecordingAnnotations(conversationId, recordingId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Annotation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar recordingId string // Recording ID\n// Get annotations for recording\ndata, response, err := apiInstance.GetConversationRecordingAnnotations(conversationId, recordingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationRecordingAnnotations: %v\\n\", err)\n}"
  },
  "getconversationrecordingmetadata": {
    "operationId": "getconversationrecordingmetadata",
    "functionName": "GetConversationRecordingmetadata",
    "signature": "GetConversationRecordingmetadata(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Recordingmetadata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\n// Get recording metadata for a conversation. Does not return playable media. Annotations won't be included in the response if either recording:recording:view or recording:annotation:view permission is missing.\ndata, response, err := apiInstance.GetConversationRecordingmetadata(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationRecordingmetadata: %v\\n\", err)\n}"
  },
  "getconversationrecordingmetadatarecordingid": {
    "operationId": "getconversationrecordingmetadatarecordingid",
    "functionName": "GetConversationRecordingmetadataRecordingId",
    "signature": "GetConversationRecordingmetadataRecordingId(conversationId, recordingId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Recordingmetadata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar recordingId string // Recording ID\n// Get metadata for a specific recording. Does not return playable media.\ndata, response, err := apiInstance.GetConversationRecordingmetadataRecordingId(conversationId, recordingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationRecordingmetadataRecordingId: %v\\n\", err)\n}"
  },
  "getconversationrecordings": {
    "operationId": "getconversationrecordings",
    "functionName": "GetConversationRecordings",
    "signature": "GetConversationRecordings(conversationId, maxWaitMs, formatId, mediaFormats)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "maxWaitMs",
        "type": "int",
        "required": "false"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "mediaFormats",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "[]Recording",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar maxWaitMs int // The maximum number of milliseconds to wait for the recording to be ready. Must be a positive value.\nvar formatId string // The desired media format. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3,NONE.\nvar mediaFormats []string // All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3.\n// Get all of a Conversation's Recordings.\ndata, response, err := apiInstance.GetConversationRecordings(conversationId, maxWaitMs, formatId, mediaFormats)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetConversationRecordings: %v\\n\", err)\n}"
  },
  "getorphanrecording": {
    "operationId": "getorphanrecording",
    "functionName": "GetOrphanrecording",
    "signature": "GetOrphanrecording(orphanId)",
    "parameters": [
      {
        "name": "orphanId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Orphanrecording",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar orphanId string // Orphan ID\n// Gets a single orphan recording\ndata, response, err := apiInstance.GetOrphanrecording(orphanId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrphanrecording: %v\\n\", err)\n}"
  },
  "getorphanrecordingmedia": {
    "operationId": "getorphanrecordingmedia",
    "functionName": "GetOrphanrecordingMedia",
    "signature": "GetOrphanrecordingMedia(orphanId, formatId, emailFormatId, chatFormatId, messageFormatId, download, fileName, locale, mediaFormats)",
    "parameters": [
      {
        "name": "orphanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "emailFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "chatFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messageFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "download",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "locale",
        "type": "string",
        "required": "false"
      },
      {
        "name": "mediaFormats",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar orphanId string // Orphan ID\nvar formatId string // The desired media format.\nvar emailFormatId string // The desired media format when downloading an email recording.\nvar chatFormatId string // The desired media format when downloading a chat recording.\nvar messageFormatId string // The desired media format when downloading a message recording.\nvar download bool // requesting a download format of the recording\nvar fileName string // the name of the downloaded fileName\nvar locale string // The locale for the requested file when downloading, as an ISO 639-1 code\nvar mediaFormats []string // All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3\n// Gets the media of a single orphan recording\ndata, response, err := apiInstance.GetOrphanrecordingMedia(orphanId, formatId, emailFormatId, chatFormatId, messageFormatId, download, fileName, locale, mediaFormats)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrphanrecordingMedia: %v\\n\", err)\n}"
  },
  "getorphanrecordings": {
    "operationId": "getorphanrecordings",
    "functionName": "GetOrphanrecordings",
    "signature": "GetOrphanrecordings(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, hasConversation, media)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "hasConversation",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "media",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Orphanrecordinglisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar hasConversation bool // Filter resulting orphans by whether the conversation is known. False returns all orphans for the organization.\nvar media string // Filter resulting orphans based on their media type\n// Gets all orphan recordings\ndata, response, err := apiInstance.GetOrphanrecordings(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, hasConversation, media)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetOrphanrecordings: %v\\n\", err)\n}"
  },
  "getrecordingbatchrequest": {
    "operationId": "getrecordingbatchrequest",
    "functionName": "GetRecordingBatchrequest",
    "signature": "GetRecordingBatchrequest(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Batchdownloadjobstatusresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar jobId string // jobId\n// Get the status and results for a batch request job, only the user that submitted the job may retrieve results\ndata, response, err := apiInstance.GetRecordingBatchrequest(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingBatchrequest: %v\\n\", err)\n}"
  },
  "getrecordingcrossplatformmediaretentionpolicies": {
    "operationId": "getrecordingcrossplatformmediaretentionpolicies",
    "functionName": "GetRecordingCrossplatformMediaretentionpolicies",
    "signature": "GetRecordingCrossplatformMediaretentionpolicies(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, enabled, summary, hasErrors, deleteDaysThreshold)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "enabled",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "summary",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "hasErrors",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "deleteDaysThreshold",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Policyentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar name string // the policy name - used for filtering results in searches.\nvar enabled bool // checks to see if policy is enabled - use enabled = true or enabled = false\nvar summary bool // provides a less verbose response of policy lists.\nvar hasErrors bool // provides a way to fetch all policies with errors or policies that do not have errors\nvar deleteDaysThreshold int // provides a way to fetch all policies with any actions having deleteDays exceeding the provided value\n// Gets media retention policy list with query options to filter on name and enabled.\ndata, response, err := apiInstance.GetRecordingCrossplatformMediaretentionpolicies(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, enabled, summary, hasErrors, deleteDaysThreshold)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingCrossplatformMediaretentionpolicies: %v\\n\", err)\n}"
  },
  "getrecordingcrossplatformmediaretentionpolicy": {
    "operationId": "getrecordingcrossplatformmediaretentionpolicy",
    "functionName": "GetRecordingCrossplatformMediaretentionpolicy",
    "signature": "GetRecordingCrossplatformMediaretentionpolicy(policyId)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Crossplatformpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar policyId string // Policy ID\n// Get a media retention policy\ndata, response, err := apiInstance.GetRecordingCrossplatformMediaretentionpolicy(policyId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingCrossplatformMediaretentionpolicy: %v\\n\", err)\n}"
  },
  "getrecordingjob": {
    "operationId": "getrecordingjob",
    "functionName": "GetRecordingJob",
    "signature": "GetRecordingJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Recordingjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar jobId string // jobId\n// Get the status of the job associated with the job id.\ndata, response, err := apiInstance.GetRecordingJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingJob: %v\\n\", err)\n}"
  },
  "getrecordingjobfailedrecordings": {
    "operationId": "getrecordingjobfailedrecordings",
    "functionName": "GetRecordingJobFailedrecordings",
    "signature": "GetRecordingJobFailedrecordings(jobId, pageSize, pageNumber, includeTotal, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "includeTotal",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Failedrecordingentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar jobId string // jobId\nvar pageSize int // Page size. Maximum is 100.\nvar pageNumber int // Page number\nvar includeTotal bool // If false, cursor will be used to locate the page instead of pageNumber.\nvar cursor string // Indicates where to resume query results (not required for first page)\n// Get IDs of recordings that the bulk job failed for\ndata, response, err := apiInstance.GetRecordingJobFailedrecordings(jobId, pageSize, pageNumber, includeTotal, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingJobFailedrecordings: %v\\n\", err)\n}"
  },
  "getrecordingjobs": {
    "operationId": "getrecordingjobs",
    "functionName": "GetRecordingJobs",
    "signature": "GetRecordingJobs(pageSize, pageNumber, sortBy, state, showOnlyMyJobs, jobType, includeTotal, cursor)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      },
      {
        "name": "showOnlyMyJobs",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "jobType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeTotal",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Recordingjobentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar state string // Filter by state\nvar showOnlyMyJobs bool // Show only my jobs\nvar jobType string // Job Type (Can be left empty for both)\nvar includeTotal bool // If false, cursor will be used to locate the page instead of pageNumber.\nvar cursor string // Indicates where to resume query results (not required for first page)\n// Get the status of all jobs within the user's organization\ndata, response, err := apiInstance.GetRecordingJobs(pageSize, pageNumber, sortBy, state, showOnlyMyJobs, jobType, includeTotal, cursor)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingJobs: %v\\n\", err)\n}"
  },
  "getrecordingkeyconfiguration": {
    "operationId": "getrecordingkeyconfiguration",
    "functionName": "GetRecordingKeyconfiguration",
    "signature": "GetRecordingKeyconfiguration(keyConfigurationId)",
    "parameters": [
      {
        "name": "keyConfigurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Recordingencryptionconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar keyConfigurationId string // Key Configurations Id\n// Get the encryption key configurations\ndata, response, err := apiInstance.GetRecordingKeyconfiguration(keyConfigurationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingKeyconfiguration: %v\\n\", err)\n}"
  },
  "getrecordingkeyconfigurations": {
    "operationId": "getrecordingkeyconfigurations",
    "functionName": "GetRecordingKeyconfigurations",
    "signature": "GetRecordingKeyconfigurations()",
    "return": "Recordingencryptionconfigurationlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\n// Get a list of key configurations data\ndata, response, err := apiInstance.GetRecordingKeyconfigurations()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingKeyconfigurations: %v\\n\", err)\n}"
  },
  "getrecordingmediaretentionpolicies": {
    "operationId": "getrecordingmediaretentionpolicies",
    "functionName": "GetRecordingMediaretentionpolicies",
    "signature": "GetRecordingMediaretentionpolicies(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, enabled, summary, hasErrors, deleteDaysThreshold)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "enabled",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "summary",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "hasErrors",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "deleteDaysThreshold",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Policyentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar pageSize int // The total page size requested\nvar pageNumber int // The page number requested\nvar sortBy string // variable name requested to sort by\nvar expand []string // variable name requested by expand list\nvar nextPage string // next page token\nvar previousPage string // Previous page token\nvar name string // the policy name - used for filtering results in searches.\nvar enabled bool // checks to see if policy is enabled - use enabled = true or enabled = false\nvar summary bool // provides a less verbose response of policy lists.\nvar hasErrors bool // provides a way to fetch all policies with errors or policies that do not have errors\nvar deleteDaysThreshold int // provides a way to fetch all policies with any actions having deleteDays exceeding the provided value\n// Gets media retention policy list with query options to filter on name and enabled.\ndata, response, err := apiInstance.GetRecordingMediaretentionpolicies(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, enabled, summary, hasErrors, deleteDaysThreshold)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingMediaretentionpolicies: %v\\n\", err)\n}"
  },
  "getrecordingmediaretentionpolicy": {
    "operationId": "getrecordingmediaretentionpolicy",
    "functionName": "GetRecordingMediaretentionpolicy",
    "signature": "GetRecordingMediaretentionpolicy(policyId)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar policyId string // Policy ID\n// Get a media retention policy\ndata, response, err := apiInstance.GetRecordingMediaretentionpolicy(policyId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingMediaretentionpolicy: %v\\n\", err)\n}"
  },
  "getrecordingrecordingkeys": {
    "operationId": "getrecordingrecordingkeys",
    "functionName": "GetRecordingRecordingkeys",
    "signature": "GetRecordingRecordingkeys(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Encryptionkeyentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get encryption key list\ndata, response, err := apiInstance.GetRecordingRecordingkeys(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingRecordingkeys: %v\\n\", err)\n}"
  },
  "getrecordingrecordingkeysrotationschedule": {
    "operationId": "getrecordingrecordingkeysrotationschedule",
    "functionName": "GetRecordingRecordingkeysRotationschedule",
    "signature": "GetRecordingRecordingkeysRotationschedule()",
    "return": "Keyrotationschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\n// Get key rotation schedule\ndata, response, err := apiInstance.GetRecordingRecordingkeysRotationschedule()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingRecordingkeysRotationschedule: %v\\n\", err)\n}"
  },
  "getrecordingsettings": {
    "operationId": "getrecordingsettings",
    "functionName": "GetRecordingSettings",
    "signature": "GetRecordingSettings(createDefault)",
    "parameters": [
      {
        "name": "createDefault",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Recordingsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar createDefault bool // If no settings are found, a new one is created with default values\n// Get the Recording Settings for the Organization\ndata, response, err := apiInstance.GetRecordingSettings(createDefault)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingSettings: %v\\n\", err)\n}"
  },
  "getrecordinguploadsreport": {
    "operationId": "getrecordinguploadsreport",
    "functionName": "GetRecordingUploadsReport",
    "signature": "GetRecordingUploadsReport(reportId)",
    "parameters": [
      {
        "name": "reportId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Recordinguploadreport",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar reportId string // reportId\n// Get the status of a recording upload status report\ndata, response, err := apiInstance.GetRecordingUploadsReport(reportId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingUploadsReport: %v\\n\", err)\n}"
  },
  "getrecordingsretentionquery": {
    "operationId": "getrecordingsretentionquery",
    "functionName": "GetRecordingsRetentionQuery",
    "signature": "GetRecordingsRetentionQuery(retentionThresholdDays, cursor, pageSize)",
    "parameters": [
      {
        "name": "retentionThresholdDays",
        "type": "int",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Recordingretentioncursorentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar retentionThresholdDays int // Fetch retention data for recordings retained for more days than the provided value.\nvar cursor string // Indicates where to resume query results (not required for first page)\nvar pageSize int // Page size. Maximum is 500.\n// Query for recording retention data\ndata, response, err := apiInstance.GetRecordingsRetentionQuery(retentionThresholdDays, cursor, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingsRetentionQuery: %v\\n\", err)\n}"
  },
  "getrecordingsscreensessions": {
    "operationId": "getrecordingsscreensessions",
    "functionName": "GetRecordingsScreensessions",
    "signature": "GetRecordingsScreensessions(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Screenrecordingsessionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Retrieves a paged listing of screen recording sessions\ndata, response, err := apiInstance.GetRecordingsScreensessions(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRecordingsScreensessions: %v\\n\", err)\n}"
  },
  "patchrecordingcrossplatformmediaretentionpolicy": {
    "operationId": "patchrecordingcrossplatformmediaretentionpolicy",
    "functionName": "PatchRecordingCrossplatformMediaretentionpolicy",
    "signature": "PatchRecordingCrossplatformMediaretentionpolicy(policyId, body)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Crossplatformpolicyupdate",
        "required": "true"
      }
    ],
    "return": "Crossplatformpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar policyId string // Policy ID\nvar body platformclientv2.Crossplatformpolicyupdate // Policy\n// Patch a media retention policy\ndata, response, err := apiInstance.PatchRecordingCrossplatformMediaretentionpolicy(policyId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRecordingCrossplatformMediaretentionpolicy: %v\\n\", err)\n}"
  },
  "patchrecordingmediaretentionpolicy": {
    "operationId": "patchrecordingmediaretentionpolicy",
    "functionName": "PatchRecordingMediaretentionpolicy",
    "signature": "PatchRecordingMediaretentionpolicy(policyId, body)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Policyupdate",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar policyId string // Policy ID\nvar body platformclientv2.Policyupdate // Policy\n// Patch a media retention policy\ndata, response, err := apiInstance.PatchRecordingMediaretentionpolicy(policyId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRecordingMediaretentionpolicy: %v\\n\", err)\n}"
  },
  "patchrecordingsscreensession": {
    "operationId": "patchrecordingsscreensession",
    "functionName": "PatchRecordingsScreensession",
    "signature": "PatchRecordingsScreensession(recordingSessionId, body)",
    "parameters": [
      {
        "name": "recordingSessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Screenrecordingsessionrequest",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar recordingSessionId string // Screen recording session ID\nvar body platformclientv2.Screenrecordingsessionrequest // \n// Update a screen recording session\nresponse, err := apiInstance.PatchRecordingsScreensession(recordingSessionId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRecordingsScreensession: %v\\n\", err)\n}"
  },
  "postconversationrecordingannotations": {
    "operationId": "postconversationrecordingannotations",
    "functionName": "PostConversationRecordingAnnotations",
    "signature": "PostConversationRecordingAnnotations(conversationId, recordingId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Annotation",
        "required": "true"
      }
    ],
    "return": "Annotation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar recordingId string // Recording ID\nvar body platformclientv2.Annotation // annotation\n// Create annotation\ndata, response, err := apiInstance.PostConversationRecordingAnnotations(conversationId, recordingId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostConversationRecordingAnnotations: %v\\n\", err)\n}"
  },
  "postrecordingbatchrequests": {
    "operationId": "postrecordingbatchrequests",
    "functionName": "PostRecordingBatchrequests",
    "signature": "PostRecordingBatchrequests(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Batchdownloadjobsubmission",
        "required": "true"
      }
    ],
    "return": "Batchdownloadjobsubmissionresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Batchdownloadjobsubmission // Job submission criteria\n// Submit a batch download request for recordings. Recordings in response will be in their original format/codec - configured in the Trunk configuration.\ndata, response, err := apiInstance.PostRecordingBatchrequests(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingBatchrequests: %v\\n\", err)\n}"
  },
  "postrecordingcrossplatformmediaretentionpolicies": {
    "operationId": "postrecordingcrossplatformmediaretentionpolicies",
    "functionName": "PostRecordingCrossplatformMediaretentionpolicies",
    "signature": "PostRecordingCrossplatformMediaretentionpolicies(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Crossplatformpolicycreate",
        "required": "true"
      }
    ],
    "return": "Crossplatformpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Crossplatformpolicycreate // Policy\n// Create media retention policy\ndata, response, err := apiInstance.PostRecordingCrossplatformMediaretentionpolicies(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingCrossplatformMediaretentionpolicies: %v\\n\", err)\n}"
  },
  "postrecordingjobs": {
    "operationId": "postrecordingjobs",
    "functionName": "PostRecordingJobs",
    "signature": "PostRecordingJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Recordingjobsquery",
        "required": "true"
      }
    ],
    "return": "Recordingjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Recordingjobsquery // query\n// Create a recording bulk job.\ndata, response, err := apiInstance.PostRecordingJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingJobs: %v\\n\", err)\n}"
  },
  "postrecordingkeyconfigurations": {
    "operationId": "postrecordingkeyconfigurations",
    "functionName": "PostRecordingKeyconfigurations",
    "signature": "PostRecordingKeyconfigurations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Recordingencryptionconfiguration",
        "required": "true"
      }
    ],
    "return": "Recordingencryptionconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Recordingencryptionconfiguration // Encryption Configuration\n// Setup configurations for encryption key creation\ndata, response, err := apiInstance.PostRecordingKeyconfigurations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingKeyconfigurations: %v\\n\", err)\n}"
  },
  "postrecordingkeyconfigurationsvalidate": {
    "operationId": "postrecordingkeyconfigurationsvalidate",
    "functionName": "PostRecordingKeyconfigurationsValidate",
    "signature": "PostRecordingKeyconfigurationsValidate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Recordingencryptionconfiguration",
        "required": "true"
      }
    ],
    "return": "Recordingencryptionconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Recordingencryptionconfiguration // Encryption Configuration\n// Validate encryption key configurations without saving it\ndata, response, err := apiInstance.PostRecordingKeyconfigurationsValidate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingKeyconfigurationsValidate: %v\\n\", err)\n}"
  },
  "postrecordinglocalkeys": {
    "operationId": "postrecordinglocalkeys",
    "functionName": "PostRecordingLocalkeys",
    "signature": "PostRecordingLocalkeys(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Localencryptionkeyrequest",
        "required": "true"
      }
    ],
    "return": "Encryptionkey",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Localencryptionkeyrequest // Local Encryption body\n// create a local key management recording key\ndata, response, err := apiInstance.PostRecordingLocalkeys(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingLocalkeys: %v\\n\", err)\n}"
  },
  "postrecordingmediaretentionpolicies": {
    "operationId": "postrecordingmediaretentionpolicies",
    "functionName": "PostRecordingMediaretentionpolicies",
    "signature": "PostRecordingMediaretentionpolicies(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Policycreate",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Policycreate // Policy\n// Create media retention policy\ndata, response, err := apiInstance.PostRecordingMediaretentionpolicies(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingMediaretentionpolicies: %v\\n\", err)\n}"
  },
  "postrecordingrecordingkeys": {
    "operationId": "postrecordingrecordingkeys",
    "functionName": "PostRecordingRecordingkeys",
    "signature": "PostRecordingRecordingkeys()",
    "return": "Encryptionkey",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\n// Create encryption key\ndata, response, err := apiInstance.PostRecordingRecordingkeys()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingRecordingkeys: %v\\n\", err)\n}"
  },
  "postrecordinguploadsreports": {
    "operationId": "postrecordinguploadsreports",
    "functionName": "PostRecordingUploadsReports",
    "signature": "PostRecordingUploadsReports(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Recordinguploadreportrequest",
        "required": "true"
      }
    ],
    "return": "Recordinguploadreport",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Recordinguploadreportrequest // Report parameters\n// Creates a recording upload status report\ndata, response, err := apiInstance.PostRecordingUploadsReports(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingUploadsReports: %v\\n\", err)\n}"
  },
  "postrecordingsdeletionprotection": {
    "operationId": "postrecordingsdeletionprotection",
    "functionName": "PostRecordingsDeletionprotection",
    "signature": "PostRecordingsDeletionprotection(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Conversationdeletionprotectionquery",
        "required": "true"
      }
    ],
    "return": "[]Addressableentityref",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Conversationdeletionprotectionquery // conversationIds\n// Get a list of conversations with protected recordings\ndata, response, err := apiInstance.PostRecordingsDeletionprotection(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingsDeletionprotection: %v\\n\", err)\n}"
  },
  "postrecordingsscreensessionsacknowledge": {
    "operationId": "postrecordingsscreensessionsacknowledge",
    "functionName": "PostRecordingsScreensessionsAcknowledge",
    "signature": "PostRecordingsScreensessionsAcknowledge(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Acknowledgescreenrecordingrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Acknowledgescreenrecordingrequest // AcknowledgeScreenRecordingRequest\n// Acknowledge a screen recording.\nresponse, err := apiInstance.PostRecordingsScreensessionsAcknowledge(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingsScreensessionsAcknowledge: %v\\n\", err)\n}"
  },
  "postrecordingsscreensessionsmetadata": {
    "operationId": "postrecordingsscreensessionsmetadata",
    "functionName": "PostRecordingsScreensessionsMetadata",
    "signature": "PostRecordingsScreensessionsMetadata(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Screenrecordingmetadatarequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Screenrecordingmetadatarequest // ScreenRecordingMetaDataRequest\n// Provide meta-data a screen recording.\nresponse, err := apiInstance.PostRecordingsScreensessionsMetadata(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostRecordingsScreensessionsMetadata: %v\\n\", err)\n}"
  },
  "putconversationrecording": {
    "operationId": "putconversationrecording",
    "functionName": "PutConversationRecording",
    "signature": "PutConversationRecording(conversationId, recordingId, body, clearExport)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Recording",
        "required": "true"
      },
      {
        "name": "clearExport",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar recordingId string // Recording ID\nvar body platformclientv2.Recording // recording\nvar clearExport bool // Whether to clear the pending export for the recording\n// Updates the retention records on a recording.\ndata, response, err := apiInstance.PutConversationRecording(conversationId, recordingId, body, clearExport)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationRecording: %v\\n\", err)\n}"
  },
  "putconversationrecordingannotation": {
    "operationId": "putconversationrecordingannotation",
    "functionName": "PutConversationRecordingAnnotation",
    "signature": "PutConversationRecordingAnnotation(conversationId, recordingId, annotationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Annotation",
        "required": "true"
      }
    ],
    "return": "Annotation",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar recordingId string // Recording ID\nvar annotationId string // Annotation ID\nvar body platformclientv2.Annotation // annotation\n// Update annotation\ndata, response, err := apiInstance.PutConversationRecordingAnnotation(conversationId, recordingId, annotationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutConversationRecordingAnnotation: %v\\n\", err)\n}"
  },
  "putorphanrecording": {
    "operationId": "putorphanrecording",
    "functionName": "PutOrphanrecording",
    "signature": "PutOrphanrecording(orphanId, body)",
    "parameters": [
      {
        "name": "orphanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Orphanupdaterequest",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar orphanId string // Orphan ID\nvar body platformclientv2.Orphanupdaterequest // \n// Updates an orphan recording to a regular recording with retention values\ndata, response, err := apiInstance.PutOrphanrecording(orphanId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutOrphanrecording: %v\\n\", err)\n}"
  },
  "putrecordingcrossplatformmediaretentionpolicy": {
    "operationId": "putrecordingcrossplatformmediaretentionpolicy",
    "functionName": "PutRecordingCrossplatformMediaretentionpolicy",
    "signature": "PutRecordingCrossplatformMediaretentionpolicy(policyId, body)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Crossplatformpolicy",
        "required": "true"
      }
    ],
    "return": "Crossplatformpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar policyId string // Policy ID\nvar body platformclientv2.Crossplatformpolicy // Policy\n// Update a media retention policy\ndata, response, err := apiInstance.PutRecordingCrossplatformMediaretentionpolicy(policyId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRecordingCrossplatformMediaretentionpolicy: %v\\n\", err)\n}"
  },
  "putrecordingjob": {
    "operationId": "putrecordingjob",
    "functionName": "PutRecordingJob",
    "signature": "PutRecordingJob(jobId, body)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Executerecordingjobsquery",
        "required": "true"
      }
    ],
    "return": "Recordingjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar jobId string // jobId\nvar body platformclientv2.Executerecordingjobsquery // query\n// Execute the recording bulk job.\ndata, response, err := apiInstance.PutRecordingJob(jobId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRecordingJob: %v\\n\", err)\n}"
  },
  "putrecordingkeyconfiguration": {
    "operationId": "putrecordingkeyconfiguration",
    "functionName": "PutRecordingKeyconfiguration",
    "signature": "PutRecordingKeyconfiguration(keyConfigurationId, body)",
    "parameters": [
      {
        "name": "keyConfigurationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Recordingencryptionconfiguration",
        "required": "true"
      }
    ],
    "return": "Recordingencryptionconfiguration",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar keyConfigurationId string // Key Configurations Id\nvar body platformclientv2.Recordingencryptionconfiguration // Encryption key configuration metadata\n// Update the encryption key configurations\ndata, response, err := apiInstance.PutRecordingKeyconfiguration(keyConfigurationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRecordingKeyconfiguration: %v\\n\", err)\n}"
  },
  "putrecordingmediaretentionpolicy": {
    "operationId": "putrecordingmediaretentionpolicy",
    "functionName": "PutRecordingMediaretentionpolicy",
    "signature": "PutRecordingMediaretentionpolicy(policyId, body)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Policy",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar policyId string // Policy ID\nvar body platformclientv2.Policy // Policy\n// Update a media retention policy\ndata, response, err := apiInstance.PutRecordingMediaretentionpolicy(policyId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRecordingMediaretentionpolicy: %v\\n\", err)\n}"
  },
  "putrecordingrecordingkeysrotationschedule": {
    "operationId": "putrecordingrecordingkeysrotationschedule",
    "functionName": "PutRecordingRecordingkeysRotationschedule",
    "signature": "PutRecordingRecordingkeysRotationschedule(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Keyrotationschedule",
        "required": "true"
      }
    ],
    "return": "Keyrotationschedule",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Keyrotationschedule // KeyRotationSchedule\n// Update key rotation schedule\ndata, response, err := apiInstance.PutRecordingRecordingkeysRotationschedule(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRecordingRecordingkeysRotationschedule: %v\\n\", err)\n}"
  },
  "putrecordingsettings": {
    "operationId": "putrecordingsettings",
    "functionName": "PutRecordingSettings",
    "signature": "PutRecordingSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Recordingsettings",
        "required": "true"
      }
    ],
    "return": "Recordingsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar body platformclientv2.Recordingsettings // Recording settings\n// Update the Recording Settings for the Organization\ndata, response, err := apiInstance.PutRecordingSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRecordingSettings: %v\\n\", err)\n}"
  },
  "putrecordingsdeletionprotection": {
    "operationId": "putrecordingsdeletionprotection",
    "functionName": "PutRecordingsDeletionprotection",
    "signature": "PutRecordingsDeletionprotection(protect, body)",
    "parameters": [
      {
        "name": "protect",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Conversationdeletionprotectionquery",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRecordingApiWithConfig(config)\n\nvar protect bool // Check for apply, uncheck for revoke (each action requires the respective permission)\nvar body platformclientv2.Conversationdeletionprotectionquery // \n// Apply or revoke recording protection for conversations\nresponse, err := apiInstance.PutRecordingsDeletionprotection(protect, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PutRecordingsDeletionprotection: %v\\n\", err)\n}"
  },
  "deleteresponsemanagementlibrary": {
    "operationId": "deleteresponsemanagementlibrary",
    "functionName": "DeleteResponsemanagementLibrary",
    "signature": "DeleteResponsemanagementLibrary(libraryId)",
    "parameters": [
      {
        "name": "libraryId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar libraryId string // Library ID\n// Delete an existing response library.\nresponse, err := apiInstance.DeleteResponsemanagementLibrary(libraryId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteResponsemanagementLibrary: %v\\n\", err)\n}"
  },
  "deleteresponsemanagementresponse": {
    "operationId": "deleteresponsemanagementresponse",
    "functionName": "DeleteResponsemanagementResponse",
    "signature": "DeleteResponsemanagementResponse(responseId)",
    "parameters": [
      {
        "name": "responseId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar responseId string // Response ID\n// Delete an existing response.\nresponse, err := apiInstance.DeleteResponsemanagementResponse(responseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteResponsemanagementResponse: %v\\n\", err)\n}"
  },
  "deleteresponsemanagementresponseasset": {
    "operationId": "deleteresponsemanagementresponseasset",
    "functionName": "DeleteResponsemanagementResponseasset",
    "signature": "DeleteResponsemanagementResponseasset(responseAssetId)",
    "parameters": [
      {
        "name": "responseAssetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar responseAssetId string // Asset Id\n// Delete response asset\nresponse, err := apiInstance.DeleteResponsemanagementResponseasset(responseAssetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteResponsemanagementResponseasset: %v\\n\", err)\n}"
  },
  "getresponsemanagementlibraries": {
    "operationId": "getresponsemanagementlibraries",
    "functionName": "GetResponsemanagementLibraries",
    "signature": "GetResponsemanagementLibraries(pageNumber, pageSize, messagingTemplateFilter, libraryPrefix)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "messagingTemplateFilter",
        "type": "string",
        "required": "false"
      },
      {
        "name": "libraryPrefix",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Libraryentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar messagingTemplateFilter string // Returns a list of libraries that contain responses with at least one messaging template defined for a specific message channel\nvar libraryPrefix string // Returns a list of libraries that contain the prefix provided\n// Gets a list of existing response libraries.\ndata, response, err := apiInstance.GetResponsemanagementLibraries(pageNumber, pageSize, messagingTemplateFilter, libraryPrefix)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetResponsemanagementLibraries: %v\\n\", err)\n}"
  },
  "getresponsemanagementlibrary": {
    "operationId": "getresponsemanagementlibrary",
    "functionName": "GetResponsemanagementLibrary",
    "signature": "GetResponsemanagementLibrary(libraryId)",
    "parameters": [
      {
        "name": "libraryId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Library",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar libraryId string // Library ID\n// Get details about an existing response library.\ndata, response, err := apiInstance.GetResponsemanagementLibrary(libraryId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetResponsemanagementLibrary: %v\\n\", err)\n}"
  },
  "getresponsemanagementresponse": {
    "operationId": "getresponsemanagementresponse",
    "functionName": "GetResponsemanagementResponse",
    "signature": "GetResponsemanagementResponse(responseId, expand)",
    "parameters": [
      {
        "name": "responseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Response",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar responseId string // Response ID\nvar expand string // Expand instructions for the return value.\n// Get details about an existing response.\ndata, response, err := apiInstance.GetResponsemanagementResponse(responseId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetResponsemanagementResponse: %v\\n\", err)\n}"
  },
  "getresponsemanagementresponseasset": {
    "operationId": "getresponsemanagementresponseasset",
    "functionName": "GetResponsemanagementResponseasset",
    "signature": "GetResponsemanagementResponseasset(responseAssetId)",
    "parameters": [
      {
        "name": "responseAssetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Responseasset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar responseAssetId string // Asset Id\n// Get response asset information\ndata, response, err := apiInstance.GetResponsemanagementResponseasset(responseAssetId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetResponsemanagementResponseasset: %v\\n\", err)\n}"
  },
  "getresponsemanagementresponseassetsstatusstatusid": {
    "operationId": "getresponsemanagementresponseassetsstatusstatusid",
    "functionName": "GetResponsemanagementResponseassetsStatusStatusId",
    "signature": "GetResponsemanagementResponseassetsStatusStatusId(statusId)",
    "parameters": [
      {
        "name": "statusId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Responseassetstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar statusId string // Status Id\n// Get response asset upload status\ndata, response, err := apiInstance.GetResponsemanagementResponseassetsStatusStatusId(statusId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetResponsemanagementResponseassetsStatusStatusId: %v\\n\", err)\n}"
  },
  "getresponsemanagementresponses": {
    "operationId": "getresponsemanagementresponses",
    "functionName": "GetResponsemanagementResponses",
    "signature": "GetResponsemanagementResponses(libraryId, pageNumber, pageSize, expand)",
    "parameters": [
      {
        "name": "libraryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Responseentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar libraryId string // Library ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar expand string // Expand instructions for the return value.\n// Gets a list of existing responses.\ndata, response, err := apiInstance.GetResponsemanagementResponses(libraryId, pageNumber, pageSize, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetResponsemanagementResponses: %v\\n\", err)\n}"
  },
  "postresponsemanagementlibraries": {
    "operationId": "postresponsemanagementlibraries",
    "functionName": "PostResponsemanagementLibraries",
    "signature": "PostResponsemanagementLibraries(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Library",
        "required": "true"
      }
    ],
    "return": "Library",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar body platformclientv2.Library // Library\n// Create a response library.\ndata, response, err := apiInstance.PostResponsemanagementLibraries(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostResponsemanagementLibraries: %v\\n\", err)\n}"
  },
  "postresponsemanagementresponseassetssearch": {
    "operationId": "postresponsemanagementresponseassetssearch",
    "functionName": "PostResponsemanagementResponseassetsSearch",
    "signature": "PostResponsemanagementResponseassetsSearch(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "Responseassetsearchrequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Responseassetsearchresults",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar body platformclientv2.Responseassetsearchrequest // request\nvar expand []string // Which fields, if any, to expand\n// Search response assets\ndata, response, err := apiInstance.PostResponsemanagementResponseassetsSearch(body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostResponsemanagementResponseassetsSearch: %v\\n\", err)\n}"
  },
  "postresponsemanagementresponseassetsuploads": {
    "operationId": "postresponsemanagementresponseassetsuploads",
    "functionName": "PostResponsemanagementResponseassetsUploads",
    "signature": "PostResponsemanagementResponseassetsUploads(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createresponseassetrequest",
        "required": "true"
      }
    ],
    "return": "Createresponseassetresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar body platformclientv2.Createresponseassetrequest // request\n// Creates pre-signed url for uploading response asset\ndata, response, err := apiInstance.PostResponsemanagementResponseassetsUploads(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostResponsemanagementResponseassetsUploads: %v\\n\", err)\n}"
  },
  "postresponsemanagementresponses": {
    "operationId": "postresponsemanagementresponses",
    "functionName": "PostResponsemanagementResponses",
    "signature": "PostResponsemanagementResponses(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "Response",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Response",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar body platformclientv2.Response // Response\nvar expand string // Expand instructions for the return value.\n// Create a response.\ndata, response, err := apiInstance.PostResponsemanagementResponses(body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostResponsemanagementResponses: %v\\n\", err)\n}"
  },
  "postresponsemanagementresponsesquery": {
    "operationId": "postresponsemanagementresponsesquery",
    "functionName": "PostResponsemanagementResponsesQuery",
    "signature": "PostResponsemanagementResponsesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Responsequeryrequest",
        "required": "true"
      }
    ],
    "return": "Responsequeryresults",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar body platformclientv2.Responsequeryrequest // Response\n// Query responses\ndata, response, err := apiInstance.PostResponsemanagementResponsesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostResponsemanagementResponsesQuery: %v\\n\", err)\n}"
  },
  "putresponsemanagementlibrary": {
    "operationId": "putresponsemanagementlibrary",
    "functionName": "PutResponsemanagementLibrary",
    "signature": "PutResponsemanagementLibrary(libraryId, body)",
    "parameters": [
      {
        "name": "libraryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Library",
        "required": "true"
      }
    ],
    "return": "Library",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar libraryId string // Library ID\nvar body platformclientv2.Library // Library\n// Update an existing response library.\ndata, response, err := apiInstance.PutResponsemanagementLibrary(libraryId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutResponsemanagementLibrary: %v\\n\", err)\n}"
  },
  "putresponsemanagementresponse": {
    "operationId": "putresponsemanagementresponse",
    "functionName": "PutResponsemanagementResponse",
    "signature": "PutResponsemanagementResponse(responseId, body, expand)",
    "parameters": [
      {
        "name": "responseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Response",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Response",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar responseId string // Response ID\nvar body platformclientv2.Response // Response\nvar expand string // Expand instructions for the return value.\n// Update an existing response.\ndata, response, err := apiInstance.PutResponsemanagementResponse(responseId, body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutResponsemanagementResponse: %v\\n\", err)\n}"
  },
  "putresponsemanagementresponseasset": {
    "operationId": "putresponsemanagementresponseasset",
    "functionName": "PutResponsemanagementResponseasset",
    "signature": "PutResponsemanagementResponseasset(responseAssetId, body)",
    "parameters": [
      {
        "name": "responseAssetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Responseassetrequest",
        "required": "true"
      }
    ],
    "return": "Responseasset",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewResponseManagementApiWithConfig(config)\n\nvar responseAssetId string // Asset Id\nvar body platformclientv2.Responseassetrequest // request\n// Update response asset\ndata, response, err := apiInstance.PutResponsemanagementResponseasset(responseAssetId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutResponsemanagementResponseasset: %v\\n\", err)\n}"
  },
  "deleteroutingassessment": {
    "operationId": "deleteroutingassessment",
    "functionName": "DeleteRoutingAssessment",
    "signature": "DeleteRoutingAssessment(assessmentId)",
    "parameters": [
      {
        "name": "assessmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar assessmentId string // Benefit Assessment ID\n// Delete single benefit assessment.\nresponse, err := apiInstance.DeleteRoutingAssessment(assessmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingAssessment: %v\\n\", err)\n}"
  },
  "deleteroutingemaildomain": {
    "operationId": "deleteroutingemaildomain",
    "functionName": "DeleteRoutingEmailDomain",
    "signature": "DeleteRoutingEmailDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\n// Delete a domain\nresponse, err := apiInstance.DeleteRoutingEmailDomain(domainId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingEmailDomain: %v\\n\", err)\n}"
  },
  "deleteroutingemaildomainroute": {
    "operationId": "deleteroutingemaildomainroute",
    "functionName": "DeleteRoutingEmailDomainRoute",
    "signature": "DeleteRoutingEmailDomainRoute(domainName, routeId)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "routeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainName string // email domain\nvar routeId string // route ID\n// Delete a route\nresponse, err := apiInstance.DeleteRoutingEmailDomainRoute(domainName, routeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingEmailDomainRoute: %v\\n\", err)\n}"
  },
  "deleteroutingemailoutbounddomain": {
    "operationId": "deleteroutingemailoutbounddomain",
    "functionName": "DeleteRoutingEmailOutboundDomain",
    "signature": "DeleteRoutingEmailOutboundDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\n// Delete an outbound domain\nresponse, err := apiInstance.DeleteRoutingEmailOutboundDomain(domainId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingEmailOutboundDomain: %v\\n\", err)\n}"
  },
  "deleteroutinglanguage": {
    "operationId": "deleteroutinglanguage",
    "functionName": "DeleteRoutingLanguage",
    "signature": "DeleteRoutingLanguage(languageId)",
    "parameters": [
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar languageId string // Language ID\n// Delete a routing language\nresponse, err := apiInstance.DeleteRoutingLanguage(languageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingLanguage: %v\\n\", err)\n}"
  },
  "deleteroutingpredictor": {
    "operationId": "deleteroutingpredictor",
    "functionName": "DeleteRoutingPredictor",
    "signature": "DeleteRoutingPredictor(predictorId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar predictorId string // Predictor ID\n// Delete single predictor.\nresponse, err := apiInstance.DeleteRoutingPredictor(predictorId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingPredictor: %v\\n\", err)\n}"
  },
  "deleteroutingqueue": {
    "operationId": "deleteroutingqueue",
    "functionName": "DeleteRoutingQueue",
    "signature": "DeleteRoutingQueue(queueId, forceDelete)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDelete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar forceDelete bool // forceDelete\n// Delete a queue\nresponse, err := apiInstance.DeleteRoutingQueue(queueId, forceDelete)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingQueue: %v\\n\", err)\n}"
  },
  "deleteroutingqueuemember": {
    "operationId": "deleteroutingqueuemember",
    "functionName": "DeleteRoutingQueueMember",
    "signature": "DeleteRoutingQueueMember(queueId, memberId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar memberId string // Member ID\n// Delete a queue member.\nresponse, err := apiInstance.DeleteRoutingQueueMember(queueId, memberId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingQueueMember: %v\\n\", err)\n}"
  },
  "deleteroutingqueueuser": {
    "operationId": "deleteroutingqueueuser",
    "functionName": "DeleteRoutingQueueUser",
    "signature": "DeleteRoutingQueueUser(queueId, memberId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar memberId string // Member ID\n// DEPRECATED: use DELETE /routing/queues/{queueId}/members/{memberId}.  Delete queue member.\nresponse, err := apiInstance.DeleteRoutingQueueUser(queueId, memberId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingQueueUser: %v\\n\", err)\n}"
  },
  "deleteroutingqueuewrapupcode": {
    "operationId": "deleteroutingqueuewrapupcode",
    "functionName": "DeleteRoutingQueueWrapupcode",
    "signature": "DeleteRoutingQueueWrapupcode(queueId, codeId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "codeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar codeId string // Code ID\n// Delete a wrap-up code from a queue\nresponse, err := apiInstance.DeleteRoutingQueueWrapupcode(queueId, codeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingQueueWrapupcode: %v\\n\", err)\n}"
  },
  "deleteroutingsettings": {
    "operationId": "deleteroutingsettings",
    "functionName": "DeleteRoutingSettings",
    "signature": "DeleteRoutingSettings()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\n// Delete an organization's routing settings\nresponse, err := apiInstance.DeleteRoutingSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingSettings: %v\\n\", err)\n}"
  },
  "deleteroutingskill": {
    "operationId": "deleteroutingskill",
    "functionName": "DeleteRoutingSkill",
    "signature": "DeleteRoutingSkill(skillId)",
    "parameters": [
      {
        "name": "skillId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar skillId string // Skill ID\n// Delete Routing Skill\nresponse, err := apiInstance.DeleteRoutingSkill(skillId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingSkill: %v\\n\", err)\n}"
  },
  "deleteroutingskillgroup": {
    "operationId": "deleteroutingskillgroup",
    "functionName": "DeleteRoutingSkillgroup",
    "signature": "DeleteRoutingSkillgroup(skillGroupId)",
    "parameters": [
      {
        "name": "skillGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar skillGroupId string // Skill Group ID\n// Remove skill group definition\nresponse, err := apiInstance.DeleteRoutingSkillgroup(skillGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingSkillgroup: %v\\n\", err)\n}"
  },
  "deleteroutingsmsaddress": {
    "operationId": "deleteroutingsmsaddress",
    "functionName": "DeleteRoutingSmsAddress",
    "signature": "DeleteRoutingSmsAddress(addressId)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar addressId string // Address ID\n// Delete an Address by Id for SMS\nresponse, err := apiInstance.DeleteRoutingSmsAddress(addressId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingSmsAddress: %v\\n\", err)\n}"
  },
  "deleteroutingsmsphonenumber": {
    "operationId": "deleteroutingsmsphonenumber",
    "functionName": "DeleteRoutingSmsPhonenumber",
    "signature": "DeleteRoutingSmsPhonenumber(addressId)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar addressId string // Address ID\n// Delete a phone number provisioned for SMS.\nresponse, err := apiInstance.DeleteRoutingSmsPhonenumber(addressId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingSmsPhonenumber: %v\\n\", err)\n}"
  },
  "deleteroutinguserutilization": {
    "operationId": "deleteroutinguserutilization",
    "functionName": "DeleteRoutingUserUtilization",
    "signature": "DeleteRoutingUserUtilization(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Delete the user's max utilization settings and revert to the organization-wide default.\nresponse, err := apiInstance.DeleteRoutingUserUtilization(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingUserUtilization: %v\\n\", err)\n}"
  },
  "deleteroutingutilization": {
    "operationId": "deleteroutingutilization",
    "functionName": "DeleteRoutingUtilization",
    "signature": "DeleteRoutingUtilization()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\n// Delete the organization-wide max utilization settings and revert to the system default.\nresponse, err := apiInstance.DeleteRoutingUtilization()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingUtilization: %v\\n\", err)\n}"
  },
  "deleteroutingutilizationtag": {
    "operationId": "deleteroutingutilizationtag",
    "functionName": "DeleteRoutingUtilizationTag",
    "signature": "DeleteRoutingUtilizationTag(tagId, forceDelete)",
    "parameters": [
      {
        "name": "tagId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDelete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar tagId string // Utilization Tag ID\nvar forceDelete bool // Remove all tag usages (if found) without warning\n// Delete an utilization tag\nresponse, err := apiInstance.DeleteRoutingUtilizationTag(tagId, forceDelete)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingUtilizationTag: %v\\n\", err)\n}"
  },
  "deleteroutingwrapupcode": {
    "operationId": "deleteroutingwrapupcode",
    "functionName": "DeleteRoutingWrapupcode",
    "signature": "DeleteRoutingWrapupcode(codeId)",
    "parameters": [
      {
        "name": "codeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar codeId string // Wrapup Code ID\n// Delete wrap-up code\nresponse, err := apiInstance.DeleteRoutingWrapupcode(codeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteRoutingWrapupcode: %v\\n\", err)\n}"
  },
  "deleteuserroutinglanguage": {
    "operationId": "deleteuserroutinglanguage",
    "functionName": "DeleteUserRoutinglanguage",
    "signature": "DeleteUserRoutinglanguage(userId, languageId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar languageId string // languageId\n// Remove routing language from user\nresponse, err := apiInstance.DeleteUserRoutinglanguage(userId, languageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteUserRoutinglanguage: %v\\n\", err)\n}"
  },
  "deleteuserroutingskill": {
    "operationId": "deleteuserroutingskill",
    "functionName": "DeleteUserRoutingskill",
    "signature": "DeleteUserRoutingskill(userId, skillId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "skillId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar skillId string // skillId\n// Remove routing skill from user\nresponse, err := apiInstance.DeleteUserRoutingskill(userId, skillId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteUserRoutingskill: %v\\n\", err)\n}"
  },
  "getroutingassessment": {
    "operationId": "getroutingassessment",
    "functionName": "GetRoutingAssessment",
    "signature": "GetRoutingAssessment(assessmentId)",
    "parameters": [
      {
        "name": "assessmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Benefitassessment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar assessmentId string // Benefit Assessment ID\n// Retrieve a single benefit assessment.\ndata, response, err := apiInstance.GetRoutingAssessment(assessmentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingAssessment: %v\\n\", err)\n}"
  },
  "getroutingassessments": {
    "operationId": "getroutingassessments",
    "functionName": "GetRoutingAssessments",
    "signature": "GetRoutingAssessments(before, after, limit, pageSize, queueId)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queueId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Assessmentlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar limit string // Number of entities to return. Maximum of 200. Deprecated in favour of pageSize\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar queueId []string // Queue ID(s) to filter assessments by.\n// Retrieve all benefit assessments.\ndata, response, err := apiInstance.GetRoutingAssessments(before, after, limit, pageSize, queueId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingAssessments: %v\\n\", err)\n}"
  },
  "getroutingassessmentsjob": {
    "operationId": "getroutingassessmentsjob",
    "functionName": "GetRoutingAssessmentsJob",
    "signature": "GetRoutingAssessmentsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Benefitassessmentjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar jobId string // Benefit Assessment Job ID\n// Retrieve a single benefit assessments job.\ndata, response, err := apiInstance.GetRoutingAssessmentsJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingAssessmentsJob: %v\\n\", err)\n}"
  },
  "getroutingassessmentsjobs": {
    "operationId": "getroutingassessmentsjobs",
    "functionName": "GetRoutingAssessmentsJobs",
    "signature": "GetRoutingAssessmentsJobs(divisionId)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Assessmentjoblisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar divisionId []string // Division ID(s) to filter assessment jobs by.\n// Retrieve all benefit assessment jobs.\ndata, response, err := apiInstance.GetRoutingAssessmentsJobs(divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingAssessmentsJobs: %v\\n\", err)\n}"
  },
  "getroutingavailablemediatypes": {
    "operationId": "getroutingavailablemediatypes",
    "functionName": "GetRoutingAvailablemediatypes",
    "signature": "GetRoutingAvailablemediatypes()",
    "return": "Availablemediatypeentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\n// Get available media types\ndata, response, err := apiInstance.GetRoutingAvailablemediatypes()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingAvailablemediatypes: %v\\n\", err)\n}"
  },
  "getroutingemaildomain": {
    "operationId": "getroutingemaildomain",
    "functionName": "GetRoutingEmailDomain",
    "signature": "GetRoutingEmailDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Inbounddomain",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\n// Get domain\ndata, response, err := apiInstance.GetRoutingEmailDomain(domainId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingEmailDomain: %v\\n\", err)\n}"
  },
  "getroutingemaildomainroute": {
    "operationId": "getroutingemaildomainroute",
    "functionName": "GetRoutingEmailDomainRoute",
    "signature": "GetRoutingEmailDomainRoute(domainName, routeId)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "routeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Inboundroute",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainName string // email domain\nvar routeId string // route ID\n// Get a route\ndata, response, err := apiInstance.GetRoutingEmailDomainRoute(domainName, routeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingEmailDomainRoute: %v\\n\", err)\n}"
  },
  "getroutingemaildomainroutes": {
    "operationId": "getroutingemaildomainroutes",
    "functionName": "GetRoutingEmailDomainRoutes",
    "signature": "GetRoutingEmailDomainRoutes(domainName, pageSize, pageNumber, pattern)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pattern",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Inboundrouteentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainName string // email domain\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar pattern string // Filter routes by the route's pattern property\n// Get routes\ndata, response, err := apiInstance.GetRoutingEmailDomainRoutes(domainName, pageSize, pageNumber, pattern)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingEmailDomainRoutes: %v\\n\", err)\n}"
  },
  "getroutingemaildomains": {
    "operationId": "getroutingemaildomains",
    "functionName": "GetRoutingEmailDomains",
    "signature": "GetRoutingEmailDomains(pageSize, pageNumber, excludeStatus, filter)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "excludeStatus",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Inbounddomainentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar excludeStatus bool // Exclude MX record data\nvar filter string // Optional search filter\n// Get domains\ndata, response, err := apiInstance.GetRoutingEmailDomains(pageSize, pageNumber, excludeStatus, filter)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingEmailDomains: %v\\n\", err)\n}"
  },
  "getroutingemailoutbounddomain": {
    "operationId": "getroutingemailoutbounddomain",
    "functionName": "GetRoutingEmailOutboundDomain",
    "signature": "GetRoutingEmailOutboundDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outbounddomain",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\n// Get domain\ndata, response, err := apiInstance.GetRoutingEmailOutboundDomain(domainId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingEmailOutboundDomain: %v\\n\", err)\n}"
  },
  "getroutingemailoutbounddomainactivation": {
    "operationId": "getroutingemailoutbounddomainactivation",
    "functionName": "GetRoutingEmailOutboundDomainActivation",
    "signature": "GetRoutingEmailOutboundDomainActivation(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emailoutbounddomainresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\n// Get activation status (cname + dkim) of an outbound domain\ndata, response, err := apiInstance.GetRoutingEmailOutboundDomainActivation(domainId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingEmailOutboundDomainActivation: %v\\n\", err)\n}"
  },
  "getroutingemailoutbounddomainsearch": {
    "operationId": "getroutingemailoutbounddomainsearch",
    "functionName": "GetRoutingEmailOutboundDomainSearch",
    "signature": "GetRoutingEmailOutboundDomainSearch(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outbounddomain",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\n// Search a domain across organizations\ndata, response, err := apiInstance.GetRoutingEmailOutboundDomainSearch(domainId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingEmailOutboundDomainSearch: %v\\n\", err)\n}"
  },
  "getroutingemailoutbounddomains": {
    "operationId": "getroutingemailoutbounddomains",
    "functionName": "GetRoutingEmailOutboundDomains",
    "signature": "GetRoutingEmailOutboundDomains(filter)",
    "parameters": [
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Outbounddomainentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar filter string // Optional search filter\n// Get outbound domains\ndata, response, err := apiInstance.GetRoutingEmailOutboundDomains(filter)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingEmailOutboundDomains: %v\\n\", err)\n}"
  },
  "getroutingemailsetup": {
    "operationId": "getroutingemailsetup",
    "functionName": "GetRoutingEmailSetup",
    "signature": "GetRoutingEmailSetup()",
    "return": "Emailsetup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\n// Get email setup\ndata, response, err := apiInstance.GetRoutingEmailSetup()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingEmailSetup: %v\\n\", err)\n}"
  },
  "getroutinglanguage": {
    "operationId": "getroutinglanguage",
    "functionName": "GetRoutingLanguage",
    "signature": "GetRoutingLanguage(languageId)",
    "parameters": [
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar languageId string // Language ID\n// Get a routing language\ndata, response, err := apiInstance.GetRoutingLanguage(languageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingLanguage: %v\\n\", err)\n}"
  },
  "getroutinglanguages": {
    "operationId": "getroutinglanguages",
    "functionName": "GetRoutingLanguages",
    "signature": "GetRoutingLanguages(pageSize, pageNumber, sortOrder, name, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Languageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Ascending or descending sort order\nvar name string // Name\nvar id []string // id\n// Get the list of supported languages.\ndata, response, err := apiInstance.GetRoutingLanguages(pageSize, pageNumber, sortOrder, name, id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingLanguages: %v\\n\", err)\n}"
  },
  "getroutingmessagerecipient": {
    "operationId": "getroutingmessagerecipient",
    "functionName": "GetRoutingMessageRecipient",
    "signature": "GetRoutingMessageRecipient(recipientId)",
    "parameters": [
      {
        "name": "recipientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Recipient",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar recipientId string // Recipient ID\n// Get a recipient\ndata, response, err := apiInstance.GetRoutingMessageRecipient(recipientId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingMessageRecipient: %v\\n\", err)\n}"
  },
  "getroutingmessagerecipients": {
    "operationId": "getroutingmessagerecipients",
    "functionName": "GetRoutingMessageRecipients",
    "signature": "GetRoutingMessageRecipients(messengerType, name, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "messengerType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Recipientlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar messengerType string // Messenger Type\nvar name string // Recipient Name\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get recipients\ndata, response, err := apiInstance.GetRoutingMessageRecipients(messengerType, name, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingMessageRecipients: %v\\n\", err)\n}"
  },
  "getroutingpredictor": {
    "operationId": "getroutingpredictor",
    "functionName": "GetRoutingPredictor",
    "signature": "GetRoutingPredictor(predictorId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Predictor",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar predictorId string // Predictor ID\n// Retrieve a single predictor.\ndata, response, err := apiInstance.GetRoutingPredictor(predictorId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingPredictor: %v\\n\", err)\n}"
  },
  "getroutingpredictormodelfeatures": {
    "operationId": "getroutingpredictormodelfeatures",
    "functionName": "GetRoutingPredictorModelFeatures",
    "signature": "GetRoutingPredictorModelFeatures(predictorId, modelId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "modelId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Predictormodelfeaturelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar predictorId string // Predictor ID\nvar modelId string // Model ID\n// Retrieve Predictor Model Features.\ndata, response, err := apiInstance.GetRoutingPredictorModelFeatures(predictorId, modelId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingPredictorModelFeatures: %v\\n\", err)\n}"
  },
  "getroutingpredictormodels": {
    "operationId": "getroutingpredictormodels",
    "functionName": "GetRoutingPredictorModels",
    "signature": "GetRoutingPredictorModels(predictorId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Predictormodels",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar predictorId string // Predictor ID\n// Retrieve Predictor Models and Top Features.\ndata, response, err := apiInstance.GetRoutingPredictorModels(predictorId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingPredictorModels: %v\\n\", err)\n}"
  },
  "getroutingpredictors": {
    "operationId": "getroutingpredictors",
    "functionName": "GetRoutingPredictors",
    "signature": "GetRoutingPredictors(before, after, limit, pageSize, queueId)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queueId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Predictorlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar before string // The cursor that points to the start of the set of entities that has been returned.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar limit string // Number of entities to return. Maximum of 200. Deprecated in favour of pageSize\nvar pageSize string // Number of entities to return. Maximum of 200.\nvar queueId []string // Comma-separated list of queue Ids to filter by.\n// Retrieve all predictors.\ndata, response, err := apiInstance.GetRoutingPredictors(before, after, limit, pageSize, queueId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingPredictors: %v\\n\", err)\n}"
  },
  "getroutingpredictorskeyperformanceindicators": {
    "operationId": "getroutingpredictorskeyperformanceindicators",
    "functionName": "GetRoutingPredictorsKeyperformanceindicators",
    "signature": "GetRoutingPredictorsKeyperformanceindicators(kpiGroup, expand)",
    "parameters": [
      {
        "name": "kpiGroup",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "[]Keyperformanceindicator",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar kpiGroup string // The Group of Key Performance Indicators to return\nvar expand []string // Parameter to request additional data to return in KPI payload\n// Get a list of Key Performance Indicators\ndata, response, err := apiInstance.GetRoutingPredictorsKeyperformanceindicators(kpiGroup, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingPredictorsKeyperformanceindicators: %v\\n\", err)\n}"
  },
  "getroutingqueue": {
    "operationId": "getroutingqueue",
    "functionName": "GetRoutingQueue",
    "signature": "GetRoutingQueue(queueId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Queue",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\n// Get details about this queue.\ndata, response, err := apiInstance.GetRoutingQueue(queueId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueue: %v\\n\", err)\n}"
  },
  "getroutingqueuecomparisonperiod": {
    "operationId": "getroutingqueuecomparisonperiod",
    "functionName": "GetRoutingQueueComparisonperiod",
    "signature": "GetRoutingQueueComparisonperiod(queueId, comparisonPeriodId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "comparisonPeriodId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Comparisonperiod",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue id\nvar comparisonPeriodId string // ComparisonPeriod id\n// Get a Comparison Period.\ndata, response, err := apiInstance.GetRoutingQueueComparisonperiod(queueId, comparisonPeriodId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueueComparisonperiod: %v\\n\", err)\n}"
  },
  "getroutingqueuecomparisonperiods": {
    "operationId": "getroutingqueuecomparisonperiods",
    "functionName": "GetRoutingQueueComparisonperiods",
    "signature": "GetRoutingQueueComparisonperiods(queueId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Comparisonperiodlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue id\n// Get list of comparison periods\ndata, response, err := apiInstance.GetRoutingQueueComparisonperiods(queueId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueueComparisonperiods: %v\\n\", err)\n}"
  },
  "getroutingqueueestimatedwaittime": {
    "operationId": "getroutingqueueestimatedwaittime",
    "functionName": "GetRoutingQueueEstimatedwaittime",
    "signature": "GetRoutingQueueEstimatedwaittime(queueId, conversationId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Estimatedwaittimepredictions",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // queueId\nvar conversationId string // conversationId\n// Get Estimated Wait Time\ndata, response, err := apiInstance.GetRoutingQueueEstimatedwaittime(queueId, conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueueEstimatedwaittime: %v\\n\", err)\n}"
  },
  "getroutingqueuemediatypeestimatedwaittime": {
    "operationId": "getroutingqueuemediatypeestimatedwaittime",
    "functionName": "GetRoutingQueueMediatypeEstimatedwaittime",
    "signature": "GetRoutingQueueMediatypeEstimatedwaittime(queueId, mediaType)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "mediaType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Estimatedwaittimepredictions",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // queueId\nvar mediaType string // mediaType\n// Get Estimated Wait Time\ndata, response, err := apiInstance.GetRoutingQueueMediatypeEstimatedwaittime(queueId, mediaType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueueMediatypeEstimatedwaittime: %v\\n\", err)\n}"
  },
  "getroutingqueuemembers": {
    "operationId": "getroutingqueuemembers",
    "functionName": "GetRoutingQueueMembers",
    "signature": "GetRoutingQueueMembers(queueId, pageNumber, pageSize, sortOrder, expand, name, profileSkills, skills, languages, routingStatus, presence, memberBy, joined)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "profileSkills",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "skills",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "languages",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "routingStatus",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "presence",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "memberBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Queuememberentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar pageNumber int // \nvar pageSize int // Max value is 100\nvar sortOrder string // Note: results are sorted by name.\nvar expand []string // Which fields, if any, to expand.\nvar name string // Filter by queue member name (contains-style search)\nvar profileSkills []string // Filter by profile skill (contains-style search)\nvar skills []string // Filter by skill (contains-style search)\nvar languages []string // Filter by language (contains-style search)\nvar routingStatus []string // Filter by routing status\nvar presence []string // Filter by presence\nvar memberBy string // Filter by member type\nvar joined bool // Filter by joined status\n// Get the members of this queue.\ndata, response, err := apiInstance.GetRoutingQueueMembers(queueId, pageNumber, pageSize, sortOrder, expand, name, profileSkills, skills, languages, routingStatus, presence, memberBy, joined)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueueMembers: %v\\n\", err)\n}"
  },
  "getroutingqueueusers": {
    "operationId": "getroutingqueueusers",
    "functionName": "GetRoutingQueueUsers",
    "signature": "GetRoutingQueueUsers(queueId, pageNumber, pageSize, sortOrder, expand, joined, name, profileSkills, skills, languages, routingStatus, presence)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "profileSkills",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "skills",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "languages",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "routingStatus",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "presence",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Queuememberentitylistingv1",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar pageNumber int // \nvar pageSize int // Max value is 100\nvar sortOrder string // Note: results are sorted by name.\nvar expand []string // Which fields, if any, to expand.\nvar joined bool // Filter by joined status\nvar name string // Filter by queue member name\nvar profileSkills []string // Filter by profile skill\nvar skills []string // Filter by skill\nvar languages []string // Filter by language\nvar routingStatus []string // Filter by routing status\nvar presence []string // Filter by presence\n// DEPRECATED: use GET /routing/queues/{queueId}/members.  Get the members of this queue.\ndata, response, err := apiInstance.GetRoutingQueueUsers(queueId, pageNumber, pageSize, sortOrder, expand, joined, name, profileSkills, skills, languages, routingStatus, presence)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueueUsers: %v\\n\", err)\n}"
  },
  "getroutingqueuewrapupcodes": {
    "operationId": "getroutingqueuewrapupcodes",
    "functionName": "GetRoutingQueueWrapupcodes",
    "signature": "GetRoutingQueueWrapupcodes(queueId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Wrapupcodeentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get the wrap-up codes for a queue\ndata, response, err := apiInstance.GetRoutingQueueWrapupcodes(queueId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueueWrapupcodes: %v\\n\", err)\n}"
  },
  "getroutingqueues": {
    "operationId": "getroutingqueues",
    "functionName": "GetRoutingQueues",
    "signature": "GetRoutingQueues(pageNumber, pageSize, sortOrder, name, id, divisionId, peerId, hasPeer)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "peerId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "hasPeer",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Queueentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortOrder string // Note: results are sorted by name.\nvar name string // Filter by queue name\nvar id []string // Filter by queue ID(s)\nvar divisionId []string // Filter by queue division ID(s)\nvar peerId []string // Filter by queue peer ID(s)\nvar hasPeer bool // Filter by queues associated with peer\n// Get list of queues.\ndata, response, err := apiInstance.GetRoutingQueues(pageNumber, pageSize, sortOrder, name, id, divisionId, peerId, hasPeer)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueues: %v\\n\", err)\n}"
  },
  "getroutingqueuesdivisionviews": {
    "operationId": "getroutingqueuesdivisionviews",
    "functionName": "GetRoutingQueuesDivisionviews",
    "signature": "GetRoutingQueuesDivisionviews(pageSize, pageNumber, sortBy, sortOrder, name, id, divisionId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Queueentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageSize int // Page size [max value is 100]\nvar pageNumber int // Page number [max value is 5]\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar name string // Name\nvar id []string // Queue ID(s)\nvar divisionId []string // Division ID(s)\n// Get a paged listing of simplified queue objects, filterable by name, queue ID(s), or division ID(s).\ndata, response, err := apiInstance.GetRoutingQueuesDivisionviews(pageSize, pageNumber, sortBy, sortOrder, name, id, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueuesDivisionviews: %v\\n\", err)\n}"
  },
  "getroutingqueuesdivisionviewsall": {
    "operationId": "getroutingqueuesdivisionviewsall",
    "functionName": "GetRoutingQueuesDivisionviewsAll",
    "signature": "GetRoutingQueuesDivisionviewsAll(pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Queueentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageSize int // Page size [max value is 500]\nvar pageNumber int // Page number\nvar sortOrder string // Sort order\n// Get a paged listing of simplified queue objects, sorted by name.  Can be used to get a digest of all queues in an organization.\ndata, response, err := apiInstance.GetRoutingQueuesDivisionviewsAll(pageSize, pageNumber, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueuesDivisionviewsAll: %v\\n\", err)\n}"
  },
  "getroutingqueuesme": {
    "operationId": "getroutingqueuesme",
    "functionName": "GetRoutingQueuesMe",
    "signature": "GetRoutingQueuesMe(pageNumber, pageSize, joined, sortOrder)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userqueueentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar joined bool // Filter by joined status.\nvar sortOrder string // Note: results are sorted by name.\n// Get a paged listing of queues the user is a member of.\ndata, response, err := apiInstance.GetRoutingQueuesMe(pageNumber, pageSize, joined, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingQueuesMe: %v\\n\", err)\n}"
  },
  "getroutingsettings": {
    "operationId": "getroutingsettings",
    "functionName": "GetRoutingSettings",
    "signature": "GetRoutingSettings()",
    "return": "Routingsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\n// Get an organization's routing settings\ndata, response, err := apiInstance.GetRoutingSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSettings: %v\\n\", err)\n}"
  },
  "getroutingsettingscontactcenter": {
    "operationId": "getroutingsettingscontactcenter",
    "functionName": "GetRoutingSettingsContactcenter",
    "signature": "GetRoutingSettingsContactcenter()",
    "return": "Contactcentersettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\n// Get Contact Center Settings\ndata, response, err := apiInstance.GetRoutingSettingsContactcenter()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSettingsContactcenter: %v\\n\", err)\n}"
  },
  "getroutingsettingstranscription": {
    "operationId": "getroutingsettingstranscription",
    "functionName": "GetRoutingSettingsTranscription",
    "signature": "GetRoutingSettingsTranscription()",
    "return": "Transcriptionsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\n// Get Transcription Settings\ndata, response, err := apiInstance.GetRoutingSettingsTranscription()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSettingsTranscription: %v\\n\", err)\n}"
  },
  "getroutingskill": {
    "operationId": "getroutingskill",
    "functionName": "GetRoutingSkill",
    "signature": "GetRoutingSkill(skillId)",
    "parameters": [
      {
        "name": "skillId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Routingskill",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar skillId string // Skill ID\n// Get Routing Skill\ndata, response, err := apiInstance.GetRoutingSkill(skillId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSkill: %v\\n\", err)\n}"
  },
  "getroutingskillgroup": {
    "operationId": "getroutingskillgroup",
    "functionName": "GetRoutingSkillgroup",
    "signature": "GetRoutingSkillgroup(skillGroupId)",
    "parameters": [
      {
        "name": "skillGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Skillgroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar skillGroupId string // Skill Group ID\n// Get skill group\ndata, response, err := apiInstance.GetRoutingSkillgroup(skillGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSkillgroup: %v\\n\", err)\n}"
  },
  "getroutingskillgroupmembers": {
    "operationId": "getroutingskillgroupmembers",
    "functionName": "GetRoutingSkillgroupMembers",
    "signature": "GetRoutingSkillgroupMembers(skillGroupId, pageSize, after, before, expand)",
    "parameters": [
      {
        "name": "skillGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Skillgroupmemberentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar skillGroupId string // Skill Group ID\nvar pageSize int // Page size\nvar after string // The cursor that points to the next item\nvar before string // The cursor that points to the previous item\nvar expand string // Expand the name on each user\n// Get skill group members\ndata, response, err := apiInstance.GetRoutingSkillgroupMembers(skillGroupId, pageSize, after, before, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSkillgroupMembers: %v\\n\", err)\n}"
  },
  "getroutingskillgroupmembersdivisions": {
    "operationId": "getroutingskillgroupmembersdivisions",
    "functionName": "GetRoutingSkillgroupMembersDivisions",
    "signature": "GetRoutingSkillgroupMembersDivisions(skillGroupId, expand)",
    "parameters": [
      {
        "name": "skillGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Skillgroupmemberdivisionlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar skillGroupId string // Skill Group ID\nvar expand string // Expand the name on each user\n// Get list of member divisions for this skill group.\ndata, response, err := apiInstance.GetRoutingSkillgroupMembersDivisions(skillGroupId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSkillgroupMembersDivisions: %v\\n\", err)\n}"
  },
  "getroutingskillgroups": {
    "operationId": "getroutingskillgroups",
    "functionName": "GetRoutingSkillgroups",
    "signature": "GetRoutingSkillgroups(pageSize, name, after, before)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Skillgroupentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar name string // Return only skill group names whose names start with this value (case-insensitive matching)\nvar after string // The cursor that points to the next item\nvar before string // The cursor that points to the previous item\n// Get skill group listing\ndata, response, err := apiInstance.GetRoutingSkillgroups(pageSize, name, after, before)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSkillgroups: %v\\n\", err)\n}"
  },
  "getroutingskills": {
    "operationId": "getroutingskills",
    "functionName": "GetRoutingSkills",
    "signature": "GetRoutingSkills(pageSize, pageNumber, name, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Skillentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar name string // Filter for results that start with this value\nvar id []string // id\n// Get the list of routing skills.\ndata, response, err := apiInstance.GetRoutingSkills(pageSize, pageNumber, name, id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSkills: %v\\n\", err)\n}"
  },
  "getroutingsmsaddress": {
    "operationId": "getroutingsmsaddress",
    "functionName": "GetRoutingSmsAddress",
    "signature": "GetRoutingSmsAddress(addressId)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Smsaddress",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar addressId string // Address ID\n// Get an Address by Id for SMS\ndata, response, err := apiInstance.GetRoutingSmsAddress(addressId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSmsAddress: %v\\n\", err)\n}"
  },
  "getroutingsmsaddresses": {
    "operationId": "getroutingsmsaddresses",
    "functionName": "GetRoutingSmsAddresses",
    "signature": "GetRoutingSmsAddresses(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Smsaddressentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of Addresses for SMS\ndata, response, err := apiInstance.GetRoutingSmsAddresses(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSmsAddresses: %v\\n\", err)\n}"
  },
  "getroutingsmsavailablephonenumbers": {
    "operationId": "getroutingsmsavailablephonenumbers",
    "functionName": "GetRoutingSmsAvailablephonenumbers",
    "signature": "GetRoutingSmsAvailablephonenumbers(countryCode, phoneNumberType, region, city, areaCode, pattern, addressRequirement)",
    "parameters": [
      {
        "name": "countryCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "phoneNumberType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "region",
        "type": "string",
        "required": "false"
      },
      {
        "name": "city",
        "type": "string",
        "required": "false"
      },
      {
        "name": "areaCode",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pattern",
        "type": "string",
        "required": "false"
      },
      {
        "name": "addressRequirement",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Smsavailablephonenumberentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar countryCode string // The ISO 3166-1 alpha-2 country code of the county for which available phone numbers should be returned\nvar phoneNumberType string // Type of available phone numbers searched\nvar region string // Region/province/state that can be used to restrict the numbers returned\nvar city string // City that can be used to restrict the numbers returned\nvar areaCode string // Area code that can be used to restrict the numbers returned\nvar pattern string // A pattern to match phone numbers. Valid characters are '*' and [0-9a-zA-Z]. The '*' character will match any single digit.\nvar addressRequirement string // This indicates whether the phone number requires to have an Address registered.\n// Get a list of available phone numbers for SMS provisioning.\ndata, response, err := apiInstance.GetRoutingSmsAvailablephonenumbers(countryCode, phoneNumberType, region, city, areaCode, pattern, addressRequirement)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSmsAvailablephonenumbers: %v\\n\", err)\n}"
  },
  "getroutingsmsphonenumber": {
    "operationId": "getroutingsmsphonenumber",
    "functionName": "GetRoutingSmsPhonenumber",
    "signature": "GetRoutingSmsPhonenumber(addressId, expand)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Smsphonenumber",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar addressId string // Address ID\nvar expand string // Expand response with additional information\n// Get a phone number provisioned for SMS.\ndata, response, err := apiInstance.GetRoutingSmsPhonenumber(addressId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSmsPhonenumber: %v\\n\", err)\n}"
  },
  "getroutingsmsphonenumbers": {
    "operationId": "getroutingsmsphonenumbers",
    "functionName": "GetRoutingSmsPhonenumbers",
    "signature": "GetRoutingSmsPhonenumbers(phoneNumber, phoneNumberType, phoneNumberStatus, countryCode, pageSize, pageNumber, sortBy, sortOrder, language, integrationId)",
    "parameters": [
      {
        "name": "phoneNumber",
        "type": "string",
        "required": "false"
      },
      {
        "name": "phoneNumberType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "phoneNumberStatus",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "countryCode",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "language",
        "type": "string",
        "required": "false"
      },
      {
        "name": "integrationId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Smsphonenumberentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar phoneNumber string // Filter on phone number address. Allowable characters are the digits '0-9' and the wild card character '\\\\*'. If just digits are present, a contains search is done on the address pattern. For example, '317' could be matched anywhere in the address. An '\\\\*' will match multiple digits. For example, to match a specific area code within the US a pattern like '1317*' could be used.\nvar phoneNumberType []string // Filter on phone number type\nvar phoneNumberStatus []string // Filter on phone number status\nvar countryCode []string // Filter on country code\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Optional field to sort results\nvar sortOrder string // Sort order\nvar language string // A language tag (which is sometimes referred to as a \\\"locale identifier\\\") to use to localize country field and sort operations\nvar integrationId string // Filter on the Genesys Cloud integration id to which the phone number belongs to\n// Get a list of provisioned phone numbers.\ndata, response, err := apiInstance.GetRoutingSmsPhonenumbers(phoneNumber, phoneNumberType, phoneNumberStatus, countryCode, pageSize, pageNumber, sortBy, sortOrder, language, integrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingSmsPhonenumbers: %v\\n\", err)\n}"
  },
  "getroutinguserutilization": {
    "operationId": "getroutinguserutilization",
    "functionName": "GetRoutingUserUtilization",
    "signature": "GetRoutingUserUtilization(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Agentmaxutilization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Get the user's max utilization settings.  If not configured, the organization-wide default is returned.\ndata, response, err := apiInstance.GetRoutingUserUtilization(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingUserUtilization: %v\\n\", err)\n}"
  },
  "getroutingutilization": {
    "operationId": "getroutingutilization",
    "functionName": "GetRoutingUtilization",
    "signature": "GetRoutingUtilization()",
    "return": "Utilization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\n// Get the organization-wide max utilization settings.\ndata, response, err := apiInstance.GetRoutingUtilization()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingUtilization: %v\\n\", err)\n}"
  },
  "getroutingutilizationtag": {
    "operationId": "getroutingutilizationtag",
    "functionName": "GetRoutingUtilizationTag",
    "signature": "GetRoutingUtilizationTag(tagId)",
    "parameters": [
      {
        "name": "tagId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Utilizationtag",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar tagId string // Utilization Tag ID\n// Get details about this utilization tag\ndata, response, err := apiInstance.GetRoutingUtilizationTag(tagId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingUtilizationTag: %v\\n\", err)\n}"
  },
  "getroutingutilizationtagagents": {
    "operationId": "getroutingutilizationtagagents",
    "functionName": "GetRoutingUtilizationTagAgents",
    "signature": "GetRoutingUtilizationTagAgents(tagId)",
    "parameters": [
      {
        "name": "tagId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar tagId string // Utilization Tag ID\n// Get list of agent ids associated with a utilization tag\ndata, response, err := apiInstance.GetRoutingUtilizationTagAgents(tagId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingUtilizationTagAgents: %v\\n\", err)\n}"
  },
  "getroutingutilizationtags": {
    "operationId": "getroutingutilizationtags",
    "functionName": "GetRoutingUtilizationTags",
    "signature": "GetRoutingUtilizationTags(pageSize, pageNumber, sortOrder, name)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Utilizationtagentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Sort order by name\nvar name string // Utilization tag's name (Wildcard is supported, e.g., 'tag1*')\n// Get list of utilization tags\ndata, response, err := apiInstance.GetRoutingUtilizationTags(pageSize, pageNumber, sortOrder, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingUtilizationTags: %v\\n\", err)\n}"
  },
  "getroutingwrapupcode": {
    "operationId": "getroutingwrapupcode",
    "functionName": "GetRoutingWrapupcode",
    "signature": "GetRoutingWrapupcode(codeId)",
    "parameters": [
      {
        "name": "codeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar codeId string // Wrapup Code ID\n// Get details about this wrap-up code.\ndata, response, err := apiInstance.GetRoutingWrapupcode(codeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingWrapupcode: %v\\n\", err)\n}"
  },
  "getroutingwrapupcodes": {
    "operationId": "getroutingwrapupcodes",
    "functionName": "GetRoutingWrapupcodes",
    "signature": "GetRoutingWrapupcodes(pageSize, pageNumber, sortBy, sortOrder, name, id, divisionId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Wrapupcodeentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar name string // Wrapup code's name ('Sort by' param is ignored unless this field is provided)\nvar id []string // Filter by wrapup code ID(s)\nvar divisionId []string // Filter by division ID(s)\n// Get list of wrapup codes.\ndata, response, err := apiInstance.GetRoutingWrapupcodes(pageSize, pageNumber, sortBy, sortOrder, name, id, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetRoutingWrapupcodes: %v\\n\", err)\n}"
  },
  "getuserqueues": {
    "operationId": "getuserqueues",
    "functionName": "GetUserQueues",
    "signature": "GetUserQueues(userId, pageSize, pageNumber, joined, divisionId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Userqueueentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar joined bool // Is joined to the queue\nvar divisionId []string // Division ID(s)\n// Get queues for user\ndata, response, err := apiInstance.GetUserQueues(userId, pageSize, pageNumber, joined, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserQueues: %v\\n\", err)\n}"
  },
  "getuserroutinglanguages": {
    "operationId": "getuserroutinglanguages",
    "functionName": "GetUserRoutinglanguages",
    "signature": "GetUserRoutinglanguages(userId, pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userlanguageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Ascending or descending sort order\n// List routing language for user\ndata, response, err := apiInstance.GetUserRoutinglanguages(userId, pageSize, pageNumber, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserRoutinglanguages: %v\\n\", err)\n}"
  },
  "getuserroutingskills": {
    "operationId": "getuserroutingskills",
    "functionName": "GetUserRoutingskills",
    "signature": "GetUserRoutingskills(userId, pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userskillentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Ascending or descending sort order\n// List routing skills for user\ndata, response, err := apiInstance.GetUserRoutingskills(userId, pageSize, pageNumber, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserRoutingskills: %v\\n\", err)\n}"
  },
  "getuserskillgroups": {
    "operationId": "getuserskillgroups",
    "functionName": "GetUserSkillgroups",
    "signature": "GetUserSkillgroups(userId, pageSize, after, before)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userskillgroupentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar pageSize int // Page size\nvar after string // The cursor that points to the next page\nvar before string // The cursor that points to the previous page\n// Get skill groups for a user\ndata, response, err := apiInstance.GetUserSkillgroups(userId, pageSize, after, before)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserSkillgroups: %v\\n\", err)\n}"
  },
  "patchroutingconversation": {
    "operationId": "patchroutingconversation",
    "functionName": "PatchRoutingConversation",
    "signature": "PatchRoutingConversation(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Routingconversationattributesrequest",
        "required": "true"
      }
    ],
    "return": "Routingconversationattributesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar body platformclientv2.Routingconversationattributesrequest // Conversation Attributes\n// Update attributes of an in-queue conversation\ndata, response, err := apiInstance.PatchRoutingConversation(conversationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingConversation: %v\\n\", err)\n}"
  },
  "patchroutingemaildomain": {
    "operationId": "patchroutingemaildomain",
    "functionName": "PatchRoutingEmailDomain",
    "signature": "PatchRoutingEmailDomain(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Inbounddomainpatchrequest",
        "required": "true"
      }
    ],
    "return": "Inbounddomain",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\nvar body platformclientv2.Inbounddomainpatchrequest // Domain settings\n// Update domain settings\ndata, response, err := apiInstance.PatchRoutingEmailDomain(domainId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingEmailDomain: %v\\n\", err)\n}"
  },
  "patchroutingemaildomainvalidate": {
    "operationId": "patchroutingemaildomainvalidate",
    "functionName": "PatchRoutingEmailDomainValidate",
    "signature": "PatchRoutingEmailDomainValidate(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Inbounddomainpatchrequest",
        "required": "true"
      }
    ],
    "return": "Inbounddomain",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\nvar body platformclientv2.Inbounddomainpatchrequest // Domain settings\n// Validate domain settings\ndata, response, err := apiInstance.PatchRoutingEmailDomainValidate(domainId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingEmailDomainValidate: %v\\n\", err)\n}"
  },
  "patchroutingpredictor": {
    "operationId": "patchroutingpredictor",
    "functionName": "PatchRoutingPredictor",
    "signature": "PatchRoutingPredictor(predictorId, body)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Patchpredictorrequest",
        "required": "false"
      }
    ],
    "return": "Predictor",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar predictorId string // Predictor ID\nvar body platformclientv2.Patchpredictorrequest // \n// Update single predictor.\ndata, response, err := apiInstance.PatchRoutingPredictor(predictorId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingPredictor: %v\\n\", err)\n}"
  },
  "patchroutingqueuemember": {
    "operationId": "patchroutingqueuemember",
    "functionName": "PatchRoutingQueueMember",
    "signature": "PatchRoutingQueueMember(queueId, memberId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Queuemember",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar memberId string // Member ID\nvar body platformclientv2.Queuemember // Queue Member\n// Update the ring number OR joined status for a queue member.\nresponse, err := apiInstance.PatchRoutingQueueMember(queueId, memberId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingQueueMember: %v\\n\", err)\n}"
  },
  "patchroutingqueuemembers": {
    "operationId": "patchroutingqueuemembers",
    "functionName": "PatchRoutingQueueMembers",
    "signature": "PatchRoutingQueueMembers(queueId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Queuemember",
        "required": "true"
      }
    ],
    "return": "Queuememberentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar body platformclientv2.[]Queuemember // Queue Members\n// Join or unjoin a set of users for a queue\ndata, response, err := apiInstance.PatchRoutingQueueMembers(queueId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingQueueMembers: %v\\n\", err)\n}"
  },
  "patchroutingqueueuser": {
    "operationId": "patchroutingqueueuser",
    "functionName": "PatchRoutingQueueUser",
    "signature": "PatchRoutingQueueUser(queueId, memberId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Queuemember",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar memberId string // Member ID\nvar body platformclientv2.Queuemember // Queue Member\n// DEPRECATED: use PATCH /routing/queues/{queueId}/members/{memberId}.  Update the ring number OR joined status for a User in a Queue.\nresponse, err := apiInstance.PatchRoutingQueueUser(queueId, memberId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingQueueUser: %v\\n\", err)\n}"
  },
  "patchroutingqueueusers": {
    "operationId": "patchroutingqueueusers",
    "functionName": "PatchRoutingQueueUsers",
    "signature": "PatchRoutingQueueUsers(queueId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Queuemember",
        "required": "true"
      }
    ],
    "return": "Queuememberentitylistingv1",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar body platformclientv2.[]Queuemember // Queue Members\n// DEPRECATED: use PATCH /routing/queues/{queueId}/members.  Join or unjoin a set of users for a queue.\ndata, response, err := apiInstance.PatchRoutingQueueUsers(queueId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingQueueUsers: %v\\n\", err)\n}"
  },
  "patchroutingsettingscontactcenter": {
    "operationId": "patchroutingsettingscontactcenter",
    "functionName": "PatchRoutingSettingsContactcenter",
    "signature": "PatchRoutingSettingsContactcenter(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Contactcentersettings",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Contactcentersettings // Contact Center Settings\n// Update Contact Center Settings\nresponse, err := apiInstance.PatchRoutingSettingsContactcenter(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingSettingsContactcenter: %v\\n\", err)\n}"
  },
  "patchroutingskillgroup": {
    "operationId": "patchroutingskillgroup",
    "functionName": "PatchRoutingSkillgroup",
    "signature": "PatchRoutingSkillgroup(skillGroupId, body)",
    "parameters": [
      {
        "name": "skillGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Skillgroup",
        "required": "true"
      }
    ],
    "return": "Skillgroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar skillGroupId string // Skill Group ID\nvar body platformclientv2.Skillgroup // Update skill groups\n// Update skill group definition\ndata, response, err := apiInstance.PatchRoutingSkillgroup(skillGroupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchRoutingSkillgroup: %v\\n\", err)\n}"
  },
  "patchuserqueue": {
    "operationId": "patchuserqueue",
    "functionName": "PatchUserQueue",
    "signature": "PatchUserQueue(queueId, userId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userqueue",
        "required": "true"
      }
    ],
    "return": "Userqueue",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar userId string // User ID\nvar body platformclientv2.Userqueue // Queue Member\n// Join or unjoin a queue for a user\ndata, response, err := apiInstance.PatchUserQueue(queueId, userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUserQueue: %v\\n\", err)\n}"
  },
  "patchuserqueues": {
    "operationId": "patchuserqueues",
    "functionName": "PatchUserQueues",
    "signature": "PatchUserQueues(userId, body, divisionId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Userqueue",
        "required": "true"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Userqueueentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.[]Userqueue // User Queues\nvar divisionId []string // Division ID(s)\n// Join or unjoin a set of queues for a user\ndata, response, err := apiInstance.PatchUserQueues(userId, body, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUserQueues: %v\\n\", err)\n}"
  },
  "patchuserroutinglanguage": {
    "operationId": "patchuserroutinglanguage",
    "functionName": "PatchUserRoutinglanguage",
    "signature": "PatchUserRoutinglanguage(userId, languageId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userroutinglanguage",
        "required": "true"
      }
    ],
    "return": "Userroutinglanguage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar languageId string // languageId\nvar body platformclientv2.Userroutinglanguage // Language\n// Update routing language proficiency or state.\ndata, response, err := apiInstance.PatchUserRoutinglanguage(userId, languageId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUserRoutinglanguage: %v\\n\", err)\n}"
  },
  "patchuserroutinglanguagesbulk": {
    "operationId": "patchuserroutinglanguagesbulk",
    "functionName": "PatchUserRoutinglanguagesBulk",
    "signature": "PatchUserRoutinglanguagesBulk(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Userroutinglanguagepost",
        "required": "true"
      }
    ],
    "return": "Userlanguageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.[]Userroutinglanguagepost // Language\n// Add bulk routing language to user. Max limit 50 languages\ndata, response, err := apiInstance.PatchUserRoutinglanguagesBulk(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUserRoutinglanguagesBulk: %v\\n\", err)\n}"
  },
  "patchuserroutingskillsbulk": {
    "operationId": "patchuserroutingskillsbulk",
    "functionName": "PatchUserRoutingskillsBulk",
    "signature": "PatchUserRoutingskillsBulk(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Userroutingskillpost",
        "required": "true"
      }
    ],
    "return": "Userskillentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.[]Userroutingskillpost // Skill\n// Bulk add routing skills to user\ndata, response, err := apiInstance.PatchUserRoutingskillsBulk(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUserRoutingskillsBulk: %v\\n\", err)\n}"
  },
  "postroutingassessments": {
    "operationId": "postroutingassessments",
    "functionName": "PostRoutingAssessments",
    "signature": "PostRoutingAssessments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createbenefitassessmentrequest",
        "required": "false"
      }
    ],
    "return": "Benefitassessment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Createbenefitassessmentrequest // \n// Create a benefit assessment.\ndata, response, err := apiInstance.PostRoutingAssessments(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingAssessments: %v\\n\", err)\n}"
  },
  "postroutingassessmentsjobs": {
    "operationId": "postroutingassessmentsjobs",
    "functionName": "PostRoutingAssessmentsJobs",
    "signature": "PostRoutingAssessmentsJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createbenefitassessmentjobrequest",
        "required": "false"
      }
    ],
    "return": "Benefitassessmentjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Createbenefitassessmentjobrequest // \n// Create a benefit assessment job.\ndata, response, err := apiInstance.PostRoutingAssessmentsJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingAssessmentsJobs: %v\\n\", err)\n}"
  },
  "postroutingemaildomainroutes": {
    "operationId": "postroutingemaildomainroutes",
    "functionName": "PostRoutingEmailDomainRoutes",
    "signature": "PostRoutingEmailDomainRoutes(domainName, body)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Inboundroute",
        "required": "true"
      }
    ],
    "return": "Inboundroute",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainName string // email domain\nvar body platformclientv2.Inboundroute // Route\n// Create a route\ndata, response, err := apiInstance.PostRoutingEmailDomainRoutes(domainName, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingEmailDomainRoutes: %v\\n\", err)\n}"
  },
  "postroutingemaildomaintestconnection": {
    "operationId": "postroutingemaildomaintestconnection",
    "functionName": "PostRoutingEmailDomainTestconnection",
    "signature": "PostRoutingEmailDomainTestconnection(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Testmessage",
        "required": "false"
      }
    ],
    "return": "Testmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\nvar body platformclientv2.Testmessage // TestMessage\n// Tests the custom SMTP server integration connection set on this domain\ndata, response, err := apiInstance.PostRoutingEmailDomainTestconnection(domainId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingEmailDomainTestconnection: %v\\n\", err)\n}"
  },
  "postroutingemaildomains": {
    "operationId": "postroutingemaildomains",
    "functionName": "PostRoutingEmailDomains",
    "signature": "PostRoutingEmailDomains(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Inbounddomain",
        "required": "true"
      }
    ],
    "return": "Inbounddomain",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Inbounddomain // Domain\n// Create a domain\ndata, response, err := apiInstance.PostRoutingEmailDomains(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingEmailDomains: %v\\n\", err)\n}"
  },
  "postroutingemailoutbounddomains": {
    "operationId": "postroutingemailoutbounddomains",
    "functionName": "PostRoutingEmailOutboundDomains",
    "signature": "PostRoutingEmailOutboundDomains(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Outbounddomain",
        "required": "true"
      }
    ],
    "return": "Emailoutbounddomainresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Outbounddomain // Domain\n// Create a domain\ndata, response, err := apiInstance.PostRoutingEmailOutboundDomains(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingEmailOutboundDomains: %v\\n\", err)\n}"
  },
  "postroutingemailoutbounddomainssimulated": {
    "operationId": "postroutingemailoutbounddomainssimulated",
    "functionName": "PostRoutingEmailOutboundDomainsSimulated",
    "signature": "PostRoutingEmailOutboundDomainsSimulated(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Outbounddomain",
        "required": "true"
      }
    ],
    "return": "Emailoutbounddomainresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Outbounddomain // Domain\n// Create a simulated domain\ndata, response, err := apiInstance.PostRoutingEmailOutboundDomainsSimulated(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingEmailOutboundDomainsSimulated: %v\\n\", err)\n}"
  },
  "postroutinglanguages": {
    "operationId": "postroutinglanguages",
    "functionName": "PostRoutingLanguages",
    "signature": "PostRoutingLanguages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Language",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Language // Language\n// Create Language\ndata, response, err := apiInstance.PostRoutingLanguages(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingLanguages: %v\\n\", err)\n}"
  },
  "postroutingpredictors": {
    "operationId": "postroutingpredictors",
    "functionName": "PostRoutingPredictors",
    "signature": "PostRoutingPredictors(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createpredictorrequest",
        "required": "false"
      }
    ],
    "return": "Predictor",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Createpredictorrequest // \n// Create a predictor.\ndata, response, err := apiInstance.PostRoutingPredictors(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingPredictors: %v\\n\", err)\n}"
  },
  "postroutingqueuemembers": {
    "operationId": "postroutingqueuemembers",
    "functionName": "PostRoutingQueueMembers",
    "signature": "PostRoutingQueueMembers(queueId, body, delete)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Writableentity",
        "required": "true"
      },
      {
        "name": "delete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar body platformclientv2.[]Writableentity // Queue Members\nvar delete bool // True to delete queue members\n// Bulk add or delete up to 100 queue members\nresponse, err := apiInstance.PostRoutingQueueMembers(queueId, body, delete)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingQueueMembers: %v\\n\", err)\n}"
  },
  "postroutingqueueusers": {
    "operationId": "postroutingqueueusers",
    "functionName": "PostRoutingQueueUsers",
    "signature": "PostRoutingQueueUsers(queueId, body, delete)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Writableentity",
        "required": "true"
      },
      {
        "name": "delete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar body platformclientv2.[]Writableentity // Queue Members\nvar delete bool // True to delete queue members\n// DEPRECATED: use POST /routing/queues/{queueId}/members.  Bulk add or delete up to 100 queue members.\nresponse, err := apiInstance.PostRoutingQueueUsers(queueId, body, delete)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingQueueUsers: %v\\n\", err)\n}"
  },
  "postroutingqueuewrapupcodes": {
    "operationId": "postroutingqueuewrapupcodes",
    "functionName": "PostRoutingQueueWrapupcodes",
    "signature": "PostRoutingQueueWrapupcodes(queueId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Wrapupcodereference",
        "required": "true"
      }
    ],
    "return": "[]Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar body platformclientv2.[]Wrapupcodereference // List of wrapup codes\n// Add up to 100 wrap-up codes to a queue\ndata, response, err := apiInstance.PostRoutingQueueWrapupcodes(queueId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingQueueWrapupcodes: %v\\n\", err)\n}"
  },
  "postroutingqueues": {
    "operationId": "postroutingqueues",
    "functionName": "PostRoutingQueues",
    "signature": "PostRoutingQueues(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createqueuerequest",
        "required": "true"
      }
    ],
    "return": "Queue",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Createqueuerequest // Queue\n// Create a queue\ndata, response, err := apiInstance.PostRoutingQueues(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingQueues: %v\\n\", err)\n}"
  },
  "postroutingskillgroupmembersdivisions": {
    "operationId": "postroutingskillgroupmembersdivisions",
    "functionName": "PostRoutingSkillgroupMembersDivisions",
    "signature": "PostRoutingSkillgroupMembersDivisions(skillGroupId, body)",
    "parameters": [
      {
        "name": "skillGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Skillgroupmemberdivisions",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar skillGroupId string // Skill Group ID\nvar body platformclientv2.Skillgroupmemberdivisions // \n// Add or remove member divisions for this skill group.\nresponse, err := apiInstance.PostRoutingSkillgroupMembersDivisions(skillGroupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingSkillgroupMembersDivisions: %v\\n\", err)\n}"
  },
  "postroutingskillgroups": {
    "operationId": "postroutingskillgroups",
    "functionName": "PostRoutingSkillgroups",
    "signature": "PostRoutingSkillgroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Skillgroupwithmemberdivisions",
        "required": "true"
      }
    ],
    "return": "Skillgroupwithmemberdivisions",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Skillgroupwithmemberdivisions // Create skill group\n// Create a skill group\ndata, response, err := apiInstance.PostRoutingSkillgroups(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingSkillgroups: %v\\n\", err)\n}"
  },
  "postroutingskills": {
    "operationId": "postroutingskills",
    "functionName": "PostRoutingSkills",
    "signature": "PostRoutingSkills(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Routingskill",
        "required": "true"
      }
    ],
    "return": "Routingskill",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Routingskill // Skill\n// Create Skill\ndata, response, err := apiInstance.PostRoutingSkills(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingSkills: %v\\n\", err)\n}"
  },
  "postroutingsmsaddresses": {
    "operationId": "postroutingsmsaddresses",
    "functionName": "PostRoutingSmsAddresses",
    "signature": "PostRoutingSmsAddresses(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Smsaddressprovision",
        "required": "true"
      }
    ],
    "return": "Smsaddress",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Smsaddressprovision // SmsAddress\n// Provision an Address for SMS\ndata, response, err := apiInstance.PostRoutingSmsAddresses(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingSmsAddresses: %v\\n\", err)\n}"
  },
  "postroutingsmsphonenumbers": {
    "operationId": "postroutingsmsphonenumbers",
    "functionName": "PostRoutingSmsPhonenumbers",
    "signature": "PostRoutingSmsPhonenumbers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Smsphonenumberprovision",
        "required": "true"
      }
    ],
    "return": "Smsphonenumber",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Smsphonenumberprovision // SmsPhoneNumber\n// Provision a phone number for SMS\ndata, response, err := apiInstance.PostRoutingSmsPhonenumbers(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingSmsPhonenumbers: %v\\n\", err)\n}"
  },
  "postroutingsmsphonenumbersimport": {
    "operationId": "postroutingsmsphonenumbersimport",
    "functionName": "PostRoutingSmsPhonenumbersImport",
    "signature": "PostRoutingSmsPhonenumbersImport(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Smsphonenumberimport",
        "required": "true"
      }
    ],
    "return": "Smsphonenumber",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Smsphonenumberimport // SmsPhoneNumber\n// Imports a phone number for SMS\ndata, response, err := apiInstance.PostRoutingSmsPhonenumbersImport(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingSmsPhonenumbersImport: %v\\n\", err)\n}"
  },
  "postroutingutilizationtags": {
    "operationId": "postroutingutilizationtags",
    "functionName": "PostRoutingUtilizationTags",
    "signature": "PostRoutingUtilizationTags(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createutilizationtagrequest",
        "required": "true"
      }
    ],
    "return": "Utilizationtag",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Createutilizationtagrequest // UtilizationTag\n// Create an utilization tag\ndata, response, err := apiInstance.PostRoutingUtilizationTags(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingUtilizationTags: %v\\n\", err)\n}"
  },
  "postroutingwrapupcodes": {
    "operationId": "postroutingwrapupcodes",
    "functionName": "PostRoutingWrapupcodes",
    "signature": "PostRoutingWrapupcodes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Wrapupcoderequest",
        "required": "true"
      }
    ],
    "return": "Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Wrapupcoderequest // WrapupCode\n// Create a wrap-up code\ndata, response, err := apiInstance.PostRoutingWrapupcodes(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostRoutingWrapupcodes: %v\\n\", err)\n}"
  },
  "postuserroutinglanguages": {
    "operationId": "postuserroutinglanguages",
    "functionName": "PostUserRoutinglanguages",
    "signature": "PostUserRoutinglanguages(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userroutinglanguagepost",
        "required": "true"
      }
    ],
    "return": "Userroutinglanguage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Userroutinglanguagepost // Language\n// Add routing language to user\ndata, response, err := apiInstance.PostUserRoutinglanguages(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUserRoutinglanguages: %v\\n\", err)\n}"
  },
  "postuserroutingskills": {
    "operationId": "postuserroutingskills",
    "functionName": "PostUserRoutingskills",
    "signature": "PostUserRoutingskills(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userroutingskillpost",
        "required": "true"
      }
    ],
    "return": "Userroutingskill",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Userroutingskillpost // Skill\n// Add routing skill to user\ndata, response, err := apiInstance.PostUserRoutingskills(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUserRoutingskills: %v\\n\", err)\n}"
  },
  "putroutingemaildomainroute": {
    "operationId": "putroutingemaildomainroute",
    "functionName": "PutRoutingEmailDomainRoute",
    "signature": "PutRoutingEmailDomainRoute(domainName, routeId, body)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "routeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Inboundroute",
        "required": "true"
      }
    ],
    "return": "Inboundroute",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainName string // email domain\nvar routeId string // route ID\nvar body platformclientv2.Inboundroute // Route\n// Update a route\ndata, response, err := apiInstance.PutRoutingEmailDomainRoute(domainName, routeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingEmailDomainRoute: %v\\n\", err)\n}"
  },
  "putroutingemailoutbounddomainactivation": {
    "operationId": "putroutingemailoutbounddomainactivation",
    "functionName": "PutRoutingEmailOutboundDomainActivation",
    "signature": "PutRoutingEmailOutboundDomainActivation(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Emailoutbounddomainresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar domainId string // domain ID\n// Request an activation status (cname + dkim) update of an outbound domain\ndata, response, err := apiInstance.PutRoutingEmailOutboundDomainActivation(domainId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingEmailOutboundDomainActivation: %v\\n\", err)\n}"
  },
  "putroutingmessagerecipient": {
    "operationId": "putroutingmessagerecipient",
    "functionName": "PutRoutingMessageRecipient",
    "signature": "PutRoutingMessageRecipient(recipientId, body)",
    "parameters": [
      {
        "name": "recipientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Recipientrequest",
        "required": "true"
      }
    ],
    "return": "Recipient",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar recipientId string // Recipient ID\nvar body platformclientv2.Recipientrequest // Recipient\n// Update a recipient\ndata, response, err := apiInstance.PutRoutingMessageRecipient(recipientId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingMessageRecipient: %v\\n\", err)\n}"
  },
  "putroutingqueue": {
    "operationId": "putroutingqueue",
    "functionName": "PutRoutingQueue",
    "signature": "PutRoutingQueue(queueId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Queuerequest",
        "required": "true"
      }
    ],
    "return": "Queue",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar body platformclientv2.Queuerequest // Queue\n// Update a queue\ndata, response, err := apiInstance.PutRoutingQueue(queueId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingQueue: %v\\n\", err)\n}"
  },
  "putroutingsettings": {
    "operationId": "putroutingsettings",
    "functionName": "PutRoutingSettings",
    "signature": "PutRoutingSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Routingsettings",
        "required": "true"
      }
    ],
    "return": "Routingsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Routingsettings // Organization Settings\n// Update an organization's routing settings\ndata, response, err := apiInstance.PutRoutingSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingSettings: %v\\n\", err)\n}"
  },
  "putroutingsettingstranscription": {
    "operationId": "putroutingsettingstranscription",
    "functionName": "PutRoutingSettingsTranscription",
    "signature": "PutRoutingSettingsTranscription(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Transcriptionsettings",
        "required": "true"
      }
    ],
    "return": "Transcriptionsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Transcriptionsettings // Organization Settings\n// Update Transcription Settings\ndata, response, err := apiInstance.PutRoutingSettingsTranscription(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingSettingsTranscription: %v\\n\", err)\n}"
  },
  "putroutingsmsphonenumber": {
    "operationId": "putroutingsmsphonenumber",
    "functionName": "PutRoutingSmsPhonenumber",
    "signature": "PutRoutingSmsPhonenumber(addressId, body)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Smsphonenumber",
        "required": "true"
      }
    ],
    "return": "Smsphonenumber",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar addressId string // Address ID\nvar body platformclientv2.Smsphonenumber // SmsPhoneNumber\n// Update a phone number provisioned for SMS.\ndata, response, err := apiInstance.PutRoutingSmsPhonenumber(addressId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingSmsPhonenumber: %v\\n\", err)\n}"
  },
  "putroutinguserutilization": {
    "operationId": "putroutinguserutilization",
    "functionName": "PutRoutingUserUtilization",
    "signature": "PutRoutingUserUtilization(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Utilization",
        "required": "true"
      }
    ],
    "return": "Agentmaxutilization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Utilization // utilization\n// Update the user's max utilization settings.  Include only those media types requiring custom configuration.\ndata, response, err := apiInstance.PutRoutingUserUtilization(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingUserUtilization: %v\\n\", err)\n}"
  },
  "putroutingutilization": {
    "operationId": "putroutingutilization",
    "functionName": "PutRoutingUtilization",
    "signature": "PutRoutingUtilization(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Utilization",
        "required": "true"
      }
    ],
    "return": "Utilization",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar body platformclientv2.Utilization // utilization\n// Update the organization-wide max utilization settings.  Include only those media types requiring custom configuration.\ndata, response, err := apiInstance.PutRoutingUtilization(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingUtilization: %v\\n\", err)\n}"
  },
  "putroutingwrapupcode": {
    "operationId": "putroutingwrapupcode",
    "functionName": "PutRoutingWrapupcode",
    "signature": "PutRoutingWrapupcode(codeId, body)",
    "parameters": [
      {
        "name": "codeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wrapupcoderequest",
        "required": "true"
      }
    ],
    "return": "Wrapupcode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewRoutingApiWithConfig(config)\n\nvar codeId string // Wrapup Code ID\nvar body platformclientv2.Wrapupcoderequest // WrapupCode\n// Update wrap-up code\ndata, response, err := apiInstance.PutRoutingWrapupcode(codeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutRoutingWrapupcode: %v\\n\", err)\n}"
  },
  "putuserroutingskill": {
    "operationId": "putuserroutingskill",
    "functionName": "PutUserRoutingskill",
    "signature": "PutUserRoutingskill(userId, skillId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "skillId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userroutingskill",
        "required": "true"
      }
    ],
    "return": "Userroutingskill",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar skillId string // skillId\nvar body platformclientv2.Userroutingskill // Skill\n// Update routing skill proficiency or state.\ndata, response, err := apiInstance.PutUserRoutingskill(userId, skillId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserRoutingskill: %v\\n\", err)\n}"
  },
  "putuserroutingskillsbulk": {
    "operationId": "putuserroutingskillsbulk",
    "functionName": "PutUserRoutingskillsBulk",
    "signature": "PutUserRoutingskillsBulk(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Userroutingskillpost",
        "required": "true"
      }
    ],
    "return": "Userskillentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.[]Userroutingskillpost // Skill\n// Replace all routing skills assigned to a user\ndata, response, err := apiInstance.PutUserRoutingskillsBulk(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserRoutingskillsBulk: %v\\n\", err)\n}"
  },
  "deletescimuser": {
    "operationId": "deletescimuser",
    "functionName": "DeleteScimUser",
    "signature": "DeleteScimUser(userId, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar userId string // The ID of a user. Returned with GET /api/v2/scim/users.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Delete a user\ndata, response, err := apiInstance.DeleteScimUser(userId, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteScimUser: %v\\n\", err)\n}"
  },
  "deletescimv2user": {
    "operationId": "deletescimv2user",
    "functionName": "DeleteScimV2User",
    "signature": "DeleteScimV2User(userId, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar userId string // The ID of a user. Returned with GET /api/v2/scim/v2/users.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Delete a user\ndata, response, err := apiInstance.DeleteScimV2User(userId, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteScimV2User: %v\\n\", err)\n}"
  },
  "getscimgroup": {
    "operationId": "getscimgroup",
    "functionName": "GetScimGroup",
    "signature": "GetScimGroup(groupId, attributes, excludedAttributes, ifNoneMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2group",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar groupId string // The ID of a group. Returned with GET /api/v2/scim/groups.\nvar attributes []string // Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes.\nvar excludedAttributes []string // Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes.\nvar ifNoneMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.\n// Get a group\ndata, response, err := apiInstance.GetScimGroup(groupId, attributes, excludedAttributes, ifNoneMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimGroup: %v\\n\", err)\n}"
  },
  "getscimgroups": {
    "operationId": "getscimgroups",
    "functionName": "GetScimGroups",
    "signature": "GetScimGroups(startIndex, count, attributes, excludedAttributes, filter)",
    "parameters": [
      {
        "name": "startIndex",
        "type": "int",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimgrouplistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar startIndex int // The 1-based index of the first query result.\nvar count int // The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\".\nvar attributes []string // Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes.\nvar excludedAttributes []string // Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes.\nvar filter string // Filters results. If nothing is specified, returns all groups. Examples of valid values: \\\"id eq 5f4bc742-a019-4e38-8e2a-d39d5bc0b0f3\\\", \\\"displayname eq Sales\\\".\n// Get a list of groups\ndata, response, err := apiInstance.GetScimGroups(startIndex, count, attributes, excludedAttributes, filter)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimGroups: %v\\n\", err)\n}"
  },
  "getscimresourcetype": {
    "operationId": "getscimresourcetype",
    "functionName": "GetScimResourcetype",
    "signature": "GetScimResourcetype(resourceType)",
    "parameters": [
      {
        "name": "resourceType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Scimconfigresourcetype",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar resourceType string // The type of resource. Returned with GET /api/v2/scim/resourcetypes.\n// Get a resource type\ndata, response, err := apiInstance.GetScimResourcetype(resourceType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimResourcetype: %v\\n\", err)\n}"
  },
  "getscimresourcetypes": {
    "operationId": "getscimresourcetypes",
    "functionName": "GetScimResourcetypes",
    "signature": "GetScimResourcetypes()",
    "return": "Scimconfigresourcetypeslistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\n// Get a list of resource types\ndata, response, err := apiInstance.GetScimResourcetypes()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimResourcetypes: %v\\n\", err)\n}"
  },
  "getscimschema": {
    "operationId": "getscimschema",
    "functionName": "GetScimSchema",
    "signature": "GetScimSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Scimv2schemadefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar schemaId string // The ID of a schema. Returned with GET /api/v2/scim/schemas.\n// Get a SCIM schema\ndata, response, err := apiInstance.GetScimSchema(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimSchema: %v\\n\", err)\n}"
  },
  "getscimschemas": {
    "operationId": "getscimschemas",
    "functionName": "GetScimSchemas",
    "signature": "GetScimSchemas(filter)",
    "parameters": [
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2schemalistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar filter string // Filtered results are invalid and return 403 Unauthorized.\n// Get a list of SCIM schemas\ndata, response, err := apiInstance.GetScimSchemas(filter)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimSchemas: %v\\n\", err)\n}"
  },
  "getscimserviceproviderconfig": {
    "operationId": "getscimserviceproviderconfig",
    "functionName": "GetScimServiceproviderconfig",
    "signature": "GetScimServiceproviderconfig(ifNoneMatch)",
    "parameters": [
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimserviceproviderconfig",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar ifNoneMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/serviceproviderconfig. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. \n// Get a service provider's configuration\ndata, response, err := apiInstance.GetScimServiceproviderconfig(ifNoneMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimServiceproviderconfig: %v\\n\", err)\n}"
  },
  "getscimuser": {
    "operationId": "getscimuser",
    "functionName": "GetScimUser",
    "signature": "GetScimUser(userId, attributes, excludedAttributes, ifNoneMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2user",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar userId string // The ID of a user. Returned with GET /api/v2/scim/users.\nvar attributes []string // Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes.\nvar excludedAttributes []string // Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes.\nvar ifNoneMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.\n// Get a user\ndata, response, err := apiInstance.GetScimUser(userId, attributes, excludedAttributes, ifNoneMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimUser: %v\\n\", err)\n}"
  },
  "getscimusers": {
    "operationId": "getscimusers",
    "functionName": "GetScimUsers",
    "signature": "GetScimUsers(startIndex, count, attributes, excludedAttributes, filter)",
    "parameters": [
      {
        "name": "startIndex",
        "type": "int",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimuserlistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar startIndex int // The 1-based index of the first query result.\nvar count int // The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\".\nvar attributes []string // Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes.\nvar excludedAttributes []string // Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes.\nvar filter string // Filters results. If nothing is specified, returns all active users. Examples of valid values: \\\"id eq 857449b0-d9e7-4cd0-acbf-a6adfb9ef1e9\\\", \\\"userName eq search@sample.org\\\", \\\"manager eq 16e10e2f-1136-43fe-bb84-eac073168a49\\\", \\\"email eq search@sample.org\\\", \\\"division eq divisionName\\\", \\\"externalId eq 167844\\\", \\\"active eq false\\\", \\\"employeeNumber eq 9876543210\\\".\n// Get a list of users\ndata, response, err := apiInstance.GetScimUsers(startIndex, count, attributes, excludedAttributes, filter)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimUsers: %v\\n\", err)\n}"
  },
  "getscimv2group": {
    "operationId": "getscimv2group",
    "functionName": "GetScimV2Group",
    "signature": "GetScimV2Group(groupId, attributes, excludedAttributes, ifNoneMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2group",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar groupId string // The ID of a group. Returned with GET /api/v2/scim/v2/groups.\nvar attributes []string // Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes.\nvar excludedAttributes []string // Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes.\nvar ifNoneMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.\n// Get a group\ndata, response, err := apiInstance.GetScimV2Group(groupId, attributes, excludedAttributes, ifNoneMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimV2Group: %v\\n\", err)\n}"
  },
  "getscimv2groups": {
    "operationId": "getscimv2groups",
    "functionName": "GetScimV2Groups",
    "signature": "GetScimV2Groups(filter, startIndex, count, attributes, excludedAttributes)",
    "parameters": [
      {
        "name": "filter",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startIndex",
        "type": "int",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Scimgrouplistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar filter string // Filters results. If nothing is specified, returns all groups. Examples of valid values: \\\"id eq 5f4bc742-a019-4e38-8e2a-d39d5bc0b0f3\\\", \\\"displayname eq Sales\\\".\nvar startIndex int // The 1-based index of the first query result.\nvar count int // The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\".\nvar attributes []string // Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes.\nvar excludedAttributes []string // Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes.\n// Get a list of groups\ndata, response, err := apiInstance.GetScimV2Groups(filter, startIndex, count, attributes, excludedAttributes)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimV2Groups: %v\\n\", err)\n}"
  },
  "getscimv2resourcetype": {
    "operationId": "getscimv2resourcetype",
    "functionName": "GetScimV2Resourcetype",
    "signature": "GetScimV2Resourcetype(resourceType)",
    "parameters": [
      {
        "name": "resourceType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Scimconfigresourcetype",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar resourceType string // The type of resource. Returned with GET /api/v2/scim/v2/resourcetypes.\n// Get a resource type\ndata, response, err := apiInstance.GetScimV2Resourcetype(resourceType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimV2Resourcetype: %v\\n\", err)\n}"
  },
  "getscimv2resourcetypes": {
    "operationId": "getscimv2resourcetypes",
    "functionName": "GetScimV2Resourcetypes",
    "signature": "GetScimV2Resourcetypes()",
    "return": "Scimconfigresourcetypeslistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\n// Get a list of resource types\ndata, response, err := apiInstance.GetScimV2Resourcetypes()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimV2Resourcetypes: %v\\n\", err)\n}"
  },
  "getscimv2schema": {
    "operationId": "getscimv2schema",
    "functionName": "GetScimV2Schema",
    "signature": "GetScimV2Schema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Scimv2schemadefinition",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar schemaId string // The ID of a schema. Returned with GET /api/v2/scim/v2/schemas.\n// Get a SCIM schema\ndata, response, err := apiInstance.GetScimV2Schema(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimV2Schema: %v\\n\", err)\n}"
  },
  "getscimv2schemas": {
    "operationId": "getscimv2schemas",
    "functionName": "GetScimV2Schemas",
    "signature": "GetScimV2Schemas(filter)",
    "parameters": [
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2schemalistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar filter string // Filtered results are invalid and return 403 Unauthorized.\n// Get a list of SCIM schemas\ndata, response, err := apiInstance.GetScimV2Schemas(filter)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimV2Schemas: %v\\n\", err)\n}"
  },
  "getscimv2serviceproviderconfig": {
    "operationId": "getscimv2serviceproviderconfig",
    "functionName": "GetScimV2Serviceproviderconfig",
    "signature": "GetScimV2Serviceproviderconfig(ifNoneMatch)",
    "parameters": [
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimserviceproviderconfig",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar ifNoneMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/serviceproviderconfig. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. \n// Get a service provider's configuration\ndata, response, err := apiInstance.GetScimV2Serviceproviderconfig(ifNoneMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimV2Serviceproviderconfig: %v\\n\", err)\n}"
  },
  "getscimv2user": {
    "operationId": "getscimv2user",
    "functionName": "GetScimV2User",
    "signature": "GetScimV2User(userId, attributes, excludedAttributes, ifNoneMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2user",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar userId string // The ID of a user. Returned with GET /api/v2/scim/v2/users.\nvar attributes []string // Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes.\nvar excludedAttributes []string // Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes.\nvar ifNoneMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.\n// Get a user\ndata, response, err := apiInstance.GetScimV2User(userId, attributes, excludedAttributes, ifNoneMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimV2User: %v\\n\", err)\n}"
  },
  "getscimv2users": {
    "operationId": "getscimv2users",
    "functionName": "GetScimV2Users",
    "signature": "GetScimV2Users(startIndex, count, attributes, excludedAttributes, filter)",
    "parameters": [
      {
        "name": "startIndex",
        "type": "int",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimuserlistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar startIndex int // The 1-based index of the first query result.\nvar count int // The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\".\nvar attributes []string // Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes.\nvar excludedAttributes []string // Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes.\nvar filter string // Filters results. If nothing is specified, returns all active users. Examples of valid values: \\\"id eq 857449b0-d9e7-4cd0-acbf-a6adfb9ef1e9\\\", \\\"userName eq search@sample.org\\\", \\\"manager eq 16e10e2f-1136-43fe-bb84-eac073168a49\\\", \\\"email eq search@sample.org\\\", \\\"division eq divisionName\\\", \\\"externalId eq 167844\\\", \\\"active eq false\\\", \\\"employeeNumber eq 9876543210\\\".\n// Get a list of users\ndata, response, err := apiInstance.GetScimV2Users(startIndex, count, attributes, excludedAttributes, filter)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScimV2Users: %v\\n\", err)\n}"
  },
  "patchscimgroup": {
    "operationId": "patchscimgroup",
    "functionName": "PatchScimGroup",
    "signature": "PatchScimGroup(groupId, body, ifMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Scimv2patchrequest",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2group",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar groupId string // The ID of a group. Returned with GET /api/v2/scim/groups.\nvar body platformclientv2.Scimv2patchrequest // The information used to modify a group.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Modify a group\ndata, response, err := apiInstance.PatchScimGroup(groupId, body, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchScimGroup: %v\\n\", err)\n}"
  },
  "patchscimuser": {
    "operationId": "patchscimuser",
    "functionName": "PatchScimUser",
    "signature": "PatchScimUser(userId, body, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Scimv2patchrequest",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2user",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar userId string // The ID of a user. Returned with GET /api/v2/scim/users.\nvar body platformclientv2.Scimv2patchrequest // The information used to modify a user.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Modify a user\ndata, response, err := apiInstance.PatchScimUser(userId, body, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchScimUser: %v\\n\", err)\n}"
  },
  "patchscimv2group": {
    "operationId": "patchscimv2group",
    "functionName": "PatchScimV2Group",
    "signature": "PatchScimV2Group(groupId, body, ifMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Scimv2patchrequest",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2group",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar groupId string // The ID of a group. Returned with GET /api/v2/scim/v2/groups.\nvar body platformclientv2.Scimv2patchrequest // The information used to modify a group.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Modify a group\ndata, response, err := apiInstance.PatchScimV2Group(groupId, body, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchScimV2Group: %v\\n\", err)\n}"
  },
  "patchscimv2user": {
    "operationId": "patchscimv2user",
    "functionName": "PatchScimV2User",
    "signature": "PatchScimV2User(userId, body, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Scimv2patchrequest",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2user",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar userId string // The ID of a user. Returned with GET /api/v2/scim/v2/users.\nvar body platformclientv2.Scimv2patchrequest // The information used to modify a user.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Modify a user\ndata, response, err := apiInstance.PatchScimV2User(userId, body, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchScimV2User: %v\\n\", err)\n}"
  },
  "postscimusers": {
    "operationId": "postscimusers",
    "functionName": "PostScimUsers",
    "signature": "PostScimUsers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Scimv2createuser",
        "required": "true"
      }
    ],
    "return": "Scimv2user",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar body platformclientv2.Scimv2createuser // The information used to create a user.\n// Create a user\ndata, response, err := apiInstance.PostScimUsers(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostScimUsers: %v\\n\", err)\n}"
  },
  "postscimv2users": {
    "operationId": "postscimv2users",
    "functionName": "PostScimV2Users",
    "signature": "PostScimV2Users(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Scimv2createuser",
        "required": "true"
      }
    ],
    "return": "Scimv2user",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar body platformclientv2.Scimv2createuser // The information used to create a user.\n// Create a user\ndata, response, err := apiInstance.PostScimV2Users(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostScimV2Users: %v\\n\", err)\n}"
  },
  "putscimgroup": {
    "operationId": "putscimgroup",
    "functionName": "PutScimGroup",
    "signature": "PutScimGroup(groupId, body, ifMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Scimv2group",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2group",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar groupId string // The ID of a group. Returned with GET /api/v2/scim/groups.\nvar body platformclientv2.Scimv2group // The information used to replace a group.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Replace a group\ndata, response, err := apiInstance.PutScimGroup(groupId, body, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutScimGroup: %v\\n\", err)\n}"
  },
  "putscimuser": {
    "operationId": "putscimuser",
    "functionName": "PutScimUser",
    "signature": "PutScimUser(userId, body, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Scimv2user",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2user",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar userId string // The ID of a user. Returned with GET /api/v2/scim/users.\nvar body platformclientv2.Scimv2user // The information used to replace a user.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Replace a user\ndata, response, err := apiInstance.PutScimUser(userId, body, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutScimUser: %v\\n\", err)\n}"
  },
  "putscimv2group": {
    "operationId": "putscimv2group",
    "functionName": "PutScimV2Group",
    "signature": "PutScimV2Group(groupId, body, ifMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Scimv2group",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2group",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar groupId string // The ID of a group. Returned with GET /api/v2/scim/v2/groups.\nvar body platformclientv2.Scimv2group // The information used to replace a group.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Replace a group\ndata, response, err := apiInstance.PutScimV2Group(groupId, body, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutScimV2Group: %v\\n\", err)\n}"
  },
  "putscimv2user": {
    "operationId": "putscimv2user",
    "functionName": "PutScimV2User",
    "signature": "PutScimV2User(userId, body, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Scimv2user",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scimv2user",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSCIMApiWithConfig(config)\n\nvar userId string // The ID of a user. Returned with GET /api/v2/scim/v2/users.\nvar body platformclientv2.Scimv2user // The information used to replace a user.\nvar ifMatch string // The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\".\n// Replace a user\ndata, response, err := apiInstance.PutScimV2User(userId, body, ifMatch)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutScimV2User: %v\\n\", err)\n}"
  },
  "getscript": {
    "operationId": "getscript",
    "functionName": "GetScript",
    "signature": "GetScript(scriptId)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Script",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar scriptId string // Script ID\n// Get a script\ndata, response, err := apiInstance.GetScript(scriptId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScript: %v\\n\", err)\n}"
  },
  "getscriptpage": {
    "operationId": "getscriptpage",
    "functionName": "GetScriptPage",
    "signature": "GetScriptPage(scriptId, pageId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Page",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar scriptId string // Script ID\nvar pageId string // Page ID\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\n// Get a page\ndata, response, err := apiInstance.GetScriptPage(scriptId, pageId, scriptDataVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptPage: %v\\n\", err)\n}"
  },
  "getscriptpages": {
    "operationId": "getscriptpages",
    "functionName": "GetScriptPages",
    "signature": "GetScriptPages(scriptId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "[]Page",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar scriptId string // Script ID\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\n// Get the list of pages\ndata, response, err := apiInstance.GetScriptPages(scriptId, scriptDataVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptPages: %v\\n\", err)\n}"
  },
  "getscripts": {
    "operationId": "getscripts",
    "functionName": "GetScripts",
    "signature": "GetScripts(pageSize, pageNumber, expand, name, feature, flowId, sortBy, sortOrder, scriptDataVersion, divisionIds)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "flowId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scriptentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand\nvar name string // Name filter\nvar feature string // Feature filter\nvar flowId string // Secure flow id filter\nvar sortBy string // SortBy\nvar sortOrder string // SortOrder\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\nvar divisionIds string // Filters scripts to requested divisionIds\n// Get the list of scripts\ndata, response, err := apiInstance.GetScripts(pageSize, pageNumber, expand, name, feature, flowId, sortBy, sortOrder, scriptDataVersion, divisionIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScripts: %v\\n\", err)\n}"
  },
  "getscriptsdivisionviews": {
    "operationId": "getscriptsdivisionviews",
    "functionName": "GetScriptsDivisionviews",
    "signature": "GetScriptsDivisionviews(pageSize, pageNumber, expand, name, feature, flowId, sortBy, sortOrder, scriptDataVersion, divisionIds)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "flowId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scriptentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand\nvar name string // Name filter\nvar feature string // Feature filter\nvar flowId string // Secure flow id filter\nvar sortBy string // SortBy\nvar sortOrder string // SortOrder\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\nvar divisionIds string // Filters scripts to requested divisionIds\n// Get the metadata for a list of scripts\ndata, response, err := apiInstance.GetScriptsDivisionviews(pageSize, pageNumber, expand, name, feature, flowId, sortBy, sortOrder, scriptDataVersion, divisionIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptsDivisionviews: %v\\n\", err)\n}"
  },
  "getscriptspublished": {
    "operationId": "getscriptspublished",
    "functionName": "GetScriptsPublished",
    "signature": "GetScriptsPublished(pageSize, pageNumber, expand, name, feature, flowId, scriptDataVersion, divisionIds)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "flowId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scriptentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand\nvar name string // Name filter\nvar feature string // Feature filter\nvar flowId string // Secure flow id filter\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\nvar divisionIds string // Filters scripts to requested divisionIds\n// Get the published scripts.\ndata, response, err := apiInstance.GetScriptsPublished(pageSize, pageNumber, expand, name, feature, flowId, scriptDataVersion, divisionIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptsPublished: %v\\n\", err)\n}"
  },
  "getscriptspublisheddivisionviews": {
    "operationId": "getscriptspublisheddivisionviews",
    "functionName": "GetScriptsPublishedDivisionviews",
    "signature": "GetScriptsPublishedDivisionviews(pageSize, pageNumber, expand, name, feature, flowId, scriptDataVersion, divisionIds)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "flowId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Scriptentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand string // Expand\nvar name string // Name filter\nvar feature string // Feature filter\nvar flowId string // Secure flow id filter\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\nvar divisionIds string // Filters scripts to requested divisionIds\n// Get the published scripts metadata.\ndata, response, err := apiInstance.GetScriptsPublishedDivisionviews(pageSize, pageNumber, expand, name, feature, flowId, scriptDataVersion, divisionIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptsPublishedDivisionviews: %v\\n\", err)\n}"
  },
  "getscriptspublishedscriptid": {
    "operationId": "getscriptspublishedscriptid",
    "functionName": "GetScriptsPublishedScriptId",
    "signature": "GetScriptsPublishedScriptId(scriptId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Script",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar scriptId string // Script ID\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\n// Get the published script.\ndata, response, err := apiInstance.GetScriptsPublishedScriptId(scriptId, scriptDataVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptsPublishedScriptId: %v\\n\", err)\n}"
  },
  "getscriptspublishedscriptidpage": {
    "operationId": "getscriptspublishedscriptidpage",
    "functionName": "GetScriptsPublishedScriptIdPage",
    "signature": "GetScriptsPublishedScriptIdPage(scriptId, pageId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Page",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar scriptId string // Script ID\nvar pageId string // Page ID\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\n// Get the published page.\ndata, response, err := apiInstance.GetScriptsPublishedScriptIdPage(scriptId, pageId, scriptDataVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptsPublishedScriptIdPage: %v\\n\", err)\n}"
  },
  "getscriptspublishedscriptidpages": {
    "operationId": "getscriptspublishedscriptidpages",
    "functionName": "GetScriptsPublishedScriptIdPages",
    "signature": "GetScriptsPublishedScriptIdPages(scriptId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "[]Page",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar scriptId string // Script ID\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\n// Get the list of published pages\ndata, response, err := apiInstance.GetScriptsPublishedScriptIdPages(scriptId, scriptDataVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptsPublishedScriptIdPages: %v\\n\", err)\n}"
  },
  "getscriptspublishedscriptidvariables": {
    "operationId": "getscriptspublishedscriptidvariables",
    "functionName": "GetScriptsPublishedScriptIdVariables",
    "signature": "GetScriptsPublishedScriptIdVariables(scriptId, input, output, varType, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "input",
        "type": "string",
        "required": "false"
      },
      {
        "name": "output",
        "type": "string",
        "required": "false"
      },
      {
        "name": "varType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar scriptId string // Script ID\nvar input string // input\nvar output string // output\nvar varType string // type\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\n// Get the published variables\ndata, response, err := apiInstance.GetScriptsPublishedScriptIdVariables(scriptId, input, output, varType, scriptDataVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptsPublishedScriptIdVariables: %v\\n\", err)\n}"
  },
  "getscriptsuploadstatus": {
    "operationId": "getscriptsuploadstatus",
    "functionName": "GetScriptsUploadStatus",
    "signature": "GetScriptsUploadStatus(uploadId, longPoll)",
    "parameters": [
      {
        "name": "uploadId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "longPoll",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Importscriptstatusresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar uploadId string // Upload ID\nvar longPoll bool // Enable longPolling endpoint\n// Get the upload status of an imported script\ndata, response, err := apiInstance.GetScriptsUploadStatus(uploadId, longPoll)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetScriptsUploadStatus: %v\\n\", err)\n}"
  },
  "postscriptexport": {
    "operationId": "postscriptexport",
    "functionName": "PostScriptExport",
    "signature": "PostScriptExport(scriptId, body)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Exportscriptrequest",
        "required": "false"
      }
    ],
    "return": "Exportscriptresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar scriptId string // Script ID\nvar body platformclientv2.Exportscriptrequest // \n// Export a script via download service.\ndata, response, err := apiInstance.PostScriptExport(scriptId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostScriptExport: %v\\n\", err)\n}"
  },
  "postscriptspublished": {
    "operationId": "postscriptspublished",
    "functionName": "PostScriptsPublished",
    "signature": "PostScriptsPublished(scriptDataVersion, body)",
    "parameters": [
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Publishscriptrequestdata",
        "required": "false"
      }
    ],
    "return": "Script",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewScriptsApiWithConfig(config)\n\nvar scriptDataVersion string // Advanced usage - controls the data version of the script\nvar body platformclientv2.Publishscriptrequestdata // body\n// Publish a script.\ndata, response, err := apiInstance.PostScriptsPublished(scriptDataVersion, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostScriptsPublished: %v\\n\", err)\n}"
  },
  "getdocumentationgknsearch": {
    "operationId": "getdocumentationgknsearch",
    "functionName": "GetDocumentationGknSearch",
    "signature": "GetDocumentationGknSearch(q64)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Gkndocumentationsearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar q64 string // q64\n// Search gkn documentation using the q64 value returned from a previous search\ndata, response, err := apiInstance.GetDocumentationGknSearch(q64)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetDocumentationGknSearch: %v\\n\", err)\n}"
  },
  "getdocumentationsearch": {
    "operationId": "getdocumentationsearch",
    "functionName": "GetDocumentationSearch",
    "signature": "GetDocumentationSearch(q64)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Documentationsearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar q64 string // q64\n// Search documentation using the q64 value returned from a previous search\ndata, response, err := apiInstance.GetDocumentationSearch(q64)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetDocumentationSearch: %v\\n\", err)\n}"
  },
  "getsearch": {
    "operationId": "getsearch",
    "functionName": "GetSearch",
    "signature": "GetSearch(q64, expand, profile)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "profile",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Jsonnodesearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSuggestApiWithConfig(config)\n\nvar q64 string // q64\nvar expand []string // Which fields, if any, to expand\nvar profile bool // profile\n// Search using the q64 value returned from a previous search.\ndata, response, err := apiInstance.GetSearch(q64, expand, profile)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSearch: %v\\n\", err)\n}"
  },
  "getsearchsuggest": {
    "operationId": "getsearchsuggest",
    "functionName": "GetSearchSuggest",
    "signature": "GetSearchSuggest(q64, expand, profile)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "profile",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Jsonnodesearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSuggestApiWithConfig(config)\n\nvar q64 string // q64\nvar expand []string // Which fields, if any, to expand\nvar profile bool // profile\n// Suggest resources using the q64 value returned from a previous suggest query.\ndata, response, err := apiInstance.GetSearchSuggest(q64, expand, profile)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSearchSuggest: %v\\n\", err)\n}"
  },
  "getuserssearch": {
    "operationId": "getuserssearch",
    "functionName": "GetUsersSearch",
    "signature": "GetUsersSearch(q64, expand, integrationPresenceSource)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar q64 string // q64\nvar expand []string // expand\nvar integrationPresenceSource string // integrationPresenceSource\n// Search users using the q64 value returned from a previous search\ndata, response, err := apiInstance.GetUsersSearch(q64, expand, integrationPresenceSource)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsersSearch: %v\\n\", err)\n}"
  },
  "getvoicemailsearch": {
    "operationId": "getvoicemailsearch",
    "functionName": "GetVoicemailSearch",
    "signature": "GetVoicemailSearch(q64, expand)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Voicemailssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar q64 string // q64\nvar expand []string // expand\n// Search voicemails using the q64 value returned from a previous search\ndata, response, err := apiInstance.GetVoicemailSearch(q64, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailSearch: %v\\n\", err)\n}"
  },
  "postdocumentationallsearch": {
    "operationId": "postdocumentationallsearch",
    "functionName": "PostDocumentationAllSearch",
    "signature": "PostDocumentationAllSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Documentationv2searchrequest",
        "required": "true"
      }
    ],
    "return": "Jsonnodesearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar body platformclientv2.Documentationv2searchrequest // Search request options\n// Search all documents\ndata, response, err := apiInstance.PostDocumentationAllSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostDocumentationAllSearch: %v\\n\", err)\n}"
  },
  "postdocumentationgknsearch": {
    "operationId": "postdocumentationgknsearch",
    "functionName": "PostDocumentationGknSearch",
    "signature": "PostDocumentationGknSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Gkndocumentationsearchrequest",
        "required": "true"
      }
    ],
    "return": "Gkndocumentationsearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar body platformclientv2.Gkndocumentationsearchrequest // Search request options\n// Search gkn documentation\ndata, response, err := apiInstance.PostDocumentationGknSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostDocumentationGknSearch: %v\\n\", err)\n}"
  },
  "postdocumentationsearch": {
    "operationId": "postdocumentationsearch",
    "functionName": "PostDocumentationSearch",
    "signature": "PostDocumentationSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Documentationsearchrequest",
        "required": "true"
      }
    ],
    "return": "Documentationsearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSearchApiWithConfig(config)\n\nvar body platformclientv2.Documentationsearchrequest // Search request options\n// Search documentation\ndata, response, err := apiInstance.PostDocumentationSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostDocumentationSearch: %v\\n\", err)\n}"
  },
  "postsearch": {
    "operationId": "postsearch",
    "functionName": "PostSearch",
    "signature": "PostSearch(body, profile)",
    "parameters": [
      {
        "name": "body",
        "type": "Searchrequest",
        "required": "true"
      },
      {
        "name": "profile",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Jsonnodesearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSuggestApiWithConfig(config)\n\nvar body platformclientv2.Searchrequest // Search request options\nvar profile bool // profile\n// Search resources.\ndata, response, err := apiInstance.PostSearch(body, profile)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSearch: %v\\n\", err)\n}"
  },
  "postsearchsuggest": {
    "operationId": "postsearchsuggest",
    "functionName": "PostSearchSuggest",
    "signature": "PostSearchSuggest(body, profile)",
    "parameters": [
      {
        "name": "body",
        "type": "Suggestsearchrequest",
        "required": "true"
      },
      {
        "name": "profile",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Jsonnodesearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSuggestApiWithConfig(config)\n\nvar body platformclientv2.Suggestsearchrequest // Search request options\nvar profile bool // profile\n// Suggest resources.\ndata, response, err := apiInstance.PostSearchSuggest(body, profile)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSearchSuggest: %v\\n\", err)\n}"
  },
  "postspeechandtextanalyticstranscriptssearch": {
    "operationId": "postspeechandtextanalyticstranscriptssearch",
    "functionName": "PostSpeechandtextanalyticsTranscriptsSearch",
    "signature": "PostSpeechandtextanalyticsTranscriptsSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Transcriptsearchrequest",
        "required": "true"
      }
    ],
    "return": "Jsonsearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Transcriptsearchrequest // Search request options\n// Search resources.\ndata, response, err := apiInstance.PostSpeechandtextanalyticsTranscriptsSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSpeechandtextanalyticsTranscriptsSearch: %v\\n\", err)\n}"
  },
  "postteamssearch": {
    "operationId": "postteamssearch",
    "functionName": "PostTeamsSearch",
    "signature": "PostTeamsSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Teamsearchrequest",
        "required": "true"
      }
    ],
    "return": "Teamssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar body platformclientv2.Teamsearchrequest // Search request options\n// Search resources.\ndata, response, err := apiInstance.PostTeamsSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTeamsSearch: %v\\n\", err)\n}"
  },
  "postuserssearch": {
    "operationId": "postuserssearch",
    "functionName": "PostUsersSearch",
    "signature": "PostUsersSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Usersearchrequest",
        "required": "true"
      }
    ],
    "return": "Userssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Usersearchrequest // Search request options\n// Search users\ndata, response, err := apiInstance.PostUsersSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUsersSearch: %v\\n\", err)\n}"
  },
  "postuserssearchconversationtarget": {
    "operationId": "postuserssearchconversationtarget",
    "functionName": "PostUsersSearchConversationTarget",
    "signature": "PostUsersSearchConversationTarget(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Usersearchrequest",
        "required": "true"
      }
    ],
    "return": "Userssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Usersearchrequest // Search request options\n// Search users as conversation targets\ndata, response, err := apiInstance.PostUsersSearchConversationTarget(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUsersSearchConversationTarget: %v\\n\", err)\n}"
  },
  "postuserssearchqueuemembersmanage": {
    "operationId": "postuserssearchqueuemembersmanage",
    "functionName": "PostUsersSearchQueuemembersManage",
    "signature": "PostUsersSearchQueuemembersManage(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Usersearchrequest",
        "required": "true"
      }
    ],
    "return": "Userssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Usersearchrequest // Search request options\n// Search manage queue member\ndata, response, err := apiInstance.PostUsersSearchQueuemembersManage(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUsersSearchQueuemembersManage: %v\\n\", err)\n}"
  },
  "postuserssearchteamsassign": {
    "operationId": "postuserssearchteamsassign",
    "functionName": "PostUsersSearchTeamsAssign",
    "signature": "PostUsersSearchTeamsAssign(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Usersearchrequest",
        "required": "true"
      }
    ],
    "return": "Userssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Usersearchrequest // Search request options\n// Search users assigned to teams\ndata, response, err := apiInstance.PostUsersSearchTeamsAssign(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUsersSearchTeamsAssign: %v\\n\", err)\n}"
  },
  "postvoicemailsearch": {
    "operationId": "postvoicemailsearch",
    "functionName": "PostVoicemailSearch",
    "signature": "PostVoicemailSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Voicemailsearchrequest",
        "required": "true"
      }
    ],
    "return": "Voicemailssearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar body platformclientv2.Voicemailsearchrequest // Search request options\n// Search voicemails\ndata, response, err := apiInstance.PostVoicemailSearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostVoicemailSearch: %v\\n\", err)\n}"
  },
  "deletespeechandtextanalyticsdictionaryfeedbackdictionaryfeedbackid": {
    "operationId": "deletespeechandtextanalyticsdictionaryfeedbackdictionaryfeedbackid",
    "functionName": "DeleteSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId",
    "signature": "DeleteSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId(dictionaryFeedbackId)",
    "parameters": [
      {
        "name": "dictionaryFeedbackId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar dictionaryFeedbackId string // The Id of the Dictionary Feedback\n// Delete a Speech & Text Analytics DictionaryFeedback by Id\nresponse, err := apiInstance.DeleteSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId(dictionaryFeedbackId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId: %v\\n\", err)\n}"
  },
  "deletespeechandtextanalyticsprogram": {
    "operationId": "deletespeechandtextanalyticsprogram",
    "functionName": "DeleteSpeechandtextanalyticsProgram",
    "signature": "DeleteSpeechandtextanalyticsProgram(programId, forceDelete)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDelete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar programId string // The id of the program\nvar forceDelete bool // Indicates whether the program is forced to be deleted or not. Required when the program to delete is the default program.\n// Delete a Speech & Text Analytics program by id\nresponse, err := apiInstance.DeleteSpeechandtextanalyticsProgram(programId, forceDelete)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteSpeechandtextanalyticsProgram: %v\\n\", err)\n}"
  },
  "deletespeechandtextanalyticssentimentfeedback": {
    "operationId": "deletespeechandtextanalyticssentimentfeedback",
    "functionName": "DeleteSpeechandtextanalyticsSentimentfeedback",
    "signature": "DeleteSpeechandtextanalyticsSentimentfeedback()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\n// Delete All Speech & Text Analytics SentimentFeedback\nresponse, err := apiInstance.DeleteSpeechandtextanalyticsSentimentfeedback()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteSpeechandtextanalyticsSentimentfeedback: %v\\n\", err)\n}"
  },
  "deletespeechandtextanalyticssentimentfeedbacksentimentfeedbackid": {
    "operationId": "deletespeechandtextanalyticssentimentfeedbacksentimentfeedbackid",
    "functionName": "DeleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId",
    "signature": "DeleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId(sentimentFeedbackId)",
    "parameters": [
      {
        "name": "sentimentFeedbackId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar sentimentFeedbackId string // The Id of the SentimentFeedback\n// Delete a Speech & Text Analytics SentimentFeedback by Id\nresponse, err := apiInstance.DeleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId(sentimentFeedbackId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId: %v\\n\", err)\n}"
  },
  "deletespeechandtextanalyticstopic": {
    "operationId": "deletespeechandtextanalyticstopic",
    "functionName": "DeleteSpeechandtextanalyticsTopic",
    "signature": "DeleteSpeechandtextanalyticsTopic(topicId)",
    "parameters": [
      {
        "name": "topicId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar topicId string // The id of the topic\n// Delete a Speech & Text Analytics topic by id\nresponse, err := apiInstance.DeleteSpeechandtextanalyticsTopic(topicId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteSpeechandtextanalyticsTopic: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsconversation": {
    "operationId": "getspeechandtextanalyticsconversation",
    "functionName": "GetSpeechandtextanalyticsConversation",
    "signature": "GetSpeechandtextanalyticsConversation(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Conversationmetrics",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar conversationId string // Conversation Id\n// Get Speech and Text Analytics for a specific conversation\ndata, response, err := apiInstance.GetSpeechandtextanalyticsConversation(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsConversation: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsconversationcommunicationtranscripturl": {
    "operationId": "getspeechandtextanalyticsconversationcommunicationtranscripturl",
    "functionName": "GetSpeechandtextanalyticsConversationCommunicationTranscripturl",
    "signature": "GetSpeechandtextanalyticsConversationCommunicationTranscripturl(conversationId, communicationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Transcripturl",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar communicationId string // Communication ID\n// Get the pre-signed S3 URL for the transcript of a specific communication of a conversation\ndata, response, err := apiInstance.GetSpeechandtextanalyticsConversationCommunicationTranscripturl(conversationId, communicationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsConversationCommunicationTranscripturl: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsconversationcommunicationtranscripturls": {
    "operationId": "getspeechandtextanalyticsconversationcommunicationtranscripturls",
    "functionName": "GetSpeechandtextanalyticsConversationCommunicationTranscripturls",
    "signature": "GetSpeechandtextanalyticsConversationCommunicationTranscripturls(conversationId, communicationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Transcripturls",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar conversationId string // Conversation ID\nvar communicationId string // Communication ID\n// Get the list of pre-signed S3 URL for the transcripts of a specific communication of a conversation\ndata, response, err := apiInstance.GetSpeechandtextanalyticsConversationCommunicationTranscripturls(conversationId, communicationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsConversationCommunicationTranscripturls: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsdictionaryfeedback": {
    "operationId": "getspeechandtextanalyticsdictionaryfeedback",
    "functionName": "GetSpeechandtextanalyticsDictionaryfeedback",
    "signature": "GetSpeechandtextanalyticsDictionaryfeedback(dialect, nextPage, pageSize)",
    "parameters": [
      {
        "name": "dialect",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Dictionaryfeedbackentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar dialect string // The key for filter the listing by dialect, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard\nvar nextPage string // The key for listing the next page\nvar pageSize int // The page size for the listing\n// Get the list of Speech & Text Analytics dictionary feedbacks\ndata, response, err := apiInstance.GetSpeechandtextanalyticsDictionaryfeedback(dialect, nextPage, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsDictionaryfeedback: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsdictionaryfeedbackdictionaryfeedbackid": {
    "operationId": "getspeechandtextanalyticsdictionaryfeedbackdictionaryfeedbackid",
    "functionName": "GetSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId",
    "signature": "GetSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId(dictionaryFeedbackId)",
    "parameters": [
      {
        "name": "dictionaryFeedbackId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dictionaryfeedback",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar dictionaryFeedbackId string // The Id of the Dictionary Feedback\n// Get a Speech & Text Analytics dictionary feedback by id\ndata, response, err := apiInstance.GetSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId(dictionaryFeedbackId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsprogram": {
    "operationId": "getspeechandtextanalyticsprogram",
    "functionName": "GetSpeechandtextanalyticsProgram",
    "signature": "GetSpeechandtextanalyticsProgram(programId)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Program",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar programId string // The id of the program\n// Get a Speech & Text Analytics program by id\ndata, response, err := apiInstance.GetSpeechandtextanalyticsProgram(programId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsProgram: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsprogrammappings": {
    "operationId": "getspeechandtextanalyticsprogrammappings",
    "functionName": "GetSpeechandtextanalyticsProgramMappings",
    "signature": "GetSpeechandtextanalyticsProgramMappings(programId)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Programmappings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar programId string // The id of the program\n// Get Speech & Text Analytics program mappings to queues and flows by id\ndata, response, err := apiInstance.GetSpeechandtextanalyticsProgramMappings(programId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsProgramMappings: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsprogramtranscriptionengines": {
    "operationId": "getspeechandtextanalyticsprogramtranscriptionengines",
    "functionName": "GetSpeechandtextanalyticsProgramTranscriptionengines",
    "signature": "GetSpeechandtextanalyticsProgramTranscriptionengines(programId)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Programtranscriptionengines",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar programId string // The id of the program\n// Get transcription engine settings of a program\ndata, response, err := apiInstance.GetSpeechandtextanalyticsProgramTranscriptionengines(programId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsProgramTranscriptionengines: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsprograms": {
    "operationId": "getspeechandtextanalyticsprograms",
    "functionName": "GetSpeechandtextanalyticsPrograms",
    "signature": "GetSpeechandtextanalyticsPrograms(nextPage, pageSize, state)",
    "parameters": [
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Programsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar nextPage string // The key for listing the next page\nvar pageSize int // The page size for the listing\nvar state string // Program state. Defaults to Latest\n// Get the list of Speech & Text Analytics programs\ndata, response, err := apiInstance.GetSpeechandtextanalyticsPrograms(nextPage, pageSize, state)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsPrograms: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsprogramsgeneraljob": {
    "operationId": "getspeechandtextanalyticsprogramsgeneraljob",
    "functionName": "GetSpeechandtextanalyticsProgramsGeneralJob",
    "signature": "GetSpeechandtextanalyticsProgramsGeneralJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Generalprogramjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar jobId string // The id of the publish programs job\n// Get a Speech & Text Analytics general program job by id\ndata, response, err := apiInstance.GetSpeechandtextanalyticsProgramsGeneralJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsProgramsGeneralJob: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsprogramsmappings": {
    "operationId": "getspeechandtextanalyticsprogramsmappings",
    "functionName": "GetSpeechandtextanalyticsProgramsMappings",
    "signature": "GetSpeechandtextanalyticsProgramsMappings(nextPage, pageSize)",
    "parameters": [
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Programsmappingsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar nextPage string // The key for listing the next page\nvar pageSize int // The page size for the listing\n// Get the list of Speech & Text Analytics programs mappings to queues and flows\ndata, response, err := apiInstance.GetSpeechandtextanalyticsProgramsMappings(nextPage, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsProgramsMappings: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsprogramspublishjob": {
    "operationId": "getspeechandtextanalyticsprogramspublishjob",
    "functionName": "GetSpeechandtextanalyticsProgramsPublishjob",
    "signature": "GetSpeechandtextanalyticsProgramsPublishjob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Programjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar jobId string // The id of the publish programs job\n// Get a Speech & Text Analytics publish programs job by id\ndata, response, err := apiInstance.GetSpeechandtextanalyticsProgramsPublishjob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsProgramsPublishjob: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsprogramstranscriptionenginesdialects": {
    "operationId": "getspeechandtextanalyticsprogramstranscriptionenginesdialects",
    "functionName": "GetSpeechandtextanalyticsProgramsTranscriptionenginesDialects",
    "signature": "GetSpeechandtextanalyticsProgramsTranscriptionenginesDialects()",
    "return": "Supporteddialectsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\n// Get supported dialects for each transcription engine\ndata, response, err := apiInstance.GetSpeechandtextanalyticsProgramsTranscriptionenginesDialects()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsProgramsTranscriptionenginesDialects: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticsprogramsunpublished": {
    "operationId": "getspeechandtextanalyticsprogramsunpublished",
    "functionName": "GetSpeechandtextanalyticsProgramsUnpublished",
    "signature": "GetSpeechandtextanalyticsProgramsUnpublished(nextPage, pageSize)",
    "parameters": [
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Unpublishedprogramsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar nextPage string // The key for listing the next page\nvar pageSize int // The page size for the listing\n// Get the list of Speech & Text Analytics unpublished programs\ndata, response, err := apiInstance.GetSpeechandtextanalyticsProgramsUnpublished(nextPage, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsProgramsUnpublished: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticssentimentdialects": {
    "operationId": "getspeechandtextanalyticssentimentdialects",
    "functionName": "GetSpeechandtextanalyticsSentimentDialects",
    "signature": "GetSpeechandtextanalyticsSentimentDialects()",
    "return": "Entitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\n// Get the list of Speech & Text Analytics sentiment supported dialects\ndata, response, err := apiInstance.GetSpeechandtextanalyticsSentimentDialects()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsSentimentDialects: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticssentimentfeedback": {
    "operationId": "getspeechandtextanalyticssentimentfeedback",
    "functionName": "GetSpeechandtextanalyticsSentimentfeedback",
    "signature": "GetSpeechandtextanalyticsSentimentfeedback(dialect)",
    "parameters": [
      {
        "name": "dialect",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Sentimentfeedbackentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar dialect string // The key for filter the listing by dialect, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard\n// Get the list of Speech & Text Analytics SentimentFeedback\ndata, response, err := apiInstance.GetSpeechandtextanalyticsSentimentfeedback(dialect)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsSentimentfeedback: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticssettings": {
    "operationId": "getspeechandtextanalyticssettings",
    "functionName": "GetSpeechandtextanalyticsSettings",
    "signature": "GetSpeechandtextanalyticsSettings()",
    "return": "Speechtextanalyticssettingsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\n// Get Speech And Text Analytics Settings\ndata, response, err := apiInstance.GetSpeechandtextanalyticsSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsSettings: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticstopic": {
    "operationId": "getspeechandtextanalyticstopic",
    "functionName": "GetSpeechandtextanalyticsTopic",
    "signature": "GetSpeechandtextanalyticsTopic(topicId)",
    "parameters": [
      {
        "name": "topicId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Topic",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar topicId string // The id of the topic\n// Get a Speech & Text Analytics topic by id\ndata, response, err := apiInstance.GetSpeechandtextanalyticsTopic(topicId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsTopic: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticstopics": {
    "operationId": "getspeechandtextanalyticstopics",
    "functionName": "GetSpeechandtextanalyticsTopics",
    "signature": "GetSpeechandtextanalyticsTopics(nextPage, pageSize, state, name, ids, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Topicsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar nextPage string // The key for listing the next page\nvar pageSize int // The page size for the listing\nvar state string // Topic state. Defaults to latest\nvar name string // Case insensitive partial name to filter by\nvar ids []string // Comma separated Topic IDs to filter by. Cannot be used with other filters. Maximum of 50 IDs allowed.\nvar sortBy string // Sort results by. Defaults to name\nvar sortOrder string // Sort order. Defaults to asc\n// Get the list of Speech & Text Analytics topics\ndata, response, err := apiInstance.GetSpeechandtextanalyticsTopics(nextPage, pageSize, state, name, ids, sortBy, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsTopics: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticstopicsdialects": {
    "operationId": "getspeechandtextanalyticstopicsdialects",
    "functionName": "GetSpeechandtextanalyticsTopicsDialects",
    "signature": "GetSpeechandtextanalyticsTopicsDialects()",
    "return": "Entitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\n// Get list of supported Speech & Text Analytics topics dialects\ndata, response, err := apiInstance.GetSpeechandtextanalyticsTopicsDialects()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsTopicsDialects: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticstopicsgeneral": {
    "operationId": "getspeechandtextanalyticstopicsgeneral",
    "functionName": "GetSpeechandtextanalyticsTopicsGeneral",
    "signature": "GetSpeechandtextanalyticsTopicsGeneral(dialect)",
    "parameters": [
      {
        "name": "dialect",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Generaltopicsentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar dialect string // The dialect of the general topics, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard\n// Get the Speech & Text Analytics general topics for a given dialect\ndata, response, err := apiInstance.GetSpeechandtextanalyticsTopicsGeneral(dialect)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsTopicsGeneral: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticstopicsgeneralstatus": {
    "operationId": "getspeechandtextanalyticstopicsgeneralstatus",
    "functionName": "GetSpeechandtextanalyticsTopicsGeneralStatus",
    "signature": "GetSpeechandtextanalyticsTopicsGeneralStatus(dialect)",
    "parameters": [
      {
        "name": "dialect",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Unifiedgeneraltopicentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar dialect string // The dialect of the general topics, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard\n// Get the list of general topics from the org and the system with their current status\ndata, response, err := apiInstance.GetSpeechandtextanalyticsTopicsGeneralStatus(dialect)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsTopicsGeneralStatus: %v\\n\", err)\n}"
  },
  "getspeechandtextanalyticstopicspublishjob": {
    "operationId": "getspeechandtextanalyticstopicspublishjob",
    "functionName": "GetSpeechandtextanalyticsTopicsPublishjob",
    "signature": "GetSpeechandtextanalyticsTopicsPublishjob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Topicjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar jobId string // The id of the publish topics job\n// Get a Speech & Text Analytics publish topics job by id\ndata, response, err := apiInstance.GetSpeechandtextanalyticsTopicsPublishjob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetSpeechandtextanalyticsTopicsPublishjob: %v\\n\", err)\n}"
  },
  "patchspeechandtextanalyticssettings": {
    "operationId": "patchspeechandtextanalyticssettings",
    "functionName": "PatchSpeechandtextanalyticsSettings",
    "signature": "PatchSpeechandtextanalyticsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Speechtextanalyticssettingsrequest",
        "required": "true"
      }
    ],
    "return": "Speechtextanalyticssettingsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Speechtextanalyticssettingsrequest // Speech And Text Analytics Settings\n// Patch Speech And Text Analytics Settings\ndata, response, err := apiInstance.PatchSpeechandtextanalyticsSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchSpeechandtextanalyticsSettings: %v\\n\", err)\n}"
  },
  "postspeechandtextanalyticsdictionaryfeedback": {
    "operationId": "postspeechandtextanalyticsdictionaryfeedback",
    "functionName": "PostSpeechandtextanalyticsDictionaryfeedback",
    "signature": "PostSpeechandtextanalyticsDictionaryfeedback(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Dictionaryfeedback",
        "required": "true"
      }
    ],
    "return": "Dictionaryfeedback",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Dictionaryfeedback // The DictionaryFeedback to create\n// Create a Speech & Text Analytics DictionaryFeedback\ndata, response, err := apiInstance.PostSpeechandtextanalyticsDictionaryfeedback(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSpeechandtextanalyticsDictionaryfeedback: %v\\n\", err)\n}"
  },
  "postspeechandtextanalyticsprograms": {
    "operationId": "postspeechandtextanalyticsprograms",
    "functionName": "PostSpeechandtextanalyticsPrograms",
    "signature": "PostSpeechandtextanalyticsPrograms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Programrequest",
        "required": "true"
      }
    ],
    "return": "Program",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Programrequest // The program to create\n// Create new Speech & Text Analytics program\ndata, response, err := apiInstance.PostSpeechandtextanalyticsPrograms(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSpeechandtextanalyticsPrograms: %v\\n\", err)\n}"
  },
  "postspeechandtextanalyticsprogramsgeneraljobs": {
    "operationId": "postspeechandtextanalyticsprogramsgeneraljobs",
    "functionName": "PostSpeechandtextanalyticsProgramsGeneralJobs",
    "signature": "PostSpeechandtextanalyticsProgramsGeneralJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Generalprogramjobrequest",
        "required": "true"
      }
    ],
    "return": "Generalprogramjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Generalprogramjobrequest // The general programs job to create\n// Create new Speech & Text Analytics general program job\ndata, response, err := apiInstance.PostSpeechandtextanalyticsProgramsGeneralJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSpeechandtextanalyticsProgramsGeneralJobs: %v\\n\", err)\n}"
  },
  "postspeechandtextanalyticsprogramspublishjobs": {
    "operationId": "postspeechandtextanalyticsprogramspublishjobs",
    "functionName": "PostSpeechandtextanalyticsProgramsPublishjobs",
    "signature": "PostSpeechandtextanalyticsProgramsPublishjobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Programjobrequest",
        "required": "true"
      }
    ],
    "return": "Programjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Programjobrequest // The publish programs job to create\n// Create new Speech & Text Analytics publish programs job\ndata, response, err := apiInstance.PostSpeechandtextanalyticsProgramsPublishjobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSpeechandtextanalyticsProgramsPublishjobs: %v\\n\", err)\n}"
  },
  "postspeechandtextanalyticssentimentfeedback": {
    "operationId": "postspeechandtextanalyticssentimentfeedback",
    "functionName": "PostSpeechandtextanalyticsSentimentfeedback",
    "signature": "PostSpeechandtextanalyticsSentimentfeedback(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Sentimentfeedback",
        "required": "true"
      }
    ],
    "return": "Sentimentfeedback",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Sentimentfeedback // The SentimentFeedback to create\n// Create a Speech & Text Analytics SentimentFeedback\ndata, response, err := apiInstance.PostSpeechandtextanalyticsSentimentfeedback(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSpeechandtextanalyticsSentimentfeedback: %v\\n\", err)\n}"
  },
  "postspeechandtextanalyticstopics": {
    "operationId": "postspeechandtextanalyticstopics",
    "functionName": "PostSpeechandtextanalyticsTopics",
    "signature": "PostSpeechandtextanalyticsTopics(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Topicrequest",
        "required": "true"
      }
    ],
    "return": "Topic",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Topicrequest // The topic to create\n// Create new Speech & Text Analytics topic\ndata, response, err := apiInstance.PostSpeechandtextanalyticsTopics(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSpeechandtextanalyticsTopics: %v\\n\", err)\n}"
  },
  "postspeechandtextanalyticstopicspublishjobs": {
    "operationId": "postspeechandtextanalyticstopicspublishjobs",
    "functionName": "PostSpeechandtextanalyticsTopicsPublishjobs",
    "signature": "PostSpeechandtextanalyticsTopicsPublishjobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Topicjobrequest",
        "required": "true"
      }
    ],
    "return": "Topicjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Topicjobrequest // The publish topics job to create\n// Create new Speech & Text Analytics publish topics job\ndata, response, err := apiInstance.PostSpeechandtextanalyticsTopicsPublishjobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostSpeechandtextanalyticsTopicsPublishjobs: %v\\n\", err)\n}"
  },
  "putspeechandtextanalyticsdictionaryfeedbackdictionaryfeedbackid": {
    "operationId": "putspeechandtextanalyticsdictionaryfeedbackdictionaryfeedbackid",
    "functionName": "PutSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId",
    "signature": "PutSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId(dictionaryFeedbackId, body)",
    "parameters": [
      {
        "name": "dictionaryFeedbackId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dictionaryfeedback",
        "required": "false"
      }
    ],
    "return": "Dictionaryfeedback",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar dictionaryFeedbackId string // The Id of the Dictionary Feedback\nvar body platformclientv2.Dictionaryfeedback // \n// Update existing Speech & Text Analytics dictionary feedback by id\ndata, response, err := apiInstance.PutSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId(dictionaryFeedbackId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutSpeechandtextanalyticsDictionaryfeedbackDictionaryFeedbackId: %v\\n\", err)\n}"
  },
  "putspeechandtextanalyticsprogram": {
    "operationId": "putspeechandtextanalyticsprogram",
    "functionName": "PutSpeechandtextanalyticsProgram",
    "signature": "PutSpeechandtextanalyticsProgram(programId, body)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Programrequest",
        "required": "true"
      }
    ],
    "return": "Program",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar programId string // The id of the program\nvar body platformclientv2.Programrequest // The program to update\n// Update existing Speech & Text Analytics program\ndata, response, err := apiInstance.PutSpeechandtextanalyticsProgram(programId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutSpeechandtextanalyticsProgram: %v\\n\", err)\n}"
  },
  "putspeechandtextanalyticsprogrammappings": {
    "operationId": "putspeechandtextanalyticsprogrammappings",
    "functionName": "PutSpeechandtextanalyticsProgramMappings",
    "signature": "PutSpeechandtextanalyticsProgramMappings(programId, body)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Programmappingsrequest",
        "required": "true"
      }
    ],
    "return": "Programmappings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar programId string // The id of the program\nvar body platformclientv2.Programmappingsrequest // The program to set mappings for\n// Set Speech & Text Analytics program mappings to queues and flows\ndata, response, err := apiInstance.PutSpeechandtextanalyticsProgramMappings(programId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutSpeechandtextanalyticsProgramMappings: %v\\n\", err)\n}"
  },
  "putspeechandtextanalyticsprogramtranscriptionengines": {
    "operationId": "putspeechandtextanalyticsprogramtranscriptionengines",
    "functionName": "PutSpeechandtextanalyticsProgramTranscriptionengines",
    "signature": "PutSpeechandtextanalyticsProgramTranscriptionengines(programId, body)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Transcriptionenginesrequest",
        "required": "true"
      }
    ],
    "return": "Programtranscriptionengines",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar programId string // The id of the program\nvar body platformclientv2.Transcriptionenginesrequest // Program transcription engine setting\n// Update transcription engine settings of a program\ndata, response, err := apiInstance.PutSpeechandtextanalyticsProgramTranscriptionengines(programId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutSpeechandtextanalyticsProgramTranscriptionengines: %v\\n\", err)\n}"
  },
  "putspeechandtextanalyticssettings": {
    "operationId": "putspeechandtextanalyticssettings",
    "functionName": "PutSpeechandtextanalyticsSettings",
    "signature": "PutSpeechandtextanalyticsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Speechtextanalyticssettingsrequest",
        "required": "true"
      }
    ],
    "return": "Speechtextanalyticssettingsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar body platformclientv2.Speechtextanalyticssettingsrequest // Speech And Text Analytics Settings\n// Update Speech And Text Analytics Settings\ndata, response, err := apiInstance.PutSpeechandtextanalyticsSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutSpeechandtextanalyticsSettings: %v\\n\", err)\n}"
  },
  "putspeechandtextanalyticstopic": {
    "operationId": "putspeechandtextanalyticstopic",
    "functionName": "PutSpeechandtextanalyticsTopic",
    "signature": "PutSpeechandtextanalyticsTopic(topicId, body)",
    "parameters": [
      {
        "name": "topicId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Topicrequest",
        "required": "true"
      }
    ],
    "return": "Topic",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewSpeechTextAnalyticsApiWithConfig(config)\n\nvar topicId string // The id of the topic\nvar body platformclientv2.Topicrequest // The topic to update\n// Update existing Speech & Text Analytics topic\ndata, response, err := apiInstance.PutSpeechandtextanalyticsTopic(topicId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutSpeechandtextanalyticsTopic: %v\\n\", err)\n}"
  },
  "deletestationassociateduser": {
    "operationId": "deletestationassociateduser",
    "functionName": "DeleteStationAssociateduser",
    "signature": "DeleteStationAssociateduser(stationId)",
    "parameters": [
      {
        "name": "stationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewStationsApiWithConfig(config)\n\nvar stationId string // Station ID\n// Unassigns the user assigned to this station\nresponse, err := apiInstance.DeleteStationAssociateduser(stationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteStationAssociateduser: %v\\n\", err)\n}"
  },
  "getstation": {
    "operationId": "getstation",
    "functionName": "GetStation",
    "signature": "GetStation(stationId)",
    "parameters": [
      {
        "name": "stationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Station",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewStationsApiWithConfig(config)\n\nvar stationId string // Station ID\n// Get station.\ndata, response, err := apiInstance.GetStation(stationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetStation: %v\\n\", err)\n}"
  },
  "getstations": {
    "operationId": "getstations",
    "functionName": "GetStations",
    "signature": "GetStations(pageSize, pageNumber, sortBy, name, userSelectable, webRtcUserId, id, lineAppearanceId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "userSelectable",
        "type": "string",
        "required": "false"
      },
      {
        "name": "webRtcUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "string",
        "required": "false"
      },
      {
        "name": "lineAppearanceId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Stationentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewStationsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar name string // Name\nvar userSelectable string // True for stations that the user can select otherwise false\nvar webRtcUserId string // Filter for the webRtc station of the webRtcUserId\nvar id string // Comma separated list of stationIds\nvar lineAppearanceId string // lineAppearanceId\n// Get the list of available stations.\ndata, response, err := apiInstance.GetStations(pageSize, pageNumber, sortBy, name, userSelectable, webRtcUserId, id, lineAppearanceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetStations: %v\\n\", err)\n}"
  },
  "deletetaskmanagementworkbin": {
    "operationId": "deletetaskmanagementworkbin",
    "functionName": "DeleteTaskmanagementWorkbin",
    "signature": "DeleteTaskmanagementWorkbin(workbinId)",
    "parameters": [
      {
        "name": "workbinId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workbinId string // Workbin ID\n// Delete a workbin\nresponse, err := apiInstance.DeleteTaskmanagementWorkbin(workbinId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTaskmanagementWorkbin: %v\\n\", err)\n}"
  },
  "deletetaskmanagementworkitem": {
    "operationId": "deletetaskmanagementworkitem",
    "functionName": "DeleteTaskmanagementWorkitem",
    "signature": "DeleteTaskmanagementWorkitem(workitemId)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\n// Delete a workitem\nresponse, err := apiInstance.DeleteTaskmanagementWorkitem(workitemId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTaskmanagementWorkitem: %v\\n\", err)\n}"
  },
  "deletetaskmanagementworkitemsschema": {
    "operationId": "deletetaskmanagementworkitemsschema",
    "functionName": "DeleteTaskmanagementWorkitemsSchema",
    "signature": "DeleteTaskmanagementWorkitemsSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar schemaId string // Schema ID\n// Delete a schema\nresponse, err := apiInstance.DeleteTaskmanagementWorkitemsSchema(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTaskmanagementWorkitemsSchema: %v\\n\", err)\n}"
  },
  "deletetaskmanagementworktype": {
    "operationId": "deletetaskmanagementworktype",
    "functionName": "DeleteTaskmanagementWorktype",
    "signature": "DeleteTaskmanagementWorktype(worktypeId)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\n// Delete a worktype\nresponse, err := apiInstance.DeleteTaskmanagementWorktype(worktypeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTaskmanagementWorktype: %v\\n\", err)\n}"
  },
  "deletetaskmanagementworktypestatus": {
    "operationId": "deletetaskmanagementworktypestatus",
    "functionName": "DeleteTaskmanagementWorktypeStatus",
    "signature": "DeleteTaskmanagementWorktypeStatus(worktypeId, statusId)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "statusId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\nvar statusId string // Status id\n// Delete a status\nresponse, err := apiInstance.DeleteTaskmanagementWorktypeStatus(worktypeId, statusId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTaskmanagementWorktypeStatus: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkbin": {
    "operationId": "gettaskmanagementworkbin",
    "functionName": "GetTaskmanagementWorkbin",
    "signature": "GetTaskmanagementWorkbin(workbinId)",
    "parameters": [
      {
        "name": "workbinId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Workbin",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workbinId string // Workbin ID\n// Get a workbin\ndata, response, err := apiInstance.GetTaskmanagementWorkbin(workbinId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkbin: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkbinhistory": {
    "operationId": "gettaskmanagementworkbinhistory",
    "functionName": "GetTaskmanagementWorkbinHistory",
    "signature": "GetTaskmanagementWorkbinHistory(workbinId, after, pageSize, sortOrder)",
    "parameters": [
      {
        "name": "workbinId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workbinchangelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workbinId string // Workbin ID\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize int // Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200.\nvar sortOrder string // Ascending or descending sort order\n// Get a listing of a workbin's attribute change history\ndata, response, err := apiInstance.GetTaskmanagementWorkbinHistory(workbinId, after, pageSize, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkbinHistory: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkbinversion": {
    "operationId": "gettaskmanagementworkbinversion",
    "functionName": "GetTaskmanagementWorkbinVersion",
    "signature": "GetTaskmanagementWorkbinVersion(workbinId, entityVersion)",
    "parameters": [
      {
        "name": "workbinId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "entityVersion",
        "type": "int",
        "required": "true"
      }
    ],
    "return": "Workbinversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workbinId string // Workbin ID\nvar entityVersion int // Workbin version\n// Get a version of a workbin\ndata, response, err := apiInstance.GetTaskmanagementWorkbinVersion(workbinId, entityVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkbinVersion: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkbinversions": {
    "operationId": "gettaskmanagementworkbinversions",
    "functionName": "GetTaskmanagementWorkbinVersions",
    "signature": "GetTaskmanagementWorkbinVersions(workbinId, after, pageSize, sortOrder)",
    "parameters": [
      {
        "name": "workbinId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workbinversionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workbinId string // Workbin ID\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize int // Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200.\nvar sortOrder string // Ascending or descending sort order\n// Get all versions of a workbin\ndata, response, err := apiInstance.GetTaskmanagementWorkbinVersions(workbinId, after, pageSize, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkbinVersions: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitem": {
    "operationId": "gettaskmanagementworkitem",
    "functionName": "GetTaskmanagementWorkitem",
    "signature": "GetTaskmanagementWorkitem(workitemId, expands)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expands",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workitem",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\nvar expands string // Which fields to expand. Comma separated if more than one.\n// Get a workitem\ndata, response, err := apiInstance.GetTaskmanagementWorkitem(workitemId, expands)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitem: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitemhistory": {
    "operationId": "gettaskmanagementworkitemhistory",
    "functionName": "GetTaskmanagementWorkitemHistory",
    "signature": "GetTaskmanagementWorkitemHistory(workitemId, after, pageSize, sortOrder)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workitemchangelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize int // Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200.\nvar sortOrder string // Ascending or descending sort order\n// Get a listing of a workitem's attribute change history\ndata, response, err := apiInstance.GetTaskmanagementWorkitemHistory(workitemId, after, pageSize, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitemHistory: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitemuserwrapups": {
    "operationId": "gettaskmanagementworkitemuserwrapups",
    "functionName": "GetTaskmanagementWorkitemUserWrapups",
    "signature": "GetTaskmanagementWorkitemUserWrapups(workitemId, userId, expands, after, pageSize, sortOrder)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expands",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workitemwrapup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // The ID of the Workitem.\nvar userId string // The ID of the user\nvar expands string // Which fields, if any, to expand.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize int // Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 50.\nvar sortOrder string // Ascending or descending sort order\n// Get all wrapup codes added for the given user for a workitem.\ndata, response, err := apiInstance.GetTaskmanagementWorkitemUserWrapups(workitemId, userId, expands, after, pageSize, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitemUserWrapups: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitemversion": {
    "operationId": "gettaskmanagementworkitemversion",
    "functionName": "GetTaskmanagementWorkitemVersion",
    "signature": "GetTaskmanagementWorkitemVersion(workitemId, entityVersion)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "entityVersion",
        "type": "int",
        "required": "true"
      }
    ],
    "return": "Workitemversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\nvar entityVersion int // Workitem version\n// Get a version of a workitem\ndata, response, err := apiInstance.GetTaskmanagementWorkitemVersion(workitemId, entityVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitemVersion: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitemversions": {
    "operationId": "gettaskmanagementworkitemversions",
    "functionName": "GetTaskmanagementWorkitemVersions",
    "signature": "GetTaskmanagementWorkitemVersions(workitemId, after, pageSize, sortOrder)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workitemversionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize int // Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200.\nvar sortOrder string // Ascending or descending sort order\n// Get all versions of a workitem\ndata, response, err := apiInstance.GetTaskmanagementWorkitemVersions(workitemId, after, pageSize, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitemVersions: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitemwrapups": {
    "operationId": "gettaskmanagementworkitemwrapups",
    "functionName": "GetTaskmanagementWorkitemWrapups",
    "signature": "GetTaskmanagementWorkitemWrapups(workitemId, expands, after, pageSize, sortOrder)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expands",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Workitemwrapupentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // The ID of the Workitem.\nvar expands string // Which fields, if any, to expand.\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize int // Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 50.\nvar sortOrder string // Ascending or descending sort order\n// Get all wrapup codes added for all users for a workitem.\ndata, response, err := apiInstance.GetTaskmanagementWorkitemWrapups(workitemId, expands, after, pageSize, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitemWrapups: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitemsschema": {
    "operationId": "gettaskmanagementworkitemsschema",
    "functionName": "GetTaskmanagementWorkitemsSchema",
    "signature": "GetTaskmanagementWorkitemsSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar schemaId string // Schema ID\n// Get a schema\ndata, response, err := apiInstance.GetTaskmanagementWorkitemsSchema(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitemsSchema: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitemsschemaversion": {
    "operationId": "gettaskmanagementworkitemsschemaversion",
    "functionName": "GetTaskmanagementWorkitemsSchemaVersion",
    "signature": "GetTaskmanagementWorkitemsSchemaVersion(schemaId, versionId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar schemaId string // Schema ID\nvar versionId string // Schema version\n// Get a specific version of a schema\ndata, response, err := apiInstance.GetTaskmanagementWorkitemsSchemaVersion(schemaId, versionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitemsSchemaVersion: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitemsschemaversions": {
    "operationId": "gettaskmanagementworkitemsschemaversions",
    "functionName": "GetTaskmanagementWorkitemsSchemaVersions",
    "signature": "GetTaskmanagementWorkitemsSchemaVersions(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar schemaId string // Schema ID\n// Get all versions of a schema\ndata, response, err := apiInstance.GetTaskmanagementWorkitemsSchemaVersions(schemaId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitemsSchemaVersions: %v\\n\", err)\n}"
  },
  "gettaskmanagementworkitemsschemas": {
    "operationId": "gettaskmanagementworkitemsschemas",
    "functionName": "GetTaskmanagementWorkitemsSchemas",
    "signature": "GetTaskmanagementWorkitemsSchemas()",
    "return": "Dataschemalisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\n// Get a list of schemas.\ndata, response, err := apiInstance.GetTaskmanagementWorkitemsSchemas()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorkitemsSchemas: %v\\n\", err)\n}"
  },
  "gettaskmanagementworktype": {
    "operationId": "gettaskmanagementworktype",
    "functionName": "GetTaskmanagementWorktype",
    "signature": "GetTaskmanagementWorktype(worktypeId, expands)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expands",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Worktype",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\nvar expands []string // Which fields, if any, to expand.\n// Get a worktype\ndata, response, err := apiInstance.GetTaskmanagementWorktype(worktypeId, expands)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorktype: %v\\n\", err)\n}"
  },
  "gettaskmanagementworktypehistory": {
    "operationId": "gettaskmanagementworktypehistory",
    "functionName": "GetTaskmanagementWorktypeHistory",
    "signature": "GetTaskmanagementWorktypeHistory(worktypeId, after, pageSize, sortOrder)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Worktypechangelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize int // Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200.\nvar sortOrder string // Ascending or descending sort order\n// Get a listing of a worktype's attribute change history\ndata, response, err := apiInstance.GetTaskmanagementWorktypeHistory(worktypeId, after, pageSize, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorktypeHistory: %v\\n\", err)\n}"
  },
  "gettaskmanagementworktypestatus": {
    "operationId": "gettaskmanagementworktypestatus",
    "functionName": "GetTaskmanagementWorktypeStatus",
    "signature": "GetTaskmanagementWorktypeStatus(worktypeId, statusId)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "statusId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Workitemstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\nvar statusId string // Status id\n// Get a status\ndata, response, err := apiInstance.GetTaskmanagementWorktypeStatus(worktypeId, statusId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorktypeStatus: %v\\n\", err)\n}"
  },
  "gettaskmanagementworktypeversion": {
    "operationId": "gettaskmanagementworktypeversion",
    "functionName": "GetTaskmanagementWorktypeVersion",
    "signature": "GetTaskmanagementWorktypeVersion(worktypeId, entityVersion)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "entityVersion",
        "type": "int",
        "required": "true"
      }
    ],
    "return": "Worktypeversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\nvar entityVersion int // Worktype version\n// Get a version of a worktype\ndata, response, err := apiInstance.GetTaskmanagementWorktypeVersion(worktypeId, entityVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorktypeVersion: %v\\n\", err)\n}"
  },
  "gettaskmanagementworktypeversions": {
    "operationId": "gettaskmanagementworktypeversions",
    "functionName": "GetTaskmanagementWorktypeVersions",
    "signature": "GetTaskmanagementWorktypeVersions(worktypeId, after, pageSize, sortOrder)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Worktypeversionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\nvar after string // The cursor that points to the end of the set of entities that has been returned.\nvar pageSize int // Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200.\nvar sortOrder string // Ascending or descending sort order\n// Get all versions of a worktype\ndata, response, err := apiInstance.GetTaskmanagementWorktypeVersions(worktypeId, after, pageSize, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTaskmanagementWorktypeVersions: %v\\n\", err)\n}"
  },
  "patchtaskmanagementworkbin": {
    "operationId": "patchtaskmanagementworkbin",
    "functionName": "PatchTaskmanagementWorkbin",
    "signature": "PatchTaskmanagementWorkbin(workbinId, body)",
    "parameters": [
      {
        "name": "workbinId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workbinupdate",
        "required": "true"
      }
    ],
    "return": "Workbin",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workbinId string // Workbin ID\nvar body platformclientv2.Workbinupdate // Json with attributes and their new values: {\\\"description\\\":\\\"new description\\\", \\\"name\\\":\\\"new name\\\"}.\n// Update the attributes of a workbin\ndata, response, err := apiInstance.PatchTaskmanagementWorkbin(workbinId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchTaskmanagementWorkbin: %v\\n\", err)\n}"
  },
  "patchtaskmanagementworkitem": {
    "operationId": "patchtaskmanagementworkitem",
    "functionName": "PatchTaskmanagementWorkitem",
    "signature": "PatchTaskmanagementWorkitem(workitemId, body)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workitemupdate",
        "required": "true"
      }
    ],
    "return": "Workitem",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\nvar body platformclientv2.Workitemupdate // Workitem\n// Update the attributes of a workitem\ndata, response, err := apiInstance.PatchTaskmanagementWorkitem(workitemId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchTaskmanagementWorkitem: %v\\n\", err)\n}"
  },
  "patchtaskmanagementworkitemassignment": {
    "operationId": "patchtaskmanagementworkitemassignment",
    "functionName": "PatchTaskmanagementWorkitemAssignment",
    "signature": "PatchTaskmanagementWorkitemAssignment(workitemId, body)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workitemmanualassign",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\nvar body platformclientv2.Workitemmanualassign // Targeted user\n// Attempts to manually assign a specified workitem to a specified user.  Ignores bullseye ring, PAR score, skills, and languages.\nresponse, err := apiInstance.PatchTaskmanagementWorkitemAssignment(workitemId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchTaskmanagementWorkitemAssignment: %v\\n\", err)\n}"
  },
  "patchtaskmanagementworkitemuserwrapups": {
    "operationId": "patchtaskmanagementworkitemuserwrapups",
    "functionName": "PatchTaskmanagementWorkitemUserWrapups",
    "signature": "PatchTaskmanagementWorkitemUserWrapups(workitemId, userId, body)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workitemwrapupupdate",
        "required": "true"
      }
    ],
    "return": "Workitemwrapup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // The ID of the Workitem.\nvar userId string // The ID of the user\nvar body platformclientv2.Workitemwrapupupdate // Request body to add/remove a wrapup code for a workitem\n// Add/Remove a wrapup code for a given user in a workitem.\ndata, response, err := apiInstance.PatchTaskmanagementWorkitemUserWrapups(workitemId, userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchTaskmanagementWorkitemUserWrapups: %v\\n\", err)\n}"
  },
  "patchtaskmanagementworkitemusersmewrapups": {
    "operationId": "patchtaskmanagementworkitemusersmewrapups",
    "functionName": "PatchTaskmanagementWorkitemUsersMeWrapups",
    "signature": "PatchTaskmanagementWorkitemUsersMeWrapups(workitemId, body)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workitemwrapupupdate",
        "required": "true"
      }
    ],
    "return": "Workitemwrapup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // The ID of the Workitem.\nvar body platformclientv2.Workitemwrapupupdate // Request body to add/remove the wrapup code for workitem\n// Add/Remove a wrapup code for the current user in a workitem.\ndata, response, err := apiInstance.PatchTaskmanagementWorkitemUsersMeWrapups(workitemId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchTaskmanagementWorkitemUsersMeWrapups: %v\\n\", err)\n}"
  },
  "patchtaskmanagementworktype": {
    "operationId": "patchtaskmanagementworktype",
    "functionName": "PatchTaskmanagementWorktype",
    "signature": "PatchTaskmanagementWorktype(worktypeId, body)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Worktypeupdate",
        "required": "false"
      }
    ],
    "return": "Worktype",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\nvar body platformclientv2.Worktypeupdate // body\n// Update the attributes of a worktype\ndata, response, err := apiInstance.PatchTaskmanagementWorktype(worktypeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchTaskmanagementWorktype: %v\\n\", err)\n}"
  },
  "patchtaskmanagementworktypestatus": {
    "operationId": "patchtaskmanagementworktypestatus",
    "functionName": "PatchTaskmanagementWorktypeStatus",
    "signature": "PatchTaskmanagementWorktypeStatus(worktypeId, statusId, body)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "statusId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workitemstatusupdate",
        "required": "false"
      }
    ],
    "return": "Workitemstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\nvar statusId string // Status id\nvar body platformclientv2.Workitemstatusupdate // body\n// Update the attributes of a status\ndata, response, err := apiInstance.PatchTaskmanagementWorktypeStatus(worktypeId, statusId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchTaskmanagementWorktypeStatus: %v\\n\", err)\n}"
  },
  "posttaskmanagementworkbins": {
    "operationId": "posttaskmanagementworkbins",
    "functionName": "PostTaskmanagementWorkbins",
    "signature": "PostTaskmanagementWorkbins(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Workbincreate",
        "required": "false"
      }
    ],
    "return": "Workbin",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar body platformclientv2.Workbincreate // body\n// Create a workbin\ndata, response, err := apiInstance.PostTaskmanagementWorkbins(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorkbins: %v\\n\", err)\n}"
  },
  "posttaskmanagementworkbinsquery": {
    "operationId": "posttaskmanagementworkbinsquery",
    "functionName": "PostTaskmanagementWorkbinsQuery",
    "signature": "PostTaskmanagementWorkbinsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Workbinqueryrequest",
        "required": "true"
      }
    ],
    "return": "Workbinqueryentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar body platformclientv2.Workbinqueryrequest // QueryPostRequest\n// Query for workbins\ndata, response, err := apiInstance.PostTaskmanagementWorkbinsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorkbinsQuery: %v\\n\", err)\n}"
  },
  "posttaskmanagementworkitemacdcancel": {
    "operationId": "posttaskmanagementworkitemacdcancel",
    "functionName": "PostTaskmanagementWorkitemAcdCancel",
    "signature": "PostTaskmanagementWorkitemAcdCancel(workitemId)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Workitem",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\n// Cancel the assignment process for a workitem that is currently queued for assignment through ACD.\ndata, response, err := apiInstance.PostTaskmanagementWorkitemAcdCancel(workitemId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorkitemAcdCancel: %v\\n\", err)\n}"
  },
  "posttaskmanagementworkitemdisconnect": {
    "operationId": "posttaskmanagementworkitemdisconnect",
    "functionName": "PostTaskmanagementWorkitemDisconnect",
    "signature": "PostTaskmanagementWorkitemDisconnect(workitemId)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Workitem",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\n// Disconnect the assignee of the workitem\ndata, response, err := apiInstance.PostTaskmanagementWorkitemDisconnect(workitemId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorkitemDisconnect: %v\\n\", err)\n}"
  },
  "posttaskmanagementworkitemterminate": {
    "operationId": "posttaskmanagementworkitemterminate",
    "functionName": "PostTaskmanagementWorkitemTerminate",
    "signature": "PostTaskmanagementWorkitemTerminate(workitemId, body)",
    "parameters": [
      {
        "name": "workitemId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workitemterminate",
        "required": "false"
      }
    ],
    "return": "Workitem",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar workitemId string // Workitem ID\nvar body platformclientv2.Workitemterminate // Terminated request\n// Terminate a workitem\ndata, response, err := apiInstance.PostTaskmanagementWorkitemTerminate(workitemId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorkitemTerminate: %v\\n\", err)\n}"
  },
  "posttaskmanagementworkitems": {
    "operationId": "posttaskmanagementworkitems",
    "functionName": "PostTaskmanagementWorkitems",
    "signature": "PostTaskmanagementWorkitems(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Workitemcreate",
        "required": "true"
      }
    ],
    "return": "Workitem",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar body platformclientv2.Workitemcreate // Workitem\n// Create a workitem\ndata, response, err := apiInstance.PostTaskmanagementWorkitems(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorkitems: %v\\n\", err)\n}"
  },
  "posttaskmanagementworkitemsquery": {
    "operationId": "posttaskmanagementworkitemsquery",
    "functionName": "PostTaskmanagementWorkitemsQuery",
    "signature": "PostTaskmanagementWorkitemsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Workitemquerypostrequest",
        "required": "true"
      }
    ],
    "return": "Workitempostqueryentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar body platformclientv2.Workitemquerypostrequest // WorkitemQueryPostRequest\n// Query for workitems\ndata, response, err := apiInstance.PostTaskmanagementWorkitemsQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorkitemsQuery: %v\\n\", err)\n}"
  },
  "posttaskmanagementworkitemsschemas": {
    "operationId": "posttaskmanagementworkitemsschemas",
    "functionName": "PostTaskmanagementWorkitemsSchemas",
    "signature": "PostTaskmanagementWorkitemsSchemas(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Dataschema",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar body platformclientv2.Dataschema // Schema\n// Create a schema\ndata, response, err := apiInstance.PostTaskmanagementWorkitemsSchemas(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorkitemsSchemas: %v\\n\", err)\n}"
  },
  "posttaskmanagementworktypestatuses": {
    "operationId": "posttaskmanagementworktypestatuses",
    "functionName": "PostTaskmanagementWorktypeStatuses",
    "signature": "PostTaskmanagementWorktypeStatuses(worktypeId, body)",
    "parameters": [
      {
        "name": "worktypeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workitemstatuscreate",
        "required": "false"
      }
    ],
    "return": "Workitemstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar worktypeId string // Worktype id\nvar body platformclientv2.Workitemstatuscreate // body\n// Add a status to a worktype\ndata, response, err := apiInstance.PostTaskmanagementWorktypeStatuses(worktypeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorktypeStatuses: %v\\n\", err)\n}"
  },
  "posttaskmanagementworktypes": {
    "operationId": "posttaskmanagementworktypes",
    "functionName": "PostTaskmanagementWorktypes",
    "signature": "PostTaskmanagementWorktypes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Worktypecreate",
        "required": "false"
      }
    ],
    "return": "Worktype",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar body platformclientv2.Worktypecreate // body\n// Create a worktype\ndata, response, err := apiInstance.PostTaskmanagementWorktypes(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorktypes: %v\\n\", err)\n}"
  },
  "posttaskmanagementworktypesquery": {
    "operationId": "posttaskmanagementworktypesquery",
    "functionName": "PostTaskmanagementWorktypesQuery",
    "signature": "PostTaskmanagementWorktypesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Worktypequeryrequest",
        "required": "true"
      }
    ],
    "return": "Worktypequeryentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar body platformclientv2.Worktypequeryrequest // QueryPostRequest\n// Query for worktypes\ndata, response, err := apiInstance.PostTaskmanagementWorktypesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTaskmanagementWorktypesQuery: %v\\n\", err)\n}"
  },
  "puttaskmanagementworkitemsschema": {
    "operationId": "puttaskmanagementworkitemsschema",
    "functionName": "PutTaskmanagementWorkitemsSchema",
    "signature": "PutTaskmanagementWorkitemsSchema(schemaId, body)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Dataschema",
        "required": "true"
      }
    ],
    "return": "Dataschema",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTaskManagementApiWithConfig(config)\n\nvar schemaId string // Schema ID\nvar body platformclientv2.Dataschema // Data Schema\n// Update a schema\ndata, response, err := apiInstance.PutTaskmanagementWorkitemsSchema(schemaId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTaskmanagementWorkitemsSchema: %v\\n\", err)\n}"
  },
  "deleteteam": {
    "operationId": "deleteteam",
    "functionName": "DeleteTeam",
    "signature": "DeleteTeam(teamId)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar teamId string // Team ID\n// Delete team\nresponse, err := apiInstance.DeleteTeam(teamId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTeam: %v\\n\", err)\n}"
  },
  "deleteteammembers": {
    "operationId": "deleteteammembers",
    "functionName": "DeleteTeamMembers",
    "signature": "DeleteTeamMembers(teamId, id)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "id",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar teamId string // Team ID\nvar id string // Comma separated list of member ids to remove\n// Delete team members\nresponse, err := apiInstance.DeleteTeamMembers(teamId, id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTeamMembers: %v\\n\", err)\n}"
  },
  "getteam": {
    "operationId": "getteam",
    "functionName": "GetTeam",
    "signature": "GetTeam(teamId)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Team",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar teamId string // Team ID\n// Get team\ndata, response, err := apiInstance.GetTeam(teamId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTeam: %v\\n\", err)\n}"
  },
  "getteammembers": {
    "operationId": "getteammembers",
    "functionName": "GetTeamMembers",
    "signature": "GetTeamMembers(teamId, pageSize, before, after, expand)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Teammemberentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar teamId string // Team ID\nvar pageSize int // Page size\nvar before string // The cursor that points to the previous item in the complete list of teams\nvar after string // The cursor that points to the next item in the complete list of teams\nvar expand string // Expand the name on each user\n// Get team membership\ndata, response, err := apiInstance.GetTeamMembers(teamId, pageSize, before, after, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTeamMembers: %v\\n\", err)\n}"
  },
  "getteams": {
    "operationId": "getteams",
    "functionName": "GetTeams",
    "signature": "GetTeams(pageSize, name, after, before, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Teamentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar name string // Return only teams whose names start with this value (case-insensitive matching)\nvar after string // The cursor that points to the next item in the complete list of teams\nvar before string // The cursor that points to the previous item in the complete list of teams\nvar expand string // Expand the name on each user\n// Get Team listing\ndata, response, err := apiInstance.GetTeams(pageSize, name, after, before, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTeams: %v\\n\", err)\n}"
  },
  "patchteam": {
    "operationId": "patchteam",
    "functionName": "PatchTeam",
    "signature": "PatchTeam(teamId, body)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Team",
        "required": "true"
      }
    ],
    "return": "Team",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar teamId string // Team ID\nvar body platformclientv2.Team // Team\n// Update team\ndata, response, err := apiInstance.PatchTeam(teamId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchTeam: %v\\n\", err)\n}"
  },
  "postteammembers": {
    "operationId": "postteammembers",
    "functionName": "PostTeamMembers",
    "signature": "PostTeamMembers(teamId, body)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Teammembers",
        "required": "true"
      }
    ],
    "return": "Teammemberaddlistingresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar teamId string // Team ID\nvar body platformclientv2.Teammembers // TeamMembers\n// Add team members\ndata, response, err := apiInstance.PostTeamMembers(teamId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTeamMembers: %v\\n\", err)\n}"
  },
  "postteams": {
    "operationId": "postteams",
    "functionName": "PostTeams",
    "signature": "PostTeams(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Team",
        "required": "true"
      }
    ],
    "return": "Team",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTeamsApiWithConfig(config)\n\nvar body platformclientv2.Team // Team\n// Create a team\ndata, response, err := apiInstance.PostTeams(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTeams: %v\\n\", err)\n}"
  },
  "gettelephonymediaregions": {
    "operationId": "gettelephonymediaregions",
    "functionName": "GetTelephonyMediaregions",
    "signature": "GetTelephonyMediaregions()",
    "return": "Mediaregions",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyApiWithConfig(config)\n\n// Retrieve the list of AWS regions media can stream through.\ndata, response, err := apiInstance.GetTelephonyMediaregions()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyMediaregions: %v\\n\", err)\n}"
  },
  "gettelephonysipmessagesconversation": {
    "operationId": "gettelephonysipmessagesconversation",
    "functionName": "GetTelephonySipmessagesConversation",
    "signature": "GetTelephonySipmessagesConversation(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Callmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyApiWithConfig(config)\n\nvar conversationId string // Conversation id\n// Get a SIP message.\ndata, response, err := apiInstance.GetTelephonySipmessagesConversation(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonySipmessagesConversation: %v\\n\", err)\n}"
  },
  "gettelephonysipmessagesconversationheaders": {
    "operationId": "gettelephonysipmessagesconversationheaders",
    "functionName": "GetTelephonySipmessagesConversationHeaders",
    "signature": "GetTelephonySipmessagesConversationHeaders(conversationId, keys)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "keys",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Callheader",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyApiWithConfig(config)\n\nvar conversationId string // Conversation id\nvar keys []string // comma-separated list of header identifiers to query. e.g. ruri,to,from\n// Get SIP headers.\ndata, response, err := apiInstance.GetTelephonySipmessagesConversationHeaders(conversationId, keys)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonySipmessagesConversationHeaders: %v\\n\", err)\n}"
  },
  "gettelephonysiptraces": {
    "operationId": "gettelephonysiptraces",
    "functionName": "GetTelephonySiptraces",
    "signature": "GetTelephonySiptraces(dateStart, dateEnd, callId, toUser, fromUser, conversationId)",
    "parameters": [
      {
        "name": "dateStart",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "dateEnd",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "callId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "toUser",
        "type": "string",
        "required": "false"
      },
      {
        "name": "fromUser",
        "type": "string",
        "required": "false"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Sipsearchresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyApiWithConfig(config)\n\nvar dateStart time.Time // Start date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\nvar dateEnd time.Time // End date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\nvar callId string // unique identification of the placed call\nvar toUser string // User to who the call was placed\nvar fromUser string // user who placed the call\nvar conversationId string // Unique identification of the conversation\n// Fetch SIP metadata\ndata, response, err := apiInstance.GetTelephonySiptraces(dateStart, dateEnd, callId, toUser, fromUser, conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonySiptraces: %v\\n\", err)\n}"
  },
  "gettelephonysiptracesdownloaddownloadid": {
    "operationId": "gettelephonysiptracesdownloaddownloadid",
    "functionName": "GetTelephonySiptracesDownloadDownloadId",
    "signature": "GetTelephonySiptracesDownloadDownloadId(downloadId)",
    "parameters": [
      {
        "name": "downloadId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Signedurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyApiWithConfig(config)\n\nvar downloadId string // unique id for the downloaded file in S3\n// Get signed S3 URL for a pcap download\ndata, response, err := apiInstance.GetTelephonySiptracesDownloadDownloadId(downloadId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonySiptracesDownloadDownloadId: %v\\n\", err)\n}"
  },
  "posttelephonysiptracesdownload": {
    "operationId": "posttelephonysiptracesdownload",
    "functionName": "PostTelephonySiptracesDownload",
    "signature": "PostTelephonySiptracesDownload(sIPSearchPublicRequest)",
    "parameters": [
      {
        "name": "sIPSearchPublicRequest",
        "type": "Sipsearchpublicrequest",
        "required": "true"
      }
    ],
    "return": "Sipdownloadresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyApiWithConfig(config)\n\nvar sIPSearchPublicRequest platformclientv2.Sipsearchpublicrequest // \n// Request a download of a pcap file to S3\ndata, response, err := apiInstance.PostTelephonySiptracesDownload(sIPSearchPublicRequest)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonySiptracesDownload: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedge": {
    "operationId": "deletetelephonyprovidersedge",
    "functionName": "DeleteTelephonyProvidersEdge",
    "signature": "DeleteTelephonyProvidersEdge(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\n// Delete a edge.\nresponse, err := apiInstance.DeleteTelephonyProvidersEdge(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdge: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgelogicalinterface": {
    "operationId": "deletetelephonyprovidersedgelogicalinterface",
    "functionName": "DeleteTelephonyProvidersEdgeLogicalinterface",
    "signature": "DeleteTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "interfaceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar interfaceId string // Interface ID\n// Delete an edge logical interface\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgeLogicalinterface: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgesoftwareupdate": {
    "operationId": "deletetelephonyprovidersedgesoftwareupdate",
    "functionName": "DeleteTelephonyProvidersEdgeSoftwareupdate",
    "signature": "DeleteTelephonyProvidersEdgeSoftwareupdate(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\n// Cancels any in-progress update for this edge.\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgeSoftwareupdate(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgeSoftwareupdate: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgescertificateauthority": {
    "operationId": "deletetelephonyprovidersedgescertificateauthority",
    "functionName": "DeleteTelephonyProvidersEdgesCertificateauthority",
    "signature": "DeleteTelephonyProvidersEdgesCertificateauthority(certificateId)",
    "parameters": [
      {
        "name": "certificateId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar certificateId string // Certificate ID\n// Delete a certificate authority.\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgesCertificateauthority(certificateId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgesCertificateauthority: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgesdidpool": {
    "operationId": "deletetelephonyprovidersedgesdidpool",
    "functionName": "DeleteTelephonyProvidersEdgesDidpool",
    "signature": "DeleteTelephonyProvidersEdgesDidpool(didPoolId)",
    "parameters": [
      {
        "name": "didPoolId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar didPoolId string // DID pool ID\n// Delete a DID Pool by ID.\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgesDidpool(didPoolId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgesDidpool: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgesedgegroup": {
    "operationId": "deletetelephonyprovidersedgesedgegroup",
    "functionName": "DeleteTelephonyProvidersEdgesEdgegroup",
    "signature": "DeleteTelephonyProvidersEdgesEdgegroup(edgeGroupId)",
    "parameters": [
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeGroupId string // Edge group ID\n// Delete an edge group.\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgesEdgegroup(edgeGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgesEdgegroup: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgesextensionpool": {
    "operationId": "deletetelephonyprovidersedgesextensionpool",
    "functionName": "DeleteTelephonyProvidersEdgesExtensionpool",
    "signature": "DeleteTelephonyProvidersEdgesExtensionpool(extensionPoolId)",
    "parameters": [
      {
        "name": "extensionPoolId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar extensionPoolId string // Extension pool ID\n// Delete an extension pool by ID\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgesExtensionpool(extensionPoolId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgesExtensionpool: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgesphone": {
    "operationId": "deletetelephonyprovidersedgesphone",
    "functionName": "DeleteTelephonyProvidersEdgesPhone",
    "signature": "DeleteTelephonyProvidersEdgesPhone(phoneId)",
    "parameters": [
      {
        "name": "phoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar phoneId string // Phone ID\n// Delete a Phone by ID\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgesPhone(phoneId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgesPhone: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgesphonebasesetting": {
    "operationId": "deletetelephonyprovidersedgesphonebasesetting",
    "functionName": "DeleteTelephonyProvidersEdgesPhonebasesetting",
    "signature": "DeleteTelephonyProvidersEdgesPhonebasesetting(phoneBaseId)",
    "parameters": [
      {
        "name": "phoneBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar phoneBaseId string // Phone base ID\n// Delete a Phone Base Settings by ID\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgesPhonebasesetting(phoneBaseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgesPhonebasesetting: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgessite": {
    "operationId": "deletetelephonyprovidersedgessite",
    "functionName": "DeleteTelephonyProvidersEdgesSite",
    "signature": "DeleteTelephonyProvidersEdgesSite(siteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\n// Delete a Site by ID\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgesSite(siteId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgesSite: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgessiteoutboundroute": {
    "operationId": "deletetelephonyprovidersedgessiteoutboundroute",
    "functionName": "DeleteTelephonyProvidersEdgesSiteOutboundroute",
    "signature": "DeleteTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar outboundRouteId string // Outbound route ID\n// Delete Outbound Route\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgesSiteOutboundroute: %v\\n\", err)\n}"
  },
  "deletetelephonyprovidersedgestrunkbasesetting": {
    "operationId": "deletetelephonyprovidersedgestrunkbasesetting",
    "functionName": "DeleteTelephonyProvidersEdgesTrunkbasesetting",
    "signature": "DeleteTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId)",
    "parameters": [
      {
        "name": "trunkBaseSettingsId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar trunkBaseSettingsId string // Trunk Base ID\n// Delete a Trunk Base Settings object by ID\nresponse, err := apiInstance.DeleteTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTelephonyProvidersEdgesTrunkbasesetting: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedge": {
    "operationId": "gettelephonyprovidersedge",
    "functionName": "GetTelephonyProvidersEdge",
    "signature": "GetTelephonyProvidersEdge(edgeId, expand)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Edge",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar expand []string // Fields to expand in the response, comma-separated\n// Get edge.\ndata, response, err := apiInstance.GetTelephonyProvidersEdge(edgeId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdge: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgediagnosticnslookup": {
    "operationId": "gettelephonyprovidersedgediagnosticnslookup",
    "functionName": "GetTelephonyProvidersEdgeDiagnosticNslookup",
    "signature": "GetTelephonyProvidersEdgeDiagnosticNslookup(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Edgenetworkdiagnosticresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\n// Get networking-related information from an Edge for a target IP or host.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeDiagnosticNslookup(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeDiagnosticNslookup: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgediagnosticping": {
    "operationId": "gettelephonyprovidersedgediagnosticping",
    "functionName": "GetTelephonyProvidersEdgeDiagnosticPing",
    "signature": "GetTelephonyProvidersEdgeDiagnosticPing(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Edgenetworkdiagnosticresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\n// Get networking-related information from an Edge for a target IP or host.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeDiagnosticPing(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeDiagnosticPing: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgediagnosticroute": {
    "operationId": "gettelephonyprovidersedgediagnosticroute",
    "functionName": "GetTelephonyProvidersEdgeDiagnosticRoute",
    "signature": "GetTelephonyProvidersEdgeDiagnosticRoute(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Edgenetworkdiagnosticresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\n// Get networking-related information from an Edge for a target IP or host.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeDiagnosticRoute(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeDiagnosticRoute: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgediagnostictracepath": {
    "operationId": "gettelephonyprovidersedgediagnostictracepath",
    "functionName": "GetTelephonyProvidersEdgeDiagnosticTracepath",
    "signature": "GetTelephonyProvidersEdgeDiagnosticTracepath(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Edgenetworkdiagnosticresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\n// Get networking-related information from an Edge for a target IP or host.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeDiagnosticTracepath(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeDiagnosticTracepath: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgelogicalinterface": {
    "operationId": "gettelephonyprovidersedgelogicalinterface",
    "functionName": "GetTelephonyProvidersEdgeLogicalinterface",
    "signature": "GetTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId, expand)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "interfaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Domainlogicalinterface",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar interfaceId string // Interface ID\nvar expand []string // Field to expand in the response\n// Get an edge logical interface\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeLogicalinterface: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgelogicalinterfaces": {
    "operationId": "gettelephonyprovidersedgelogicalinterfaces",
    "functionName": "GetTelephonyProvidersEdgeLogicalinterfaces",
    "signature": "GetTelephonyProvidersEdgeLogicalinterfaces(edgeId, expand)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Logicalinterfaceentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar expand []string // Field to expand in the response\n// Get edge logical interfaces.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeLogicalinterfaces(edgeId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeLogicalinterfaces: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgelogsjob": {
    "operationId": "gettelephonyprovidersedgelogsjob",
    "functionName": "GetTelephonyProvidersEdgeLogsJob",
    "signature": "GetTelephonyProvidersEdgeLogsJob(edgeId, jobId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Edgelogsjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar jobId string // Job ID\n// Get an Edge logs job.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeLogsJob(edgeId, jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeLogsJob: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgemetrics": {
    "operationId": "gettelephonyprovidersedgemetrics",
    "functionName": "GetTelephonyProvidersEdgeMetrics",
    "signature": "GetTelephonyProvidersEdgeMetrics(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Edgemetrics",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\n// Get the edge metrics.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeMetrics(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeMetrics: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgephysicalinterface": {
    "operationId": "gettelephonyprovidersedgephysicalinterface",
    "functionName": "GetTelephonyProvidersEdgePhysicalinterface",
    "signature": "GetTelephonyProvidersEdgePhysicalinterface(edgeId, interfaceId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "interfaceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Domainphysicalinterface",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar interfaceId string // Interface ID\n// Get edge physical interface.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgePhysicalinterface(edgeId, interfaceId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgePhysicalinterface: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgephysicalinterfaces": {
    "operationId": "gettelephonyprovidersedgephysicalinterfaces",
    "functionName": "GetTelephonyProvidersEdgePhysicalinterfaces",
    "signature": "GetTelephonyProvidersEdgePhysicalinterfaces(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Physicalinterfaceentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\n// Retrieve a list of all configured physical interfaces from a specific edge.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgePhysicalinterfaces(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgePhysicalinterfaces: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesetuppackage": {
    "operationId": "gettelephonyprovidersedgesetuppackage",
    "functionName": "GetTelephonyProvidersEdgeSetuppackage",
    "signature": "GetTelephonyProvidersEdgeSetuppackage(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Vmpairinginfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\n// Get the setup package for a locally deployed edge device. This is needed to complete the setup process for the virtual edge.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeSetuppackage(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeSetuppackage: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesoftwareupdate": {
    "operationId": "gettelephonyprovidersedgesoftwareupdate",
    "functionName": "GetTelephonyProvidersEdgeSoftwareupdate",
    "signature": "GetTelephonyProvidersEdgeSoftwareupdate(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Domainedgesoftwareupdatedto",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\n// Gets software update status information about any edge.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeSoftwareupdate(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeSoftwareupdate: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesoftwareversions": {
    "operationId": "gettelephonyprovidersedgesoftwareversions",
    "functionName": "GetTelephonyProvidersEdgeSoftwareversions",
    "signature": "GetTelephonyProvidersEdgeSoftwareversions(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Domainedgesoftwareversiondtoentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\n// Gets all the available software versions for this edge.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeSoftwareversions(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeSoftwareversions: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgetrunks": {
    "operationId": "gettelephonyprovidersedgetrunks",
    "functionName": "GetTelephonyProvidersEdgeTrunks",
    "signature": "GetTelephonyProvidersEdgeTrunks(edgeId, pageNumber, pageSize, sortBy, sortOrder, trunkBaseId, trunkType)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trunkBaseId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trunkType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Trunkentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Value by which to sort\nvar sortOrder string // Sort order\nvar trunkBaseId string // Filter by Trunk Base Ids\nvar trunkType string // Filter by a Trunk type\n// Get the list of available trunks for the given Edge.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgeTrunks(edgeId, pageNumber, pageSize, sortBy, sortOrder, trunkBaseId, trunkType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgeTrunks: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedges": {
    "operationId": "gettelephonyprovidersedges",
    "functionName": "GetTelephonyProvidersEdges",
    "signature": "GetTelephonyProvidersEdges(pageSize, pageNumber, name, siteId, edgeGroupId, sortBy, managed, showCloudMedia)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "siteId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "showCloudMedia",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Edgeentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar name string // Name\nvar siteId string // Filter by site.id\nvar edgeGroupId string // Filter by edgeGroup.id\nvar sortBy string // Sort by\nvar managed bool // Filter by managed\nvar showCloudMedia bool // True to show the cloud media devices in the result.\n// Get the list of edges.\ndata, response, err := apiInstance.GetTelephonyProvidersEdges(pageSize, pageNumber, name, siteId, edgeGroupId, sortBy, managed, showCloudMedia)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdges: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesavailablelanguages": {
    "operationId": "gettelephonyprovidersedgesavailablelanguages",
    "functionName": "GetTelephonyProvidersEdgesAvailablelanguages",
    "signature": "GetTelephonyProvidersEdgesAvailablelanguages()",
    "return": "Availablelanguagelist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\n// Get the list of available languages.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesAvailablelanguages()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesAvailablelanguages: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgescertificateauthorities": {
    "operationId": "gettelephonyprovidersedgescertificateauthorities",
    "functionName": "GetTelephonyProvidersEdgesCertificateauthorities",
    "signature": "GetTelephonyProvidersEdgesCertificateauthorities()",
    "return": "Certificateauthorityentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\n// Get the list of certificate authorities.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesCertificateauthorities()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesCertificateauthorities: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgescertificateauthority": {
    "operationId": "gettelephonyprovidersedgescertificateauthority",
    "functionName": "GetTelephonyProvidersEdgesCertificateauthority",
    "signature": "GetTelephonyProvidersEdgesCertificateauthority(certificateId)",
    "parameters": [
      {
        "name": "certificateId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Domaincertificateauthority",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar certificateId string // Certificate ID\n// Get a certificate authority.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesCertificateauthority(certificateId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesCertificateauthority: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesdid": {
    "operationId": "gettelephonyprovidersedgesdid",
    "functionName": "GetTelephonyProvidersEdgesDid",
    "signature": "GetTelephonyProvidersEdgesDid(didId)",
    "parameters": [
      {
        "name": "didId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Did",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar didId string // DID ID\n// Get a DID by ID.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesDid(didId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesDid: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesdidpool": {
    "operationId": "gettelephonyprovidersedgesdidpool",
    "functionName": "GetTelephonyProvidersEdgesDidpool",
    "signature": "GetTelephonyProvidersEdgesDidpool(didPoolId)",
    "parameters": [
      {
        "name": "didPoolId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Didpool",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar didPoolId string // DID pool ID\n// Get a DID Pool by ID.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesDidpool(didPoolId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesDidpool: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesdidpools": {
    "operationId": "gettelephonyprovidersedgesdidpools",
    "functionName": "GetTelephonyProvidersEdgesDidpools",
    "signature": "GetTelephonyProvidersEdgesDidpools(pageSize, pageNumber, sortBy, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Didpoolentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar id []string // Filter by a specific list of ID's\n// Get a listing of DID Pools\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesDidpools(pageSize, pageNumber, sortBy, id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesDidpools: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesdidpoolsdids": {
    "operationId": "gettelephonyprovidersedgesdidpoolsdids",
    "functionName": "GetTelephonyProvidersEdgesDidpoolsDids",
    "signature": "GetTelephonyProvidersEdgesDidpoolsDids(varType, id, numberMatch, pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "varType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "numberMatch",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Didnumberentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar varType string // The type of numbers to return.\nvar id []string // Filter by a specific list of DID Pools.  If this is not provided, numbers from all DID Pools will be returned.\nvar numberMatch string // A number to filter the results by.\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Sort order\n// Get a listing of unassigned and/or assigned numbers in a set of DID Pools.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesDidpoolsDids(varType, id, numberMatch, pageSize, pageNumber, sortOrder)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesDidpoolsDids: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesdids": {
    "operationId": "gettelephonyprovidersedgesdids",
    "functionName": "GetTelephonyProvidersEdgesDids",
    "signature": "GetTelephonyProvidersEdgesDids(pageSize, pageNumber, sortBy, sortOrder, phoneNumber, ownerId, didPoolId, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "phoneNumber",
        "type": "string",
        "required": "false"
      },
      {
        "name": "ownerId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "didPoolId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Didentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar phoneNumber string // Filter by phoneNumber\nvar ownerId string // Filter by the owner of a phone number\nvar didPoolId string // Filter by the DID Pool assignment\nvar id []string // Filter by a specific list of ID's\n// Get a listing of DIDs\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesDids(pageSize, pageNumber, sortBy, sortOrder, phoneNumber, ownerId, didPoolId, id)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesDids: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesedgegroup": {
    "operationId": "gettelephonyprovidersedgesedgegroup",
    "functionName": "GetTelephonyProvidersEdgesEdgegroup",
    "signature": "GetTelephonyProvidersEdgesEdgegroup(edgeGroupId, expand)",
    "parameters": [
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Edgegroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeGroupId string // Edge group ID\nvar expand []string // Fields to expand in the response\n// Get edge group.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesEdgegroup(edgeGroupId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesEdgegroup: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesedgegroupedgetrunkbase": {
    "operationId": "gettelephonyprovidersedgesedgegroupedgetrunkbase",
    "functionName": "GetTelephonyProvidersEdgesEdgegroupEdgetrunkbase",
    "signature": "GetTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId, edgetrunkbaseId)",
    "parameters": [
      {
        "name": "edgegroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "edgetrunkbaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Edgetrunkbase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgegroupId string // Edge Group ID\nvar edgetrunkbaseId string // Edge Trunk Base ID\n// Gets the edge trunk base associated with the edge group\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId, edgetrunkbaseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesEdgegroupEdgetrunkbase: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesedgegroups": {
    "operationId": "gettelephonyprovidersedgesedgegroups",
    "functionName": "GetTelephonyProvidersEdgesEdgegroups",
    "signature": "GetTelephonyProvidersEdgesEdgegroups(pageSize, pageNumber, name, sortBy, managed)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Edgegroupentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar name string // Name\nvar sortBy string // Sort by\nvar managed bool // Filter by managed\n// Get the list of edge groups.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesEdgegroups(pageSize, pageNumber, name, sortBy, managed)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesEdgegroups: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesedgeversionreport": {
    "operationId": "gettelephonyprovidersedgesedgeversionreport",
    "functionName": "GetTelephonyProvidersEdgesEdgeversionreport",
    "signature": "GetTelephonyProvidersEdgesEdgeversionreport()",
    "return": "Edgeversionreport",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\n// Get the edge version report.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesEdgeversionreport()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesEdgeversionreport: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesexpired": {
    "operationId": "gettelephonyprovidersedgesexpired",
    "functionName": "GetTelephonyProvidersEdgesExpired",
    "signature": "GetTelephonyProvidersEdgesExpired()",
    "return": "Expirededgelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\n// List of edges more than 4 edge versions behind the latest software.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesExpired()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesExpired: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesextension": {
    "operationId": "gettelephonyprovidersedgesextension",
    "functionName": "GetTelephonyProvidersEdgesExtension",
    "signature": "GetTelephonyProvidersEdgesExtension(extensionId)",
    "parameters": [
      {
        "name": "extensionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Extension",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar extensionId string // Extension ID\n// Get an extension by ID.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesExtension(extensionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesExtension: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesextensionpool": {
    "operationId": "gettelephonyprovidersedgesextensionpool",
    "functionName": "GetTelephonyProvidersEdgesExtensionpool",
    "signature": "GetTelephonyProvidersEdgesExtensionpool(extensionPoolId)",
    "parameters": [
      {
        "name": "extensionPoolId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Extensionpool",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar extensionPoolId string // Extension pool ID\n// Get an extension pool by ID\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesExtensionpool(extensionPoolId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesExtensionpool: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesextensionpools": {
    "operationId": "gettelephonyprovidersedgesextensionpools",
    "functionName": "GetTelephonyProvidersEdgesExtensionpools",
    "signature": "GetTelephonyProvidersEdgesExtensionpools(pageSize, pageNumber, sortBy, number)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "number",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Extensionpoolentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar number string // Deprecated, filtering by number not supported\n// Get a listing of extension pools\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesExtensionpools(pageSize, pageNumber, sortBy, number)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesExtensionpools: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesextensionpoolsdivisionviews": {
    "operationId": "gettelephonyprovidersedgesextensionpoolsdivisionviews",
    "functionName": "GetTelephonyProvidersEdgesExtensionpoolsDivisionviews",
    "signature": "GetTelephonyProvidersEdgesExtensionpoolsDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Extensionpooldivisionviewentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar id []string // ID of the Extension Pools to filter by.\nvar name string // Name of the Extension Pools to filter by.\nvar divisionId []string // List of divisionIds on which to filter.\n// Get a pageable list of basic extension pool objects filterable by query parameters.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesExtensionpoolsDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesExtensionpoolsDivisionviews: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesextensions": {
    "operationId": "gettelephonyprovidersedgesextensions",
    "functionName": "GetTelephonyProvidersEdgesExtensions",
    "signature": "GetTelephonyProvidersEdgesExtensions(pageSize, pageNumber, sortBy, sortOrder, number)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "number",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Extensionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar number string // Filter by number\n// Get a listing of extensions\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesExtensions(pageSize, pageNumber, sortBy, sortOrder, number)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesExtensions: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesline": {
    "operationId": "gettelephonyprovidersedgesline",
    "functionName": "GetTelephonyProvidersEdgesLine",
    "signature": "GetTelephonyProvidersEdgesLine(lineId)",
    "parameters": [
      {
        "name": "lineId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Line",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar lineId string // Line ID\n// Get a Line by ID\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesLine(lineId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesLine: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgeslinebasesetting": {
    "operationId": "gettelephonyprovidersedgeslinebasesetting",
    "functionName": "GetTelephonyProvidersEdgesLinebasesetting",
    "signature": "GetTelephonyProvidersEdgesLinebasesetting(lineBaseId)",
    "parameters": [
      {
        "name": "lineBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Linebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar lineBaseId string // Line base ID\n// Get a line base settings object by ID\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesLinebasesetting(lineBaseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesLinebasesetting: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgeslinebasesettings": {
    "operationId": "gettelephonyprovidersedgeslinebasesettings",
    "functionName": "GetTelephonyProvidersEdgesLinebasesettings",
    "signature": "GetTelephonyProvidersEdgesLinebasesettings(pageNumber, pageSize, sortBy, sortOrder, expand)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Linebaseentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Value by which to sort\nvar sortOrder string // Sort order\nvar expand []string // Fields to expand in the response, comma-separated\n// Get a listing of line base settings objects\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesLinebasesettings(pageNumber, pageSize, sortBy, sortOrder, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesLinebasesettings: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgeslines": {
    "operationId": "gettelephonyprovidersedgeslines",
    "functionName": "GetTelephonyProvidersEdgesLines",
    "signature": "GetTelephonyProvidersEdgesLines(pageSize, pageNumber, name, sortBy, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Lineentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar name string // Name\nvar sortBy string // Value by which to sort\nvar expand []string // Fields to expand in the response, comma-separated. The edgeGroup value is deprecated.\n// Get a list of Lines\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesLines(pageSize, pageNumber, name, sortBy, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesLines: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgeslinestemplate": {
    "operationId": "gettelephonyprovidersedgeslinestemplate",
    "functionName": "GetTelephonyProvidersEdgesLinesTemplate",
    "signature": "GetTelephonyProvidersEdgesLinesTemplate(lineBaseSettingsId)",
    "parameters": [
      {
        "name": "lineBaseSettingsId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Line",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar lineBaseSettingsId string // The id of a Line Base Settings object upon which to base this Line\n// Get a Line instance template based on a Line Base Settings object. This object can then be modified and saved as a new Line instance\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesLinesTemplate(lineBaseSettingsId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesLinesTemplate: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgeslogicalinterfaces": {
    "operationId": "gettelephonyprovidersedgeslogicalinterfaces",
    "functionName": "GetTelephonyProvidersEdgesLogicalinterfaces",
    "signature": "GetTelephonyProvidersEdgesLogicalinterfaces(edgeIds, expand)",
    "parameters": [
      {
        "name": "edgeIds",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Logicalinterfaceentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeIds string // Comma separated list of Edge Id's\nvar expand []string // Field to expand in the response\n// Get edge logical interfaces.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesLogicalinterfaces(edgeIds, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesLogicalinterfaces: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesmediastatisticsconversation": {
    "operationId": "gettelephonyprovidersedgesmediastatisticsconversation",
    "functionName": "GetTelephonyProvidersEdgesMediastatisticsConversation",
    "signature": "GetTelephonyProvidersEdgesMediastatisticsConversation(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Mediastatisticslisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar conversationId string // Identifier of the conversation\n// Get media endpoint statistics events.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesMediastatisticsConversation(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesMediastatisticsConversation: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesmediastatisticsconversationcommunication": {
    "operationId": "gettelephonyprovidersedgesmediastatisticsconversationcommunication",
    "functionName": "GetTelephonyProvidersEdgesMediastatisticsConversationCommunication",
    "signature": "GetTelephonyProvidersEdgesMediastatisticsConversationCommunication(conversationId, communicationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Mediastatistics",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar conversationId string // Identifier of the conversation\nvar communicationId string // Identifier of the media session\n// Get media endpoint statistics event.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesMediastatisticsConversationCommunication(conversationId, communicationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesMediastatisticsConversationCommunication: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesmetrics": {
    "operationId": "gettelephonyprovidersedgesmetrics",
    "functionName": "GetTelephonyProvidersEdgesMetrics",
    "signature": "GetTelephonyProvidersEdgesMetrics(edgeIds)",
    "parameters": [
      {
        "name": "edgeIds",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Edgemetrics",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeIds string // Comma separated list of Edge Id's. Maximum of 100 edge ids allowed.\n// Get the metrics for a list of edges.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesMetrics(edgeIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesMetrics: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesoutboundroute": {
    "operationId": "gettelephonyprovidersedgesoutboundroute",
    "functionName": "GetTelephonyProvidersEdgesOutboundroute",
    "signature": "GetTelephonyProvidersEdgesOutboundroute(outboundRouteId)",
    "parameters": [
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outboundroute",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar outboundRouteId string // Outbound route ID\n// Get outbound route\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesOutboundroute(outboundRouteId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesOutboundroute: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesoutboundroutes": {
    "operationId": "gettelephonyprovidersedgesoutboundroutes",
    "functionName": "GetTelephonyProvidersEdgesOutboundroutes",
    "signature": "GetTelephonyProvidersEdgesOutboundroutes(pageSize, pageNumber, name, siteId, externalTrunkBasesIds, sortBy)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "siteId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "externalTrunkBasesIds",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Outboundrouteentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar name string // Name\nvar siteId string // Filter by site.id\nvar externalTrunkBasesIds string // Filter by externalTrunkBases.ids\nvar sortBy string // Sort by\n// Get outbound routes\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesOutboundroutes(pageSize, pageNumber, name, siteId, externalTrunkBasesIds, sortBy)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesOutboundroutes: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesphone": {
    "operationId": "gettelephonyprovidersedgesphone",
    "functionName": "GetTelephonyProvidersEdgesPhone",
    "signature": "GetTelephonyProvidersEdgesPhone(phoneId)",
    "parameters": [
      {
        "name": "phoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar phoneId string // Phone ID\n// Get a Phone by ID\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesPhone(phoneId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesPhone: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesphonebasesetting": {
    "operationId": "gettelephonyprovidersedgesphonebasesetting",
    "functionName": "GetTelephonyProvidersEdgesPhonebasesetting",
    "signature": "GetTelephonyProvidersEdgesPhonebasesetting(phoneBaseId)",
    "parameters": [
      {
        "name": "phoneBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Phonebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar phoneBaseId string // Phone base ID\n// Get a Phone Base Settings object by ID\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesPhonebasesetting(phoneBaseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesPhonebasesetting: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesphonebasesettings": {
    "operationId": "gettelephonyprovidersedgesphonebasesettings",
    "functionName": "GetTelephonyProvidersEdgesPhonebasesettings",
    "signature": "GetTelephonyProvidersEdgesPhonebasesettings(pageSize, pageNumber, sortBy, sortOrder, expand, name)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Phonebaseentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Value by which to sort\nvar sortOrder string // Sort order\nvar expand []string // Fields to expand in the response, comma-separated\nvar name string // Name\n// Get a list of Phone Base Settings objects\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesPhonebasesettings(pageSize, pageNumber, sortBy, sortOrder, expand, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesPhonebasesettings: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesphonebasesettingsavailablemetabases": {
    "operationId": "gettelephonyprovidersedgesphonebasesettingsavailablemetabases",
    "functionName": "GetTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases",
    "signature": "GetTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Phonemetabaseentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of available makes and models to create a new Phone Base Settings\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesphonebasesettingstemplate": {
    "operationId": "gettelephonyprovidersedgesphonebasesettingstemplate",
    "functionName": "GetTelephonyProvidersEdgesPhonebasesettingsTemplate",
    "signature": "GetTelephonyProvidersEdgesPhonebasesettingsTemplate(phoneMetabaseId)",
    "parameters": [
      {
        "name": "phoneMetabaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Phonebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar phoneMetabaseId string // The id of a metabase object upon which to base this Phone Base Settings\n// Get a Phone Base Settings instance template from a given make and model. This object can then be modified and saved as a new Phone Base Settings instance\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesPhonebasesettingsTemplate(phoneMetabaseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesPhonebasesettingsTemplate: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesphones": {
    "operationId": "gettelephonyprovidersedgesphones",
    "functionName": "GetTelephonyProvidersEdgesPhones",
    "signature": "GetTelephonyProvidersEdgesPhones(pageNumber, pageSize, sortBy, sortOrder, siteId, webRtcUserId, phoneBaseSettingsId, linesLoggedInUserId, linesDefaultForUserId, phoneHardwareId, linesId, linesName, name, statusOperationalStatus, secondaryStatusOperationalStatus, expand, fields)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "siteId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "webRtcUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "phoneBaseSettingsId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "linesLoggedInUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "linesDefaultForUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "phoneHardwareId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "linesId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "linesName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "statusOperationalStatus",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secondaryStatusOperationalStatus",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "fields",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Phoneentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // The field to sort by\nvar sortOrder string // Sort order\nvar siteId string // Filter by site.id\nvar webRtcUserId string // Filter by webRtcUser.id\nvar phoneBaseSettingsId string // Filter by phoneBaseSettings.id\nvar linesLoggedInUserId string // Filter by lines.loggedInUser.id\nvar linesDefaultForUserId string // Filter by lines.defaultForUser.id\nvar phoneHardwareId string // Filter by phone_hardwareId\nvar linesId string // Filter by lines.id\nvar linesName string // Filter by lines.name\nvar name string // Name of the Phone to filter by, comma-separated\nvar statusOperationalStatus string // The primary status to filter by\nvar secondaryStatusOperationalStatus string // The secondary status to filter by\nvar expand []string // Fields to expand in the response, comma-separated\nvar fields []string // Fields and properties to get, comma-separated\n// Get a list of Phone Instances. A maximum of 10,000 results is returned when filtering the results or sorting by a field other than the ID. Sorting by only the ID has no result limit. Each filter supports a wildcard, *, as a value to search for partial values.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesPhones(pageNumber, pageSize, sortBy, sortOrder, siteId, webRtcUserId, phoneBaseSettingsId, linesLoggedInUserId, linesDefaultForUserId, phoneHardwareId, linesId, linesName, name, statusOperationalStatus, secondaryStatusOperationalStatus, expand, fields)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesPhones: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesphonestemplate": {
    "operationId": "gettelephonyprovidersedgesphonestemplate",
    "functionName": "GetTelephonyProvidersEdgesPhonesTemplate",
    "signature": "GetTelephonyProvidersEdgesPhonesTemplate(phoneBaseSettingsId)",
    "parameters": [
      {
        "name": "phoneBaseSettingsId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar phoneBaseSettingsId string // The id of a Phone Base Settings object upon which to base this Phone\n// Get a Phone instance template based on a Phone Base Settings object. This object can then be modified and saved as a new Phone instance\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesPhonesTemplate(phoneBaseSettingsId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesPhonesTemplate: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgesphysicalinterfaces": {
    "operationId": "gettelephonyprovidersedgesphysicalinterfaces",
    "functionName": "GetTelephonyProvidersEdgesPhysicalinterfaces",
    "signature": "GetTelephonyProvidersEdgesPhysicalinterfaces(edgeIds)",
    "parameters": [
      {
        "name": "edgeIds",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Physicalinterfaceentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeIds string // Comma separated list of Edge Id's\n// Get physical interfaces for edges.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesPhysicalinterfaces(edgeIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesPhysicalinterfaces: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgessite": {
    "operationId": "gettelephonyprovidersedgessite",
    "functionName": "GetTelephonyProvidersEdgesSite",
    "signature": "GetTelephonyProvidersEdgesSite(siteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Site",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\n// Get a Site by ID.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesSite(siteId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesSite: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgessitenumberplan": {
    "operationId": "gettelephonyprovidersedgessitenumberplan",
    "functionName": "GetTelephonyProvidersEdgesSiteNumberplan",
    "signature": "GetTelephonyProvidersEdgesSiteNumberplan(siteId, numberPlanId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "numberPlanId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Numberplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar numberPlanId string // Number Plan ID\n// Get a Number Plan by ID.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesSiteNumberplan(siteId, numberPlanId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesSiteNumberplan: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgessitenumberplans": {
    "operationId": "gettelephonyprovidersedgessitenumberplans",
    "functionName": "GetTelephonyProvidersEdgesSiteNumberplans",
    "signature": "GetTelephonyProvidersEdgesSiteNumberplans(siteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Numberplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\n// Get the list of Number Plans for this Site. Only fetches the first 200 records.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesSiteNumberplans(siteId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesSiteNumberplans: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgessitenumberplansclassifications": {
    "operationId": "gettelephonyprovidersedgessitenumberplansclassifications",
    "functionName": "GetTelephonyProvidersEdgesSiteNumberplansClassifications",
    "signature": "GetTelephonyProvidersEdgesSiteNumberplansClassifications(siteId, classification)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "classification",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "[]string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar classification string // Classification\n// Get a list of Classifications for this Site\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesSiteNumberplansClassifications(siteId, classification)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesSiteNumberplansClassifications: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgessiteoutboundroute": {
    "operationId": "gettelephonyprovidersedgessiteoutboundroute",
    "functionName": "GetTelephonyProvidersEdgesSiteOutboundroute",
    "signature": "GetTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outboundroutebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar outboundRouteId string // Outbound route ID\n// Get an outbound route\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesSiteOutboundroute: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgessiteoutboundroutes": {
    "operationId": "gettelephonyprovidersedgessiteoutboundroutes",
    "functionName": "GetTelephonyProvidersEdgesSiteOutboundroutes",
    "signature": "GetTelephonyProvidersEdgesSiteOutboundroutes(siteId, pageSize, pageNumber, name, externalTrunkBasesIds, sortBy)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "externalTrunkBasesIds",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Outboundroutebaseentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar name string // Name\nvar externalTrunkBasesIds string // externalTrunkBases.ids\nvar sortBy string // Sort by\n// Get outbound routes\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesSiteOutboundroutes(siteId, pageSize, pageNumber, name, externalTrunkBasesIds, sortBy)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesSiteOutboundroutes: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgessitesiteconnections": {
    "operationId": "gettelephonyprovidersedgessitesiteconnections",
    "functionName": "GetTelephonyProvidersEdgesSiteSiteconnections",
    "signature": "GetTelephonyProvidersEdgesSiteSiteconnections(siteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Siteconnections",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\n// Get site connections for a site.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesSiteSiteconnections(siteId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesSiteSiteconnections: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgessites": {
    "operationId": "gettelephonyprovidersedgessites",
    "functionName": "GetTelephonyProvidersEdgesSites",
    "signature": "GetTelephonyProvidersEdgesSites(pageSize, pageNumber, sortBy, sortOrder, name, locationId, managed)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "locationId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Siteentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortBy string // Sort by\nvar sortOrder string // Sort order\nvar name string // Name\nvar locationId string // Location Id\nvar managed bool // Filter by managed\n// Get the list of Sites.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesSites(pageSize, pageNumber, sortBy, sortOrder, name, locationId, managed)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesSites: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestimezones": {
    "operationId": "gettelephonyprovidersedgestimezones",
    "functionName": "GetTelephonyProvidersEdgesTimezones",
    "signature": "GetTelephonyProvidersEdgesTimezones(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Timezoneentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get a list of Edge-compatible time zones\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTimezones(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTimezones: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestrunk": {
    "operationId": "gettelephonyprovidersedgestrunk",
    "functionName": "GetTelephonyProvidersEdgesTrunk",
    "signature": "GetTelephonyProvidersEdgesTrunk(trunkId)",
    "parameters": [
      {
        "name": "trunkId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trunk",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar trunkId string // Trunk ID\n// Get a Trunk by ID\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTrunk(trunkId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTrunk: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestrunkmetrics": {
    "operationId": "gettelephonyprovidersedgestrunkmetrics",
    "functionName": "GetTelephonyProvidersEdgesTrunkMetrics",
    "signature": "GetTelephonyProvidersEdgesTrunkMetrics(trunkId)",
    "parameters": [
      {
        "name": "trunkId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trunkmetrics",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar trunkId string // Trunk Id\n// Get the trunk metrics.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTrunkMetrics(trunkId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTrunkMetrics: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestrunkbasesetting": {
    "operationId": "gettelephonyprovidersedgestrunkbasesetting",
    "functionName": "GetTelephonyProvidersEdgesTrunkbasesetting",
    "signature": "GetTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId, ignoreHidden)",
    "parameters": [
      {
        "name": "trunkBaseSettingsId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "ignoreHidden",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Trunkbase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar trunkBaseSettingsId string // Trunk Base ID\nvar ignoreHidden bool // Set this to true to not receive trunk properties that are meant to be hidden or for internal system usage only.\n// Get a Trunk Base Settings object by ID\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId, ignoreHidden)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTrunkbasesetting: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestrunkbasesettings": {
    "operationId": "gettelephonyprovidersedgestrunkbasesettings",
    "functionName": "GetTelephonyProvidersEdgesTrunkbasesettings",
    "signature": "GetTelephonyProvidersEdgesTrunkbasesettings(pageNumber, pageSize, sortBy, sortOrder, recordingEnabled, ignoreHidden, managed, expand, name)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "recordingEnabled",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "ignoreHidden",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Trunkbaseentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Value by which to sort\nvar sortOrder string // Sort order\nvar recordingEnabled bool // Filter trunks by recording enabled\nvar ignoreHidden bool // Set this to true to not receive trunk properties that are meant to be hidden or for internal system usage only.\nvar managed bool // Filter by managed\nvar expand []string // Fields to expand in the response, comma-separated\nvar name string // Name of the TrunkBase to filter by\n// Get Trunk Base Settings listing\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTrunkbasesettings(pageNumber, pageSize, sortBy, sortOrder, recordingEnabled, ignoreHidden, managed, expand, name)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTrunkbasesettings: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestrunkbasesettingsavailablemetabases": {
    "operationId": "gettelephonyprovidersedgestrunkbasesettingsavailablemetabases",
    "functionName": "GetTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases",
    "signature": "GetTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases(varType, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "varType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Trunkmetabaseentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar varType string // \nvar pageSize int // \nvar pageNumber int // \n// Get a list of available makes and models to create a new Trunk Base Settings\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases(varType, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestrunkbasesettingstemplate": {
    "operationId": "gettelephonyprovidersedgestrunkbasesettingstemplate",
    "functionName": "GetTelephonyProvidersEdgesTrunkbasesettingsTemplate",
    "signature": "GetTelephonyProvidersEdgesTrunkbasesettingsTemplate(trunkMetabaseId)",
    "parameters": [
      {
        "name": "trunkMetabaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trunkbase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar trunkMetabaseId string // The id of a metabase object upon which to base this Trunk Base Settings\n// Get a Trunk Base Settings instance template from a given make and model. This object can then be modified and saved as a new Trunk Base Settings instance\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTrunkbasesettingsTemplate(trunkMetabaseId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTrunkbasesettingsTemplate: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestrunks": {
    "operationId": "gettelephonyprovidersedgestrunks",
    "functionName": "GetTelephonyProvidersEdgesTrunks",
    "signature": "GetTelephonyProvidersEdgesTrunks(pageNumber, pageSize, sortBy, sortOrder, edgeId, trunkBaseId, trunkType)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "edgeId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trunkBaseId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trunkType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Trunkentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar pageNumber int // Page number\nvar pageSize int // Page size\nvar sortBy string // Value by which to sort\nvar sortOrder string // Sort order\nvar edgeId string // Filter by Edge Ids\nvar trunkBaseId string // Filter by Trunk Base Ids\nvar trunkType string // Filter by a Trunk type\n// Get the list of available trunks.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTrunks(pageNumber, pageSize, sortBy, sortOrder, edgeId, trunkBaseId, trunkType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTrunks: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestrunksmetrics": {
    "operationId": "gettelephonyprovidersedgestrunksmetrics",
    "functionName": "GetTelephonyProvidersEdgesTrunksMetrics",
    "signature": "GetTelephonyProvidersEdgesTrunksMetrics(trunkIds)",
    "parameters": [
      {
        "name": "trunkIds",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]Trunkmetrics",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar trunkIds string // Comma separated list of Trunk Id's\n// Get the metrics for a list of trunks.\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTrunksMetrics(trunkIds)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTrunksMetrics: %v\\n\", err)\n}"
  },
  "gettelephonyprovidersedgestrunkswithrecording": {
    "operationId": "gettelephonyprovidersedgestrunkswithrecording",
    "functionName": "GetTelephonyProvidersEdgesTrunkswithrecording",
    "signature": "GetTelephonyProvidersEdgesTrunkswithrecording(trunkType)",
    "parameters": [
      {
        "name": "trunkType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Trunkrecordingenabledcount",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar trunkType string // The type of this trunk base.\n// Get Counts of trunks that have recording disabled or enabled\ndata, response, err := apiInstance.GetTelephonyProvidersEdgesTrunkswithrecording(trunkType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTelephonyProvidersEdgesTrunkswithrecording: %v\\n\", err)\n}"
  },
  "patchtelephonyprovidersedgessitesiteconnections": {
    "operationId": "patchtelephonyprovidersedgessitesiteconnections",
    "functionName": "PatchTelephonyProvidersEdgesSiteSiteconnections",
    "signature": "PatchTelephonyProvidersEdgesSiteSiteconnections(siteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Disablesiteconnectionsrequest",
        "required": "true"
      }
    ],
    "return": "Siteconnections",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar body platformclientv2.Disablesiteconnectionsrequest // Site\n// Disable site connections for a site.\ndata, response, err := apiInstance.PatchTelephonyProvidersEdgesSiteSiteconnections(siteId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchTelephonyProvidersEdgesSiteSiteconnections: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgediagnosticnslookup": {
    "operationId": "posttelephonyprovidersedgediagnosticnslookup",
    "functionName": "PostTelephonyProvidersEdgeDiagnosticNslookup",
    "signature": "PostTelephonyProvidersEdgeDiagnosticNslookup(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgenetworkdiagnosticrequest",
        "required": "true"
      }
    ],
    "return": "Edgenetworkdiagnostic",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\nvar body platformclientv2.Edgenetworkdiagnosticrequest // request payload to get network diagnostic\n// Nslookup request command to collect networking-related information from an Edge for a target IP or host.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeDiagnosticNslookup(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeDiagnosticNslookup: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgediagnosticping": {
    "operationId": "posttelephonyprovidersedgediagnosticping",
    "functionName": "PostTelephonyProvidersEdgeDiagnosticPing",
    "signature": "PostTelephonyProvidersEdgeDiagnosticPing(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgenetworkdiagnosticrequest",
        "required": "true"
      }
    ],
    "return": "Edgenetworkdiagnostic",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\nvar body platformclientv2.Edgenetworkdiagnosticrequest // request payload to get network diagnostic\n// Ping Request command to collect networking-related information from an Edge for a target IP or host.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeDiagnosticPing(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeDiagnosticPing: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgediagnosticroute": {
    "operationId": "posttelephonyprovidersedgediagnosticroute",
    "functionName": "PostTelephonyProvidersEdgeDiagnosticRoute",
    "signature": "PostTelephonyProvidersEdgeDiagnosticRoute(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgenetworkdiagnosticrequest",
        "required": "true"
      }
    ],
    "return": "Edgenetworkdiagnostic",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\nvar body platformclientv2.Edgenetworkdiagnosticrequest // request payload to get network diagnostic\n// Route request command to collect networking-related information from an Edge for a target IP or host.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeDiagnosticRoute(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeDiagnosticRoute: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgediagnostictracepath": {
    "operationId": "posttelephonyprovidersedgediagnostictracepath",
    "functionName": "PostTelephonyProvidersEdgeDiagnosticTracepath",
    "signature": "PostTelephonyProvidersEdgeDiagnosticTracepath(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgenetworkdiagnosticrequest",
        "required": "true"
      }
    ],
    "return": "Edgenetworkdiagnostic",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\nvar body platformclientv2.Edgenetworkdiagnosticrequest // request payload to get network diagnostic\n// Tracepath request command to collect networking-related information from an Edge for a target IP or host.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeDiagnosticTracepath(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeDiagnosticTracepath: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgelogicalinterfaces": {
    "operationId": "posttelephonyprovidersedgelogicalinterfaces",
    "functionName": "PostTelephonyProvidersEdgeLogicalinterfaces",
    "signature": "PostTelephonyProvidersEdgeLogicalinterfaces(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Domainlogicalinterface",
        "required": "true"
      }
    ],
    "return": "Domainlogicalinterface",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar body platformclientv2.Domainlogicalinterface // Logical interface\n// Create an edge logical interface.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeLogicalinterfaces(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeLogicalinterfaces: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgelogsjobupload": {
    "operationId": "posttelephonyprovidersedgelogsjobupload",
    "functionName": "PostTelephonyProvidersEdgeLogsJobUpload",
    "signature": "PostTelephonyProvidersEdgeLogsJobUpload(edgeId, jobId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgelogsjobuploadrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar jobId string // Job ID\nvar body platformclientv2.Edgelogsjobuploadrequest // Log upload request\n// Request that the specified fileIds be uploaded from the Edge.\nresponse, err := apiInstance.PostTelephonyProvidersEdgeLogsJobUpload(edgeId, jobId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeLogsJobUpload: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgelogsjobs": {
    "operationId": "posttelephonyprovidersedgelogsjobs",
    "functionName": "PostTelephonyProvidersEdgeLogsJobs",
    "signature": "PostTelephonyProvidersEdgeLogsJobs(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgelogsjobrequest",
        "required": "true"
      }
    ],
    "return": "Edgelogsjobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar body platformclientv2.Edgelogsjobrequest // EdgeLogsJobRequest\n// Create a job to upload a list of Edge logs.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeLogsJobs(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeLogsJobs: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgereboot": {
    "operationId": "posttelephonyprovidersedgereboot",
    "functionName": "PostTelephonyProvidersEdgeReboot",
    "signature": "PostTelephonyProvidersEdgeReboot(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgerebootparameters",
        "required": "false"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar body platformclientv2.Edgerebootparameters // Parameters for the edge reboot\n// Reboot an Edge\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeReboot(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeReboot: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgesoftwareupdate": {
    "operationId": "posttelephonyprovidersedgesoftwareupdate",
    "functionName": "PostTelephonyProvidersEdgeSoftwareupdate",
    "signature": "PostTelephonyProvidersEdgeSoftwareupdate(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Domainedgesoftwareupdatedto",
        "required": "true"
      }
    ],
    "return": "Domainedgesoftwareupdatedto",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar body platformclientv2.Domainedgesoftwareupdatedto // Software update request\n// Starts a software update for this edge.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeSoftwareupdate(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeSoftwareupdate: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgestatuscode": {
    "operationId": "posttelephonyprovidersedgestatuscode",
    "functionName": "PostTelephonyProvidersEdgeStatuscode",
    "signature": "PostTelephonyProvidersEdgeStatuscode(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgeservicestaterequest",
        "required": "false"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar body platformclientv2.Edgeservicestaterequest // Edge Service State\n// Take an Edge in or out of service\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeStatuscode(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeStatuscode: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgeunpair": {
    "operationId": "posttelephonyprovidersedgeunpair",
    "functionName": "PostTelephonyProvidersEdgeUnpair",
    "signature": "PostTelephonyProvidersEdgeUnpair(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge Id\n// Unpair an Edge\ndata, response, err := apiInstance.PostTelephonyProvidersEdgeUnpair(edgeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgeUnpair: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedges": {
    "operationId": "posttelephonyprovidersedges",
    "functionName": "PostTelephonyProvidersEdges",
    "signature": "PostTelephonyProvidersEdges(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Edge",
        "required": "true"
      }
    ],
    "return": "Edge",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Edge // Edge\n// Create an edge.\ndata, response, err := apiInstance.PostTelephonyProvidersEdges(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdges: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgesaddressvalidation": {
    "operationId": "posttelephonyprovidersedgesaddressvalidation",
    "functionName": "PostTelephonyProvidersEdgesAddressvalidation",
    "signature": "PostTelephonyProvidersEdgesAddressvalidation(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Validateaddressrequest",
        "required": "true"
      }
    ],
    "return": "Validateaddressresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Validateaddressrequest // Address\n// Validates a street address\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesAddressvalidation(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesAddressvalidation: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgescertificateauthorities": {
    "operationId": "posttelephonyprovidersedgescertificateauthorities",
    "functionName": "PostTelephonyProvidersEdgesCertificateauthorities",
    "signature": "PostTelephonyProvidersEdgesCertificateauthorities(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Domaincertificateauthority",
        "required": "true"
      }
    ],
    "return": "Domaincertificateauthority",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Domaincertificateauthority // CertificateAuthority\n// Create a certificate authority.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesCertificateauthorities(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesCertificateauthorities: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgesdidpools": {
    "operationId": "posttelephonyprovidersedgesdidpools",
    "functionName": "PostTelephonyProvidersEdgesDidpools",
    "signature": "PostTelephonyProvidersEdgesDidpools(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Didpool",
        "required": "true"
      }
    ],
    "return": "Didpool",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Didpool // DID pool\n// Create a new DID pool\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesDidpools(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesDidpools: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgesedgegroups": {
    "operationId": "posttelephonyprovidersedgesedgegroups",
    "functionName": "PostTelephonyProvidersEdgesEdgegroups",
    "signature": "PostTelephonyProvidersEdgesEdgegroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Edgegroup",
        "required": "true"
      }
    ],
    "return": "Edgegroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Edgegroup // EdgeGroup\n// Create an edge group.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesEdgegroups(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesEdgegroups: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgesextensionpools": {
    "operationId": "posttelephonyprovidersedgesextensionpools",
    "functionName": "PostTelephonyProvidersEdgesExtensionpools",
    "signature": "PostTelephonyProvidersEdgesExtensionpools(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Extensionpool",
        "required": "true"
      }
    ],
    "return": "Extensionpool",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Extensionpool // ExtensionPool\n// Create a new extension pool\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesExtensionpools(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesExtensionpools: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgesphonereboot": {
    "operationId": "posttelephonyprovidersedgesphonereboot",
    "functionName": "PostTelephonyProvidersEdgesPhoneReboot",
    "signature": "PostTelephonyProvidersEdgesPhoneReboot(phoneId)",
    "parameters": [
      {
        "name": "phoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar phoneId string // Phone Id\n// Reboot a Phone\nresponse, err := apiInstance.PostTelephonyProvidersEdgesPhoneReboot(phoneId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesPhoneReboot: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgesphonebasesettings": {
    "operationId": "posttelephonyprovidersedgesphonebasesettings",
    "functionName": "PostTelephonyProvidersEdgesPhonebasesettings",
    "signature": "PostTelephonyProvidersEdgesPhonebasesettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Phonebase",
        "required": "true"
      }
    ],
    "return": "Phonebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Phonebase // Phone base settings\n// Create a new Phone Base Settings object\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesPhonebasesettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesPhonebasesettings: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgesphones": {
    "operationId": "posttelephonyprovidersedgesphones",
    "functionName": "PostTelephonyProvidersEdgesPhones",
    "signature": "PostTelephonyProvidersEdgesPhones(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Phone",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Phone // Phone\n// Create a new Phone\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesPhones(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesPhones: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgesphonesreboot": {
    "operationId": "posttelephonyprovidersedgesphonesreboot",
    "functionName": "PostTelephonyProvidersEdgesPhonesReboot",
    "signature": "PostTelephonyProvidersEdgesPhonesReboot(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Phonesreboot",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Phonesreboot // Phones\n// Reboot Multiple Phones\nresponse, err := apiInstance.PostTelephonyProvidersEdgesPhonesReboot(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesPhonesReboot: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgessiteoutboundroutes": {
    "operationId": "posttelephonyprovidersedgessiteoutboundroutes",
    "functionName": "PostTelephonyProvidersEdgesSiteOutboundroutes",
    "signature": "PostTelephonyProvidersEdgesSiteOutboundroutes(siteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Outboundroutebase",
        "required": "true"
      }
    ],
    "return": "Outboundroutebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar body platformclientv2.Outboundroutebase // OutboundRoute\n// Create outbound route\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesSiteOutboundroutes(siteId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesSiteOutboundroutes: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgessites": {
    "operationId": "posttelephonyprovidersedgessites",
    "functionName": "PostTelephonyProvidersEdgesSites",
    "signature": "PostTelephonyProvidersEdgesSites(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Site",
        "required": "true"
      }
    ],
    "return": "Site",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Site // Site\n// Create a Site.\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesSites(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesSites: %v\\n\", err)\n}"
  },
  "posttelephonyprovidersedgestrunkbasesettings": {
    "operationId": "posttelephonyprovidersedgestrunkbasesettings",
    "functionName": "PostTelephonyProvidersEdgesTrunkbasesettings",
    "signature": "PostTelephonyProvidersEdgesTrunkbasesettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Trunkbase",
        "required": "true"
      }
    ],
    "return": "Trunkbase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar body platformclientv2.Trunkbase // Trunk base settings\n// Create a Trunk Base Settings object\ndata, response, err := apiInstance.PostTelephonyProvidersEdgesTrunkbasesettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTelephonyProvidersEdgesTrunkbasesettings: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedge": {
    "operationId": "puttelephonyprovidersedge",
    "functionName": "PutTelephonyProvidersEdge",
    "signature": "PutTelephonyProvidersEdge(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edge",
        "required": "true"
      }
    ],
    "return": "Edge",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar body platformclientv2.Edge // Edge\n// Update a edge.\ndata, response, err := apiInstance.PutTelephonyProvidersEdge(edgeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdge: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgelogicalinterface": {
    "operationId": "puttelephonyprovidersedgelogicalinterface",
    "functionName": "PutTelephonyProvidersEdgeLogicalinterface",
    "signature": "PutTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "interfaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Domainlogicalinterface",
        "required": "true"
      }
    ],
    "return": "Domainlogicalinterface",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeId string // Edge ID\nvar interfaceId string // Interface ID\nvar body platformclientv2.Domainlogicalinterface // Logical interface\n// Update an edge logical interface.\ndata, response, err := apiInstance.PutTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgeLogicalinterface: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgescertificateauthority": {
    "operationId": "puttelephonyprovidersedgescertificateauthority",
    "functionName": "PutTelephonyProvidersEdgesCertificateauthority",
    "signature": "PutTelephonyProvidersEdgesCertificateauthority(certificateId, body)",
    "parameters": [
      {
        "name": "certificateId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Domaincertificateauthority",
        "required": "true"
      }
    ],
    "return": "Domaincertificateauthority",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar certificateId string // Certificate ID\nvar body platformclientv2.Domaincertificateauthority // Certificate authority\n// Update a certificate authority.\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesCertificateauthority(certificateId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesCertificateauthority: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgesdidpool": {
    "operationId": "puttelephonyprovidersedgesdidpool",
    "functionName": "PutTelephonyProvidersEdgesDidpool",
    "signature": "PutTelephonyProvidersEdgesDidpool(didPoolId, body)",
    "parameters": [
      {
        "name": "didPoolId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Didpool",
        "required": "true"
      }
    ],
    "return": "Didpool",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar didPoolId string // DID pool ID\nvar body platformclientv2.Didpool // DID pool\n// Update a DID Pool by ID.\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesDidpool(didPoolId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesDidpool: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgesedgegroup": {
    "operationId": "puttelephonyprovidersedgesedgegroup",
    "functionName": "PutTelephonyProvidersEdgesEdgegroup",
    "signature": "PutTelephonyProvidersEdgesEdgegroup(edgeGroupId, body)",
    "parameters": [
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgegroup",
        "required": "true"
      }
    ],
    "return": "Edgegroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgeGroupId string // Edge group ID\nvar body platformclientv2.Edgegroup // EdgeGroup\n// Update an edge group.\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesEdgegroup(edgeGroupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesEdgegroup: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgesedgegroupedgetrunkbase": {
    "operationId": "puttelephonyprovidersedgesedgegroupedgetrunkbase",
    "functionName": "PutTelephonyProvidersEdgesEdgegroupEdgetrunkbase",
    "signature": "PutTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId, edgetrunkbaseId, body)",
    "parameters": [
      {
        "name": "edgegroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "edgetrunkbaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edgetrunkbase",
        "required": "true"
      }
    ],
    "return": "Edgetrunkbase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar edgegroupId string // Edge Group ID\nvar edgetrunkbaseId string // Edge Trunk Base ID\nvar body platformclientv2.Edgetrunkbase // EdgeTrunkBase\n// Update the edge trunk base associated with the edge group\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId, edgetrunkbaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesEdgegroupEdgetrunkbase: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgesextensionpool": {
    "operationId": "puttelephonyprovidersedgesextensionpool",
    "functionName": "PutTelephonyProvidersEdgesExtensionpool",
    "signature": "PutTelephonyProvidersEdgesExtensionpool(extensionPoolId, body)",
    "parameters": [
      {
        "name": "extensionPoolId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Extensionpool",
        "required": "true"
      }
    ],
    "return": "Extensionpool",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar extensionPoolId string // Extension pool ID\nvar body platformclientv2.Extensionpool // ExtensionPool\n// Update an extension pool by ID\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesExtensionpool(extensionPoolId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesExtensionpool: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgesphone": {
    "operationId": "puttelephonyprovidersedgesphone",
    "functionName": "PutTelephonyProvidersEdgesPhone",
    "signature": "PutTelephonyProvidersEdgesPhone(phoneId, body)",
    "parameters": [
      {
        "name": "phoneId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Phone",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar phoneId string // Phone ID\nvar body platformclientv2.Phone // Phone\n// Update a Phone by ID\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesPhone(phoneId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesPhone: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgesphonebasesetting": {
    "operationId": "puttelephonyprovidersedgesphonebasesetting",
    "functionName": "PutTelephonyProvidersEdgesPhonebasesetting",
    "signature": "PutTelephonyProvidersEdgesPhonebasesetting(phoneBaseId, body)",
    "parameters": [
      {
        "name": "phoneBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Phonebase",
        "required": "true"
      }
    ],
    "return": "Phonebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar phoneBaseId string // Phone base ID\nvar body platformclientv2.Phonebase // Phone base settings\n// Update a Phone Base Settings by ID\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesPhonebasesetting(phoneBaseId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesPhonebasesetting: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgessite": {
    "operationId": "puttelephonyprovidersedgessite",
    "functionName": "PutTelephonyProvidersEdgesSite",
    "signature": "PutTelephonyProvidersEdgesSite(siteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Site",
        "required": "true"
      }
    ],
    "return": "Site",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar body platformclientv2.Site // Site\n// Update a Site by ID.\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesSite(siteId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesSite: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgessitenumberplans": {
    "operationId": "puttelephonyprovidersedgessitenumberplans",
    "functionName": "PutTelephonyProvidersEdgesSiteNumberplans",
    "signature": "PutTelephonyProvidersEdgesSiteNumberplans(siteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]Numberplan",
        "required": "true"
      }
    ],
    "return": "[]Numberplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar body platformclientv2.[]Numberplan // List of number plans\n// Update the list of Number Plans. A user can update maximum 200 number plans at a time.\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesSiteNumberplans(siteId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesSiteNumberplans: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgessiteoutboundroute": {
    "operationId": "puttelephonyprovidersedgessiteoutboundroute",
    "functionName": "PutTelephonyProvidersEdgesSiteOutboundroute",
    "signature": "PutTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Outboundroutebase",
        "required": "true"
      }
    ],
    "return": "Outboundroutebase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar outboundRouteId string // Outbound route ID\nvar body platformclientv2.Outboundroutebase // OutboundRoute\n// Update outbound route\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesSiteOutboundroute: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgessitesiteconnections": {
    "operationId": "puttelephonyprovidersedgessitesiteconnections",
    "functionName": "PutTelephonyProvidersEdgesSiteSiteconnections",
    "signature": "PutTelephonyProvidersEdgesSiteSiteconnections(siteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Siteconnections",
        "required": "true"
      }
    ],
    "return": "Siteconnections",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar siteId string // Site ID\nvar body platformclientv2.Siteconnections // Site\n// Update site connections for a site.\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesSiteSiteconnections(siteId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesSiteSiteconnections: %v\\n\", err)\n}"
  },
  "puttelephonyprovidersedgestrunkbasesetting": {
    "operationId": "puttelephonyprovidersedgestrunkbasesetting",
    "functionName": "PutTelephonyProvidersEdgesTrunkbasesetting",
    "signature": "PutTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId, body)",
    "parameters": [
      {
        "name": "trunkBaseSettingsId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Trunkbase",
        "required": "true"
      }
    ],
    "return": "Trunkbase",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTelephonyProvidersEdgeApiWithConfig(config)\n\nvar trunkBaseSettingsId string // Trunk Base ID\nvar body platformclientv2.Trunkbase // Trunk base settings\n// Update a Trunk Base Settings object by ID\ndata, response, err := apiInstance.PutTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTelephonyProvidersEdgesTrunkbasesetting: %v\\n\", err)\n}"
  },
  "gettextbotsbotssearch": {
    "operationId": "gettextbotsbotssearch",
    "functionName": "GetTextbotsBotsSearch",
    "signature": "GetTextbotsBotsSearch(botType, botName, botId, pageSize)",
    "parameters": [
      {
        "name": "botType",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "botName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "botId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Botsearchresponseentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTextbotsApiWithConfig(config)\n\nvar botType []string // Bot types\nvar botName string // Bot name\nvar botId []string // Bot IDs\nvar pageSize int // The maximum results to return\n// Find bots using the currently configured friendly name or ID.\ndata, response, err := apiInstance.GetTextbotsBotsSearch(botType, botName, botId, pageSize)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTextbotsBotsSearch: %v\\n\", err)\n}"
  },
  "posttextbotsbotflowssessionturns": {
    "operationId": "posttextbotsbotflowssessionturns",
    "functionName": "PostTextbotsBotflowsSessionTurns",
    "signature": "PostTextbotsBotflowsSessionTurns(sessionId, turnRequest)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "turnRequest",
        "type": "Textbotflowturnrequest",
        "required": "true"
      }
    ],
    "return": "Textbotflowturnresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTextbotsApiWithConfig(config)\n\nvar sessionId string // The bot flow session ID, typically obtained from 'POST /api/v2/textbots/botflows/sessions'\nvar turnRequest platformclientv2.Textbotflowturnrequest // \n// Issue a bot flow turn event\ndata, response, err := apiInstance.PostTextbotsBotflowsSessionTurns(sessionId, turnRequest)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTextbotsBotflowsSessionTurns: %v\\n\", err)\n}"
  },
  "posttextbotsbotflowssessions": {
    "operationId": "posttextbotsbotflowssessions",
    "functionName": "PostTextbotsBotflowsSessions",
    "signature": "PostTextbotsBotflowsSessions(launchRequest)",
    "parameters": [
      {
        "name": "launchRequest",
        "type": "Textbotflowlaunchrequest",
        "required": "true"
      }
    ],
    "return": "Textbotflowlaunchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTextbotsApiWithConfig(config)\n\nvar launchRequest platformclientv2.Textbotflowlaunchrequest // \n// Create an execution instance of a bot flow definition.\ndata, response, err := apiInstance.PostTextbotsBotflowsSessions(launchRequest)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTextbotsBotflowsSessions: %v\\n\", err)\n}"
  },
  "posttextbotsbotsexecute": {
    "operationId": "posttextbotsbotsexecute",
    "functionName": "PostTextbotsBotsExecute",
    "signature": "PostTextbotsBotsExecute(postTextRequest)",
    "parameters": [
      {
        "name": "postTextRequest",
        "type": "Posttextrequest",
        "required": "true"
      }
    ],
    "return": "Posttextresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTextbotsApiWithConfig(config)\n\nvar postTextRequest platformclientv2.Posttextrequest // \n// Send an intent to a bot to start a dialog/interact with it via text\ndata, response, err := apiInstance.PostTextbotsBotsExecute(postTextRequest)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostTextbotsBotsExecute: %v\\n\", err)\n}"
  },
  "deletetoken": {
    "operationId": "deletetoken",
    "functionName": "DeleteToken",
    "signature": "DeleteToken(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTokensApiWithConfig(config)\n\nvar userId string // User ID\n// Delete all auth tokens for the specified user.\nresponse, err := apiInstance.DeleteToken(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteToken: %v\\n\", err)\n}"
  },
  "deletetokensme": {
    "operationId": "deletetokensme",
    "functionName": "DeleteTokensMe",
    "signature": "DeleteTokensMe()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTokensApiWithConfig(config)\n\n// Delete auth token used to make the request.\nresponse, err := apiInstance.DeleteTokensMe()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteTokensMe: %v\\n\", err)\n}"
  },
  "gettokensme": {
    "operationId": "gettokensme",
    "functionName": "GetTokensMe",
    "signature": "GetTokensMe(preserveIdleTTL)",
    "parameters": [
      {
        "name": "preserveIdleTTL",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Tokeninfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTokensApiWithConfig(config)\n\nvar preserveIdleTTL bool // preserveIdleTTL indicates whether the idle token timeout should be reset or preserved. If preserveIdleTTL is true, then TTL value is not reset. If unset or false, the value is reset.\n// Fetch information about the current token\ndata, response, err := apiInstance.GetTokensMe(preserveIdleTTL)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTokensMe: %v\\n\", err)\n}"
  },
  "gettokenstimeout": {
    "operationId": "gettokenstimeout",
    "functionName": "GetTokensTimeout",
    "signature": "GetTokensTimeout()",
    "return": "Idletokentimeout",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTokensApiWithConfig(config)\n\n// Get the current Idle Token Timeout Value\ndata, response, err := apiInstance.GetTokensTimeout()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTokensTimeout: %v\\n\", err)\n}"
  },
  "headtokensme": {
    "operationId": "headtokensme",
    "functionName": "HeadTokensMe",
    "signature": "HeadTokensMe()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTokensApiWithConfig(config)\n\n// Verify user token\nresponse, err := apiInstance.HeadTokensMe()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling HeadTokensMe: %v\\n\", err)\n}"
  },
  "puttokenstimeout": {
    "operationId": "puttokenstimeout",
    "functionName": "PutTokensTimeout",
    "signature": "PutTokensTimeout(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Idletokentimeout",
        "required": "false"
      }
    ],
    "return": "Idletokentimeout",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewTokensApiWithConfig(config)\n\nvar body platformclientv2.Idletokentimeout // \n// Update or Enable/Disable the Idle Token Timeout\ndata, response, err := apiInstance.PutTokensTimeout(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutTokensTimeout: %v\\n\", err)\n}"
  },
  "postlanguageunderstandingmineruploads": {
    "operationId": "postlanguageunderstandingmineruploads",
    "functionName": "PostLanguageunderstandingMinerUploads",
    "signature": "PostLanguageunderstandingMinerUploads(minerId, body)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "interface{}",
        "required": "true"
      }
    ],
    "return": "Uploadurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUploadsApiWithConfig(config)\n\nvar minerId string // Miner ID\nvar body platformclientv2.interface{} // query\n// Creates a presigned URL for uploading a chat corpus which will be used for mining by intent miner\ndata, response, err := apiInstance.PostLanguageunderstandingMinerUploads(minerId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostLanguageunderstandingMinerUploads: %v\\n\", err)\n}"
  },
  "postuploadslearningcoverart": {
    "operationId": "postuploadslearningcoverart",
    "functionName": "PostUploadsLearningCoverart",
    "signature": "PostUploadsLearningCoverart(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Learningcoverartuploadurlrequest",
        "required": "true"
      }
    ],
    "return": "Uploadurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUploadsApiWithConfig(config)\n\nvar body platformclientv2.Learningcoverartuploadurlrequest // query\n// Generates pre-signed URL to upload cover art for learning modules\ndata, response, err := apiInstance.PostUploadsLearningCoverart(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUploadsLearningCoverart: %v\\n\", err)\n}"
  },
  "postuploadspublicassetsimages": {
    "operationId": "postuploadspublicassetsimages",
    "functionName": "PostUploadsPublicassetsImages",
    "signature": "PostUploadsPublicassetsImages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Uploadurlrequest",
        "required": "true"
      }
    ],
    "return": "Uploadurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUploadsApiWithConfig(config)\n\nvar body platformclientv2.Uploadurlrequest // query\n// Creates presigned url for uploading a public asset image\ndata, response, err := apiInstance.PostUploadsPublicassetsImages(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUploadsPublicassetsImages: %v\\n\", err)\n}"
  },
  "postuploadsrecordings": {
    "operationId": "postuploadsrecordings",
    "functionName": "PostUploadsRecordings",
    "signature": "PostUploadsRecordings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Uploadurlrequest",
        "required": "true"
      }
    ],
    "return": "Uploadurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUploadsApiWithConfig(config)\n\nvar body platformclientv2.Uploadurlrequest // query\n// Creates presigned url for uploading a recording file\ndata, response, err := apiInstance.PostUploadsRecordings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUploadsRecordings: %v\\n\", err)\n}"
  },
  "postuploadsworkforcemanagementhistoricaldatacsv": {
    "operationId": "postuploadsworkforcemanagementhistoricaldatacsv",
    "functionName": "PostUploadsWorkforcemanagementHistoricaldataCsv",
    "signature": "PostUploadsWorkforcemanagementHistoricaldataCsv(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Uploadurlrequest",
        "required": "true"
      }
    ],
    "return": "Uploadurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUploadsApiWithConfig(config)\n\nvar body platformclientv2.Uploadurlrequest // query\n// Creates presigned url for uploading WFM historical data file. Requires data in csv format.\ndata, response, err := apiInstance.PostUploadsWorkforcemanagementHistoricaldataCsv(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUploadsWorkforcemanagementHistoricaldataCsv: %v\\n\", err)\n}"
  },
  "getusagequeryexecutionidresults": {
    "operationId": "getusagequeryexecutionidresults",
    "functionName": "GetUsageQueryExecutionIdResults",
    "signature": "GetUsageQueryExecutionIdResults(executionId)",
    "parameters": [
      {
        "name": "executionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Apiusagequeryresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsageApiWithConfig(config)\n\nvar executionId string // ID of the query execution\n// Get the results of a usage query\ndata, response, err := apiInstance.GetUsageQueryExecutionIdResults(executionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsageQueryExecutionIdResults: %v\\n\", err)\n}"
  },
  "getusagesimplesearchexecutionidresults": {
    "operationId": "getusagesimplesearchexecutionidresults",
    "functionName": "GetUsageSimplesearchExecutionIdResults",
    "signature": "GetUsageSimplesearchExecutionIdResults(executionId)",
    "parameters": [
      {
        "name": "executionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Apiusagequeryresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsageApiWithConfig(config)\n\nvar executionId string // ID of the search execution\n// Get the results of a usage search\ndata, response, err := apiInstance.GetUsageSimplesearchExecutionIdResults(executionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsageSimplesearchExecutionIdResults: %v\\n\", err)\n}"
  },
  "postusagequery": {
    "operationId": "postusagequery",
    "functionName": "PostUsageQuery",
    "signature": "PostUsageQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Apiusageorganizationquery",
        "required": "true"
      }
    ],
    "return": "Usageexecutionresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsageApiWithConfig(config)\n\nvar body platformclientv2.Apiusageorganizationquery // Query\n// Query organization API Usage - \ndata, response, err := apiInstance.PostUsageQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUsageQuery: %v\\n\", err)\n}"
  },
  "postusagesimplesearch": {
    "operationId": "postusagesimplesearch",
    "functionName": "PostUsageSimplesearch",
    "signature": "PostUsageSimplesearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Apiusagesimplesearch",
        "required": "true"
      }
    ],
    "return": "Usageexecutionresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsageApiWithConfig(config)\n\nvar body platformclientv2.Apiusagesimplesearch // SimpleSearch\n// Search organization API Usage - \ndata, response, err := apiInstance.PostUsageSimplesearch(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUsageSimplesearch: %v\\n\", err)\n}"
  },
  "deleteuserrecording": {
    "operationId": "deleteuserrecording",
    "functionName": "DeleteUserrecording",
    "signature": "DeleteUserrecording(recordingId)",
    "parameters": [
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUserRecordingsApiWithConfig(config)\n\nvar recordingId string // User Recording ID\n// Delete a user recording.\nresponse, err := apiInstance.DeleteUserrecording(recordingId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteUserrecording: %v\\n\", err)\n}"
  },
  "getuserrecording": {
    "operationId": "getuserrecording",
    "functionName": "GetUserrecording",
    "signature": "GetUserrecording(recordingId, expand)",
    "parameters": [
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Userrecording",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUserRecordingsApiWithConfig(config)\n\nvar recordingId string // User Recording ID\nvar expand []string // Which fields, if any, to expand.\n// Get a user recording.\ndata, response, err := apiInstance.GetUserrecording(recordingId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserrecording: %v\\n\", err)\n}"
  },
  "getuserrecordingmedia": {
    "operationId": "getuserrecordingmedia",
    "functionName": "GetUserrecordingMedia",
    "signature": "GetUserrecordingMedia(recordingId, formatId, async)",
    "parameters": [
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "async",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Downloadresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUserRecordingsApiWithConfig(config)\n\nvar recordingId string // User Recording ID\nvar formatId string // The desired media format.\nvar async bool // When set to true, api will return 202 response until the recording is ready for download\n// Download a user recording.\ndata, response, err := apiInstance.GetUserrecordingMedia(recordingId, formatId, async)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserrecordingMedia: %v\\n\", err)\n}"
  },
  "getuserrecordings": {
    "operationId": "getuserrecordings",
    "functionName": "GetUserrecordings",
    "signature": "GetUserrecordings(pageSize, pageNumber, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Userrecordingentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUserRecordingsApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar expand []string // Which fields, if any, to expand.\n// Get a list of user recordings.\ndata, response, err := apiInstance.GetUserrecordings(pageSize, pageNumber, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserrecordings: %v\\n\", err)\n}"
  },
  "getuserrecordingssummary": {
    "operationId": "getuserrecordingssummary",
    "functionName": "GetUserrecordingsSummary",
    "signature": "GetUserrecordingsSummary()",
    "return": "Faxsummary",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUserRecordingsApiWithConfig(config)\n\n// Get user recording summary\ndata, response, err := apiInstance.GetUserrecordingsSummary()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserrecordingsSummary: %v\\n\", err)\n}"
  },
  "putuserrecording": {
    "operationId": "putuserrecording",
    "functionName": "PutUserrecording",
    "signature": "PutUserrecording(recordingId, body, expand)",
    "parameters": [
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userrecording",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Userrecording",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUserRecordingsApiWithConfig(config)\n\nvar recordingId string // User Recording ID\nvar body platformclientv2.Userrecording // UserRecording\nvar expand []string // Which fields, if any, to expand.\n// Update a user recording.\ndata, response, err := apiInstance.PutUserrecording(recordingId, body, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserrecording: %v\\n\", err)\n}"
  },
  "deleteuser": {
    "operationId": "deleteuser",
    "functionName": "DeleteUser",
    "signature": "DeleteUser(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Delete user\ndata, response, err := apiInstance.DeleteUser(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteUser: %v\\n\", err)\n}"
  },
  "deleteuserstationassociatedstation": {
    "operationId": "deleteuserstationassociatedstation",
    "functionName": "DeleteUserStationAssociatedstation",
    "signature": "DeleteUserStationAssociatedstation(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Clear associated station\nresponse, err := apiInstance.DeleteUserStationAssociatedstation(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteUserStationAssociatedstation: %v\\n\", err)\n}"
  },
  "deleteuserstationdefaultstation": {
    "operationId": "deleteuserstationdefaultstation",
    "functionName": "DeleteUserStationDefaultstation",
    "signature": "DeleteUserStationDefaultstation(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Clear default station\nresponse, err := apiInstance.DeleteUserStationDefaultstation(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteUserStationDefaultstation: %v\\n\", err)\n}"
  },
  "deleteuserverifier": {
    "operationId": "deleteuserverifier",
    "functionName": "DeleteUserVerifier",
    "signature": "DeleteUserVerifier(userId, verifierId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "verifierId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar verifierId string // Verifier ID\n// Delete a verifier\nresponse, err := apiInstance.DeleteUserVerifier(userId, verifierId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteUserVerifier: %v\\n\", err)\n}"
  },
  "getprofilesusers": {
    "operationId": "getprofilesusers",
    "functionName": "GetProfilesUsers",
    "signature": "GetProfilesUsers(pageSize, pageNumber, id, jid, sortOrder, expand, integrationPresenceSource)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "jid",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userprofileentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar id []string // id\nvar jid []string // jid\nvar sortOrder string // Ascending or descending sort order\nvar expand []string // Which fields, if any, to expand\nvar integrationPresenceSource string // Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an \\\"expand\\\".\n// Get a user profile listing\ndata, response, err := apiInstance.GetProfilesUsers(pageSize, pageNumber, id, jid, sortOrder, expand, integrationPresenceSource)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetProfilesUsers: %v\\n\", err)\n}"
  },
  "getuser": {
    "operationId": "getuser",
    "functionName": "GetUser",
    "signature": "GetUser(userId, expand, integrationPresenceSource, state)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "User",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar expand []string // Which fields, if any, to expand\nvar integrationPresenceSource string // Gets an integration presence for a user instead of their default.\nvar state string // Search for a user with this state\n// Get user.\ndata, response, err := apiInstance.GetUser(userId, expand, integrationPresenceSource, state)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUser: %v\\n\", err)\n}"
  },
  "getuseradjacents": {
    "operationId": "getuseradjacents",
    "functionName": "GetUserAdjacents",
    "signature": "GetUserAdjacents(userId, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Adjacents",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar expand []string // Which fields, if any, to expand\n// Get adjacents\ndata, response, err := apiInstance.GetUserAdjacents(userId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserAdjacents: %v\\n\", err)\n}"
  },
  "getusercallforwarding": {
    "operationId": "getusercallforwarding",
    "functionName": "GetUserCallforwarding",
    "signature": "GetUserCallforwarding(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Callforwarding",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Get a user's CallForwarding\ndata, response, err := apiInstance.GetUserCallforwarding(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserCallforwarding: %v\\n\", err)\n}"
  },
  "getuserdirectreports": {
    "operationId": "getuserdirectreports",
    "functionName": "GetUserDirectreports",
    "signature": "GetUserDirectreports(userId, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "[]User",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar expand []string // Which fields, if any, to expand\n// Get direct reports\ndata, response, err := apiInstance.GetUserDirectreports(userId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserDirectreports: %v\\n\", err)\n}"
  },
  "getuserfavorites": {
    "operationId": "getuserfavorites",
    "functionName": "GetUserFavorites",
    "signature": "GetUserFavorites(userId, pageSize, pageNumber, sortOrder, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Userentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Sort order\nvar expand []string // Which fields, if any, to expand\n// Deprecated; will be revived with new contract\ndata, response, err := apiInstance.GetUserFavorites(userId, pageSize, pageNumber, sortOrder, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserFavorites: %v\\n\", err)\n}"
  },
  "getuseroutofoffice": {
    "operationId": "getuseroutofoffice",
    "functionName": "GetUserOutofoffice",
    "signature": "GetUserOutofoffice(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outofoffice",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Get a OutOfOffice\ndata, response, err := apiInstance.GetUserOutofoffice(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserOutofoffice: %v\\n\", err)\n}"
  },
  "getuserprofile": {
    "operationId": "getuserprofile",
    "functionName": "GetUserProfile",
    "signature": "GetUserProfile(userId, expand, integrationPresenceSource)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userprofile",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // userId\nvar expand []string // Which fields, if any, to expand\nvar integrationPresenceSource string // Gets an integration presence for a user instead of their default.\n// Get user profile\ndata, response, err := apiInstance.GetUserProfile(userId, expand, integrationPresenceSource)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserProfile: %v\\n\", err)\n}"
  },
  "getuserprofileskills": {
    "operationId": "getuserprofileskills",
    "functionName": "GetUserProfileskills",
    "signature": "GetUserProfileskills(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "[]string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// List profile skills for a user\ndata, response, err := apiInstance.GetUserProfileskills(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserProfileskills: %v\\n\", err)\n}"
  },
  "getuserroutingstatus": {
    "operationId": "getuserroutingstatus",
    "functionName": "GetUserRoutingstatus",
    "signature": "GetUserRoutingstatus(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Routingstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Fetch the routing status of a user\ndata, response, err := apiInstance.GetUserRoutingstatus(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserRoutingstatus: %v\\n\", err)\n}"
  },
  "getuserstate": {
    "operationId": "getuserstate",
    "functionName": "GetUserState",
    "signature": "GetUserState(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userstate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Get user state information.\ndata, response, err := apiInstance.GetUserState(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserState: %v\\n\", err)\n}"
  },
  "getuserstation": {
    "operationId": "getuserstation",
    "functionName": "GetUserStation",
    "signature": "GetUserStation(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Userstations",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Get station information for user\ndata, response, err := apiInstance.GetUserStation(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserStation: %v\\n\", err)\n}"
  },
  "getusersuperiors": {
    "operationId": "getusersuperiors",
    "functionName": "GetUserSuperiors",
    "signature": "GetUserSuperiors(userId, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "[]User",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar expand []string // Which fields, if any, to expand\n// Get superiors\ndata, response, err := apiInstance.GetUserSuperiors(userId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserSuperiors: %v\\n\", err)\n}"
  },
  "getusertrustors": {
    "operationId": "getusertrustors",
    "functionName": "GetUserTrustors",
    "signature": "GetUserTrustors(userId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Trustorentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// List the organizations that have authorized/trusted the user.\ndata, response, err := apiInstance.GetUserTrustors(userId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserTrustors: %v\\n\", err)\n}"
  },
  "getuserverifiers": {
    "operationId": "getuserverifiers",
    "functionName": "GetUserVerifiers",
    "signature": "GetUserVerifiers(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Verifierentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\n// Get a list of verifiers\ndata, response, err := apiInstance.GetUserVerifiers(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUserVerifiers: %v\\n\", err)\n}"
  },
  "getusers": {
    "operationId": "getusers",
    "functionName": "GetUsers",
    "signature": "GetUsers(pageSize, pageNumber, id, jabberId, sortOrder, expand, integrationPresenceSource, state)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "jabberId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar id []string // A list of user IDs to fetch by bulk\nvar jabberId []string // A list of jabberIds to fetch by bulk (cannot be used with the \\\"id\\\" parameter)\nvar sortOrder string // Ascending or descending sort order\nvar expand []string // Which fields, if any, to expand\nvar integrationPresenceSource string // Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an \\\"expand\\\". When using this parameter the maximum number of users that can be returned is 100.\nvar state string // Only list users of this state\n// Get the list of available users.\ndata, response, err := apiInstance.GetUsers(pageSize, pageNumber, id, jabberId, sortOrder, expand, integrationPresenceSource, state)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsers: %v\\n\", err)\n}"
  },
  "getusersdevelopmentactivities": {
    "operationId": "getusersdevelopmentactivities",
    "functionName": "GetUsersDevelopmentActivities",
    "signature": "GetUsersDevelopmentActivities(userId, moduleId, interval, completionInterval, overdue, pass, pageSize, pageNumber, sortOrder, types, statuses, relationship)",
    "parameters": [
      {
        "name": "userId",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "moduleId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pass",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "types",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "relationship",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Developmentactivitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId []string // Specifies the list of user IDs to be queried, up to 100 user IDs. It searches for any relationship for the userId.\nvar moduleId string // Specifies the ID of the learning module.\nvar interval string // Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar completionInterval string // Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar overdue string // Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned\nvar pass string // Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") activities are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all activities are returned\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc)\nvar types []string // Specifies the activity types.\nvar statuses []string // Specifies the activity statuses to filter by\nvar relationship []string // Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied.\n// Get list of Development Activities\ndata, response, err := apiInstance.GetUsersDevelopmentActivities(userId, moduleId, interval, completionInterval, overdue, pass, pageSize, pageNumber, sortOrder, types, statuses, relationship)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsersDevelopmentActivities: %v\\n\", err)\n}"
  },
  "getusersdevelopmentactivitiesme": {
    "operationId": "getusersdevelopmentactivitiesme",
    "functionName": "GetUsersDevelopmentActivitiesMe",
    "signature": "GetUsersDevelopmentActivitiesMe(moduleId, interval, completionInterval, overdue, pass, pageSize, pageNumber, sortOrder, types, statuses, relationship)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pass",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "types",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "relationship",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Developmentactivitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar moduleId string // Specifies the ID of the learning module.\nvar interval string // Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar completionInterval string // Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss\nvar overdue string // Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned\nvar pass string // Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") activities are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all activities are returned\nvar pageSize int // Page size\nvar pageNumber int // Page number\nvar sortOrder string // Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc)\nvar types []string // Specifies the activity types.\nvar statuses []string // Specifies the activity statuses to filter by\nvar relationship []string // Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied.\n// Get list of Development Activities for current user\ndata, response, err := apiInstance.GetUsersDevelopmentActivitiesMe(moduleId, interval, completionInterval, overdue, pass, pageSize, pageNumber, sortOrder, types, statuses, relationship)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsersDevelopmentActivitiesMe: %v\\n\", err)\n}"
  },
  "getusersdevelopmentactivity": {
    "operationId": "getusersdevelopmentactivity",
    "functionName": "GetUsersDevelopmentActivity",
    "signature": "GetUsersDevelopmentActivity(activityId, varType)",
    "parameters": [
      {
        "name": "activityId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "varType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Developmentactivity",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar activityId string // Specifies the activity ID, maps to either assignment or appointment ID\nvar varType string // Specifies the activity type.\n// Get a Development Activity\ndata, response, err := apiInstance.GetUsersDevelopmentActivity(activityId, varType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsersDevelopmentActivity: %v\\n\", err)\n}"
  },
  "getusersme": {
    "operationId": "getusersme",
    "functionName": "GetUsersMe",
    "signature": "GetUsersMe(expand, integrationPresenceSource)",
    "parameters": [
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Userme",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar expand []string // Which fields, if any, to expand.\nvar integrationPresenceSource string // Get your presence for a given integration. This parameter will only be used when presence is provided as an \\\"expand\\\".\n// Get current user details.\ndata, response, err := apiInstance.GetUsersMe(expand, integrationPresenceSource)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetUsersMe: %v\\n\", err)\n}"
  },
  "patchuser": {
    "operationId": "patchuser",
    "functionName": "PatchUser",
    "signature": "PatchUser(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updateuser",
        "required": "true"
      }
    ],
    "return": "User",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Updateuser // User\n// Update user\ndata, response, err := apiInstance.PatchUser(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUser: %v\\n\", err)\n}"
  },
  "patchusercallforwarding": {
    "operationId": "patchusercallforwarding",
    "functionName": "PatchUserCallforwarding",
    "signature": "PatchUserCallforwarding(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Callforwarding",
        "required": "true"
      }
    ],
    "return": "Callforwarding",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Callforwarding // Call forwarding\n// Patch a user's CallForwarding\ndata, response, err := apiInstance.PatchUserCallforwarding(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUserCallforwarding: %v\\n\", err)\n}"
  },
  "patchusersbulk": {
    "operationId": "patchusersbulk",
    "functionName": "PatchUsersBulk",
    "signature": "PatchUsersBulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "[]Patchuser",
        "required": "true"
      }
    ],
    "return": "Userentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.[]Patchuser // Users\n// Update bulk acd autoanswer on users. Max 50 users can be updated at a time.\ndata, response, err := apiInstance.PatchUsersBulk(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchUsersBulk: %v\\n\", err)\n}"
  },
  "postuserexternalid": {
    "operationId": "postuserexternalid",
    "functionName": "PostUserExternalid",
    "signature": "PostUserExternalid(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userexternalidentifier",
        "required": "true"
      }
    ],
    "return": "[]Userexternalidentifier",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Userexternalidentifier // \n// Create mapping between external identifier and user. Limit 100 per entity.\ndata, response, err := apiInstance.PostUserExternalid(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUserExternalid: %v\\n\", err)\n}"
  },
  "postuserinvite": {
    "operationId": "postuserinvite",
    "functionName": "PostUserInvite",
    "signature": "PostUserInvite(userId, force)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "force",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar force bool // Resend the invitation even if one is already outstanding\n// Send an activation email to the user\nresponse, err := apiInstance.PostUserInvite(userId, force)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostUserInvite: %v\\n\", err)\n}"
  },
  "postuserpassword": {
    "operationId": "postuserpassword",
    "functionName": "PostUserPassword",
    "signature": "PostUserPassword(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Changepasswordrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Changepasswordrequest // Password\n// Change a users password\nresponse, err := apiInstance.PostUserPassword(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostUserPassword: %v\\n\", err)\n}"
  },
  "postusers": {
    "operationId": "postusers",
    "functionName": "PostUsers",
    "signature": "PostUsers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createuser",
        "required": "true"
      }
    ],
    "return": "User",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Createuser // User\n// Create user\ndata, response, err := apiInstance.PostUsers(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUsers: %v\\n\", err)\n}"
  },
  "postusersdevelopmentactivitiesaggregatesquery": {
    "operationId": "postusersdevelopmentactivitiesaggregatesquery",
    "functionName": "PostUsersDevelopmentActivitiesAggregatesQuery",
    "signature": "PostUsersDevelopmentActivitiesAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Developmentactivityaggregateparam",
        "required": "true"
      }
    ],
    "return": "Developmentactivityaggregateresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Developmentactivityaggregateparam // Aggregate Request\n// Retrieve aggregated development activity data\ndata, response, err := apiInstance.PostUsersDevelopmentActivitiesAggregatesQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostUsersDevelopmentActivitiesAggregatesQuery: %v\\n\", err)\n}"
  },
  "postusersmepassword": {
    "operationId": "postusersmepassword",
    "functionName": "PostUsersMePassword",
    "signature": "PostUsersMePassword(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Changemypasswordrequest",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar body platformclientv2.Changemypasswordrequest // Password\n// Change your password\nresponse, err := apiInstance.PostUsersMePassword(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostUsersMePassword: %v\\n\", err)\n}"
  },
  "putusercallforwarding": {
    "operationId": "putusercallforwarding",
    "functionName": "PutUserCallforwarding",
    "signature": "PutUserCallforwarding(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Callforwarding",
        "required": "true"
      }
    ],
    "return": "Callforwarding",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Callforwarding // Call forwarding\n// Update a user's CallForwarding\ndata, response, err := apiInstance.PutUserCallforwarding(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserCallforwarding: %v\\n\", err)\n}"
  },
  "putuseroutofoffice": {
    "operationId": "putuseroutofoffice",
    "functionName": "PutUserOutofoffice",
    "signature": "PutUserOutofoffice(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Outofoffice",
        "required": "true"
      }
    ],
    "return": "Outofoffice",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Outofoffice // The updated OutOffOffice\n// Update an OutOfOffice\ndata, response, err := apiInstance.PutUserOutofoffice(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserOutofoffice: %v\\n\", err)\n}"
  },
  "putuserprofileskills": {
    "operationId": "putuserprofileskills",
    "functionName": "PutUserProfileskills",
    "signature": "PutUserProfileskills(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "[]string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.[]string // Skills\n// Update profile skills for a user\ndata, response, err := apiInstance.PutUserProfileskills(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserProfileskills: %v\\n\", err)\n}"
  },
  "putuserroutingstatus": {
    "operationId": "putuserroutingstatus",
    "functionName": "PutUserRoutingstatus",
    "signature": "PutUserRoutingstatus(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Routingstatus",
        "required": "true"
      }
    ],
    "return": "Routingstatus",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Routingstatus // Routing Status\n// Update the routing status of a user\ndata, response, err := apiInstance.PutUserRoutingstatus(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserRoutingstatus: %v\\n\", err)\n}"
  },
  "putuserstate": {
    "operationId": "putuserstate",
    "functionName": "PutUserState",
    "signature": "PutUserState(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userstate",
        "required": "true"
      }
    ],
    "return": "Userstate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Userstate // User\n// Update user state information.\ndata, response, err := apiInstance.PutUserState(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserState: %v\\n\", err)\n}"
  },
  "putuserstationassociatedstationstationid": {
    "operationId": "putuserstationassociatedstationstationid",
    "functionName": "PutUserStationAssociatedstationStationId",
    "signature": "PutUserStationAssociatedstationStationId(userId, stationId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "stationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar stationId string // stationId\n// Set associated station\nresponse, err := apiInstance.PutUserStationAssociatedstationStationId(userId, stationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserStationAssociatedstationStationId: %v\\n\", err)\n}"
  },
  "putuserstationdefaultstationstationid": {
    "operationId": "putuserstationdefaultstationstationid",
    "functionName": "PutUserStationDefaultstationStationId",
    "signature": "PutUserStationDefaultstationStationId(userId, stationId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "stationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar stationId string // stationId\n// Set default station\nresponse, err := apiInstance.PutUserStationDefaultstationStationId(userId, stationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserStationDefaultstationStationId: %v\\n\", err)\n}"
  },
  "putuserverifier": {
    "operationId": "putuserverifier",
    "functionName": "PutUserVerifier",
    "signature": "PutUserVerifier(userId, verifierId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "verifierId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updateverifierrequest",
        "required": "true"
      }
    ],
    "return": "Verifier",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUsersApiWithConfig(config)\n\nvar userId string // User ID\nvar verifierId string // Verifier ID\nvar body platformclientv2.Updateverifierrequest // Verifier Update\n// Update a verifier\ndata, response, err := apiInstance.PutUserVerifier(userId, verifierId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutUserVerifier: %v\\n\", err)\n}"
  },
  "getdate": {
    "operationId": "getdate",
    "functionName": "GetDate",
    "signature": "GetDate()",
    "return": "Serverdate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUtilitiesApiWithConfig(config)\n\n// Get the current system date/time\ndata, response, err := apiInstance.GetDate()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetDate: %v\\n\", err)\n}"
  },
  "getipranges": {
    "operationId": "getipranges",
    "functionName": "GetIpranges",
    "signature": "GetIpranges()",
    "return": "Ipaddressrangelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUtilitiesApiWithConfig(config)\n\n// Get public ip address ranges for Genesys Cloud\ndata, response, err := apiInstance.GetIpranges()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetIpranges: %v\\n\", err)\n}"
  },
  "gettimezones": {
    "operationId": "gettimezones",
    "functionName": "GetTimezones",
    "signature": "GetTimezones(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Timezoneentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUtilitiesApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get time zones list\ndata, response, err := apiInstance.GetTimezones(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetTimezones: %v\\n\", err)\n}"
  },
  "postcertificatedetails": {
    "operationId": "postcertificatedetails",
    "functionName": "PostCertificateDetails",
    "signature": "PostCertificateDetails(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Certificate",
        "required": "true"
      }
    ],
    "return": "Parsedcertificate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewUtilitiesApiWithConfig(config)\n\nvar body platformclientv2.Certificate // Certificate\n// Returns the information about an X509 PEM encoded certificate or certificate chain.\ndata, response, err := apiInstance.PostCertificateDetails(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostCertificateDetails: %v\\n\", err)\n}"
  },
  "deletevoicemailmessage": {
    "operationId": "deletevoicemailmessage",
    "functionName": "DeleteVoicemailMessage",
    "signature": "DeleteVoicemailMessage(messageId)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar messageId string // Message ID\n// Delete a voicemail message.\nresponse, err := apiInstance.DeleteVoicemailMessage(messageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteVoicemailMessage: %v\\n\", err)\n}"
  },
  "deletevoicemailmessages": {
    "operationId": "deletevoicemailmessages",
    "functionName": "DeleteVoicemailMessages",
    "signature": "DeleteVoicemailMessages()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\n// Delete all voicemail messages\nresponse, err := apiInstance.DeleteVoicemailMessages()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteVoicemailMessages: %v\\n\", err)\n}"
  },
  "getvoicemailgroupmailbox": {
    "operationId": "getvoicemailgroupmailbox",
    "functionName": "GetVoicemailGroupMailbox",
    "signature": "GetVoicemailGroupMailbox(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Voicemailmailboxinfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar groupId string // groupId\n// Get the group's mailbox information\ndata, response, err := apiInstance.GetVoicemailGroupMailbox(groupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailGroupMailbox: %v\\n\", err)\n}"
  },
  "getvoicemailgroupmessages": {
    "operationId": "getvoicemailgroupmessages",
    "functionName": "GetVoicemailGroupMessages",
    "signature": "GetVoicemailGroupMessages(groupId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Voicemailmessageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar groupId string // Group ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// List voicemail messages\ndata, response, err := apiInstance.GetVoicemailGroupMessages(groupId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailGroupMessages: %v\\n\", err)\n}"
  },
  "getvoicemailgrouppolicy": {
    "operationId": "getvoicemailgrouppolicy",
    "functionName": "GetVoicemailGroupPolicy",
    "signature": "GetVoicemailGroupPolicy(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Voicemailgrouppolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar groupId string // Group ID\n// Get a group's voicemail policy\ndata, response, err := apiInstance.GetVoicemailGroupPolicy(groupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailGroupPolicy: %v\\n\", err)\n}"
  },
  "getvoicemailmailbox": {
    "operationId": "getvoicemailmailbox",
    "functionName": "GetVoicemailMailbox",
    "signature": "GetVoicemailMailbox()",
    "return": "Voicemailmailboxinfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\n// Get the current user's mailbox information\ndata, response, err := apiInstance.GetVoicemailMailbox()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailMailbox: %v\\n\", err)\n}"
  },
  "getvoicemailmemailbox": {
    "operationId": "getvoicemailmemailbox",
    "functionName": "GetVoicemailMeMailbox",
    "signature": "GetVoicemailMeMailbox()",
    "return": "Voicemailmailboxinfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\n// Get the current user's mailbox information\ndata, response, err := apiInstance.GetVoicemailMeMailbox()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailMeMailbox: %v\\n\", err)\n}"
  },
  "getvoicemailmemessages": {
    "operationId": "getvoicemailmemessages",
    "functionName": "GetVoicemailMeMessages",
    "signature": "GetVoicemailMeMessages(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Voicemailmessageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// List voicemail messages\ndata, response, err := apiInstance.GetVoicemailMeMessages(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailMeMessages: %v\\n\", err)\n}"
  },
  "getvoicemailmepolicy": {
    "operationId": "getvoicemailmepolicy",
    "functionName": "GetVoicemailMePolicy",
    "signature": "GetVoicemailMePolicy()",
    "return": "Voicemailuserpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\n// Get the current user's voicemail policy\ndata, response, err := apiInstance.GetVoicemailMePolicy()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailMePolicy: %v\\n\", err)\n}"
  },
  "getvoicemailmessage": {
    "operationId": "getvoicemailmessage",
    "functionName": "GetVoicemailMessage",
    "signature": "GetVoicemailMessage(messageId, expand)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Voicemailmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar messageId string // Message ID\nvar expand []string // If the caller is a known user, which fields, if any, to expand\n// Get a voicemail message\ndata, response, err := apiInstance.GetVoicemailMessage(messageId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailMessage: %v\\n\", err)\n}"
  },
  "getvoicemailmessagemedia": {
    "operationId": "getvoicemailmessagemedia",
    "functionName": "GetVoicemailMessageMedia",
    "signature": "GetVoicemailMessageMedia(messageId, formatId)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Voicemailmediainfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar messageId string // Message ID\nvar formatId string // The desired media format.\n// Get media playback URI for this voicemail message\ndata, response, err := apiInstance.GetVoicemailMessageMedia(messageId, formatId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailMessageMedia: %v\\n\", err)\n}"
  },
  "getvoicemailmessages": {
    "operationId": "getvoicemailmessages",
    "functionName": "GetVoicemailMessages",
    "signature": "GetVoicemailMessages(ids, expand)",
    "parameters": [
      {
        "name": "ids",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Voicemailmessageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar ids string // An optional comma separated list of VoicemailMessage ids\nvar expand []string // If the caller is a known user, which fields, if any, to expand\n// List voicemail messages\ndata, response, err := apiInstance.GetVoicemailMessages(ids, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailMessages: %v\\n\", err)\n}"
  },
  "getvoicemailpolicy": {
    "operationId": "getvoicemailpolicy",
    "functionName": "GetVoicemailPolicy",
    "signature": "GetVoicemailPolicy()",
    "return": "Voicemailorganizationpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\n// Get a policy\ndata, response, err := apiInstance.GetVoicemailPolicy()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailPolicy: %v\\n\", err)\n}"
  },
  "getvoicemailqueuemessages": {
    "operationId": "getvoicemailqueuemessages",
    "functionName": "GetVoicemailQueueMessages",
    "signature": "GetVoicemailQueueMessages(queueId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Voicemailmessageentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar queueId string // Queue ID\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// List voicemail messages\ndata, response, err := apiInstance.GetVoicemailQueueMessages(queueId, pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailQueueMessages: %v\\n\", err)\n}"
  },
  "getvoicemailuserpolicy": {
    "operationId": "getvoicemailuserpolicy",
    "functionName": "GetVoicemailUserpolicy",
    "signature": "GetVoicemailUserpolicy(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Voicemailuserpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar userId string // User ID\n// Get a user's voicemail policy\ndata, response, err := apiInstance.GetVoicemailUserpolicy(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetVoicemailUserpolicy: %v\\n\", err)\n}"
  },
  "patchvoicemailgrouppolicy": {
    "operationId": "patchvoicemailgrouppolicy",
    "functionName": "PatchVoicemailGroupPolicy",
    "signature": "PatchVoicemailGroupPolicy(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Voicemailgrouppolicy",
        "required": "true"
      }
    ],
    "return": "Voicemailgrouppolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar groupId string // Group ID\nvar body platformclientv2.Voicemailgrouppolicy // The group's voicemail policy\n// Update a group's voicemail policy\ndata, response, err := apiInstance.PatchVoicemailGroupPolicy(groupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchVoicemailGroupPolicy: %v\\n\", err)\n}"
  },
  "patchvoicemailmepolicy": {
    "operationId": "patchvoicemailmepolicy",
    "functionName": "PatchVoicemailMePolicy",
    "signature": "PatchVoicemailMePolicy(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Voicemailuserpolicy",
        "required": "true"
      }
    ],
    "return": "Voicemailuserpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar body platformclientv2.Voicemailuserpolicy // The user's voicemail policy\n// Update the current user's voicemail policy\ndata, response, err := apiInstance.PatchVoicemailMePolicy(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchVoicemailMePolicy: %v\\n\", err)\n}"
  },
  "patchvoicemailmessage": {
    "operationId": "patchvoicemailmessage",
    "functionName": "PatchVoicemailMessage",
    "signature": "PatchVoicemailMessage(messageId, body)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Voicemailmessage",
        "required": "true"
      }
    ],
    "return": "Voicemailmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar messageId string // Message ID\nvar body platformclientv2.Voicemailmessage // VoicemailMessage\n// Update a voicemail message\ndata, response, err := apiInstance.PatchVoicemailMessage(messageId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchVoicemailMessage: %v\\n\", err)\n}"
  },
  "patchvoicemailuserpolicy": {
    "operationId": "patchvoicemailuserpolicy",
    "functionName": "PatchVoicemailUserpolicy",
    "signature": "PatchVoicemailUserpolicy(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Voicemailuserpolicy",
        "required": "true"
      }
    ],
    "return": "Voicemailuserpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Voicemailuserpolicy // The user's voicemail policy\n// Update a user's voicemail policy\ndata, response, err := apiInstance.PatchVoicemailUserpolicy(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchVoicemailUserpolicy: %v\\n\", err)\n}"
  },
  "postvoicemailmessages": {
    "operationId": "postvoicemailmessages",
    "functionName": "PostVoicemailMessages",
    "signature": "PostVoicemailMessages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Copyvoicemailmessage",
        "required": "false"
      }
    ],
    "return": "Voicemailmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar body platformclientv2.Copyvoicemailmessage // \n// Copy a voicemail message to a user or group\ndata, response, err := apiInstance.PostVoicemailMessages(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostVoicemailMessages: %v\\n\", err)\n}"
  },
  "putvoicemailmessage": {
    "operationId": "putvoicemailmessage",
    "functionName": "PutVoicemailMessage",
    "signature": "PutVoicemailMessage(messageId, body)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Voicemailmessage",
        "required": "true"
      }
    ],
    "return": "Voicemailmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar messageId string // Message ID\nvar body platformclientv2.Voicemailmessage // VoicemailMessage\n// Update a voicemail message\ndata, response, err := apiInstance.PutVoicemailMessage(messageId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutVoicemailMessage: %v\\n\", err)\n}"
  },
  "putvoicemailpolicy": {
    "operationId": "putvoicemailpolicy",
    "functionName": "PutVoicemailPolicy",
    "signature": "PutVoicemailPolicy(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Voicemailorganizationpolicy",
        "required": "true"
      }
    ],
    "return": "Voicemailorganizationpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar body platformclientv2.Voicemailorganizationpolicy // Policy\n// Update a policy\ndata, response, err := apiInstance.PutVoicemailPolicy(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutVoicemailPolicy: %v\\n\", err)\n}"
  },
  "putvoicemailuserpolicy": {
    "operationId": "putvoicemailuserpolicy",
    "functionName": "PutVoicemailUserpolicy",
    "signature": "PutVoicemailUserpolicy(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Voicemailuserpolicy",
        "required": "true"
      }
    ],
    "return": "Voicemailuserpolicy",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewVoicemailApiWithConfig(config)\n\nvar userId string // User ID\nvar body platformclientv2.Voicemailuserpolicy // The user's voicemail policy\n// Update a user's voicemail policy\ndata, response, err := apiInstance.PutVoicemailUserpolicy(userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutVoicemailUserpolicy: %v\\n\", err)\n}"
  },
  "deletewebchatdeployment": {
    "operationId": "deletewebchatdeployment",
    "functionName": "DeleteWebchatDeployment",
    "signature": "DeleteWebchatDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar deploymentId string // Deployment Id\n// Delete a WebChat deployment\nresponse, err := apiInstance.DeleteWebchatDeployment(deploymentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWebchatDeployment: %v\\n\", err)\n}"
  },
  "deletewebchatguestconversationmember": {
    "operationId": "deletewebchatguestconversationmember",
    "functionName": "DeleteWebchatGuestConversationMember",
    "signature": "DeleteWebchatGuestConversationMember(conversationId, memberId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar memberId string // memberId\n// Remove a member from a chat conversation\nresponse, err := apiInstance.DeleteWebchatGuestConversationMember(conversationId, memberId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWebchatGuestConversationMember: %v\\n\", err)\n}"
  },
  "deletewebchatsettings": {
    "operationId": "deletewebchatsettings",
    "functionName": "DeleteWebchatSettings",
    "signature": "DeleteWebchatSettings()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\n// Remove WebChat deployment settings\nresponse, err := apiInstance.DeleteWebchatSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWebchatSettings: %v\\n\", err)\n}"
  },
  "getwebchatdeployment": {
    "operationId": "getwebchatdeployment",
    "functionName": "GetWebchatDeployment",
    "signature": "GetWebchatDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webchatdeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar deploymentId string // Deployment Id\n// Get a WebChat deployment\ndata, response, err := apiInstance.GetWebchatDeployment(deploymentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebchatDeployment: %v\\n\", err)\n}"
  },
  "getwebchatdeployments": {
    "operationId": "getwebchatdeployments",
    "functionName": "GetWebchatDeployments",
    "signature": "GetWebchatDeployments()",
    "return": "Webchatdeploymententitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\n// List WebChat deployments\ndata, response, err := apiInstance.GetWebchatDeployments()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebchatDeployments: %v\\n\", err)\n}"
  },
  "getwebchatguestconversationmediarequest": {
    "operationId": "getwebchatguestconversationmediarequest",
    "functionName": "GetWebchatGuestConversationMediarequest",
    "signature": "GetWebchatGuestConversationMediarequest(conversationId, mediaRequestId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "mediaRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webchatguestmediarequest",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar mediaRequestId string // mediaRequestId\n// Get a media request in the conversation\ndata, response, err := apiInstance.GetWebchatGuestConversationMediarequest(conversationId, mediaRequestId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebchatGuestConversationMediarequest: %v\\n\", err)\n}"
  },
  "getwebchatguestconversationmediarequests": {
    "operationId": "getwebchatguestconversationmediarequests",
    "functionName": "GetWebchatGuestConversationMediarequests",
    "signature": "GetWebchatGuestConversationMediarequests(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webchatguestmediarequestentitylist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\n// Get all media requests to the guest in the conversation\ndata, response, err := apiInstance.GetWebchatGuestConversationMediarequests(conversationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebchatGuestConversationMediarequests: %v\\n\", err)\n}"
  },
  "getwebchatguestconversationmember": {
    "operationId": "getwebchatguestconversationmember",
    "functionName": "GetWebchatGuestConversationMember",
    "signature": "GetWebchatGuestConversationMember(conversationId, memberId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webchatmemberinfo",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar memberId string // memberId\n// Get a web chat conversation member\ndata, response, err := apiInstance.GetWebchatGuestConversationMember(conversationId, memberId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebchatGuestConversationMember: %v\\n\", err)\n}"
  },
  "getwebchatguestconversationmembers": {
    "operationId": "getwebchatguestconversationmembers",
    "functionName": "GetWebchatGuestConversationMembers",
    "signature": "GetWebchatGuestConversationMembers(conversationId, pageSize, pageNumber, excludeDisconnectedMembers)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "excludeDisconnectedMembers",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Webchatmemberinfoentitylist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar pageSize int // The number of entries to return per page, or omitted for the default.\nvar pageNumber int // The page number to return, or omitted for the first page.\nvar excludeDisconnectedMembers bool // If true, the results will not contain members who have a DISCONNECTED state.\n// Get the members of a chat conversation.\ndata, response, err := apiInstance.GetWebchatGuestConversationMembers(conversationId, pageSize, pageNumber, excludeDisconnectedMembers)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebchatGuestConversationMembers: %v\\n\", err)\n}"
  },
  "getwebchatguestconversationmessage": {
    "operationId": "getwebchatguestconversationmessage",
    "functionName": "GetWebchatGuestConversationMessage",
    "signature": "GetWebchatGuestConversationMessage(conversationId, messageId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webchatmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar messageId string // messageId\n// Get a web chat conversation message\ndata, response, err := apiInstance.GetWebchatGuestConversationMessage(conversationId, messageId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebchatGuestConversationMessage: %v\\n\", err)\n}"
  },
  "getwebchatguestconversationmessages": {
    "operationId": "getwebchatguestconversationmessages",
    "functionName": "GetWebchatGuestConversationMessages",
    "signature": "GetWebchatGuestConversationMessages(conversationId, after, before, sortOrder, maxResults)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "maxResults",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Webchatmessageentitylist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar after string // If available, get the messages chronologically after the id of this message\nvar before string // If available, get the messages chronologically before the id of this message\nvar sortOrder string // Sort order\nvar maxResults int // Limit the returned number of messages, up to a maximum of 100\n// Get the messages of a chat conversation.\ndata, response, err := apiInstance.GetWebchatGuestConversationMessages(conversationId, after, before, sortOrder, maxResults)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebchatGuestConversationMessages: %v\\n\", err)\n}"
  },
  "getwebchatsettings": {
    "operationId": "getwebchatsettings",
    "functionName": "GetWebchatSettings",
    "signature": "GetWebchatSettings()",
    "return": "Webchatsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\n// Get WebChat deployment settings\ndata, response, err := apiInstance.GetWebchatSettings()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebchatSettings: %v\\n\", err)\n}"
  },
  "patchwebchatguestconversationmediarequest": {
    "operationId": "patchwebchatguestconversationmediarequest",
    "functionName": "PatchWebchatGuestConversationMediarequest",
    "signature": "PatchWebchatGuestConversationMediarequest(conversationId, mediaRequestId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "mediaRequestId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Webchatguestmediarequest",
        "required": "true"
      }
    ],
    "return": "Webchatguestmediarequest",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar mediaRequestId string // mediaRequestId\nvar body platformclientv2.Webchatguestmediarequest // Request\n// Update a media request in the conversation, setting the state to ACCEPTED/DECLINED/ERRORED\ndata, response, err := apiInstance.PatchWebchatGuestConversationMediarequest(conversationId, mediaRequestId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWebchatGuestConversationMediarequest: %v\\n\", err)\n}"
  },
  "postwebchatdeployments": {
    "operationId": "postwebchatdeployments",
    "functionName": "PostWebchatDeployments",
    "signature": "PostWebchatDeployments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Webchatdeployment",
        "required": "true"
      }
    ],
    "return": "Webchatdeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar body platformclientv2.Webchatdeployment // Deployment\n// Create WebChat deployment\ndata, response, err := apiInstance.PostWebchatDeployments(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWebchatDeployments: %v\\n\", err)\n}"
  },
  "postwebchatguestconversationmembermessages": {
    "operationId": "postwebchatguestconversationmembermessages",
    "functionName": "PostWebchatGuestConversationMemberMessages",
    "signature": "PostWebchatGuestConversationMemberMessages(conversationId, memberId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createwebchatmessagerequest",
        "required": "true"
      }
    ],
    "return": "Webchatmessage",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar memberId string // memberId\nvar body platformclientv2.Createwebchatmessagerequest // Message\n// Send a message in a chat conversation.\ndata, response, err := apiInstance.PostWebchatGuestConversationMemberMessages(conversationId, memberId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWebchatGuestConversationMemberMessages: %v\\n\", err)\n}"
  },
  "postwebchatguestconversationmembertyping": {
    "operationId": "postwebchatguestconversationmembertyping",
    "functionName": "PostWebchatGuestConversationMemberTyping",
    "signature": "PostWebchatGuestConversationMemberTyping(conversationId, memberId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webchattyping",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar conversationId string // conversationId\nvar memberId string // memberId\n// Send a typing-indicator in a chat conversation.\ndata, response, err := apiInstance.PostWebchatGuestConversationMemberTyping(conversationId, memberId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWebchatGuestConversationMemberTyping: %v\\n\", err)\n}"
  },
  "postwebchatguestconversations": {
    "operationId": "postwebchatguestconversations",
    "functionName": "PostWebchatGuestConversations",
    "signature": "PostWebchatGuestConversations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createwebchatconversationrequest",
        "required": "true"
      }
    ],
    "return": "Createwebchatconversationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar body platformclientv2.Createwebchatconversationrequest // CreateConversationRequest\n// Create an ACD chat conversation from an external customer.\ndata, response, err := apiInstance.PostWebchatGuestConversations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWebchatGuestConversations: %v\\n\", err)\n}"
  },
  "putwebchatdeployment": {
    "operationId": "putwebchatdeployment",
    "functionName": "PutWebchatDeployment",
    "signature": "PutWebchatDeployment(deploymentId, body)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Webchatdeployment",
        "required": "true"
      }
    ],
    "return": "Webchatdeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar deploymentId string // Deployment Id\nvar body platformclientv2.Webchatdeployment // Deployment\n// Update a WebChat deployment\ndata, response, err := apiInstance.PutWebchatDeployment(deploymentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutWebchatDeployment: %v\\n\", err)\n}"
  },
  "putwebchatsettings": {
    "operationId": "putwebchatsettings",
    "functionName": "PutWebchatSettings",
    "signature": "PutWebchatSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Webchatsettings",
        "required": "true"
      }
    ],
    "return": "Webchatsettings",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebChatApiWithConfig(config)\n\nvar body platformclientv2.Webchatsettings // webChatSettings\n// Update WebChat deployment settings\ndata, response, err := apiInstance.PutWebchatSettings(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutWebchatSettings: %v\\n\", err)\n}"
  },
  "deletewebdeploymentsconfiguration": {
    "operationId": "deletewebdeploymentsconfiguration",
    "functionName": "DeleteWebdeploymentsConfiguration",
    "signature": "DeleteWebdeploymentsConfiguration(configurationId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar configurationId string // The configuration version ID\n// Delete all versions of a configuration\nresponse, err := apiInstance.DeleteWebdeploymentsConfiguration(configurationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWebdeploymentsConfiguration: %v\\n\", err)\n}"
  },
  "deletewebdeploymentsdeployment": {
    "operationId": "deletewebdeploymentsdeployment",
    "functionName": "DeleteWebdeploymentsDeployment",
    "signature": "DeleteWebdeploymentsDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar deploymentId string // The deployment ID\n// Delete a deployment\nresponse, err := apiInstance.DeleteWebdeploymentsDeployment(deploymentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWebdeploymentsDeployment: %v\\n\", err)\n}"
  },
  "deletewebdeploymentsdeploymentcobrowsesessionid": {
    "operationId": "deletewebdeploymentsdeploymentcobrowsesessionid",
    "functionName": "DeleteWebdeploymentsDeploymentCobrowseSessionId",
    "signature": "DeleteWebdeploymentsDeploymentCobrowseSessionId(deploymentId, sessionId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "interface{}",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar deploymentId string // WebMessaging deployment ID\nvar sessionId string // Cobrowse session id or join code\n// Deletes a cobrowse session\ndata, response, err := apiInstance.DeleteWebdeploymentsDeploymentCobrowseSessionId(deploymentId, sessionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWebdeploymentsDeploymentCobrowseSessionId: %v\\n\", err)\n}"
  },
  "deletewebdeploymentstokenrevoke": {
    "operationId": "deletewebdeploymentstokenrevoke",
    "functionName": "DeleteWebdeploymentsTokenRevoke",
    "signature": "DeleteWebdeploymentsTokenRevoke(xJourneySessionId, xJourneySessionType)",
    "parameters": [
      {
        "name": "xJourneySessionId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "xJourneySessionType",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar xJourneySessionId string // The Customer's journey sessionId.\nvar xJourneySessionType string // The Customer's journey session type.\n// Invalidate JWT\nresponse, err := apiInstance.DeleteWebdeploymentsTokenRevoke(xJourneySessionId, xJourneySessionType)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWebdeploymentsTokenRevoke: %v\\n\", err)\n}"
  },
  "getwebdeploymentsconfigurationversion": {
    "operationId": "getwebdeploymentsconfigurationversion",
    "functionName": "GetWebdeploymentsConfigurationVersion",
    "signature": "GetWebdeploymentsConfigurationVersion(configurationId, versionId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webdeploymentconfigurationversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar configurationId string // The configuration version ID\nvar versionId string // The version of the configuration to get\n// Get a configuration version\ndata, response, err := apiInstance.GetWebdeploymentsConfigurationVersion(configurationId, versionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebdeploymentsConfigurationVersion: %v\\n\", err)\n}"
  },
  "getwebdeploymentsconfigurationversions": {
    "operationId": "getwebdeploymentsconfigurationversions",
    "functionName": "GetWebdeploymentsConfigurationVersions",
    "signature": "GetWebdeploymentsConfigurationVersions(configurationId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webdeploymentconfigurationversionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar configurationId string // The configuration version ID\n// Get the versions of a configuration\ndata, response, err := apiInstance.GetWebdeploymentsConfigurationVersions(configurationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebdeploymentsConfigurationVersions: %v\\n\", err)\n}"
  },
  "getwebdeploymentsconfigurationversionsdraft": {
    "operationId": "getwebdeploymentsconfigurationversionsdraft",
    "functionName": "GetWebdeploymentsConfigurationVersionsDraft",
    "signature": "GetWebdeploymentsConfigurationVersionsDraft(configurationId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webdeploymentconfigurationversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar configurationId string // The configuration version ID\n// Get the configuration draft\ndata, response, err := apiInstance.GetWebdeploymentsConfigurationVersionsDraft(configurationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebdeploymentsConfigurationVersionsDraft: %v\\n\", err)\n}"
  },
  "getwebdeploymentsconfigurations": {
    "operationId": "getwebdeploymentsconfigurations",
    "functionName": "GetWebdeploymentsConfigurations",
    "signature": "GetWebdeploymentsConfigurations(showOnlyPublished)",
    "parameters": [
      {
        "name": "showOnlyPublished",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Webdeploymentconfigurationversionentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar showOnlyPublished bool // Get only configuration drafts with published versions\n// View configuration drafts\ndata, response, err := apiInstance.GetWebdeploymentsConfigurations(showOnlyPublished)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebdeploymentsConfigurations: %v\\n\", err)\n}"
  },
  "getwebdeploymentsdeployment": {
    "operationId": "getwebdeploymentsdeployment",
    "functionName": "GetWebdeploymentsDeployment",
    "signature": "GetWebdeploymentsDeployment(deploymentId, expand)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Webdeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar deploymentId string // The deployment ID\nvar expand []string // The specified entity attributes will be filled. Comma separated values expected. \n// Get a deployment\ndata, response, err := apiInstance.GetWebdeploymentsDeployment(deploymentId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebdeploymentsDeployment: %v\\n\", err)\n}"
  },
  "getwebdeploymentsdeploymentcobrowsesessionid": {
    "operationId": "getwebdeploymentsdeploymentcobrowsesessionid",
    "functionName": "GetWebdeploymentsDeploymentCobrowseSessionId",
    "signature": "GetWebdeploymentsDeploymentCobrowseSessionId(deploymentId, sessionId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Cobrowsewebmessagingsession",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar deploymentId string // WebMessaging deployment ID\nvar sessionId string // Cobrowse session id or join code\n// Retrieves a cobrowse session\ndata, response, err := apiInstance.GetWebdeploymentsDeploymentCobrowseSessionId(deploymentId, sessionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebdeploymentsDeploymentCobrowseSessionId: %v\\n\", err)\n}"
  },
  "getwebdeploymentsdeploymentconfigurations": {
    "operationId": "getwebdeploymentsdeploymentconfigurations",
    "functionName": "GetWebdeploymentsDeploymentConfigurations",
    "signature": "GetWebdeploymentsDeploymentConfigurations(deploymentId, varType, expand)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "varType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Webdeploymentactiveconfigurationondeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar deploymentId string // The deployment ID\nvar varType string // Get active configuration on a deployment\nvar expand []string // Expand instructions for the return value\n// Get active configuration for a given deployment\ndata, response, err := apiInstance.GetWebdeploymentsDeploymentConfigurations(deploymentId, varType, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebdeploymentsDeploymentConfigurations: %v\\n\", err)\n}"
  },
  "getwebdeploymentsdeployments": {
    "operationId": "getwebdeploymentsdeployments",
    "functionName": "GetWebdeploymentsDeployments",
    "signature": "GetWebdeploymentsDeployments(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Expandablewebdeploymententitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar expand []string // The specified entity attributes will be filled. Comma separated values expected.\n// Get deployments\ndata, response, err := apiInstance.GetWebdeploymentsDeployments(expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebdeploymentsDeployments: %v\\n\", err)\n}"
  },
  "postwebdeploymentsconfigurationversionsdraftpublish": {
    "operationId": "postwebdeploymentsconfigurationversionsdraftpublish",
    "functionName": "PostWebdeploymentsConfigurationVersionsDraftPublish",
    "signature": "PostWebdeploymentsConfigurationVersionsDraftPublish(configurationId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Webdeploymentconfigurationversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar configurationId string // The configuration version ID\n// Publish the configuration draft and create a new version\ndata, response, err := apiInstance.PostWebdeploymentsConfigurationVersionsDraftPublish(configurationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWebdeploymentsConfigurationVersionsDraftPublish: %v\\n\", err)\n}"
  },
  "postwebdeploymentsconfigurations": {
    "operationId": "postwebdeploymentsconfigurations",
    "functionName": "PostWebdeploymentsConfigurations",
    "signature": "PostWebdeploymentsConfigurations(configurationVersion)",
    "parameters": [
      {
        "name": "configurationVersion",
        "type": "Webdeploymentconfigurationversion",
        "required": "true"
      }
    ],
    "return": "Webdeploymentconfigurationversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar configurationVersion platformclientv2.Webdeploymentconfigurationversion // \n// Create a configuration draft\ndata, response, err := apiInstance.PostWebdeploymentsConfigurations(configurationVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWebdeploymentsConfigurations: %v\\n\", err)\n}"
  },
  "postwebdeploymentsdeployments": {
    "operationId": "postwebdeploymentsdeployments",
    "functionName": "PostWebdeploymentsDeployments",
    "signature": "PostWebdeploymentsDeployments(deployment)",
    "parameters": [
      {
        "name": "deployment",
        "type": "Webdeployment",
        "required": "true"
      }
    ],
    "return": "Webdeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar deployment platformclientv2.Webdeployment // \n// Create a deployment\ndata, response, err := apiInstance.PostWebdeploymentsDeployments(deployment)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWebdeploymentsDeployments: %v\\n\", err)\n}"
  },
  "postwebdeploymentstokenoauthcodegrantjwtexchange": {
    "operationId": "postwebdeploymentstokenoauthcodegrantjwtexchange",
    "functionName": "PostWebdeploymentsTokenOauthcodegrantjwtexchange",
    "signature": "PostWebdeploymentsTokenOauthcodegrantjwtexchange(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Webdeploymentsoauthexchangerequest",
        "required": "true"
      }
    ],
    "return": "Webdeploymentsauthorizationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar body platformclientv2.Webdeploymentsoauthexchangerequest // webDeploymentsOAuthExchangeRequest\n// Exchange an oAuth code (obtained using the Authorization Code Flow) for a JWT that can be used by webdeployments.\ndata, response, err := apiInstance.PostWebdeploymentsTokenOauthcodegrantjwtexchange(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWebdeploymentsTokenOauthcodegrantjwtexchange: %v\\n\", err)\n}"
  },
  "postwebdeploymentstokenrefresh": {
    "operationId": "postwebdeploymentstokenrefresh",
    "functionName": "PostWebdeploymentsTokenRefresh",
    "signature": "PostWebdeploymentsTokenRefresh(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Webdeploymentsrefreshjwtrequest",
        "required": "false"
      }
    ],
    "return": "Signeddata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar body platformclientv2.Webdeploymentsrefreshjwtrequest // \n// Refresh a JWT.\ndata, response, err := apiInstance.PostWebdeploymentsTokenRefresh(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWebdeploymentsTokenRefresh: %v\\n\", err)\n}"
  },
  "putwebdeploymentsconfigurationversionsdraft": {
    "operationId": "putwebdeploymentsconfigurationversionsdraft",
    "functionName": "PutWebdeploymentsConfigurationVersionsDraft",
    "signature": "PutWebdeploymentsConfigurationVersionsDraft(configurationId, configurationVersion)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "configurationVersion",
        "type": "Webdeploymentconfigurationversion",
        "required": "true"
      }
    ],
    "return": "Webdeploymentconfigurationversion",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar configurationId string // The configuration version ID\nvar configurationVersion platformclientv2.Webdeploymentconfigurationversion // \n// Update the configuration draft\ndata, response, err := apiInstance.PutWebdeploymentsConfigurationVersionsDraft(configurationId, configurationVersion)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutWebdeploymentsConfigurationVersionsDraft: %v\\n\", err)\n}"
  },
  "putwebdeploymentsdeployment": {
    "operationId": "putwebdeploymentsdeployment",
    "functionName": "PutWebdeploymentsDeployment",
    "signature": "PutWebdeploymentsDeployment(deploymentId, deployment)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deployment",
        "type": "Webdeployment",
        "required": "true"
      }
    ],
    "return": "Webdeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebDeploymentsApiWithConfig(config)\n\nvar deploymentId string // The deployment ID\nvar deployment platformclientv2.Webdeployment // \n// Update a deployment\ndata, response, err := apiInstance.PutWebdeploymentsDeployment(deploymentId, deployment)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutWebdeploymentsDeployment: %v\\n\", err)\n}"
  },
  "getwebmessagingmessages": {
    "operationId": "getwebmessagingmessages",
    "functionName": "GetWebmessagingMessages",
    "signature": "GetWebmessagingMessages(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "Webmessagingmessageentitylist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWebMessagingApiWithConfig(config)\n\nvar pageSize int // Page size\nvar pageNumber int // Page number\n// Get the messages for a web messaging session.\ndata, response, err := apiInstance.GetWebmessagingMessages(pageSize, pageNumber)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWebmessagingMessages: %v\\n\", err)\n}"
  },
  "deletewidgetsdeployment": {
    "operationId": "deletewidgetsdeployment",
    "functionName": "DeleteWidgetsDeployment",
    "signature": "DeleteWidgetsDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWidgetsApiWithConfig(config)\n\nvar deploymentId string // Widget Config Id\n// Delete a Widget deployment\nresponse, err := apiInstance.DeleteWidgetsDeployment(deploymentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWidgetsDeployment: %v\\n\", err)\n}"
  },
  "getwidgetsdeployment": {
    "operationId": "getwidgetsdeployment",
    "functionName": "GetWidgetsDeployment",
    "signature": "GetWidgetsDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Widgetdeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWidgetsApiWithConfig(config)\n\nvar deploymentId string // Widget Config Id\n// Get a Widget deployment\ndata, response, err := apiInstance.GetWidgetsDeployment(deploymentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWidgetsDeployment: %v\\n\", err)\n}"
  },
  "getwidgetsdeployments": {
    "operationId": "getwidgetsdeployments",
    "functionName": "GetWidgetsDeployments",
    "signature": "GetWidgetsDeployments()",
    "return": "Widgetdeploymententitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWidgetsApiWithConfig(config)\n\n// List Widget deployments\ndata, response, err := apiInstance.GetWidgetsDeployments()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWidgetsDeployments: %v\\n\", err)\n}"
  },
  "postwidgetsdeployments": {
    "operationId": "postwidgetsdeployments",
    "functionName": "PostWidgetsDeployments",
    "signature": "PostWidgetsDeployments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Widgetdeployment",
        "required": "true"
      }
    ],
    "return": "Widgetdeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWidgetsApiWithConfig(config)\n\nvar body platformclientv2.Widgetdeployment // Deployment\n// Create Widget deployment\ndata, response, err := apiInstance.PostWidgetsDeployments(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWidgetsDeployments: %v\\n\", err)\n}"
  },
  "putwidgetsdeployment": {
    "operationId": "putwidgetsdeployment",
    "functionName": "PutWidgetsDeployment",
    "signature": "PutWidgetsDeployment(deploymentId, body)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Widgetdeployment",
        "required": "true"
      }
    ],
    "return": "Widgetdeployment",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWidgetsApiWithConfig(config)\n\nvar deploymentId string // Widget Config Id\nvar body platformclientv2.Widgetdeployment // Deployment\n// Update a Widget deployment\ndata, response, err := apiInstance.PutWidgetsDeployment(deploymentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutWidgetsDeployment: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementbusinessunit": {
    "operationId": "deleteworkforcemanagementbusinessunit",
    "functionName": "DeleteWorkforcemanagementBusinessunit",
    "signature": "DeleteWorkforcemanagementBusinessunit(businessUnitId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n// Delete business unit\nresponse, err := apiInstance.DeleteWorkforcemanagementBusinessunit(businessUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementBusinessunit: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementbusinessunitactivitycode": {
    "operationId": "deleteworkforcemanagementbusinessunitactivitycode",
    "functionName": "DeleteWorkforcemanagementBusinessunitActivitycode",
    "signature": "DeleteWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "activityCodeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nvar activityCodeId string // The ID of the activity code to delete\n// Deletes an activity code\nresponse, err := apiInstance.DeleteWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementBusinessunitActivitycode: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementbusinessunitplanninggroup": {
    "operationId": "deleteworkforcemanagementbusinessunitplanninggroup",
    "functionName": "DeleteWorkforcemanagementBusinessunitPlanninggroup",
    "signature": "DeleteWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "planningGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\nvar planningGroupId string // The ID of a planning group to delete\n// Deletes the planning group\nresponse, err := apiInstance.DeleteWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementBusinessunitPlanninggroup: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementbusinessunitschedulingrun": {
    "operationId": "deleteworkforcemanagementbusinessunitschedulingrun",
    "functionName": "DeleteWorkforcemanagementBusinessunitSchedulingRun",
    "signature": "DeleteWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar runId string // The ID of the schedule run\n// Cancel a scheduling run\nresponse, err := apiInstance.DeleteWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementBusinessunitSchedulingRun: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementbusinessunitservicegoaltemplate": {
    "operationId": "deleteworkforcemanagementbusinessunitservicegoaltemplate",
    "functionName": "DeleteWorkforcemanagementBusinessunitServicegoaltemplate",
    "signature": "DeleteWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "serviceGoalTemplateId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\nvar serviceGoalTemplateId string // The ID of the service goal template to delete\n// Delete a service goal template\nresponse, err := apiInstance.DeleteWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementBusinessunitServicegoaltemplate: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementbusinessunitweekschedule": {
    "operationId": "deleteworkforcemanagementbusinessunitweekschedule",
    "functionName": "DeleteWorkforcemanagementBusinessunitWeekSchedule",
    "signature": "DeleteWorkforcemanagementBusinessunitWeekSchedule(businessUnitId, weekId, scheduleId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Buasyncscheduleresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule\n// Delete a schedule\ndata, response, err := apiInstance.DeleteWorkforcemanagementBusinessunitWeekSchedule(businessUnitId, weekId, scheduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementBusinessunitWeekSchedule: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementbusinessunitweekshorttermforecast": {
    "operationId": "deleteworkforcemanagementbusinessunitweekshorttermforecast",
    "functionName": "DeleteWorkforcemanagementBusinessunitWeekShorttermforecast",
    "signature": "DeleteWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId, weekDateId, forecastId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar forecastId string // The ID of the forecast\n// Delete a short term forecast\nresponse, err := apiInstance.DeleteWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId, weekDateId, forecastId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementBusinessunitWeekShorttermforecast: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementcalendarurlics": {
    "operationId": "deleteworkforcemanagementcalendarurlics",
    "functionName": "DeleteWorkforcemanagementCalendarUrlIcs",
    "signature": "DeleteWorkforcemanagementCalendarUrlIcs()",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\n// Disable generated calendar link for the current user\nresponse, err := apiInstance.DeleteWorkforcemanagementCalendarUrlIcs()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementCalendarUrlIcs: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementmanagementunit": {
    "operationId": "deleteworkforcemanagementmanagementunit",
    "functionName": "DeleteWorkforcemanagementManagementunit",
    "signature": "DeleteWorkforcemanagementManagementunit(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n// Delete management unit\nresponse, err := apiInstance.DeleteWorkforcemanagementManagementunit(managementUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementManagementunit: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementmanagementunittimeofflimit": {
    "operationId": "deleteworkforcemanagementmanagementunittimeofflimit",
    "functionName": "DeleteWorkforcemanagementManagementunitTimeofflimit",
    "signature": "DeleteWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffLimitId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar timeOffLimitId string // The ID of the time off limit object to delete\n// Deletes a time off limit object\nresponse, err := apiInstance.DeleteWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementManagementunitTimeofflimit: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementmanagementunittimeoffplan": {
    "operationId": "deleteworkforcemanagementmanagementunittimeoffplan",
    "functionName": "DeleteWorkforcemanagementManagementunitTimeoffplan",
    "signature": "DeleteWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffPlanId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\nvar timeOffPlanId string // The ID of the time off plan to delete\n// Deletes a time off plan\nresponse, err := apiInstance.DeleteWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementManagementunitTimeoffplan: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementmanagementunitworkplan": {
    "operationId": "deleteworkforcemanagementmanagementunitworkplan",
    "functionName": "DeleteWorkforcemanagementManagementunitWorkplan",
    "signature": "DeleteWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar workPlanId string // The ID of the work plan to delete\n// Delete a work plan\nresponse, err := apiInstance.DeleteWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementManagementunitWorkplan: %v\\n\", err)\n}"
  },
  "deleteworkforcemanagementmanagementunitworkplanrotation": {
    "operationId": "deleteworkforcemanagementmanagementunitworkplanrotation",
    "functionName": "DeleteWorkforcemanagementManagementunitWorkplanrotation",
    "signature": "DeleteWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanRotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar workPlanRotationId string // The ID of the work plan rotation to be deleted\n// Delete a work plan rotation\nresponse, err := apiInstance.DeleteWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling DeleteWorkforcemanagementManagementunitWorkplanrotation: %v\\n\", err)\n}"
  },
  "getworkforcemanagementadherence": {
    "operationId": "getworkforcemanagementadherence",
    "functionName": "GetWorkforcemanagementAdherence",
    "signature": "GetWorkforcemanagementAdherence(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "[]Userscheduleadherence",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar userId []string // User Id(s) for which to fetch current schedule adherence information.  Min 1, Max of 100 userIds per request\n// Get a list of UserScheduleAdherence records for the requested users\ndata, response, err := apiInstance.GetWorkforcemanagementAdherence(userId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementAdherence: %v\\n\", err)\n}"
  },
  "getworkforcemanagementadherenceexplanation": {
    "operationId": "getworkforcemanagementadherenceexplanation",
    "functionName": "GetWorkforcemanagementAdherenceExplanation",
    "signature": "GetWorkforcemanagementAdherenceExplanation(explanationId)",
    "parameters": [
      {
        "name": "explanationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Adherenceexplanationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar explanationId string // The ID of the explanation to update\n// Get an adherence explanation for the current user\ndata, response, err := apiInstance.GetWorkforcemanagementAdherenceExplanation(explanationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementAdherenceExplanation: %v\\n\", err)\n}"
  },
  "getworkforcemanagementadherenceexplanationsjob": {
    "operationId": "getworkforcemanagementadherenceexplanationsjob",
    "functionName": "GetWorkforcemanagementAdherenceExplanationsJob",
    "signature": "GetWorkforcemanagementAdherenceExplanationsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Adherenceexplanationjob",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar jobId string // The ID of the job\n// Query the status of an adherence explanation operation. Only the user who started the operation can query the status\ndata, response, err := apiInstance.GetWorkforcemanagementAdherenceExplanationsJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementAdherenceExplanationsJob: %v\\n\", err)\n}"
  },
  "getworkforcemanagementadherencehistoricalbulkjob": {
    "operationId": "getworkforcemanagementadherencehistoricalbulkjob",
    "functionName": "GetWorkforcemanagementAdherenceHistoricalBulkJob",
    "signature": "GetWorkforcemanagementAdherenceHistoricalBulkJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Wfmhistoricaladherencebulkresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar jobId string // ID of the job to get\n// Request to fetch the status of the historical adherence bulk job. Only the user who started the operation can query the status\ndata, response, err := apiInstance.GetWorkforcemanagementAdherenceHistoricalBulkJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementAdherenceHistoricalBulkJob: %v\\n\", err)\n}"
  },
  "getworkforcemanagementadherencehistoricaljob": {
    "operationId": "getworkforcemanagementadherencehistoricaljob",
    "functionName": "GetWorkforcemanagementAdherenceHistoricalJob",
    "signature": "GetWorkforcemanagementAdherenceHistoricalJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Wfmhistoricaladherenceresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar jobId string // jobId\n// Query the status of a historical adherence request operation. Only the user who started the operation can query the status\ndata, response, err := apiInstance.GetWorkforcemanagementAdherenceHistoricalJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementAdherenceHistoricalJob: %v\\n\", err)\n}"
  },
  "getworkforcemanagementadhocmodelingjob": {
    "operationId": "getworkforcemanagementadhocmodelingjob",
    "functionName": "GetWorkforcemanagementAdhocmodelingjob",
    "signature": "GetWorkforcemanagementAdhocmodelingjob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Modelingstatusresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar jobId string // The id of the modeling job\n// Get status of the modeling job\ndata, response, err := apiInstance.GetWorkforcemanagementAdhocmodelingjob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementAdhocmodelingjob: %v\\n\", err)\n}"
  },
  "getworkforcemanagementagentadherenceexplanation": {
    "operationId": "getworkforcemanagementagentadherenceexplanation",
    "functionName": "GetWorkforcemanagementAgentAdherenceExplanation",
    "signature": "GetWorkforcemanagementAgentAdherenceExplanation(agentId, explanationId)",
    "parameters": [
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "explanationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Adherenceexplanationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar agentId string // The ID of the agent to query\nvar explanationId string // The ID of the explanation to update\n// Get an adherence explanation\ndata, response, err := apiInstance.GetWorkforcemanagementAgentAdherenceExplanation(agentId, explanationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementAgentAdherenceExplanation: %v\\n\", err)\n}"
  },
  "getworkforcemanagementagentmanagementunit": {
    "operationId": "getworkforcemanagementagentmanagementunit",
    "functionName": "GetWorkforcemanagementAgentManagementunit",
    "signature": "GetWorkforcemanagementAgentManagementunit(agentId)",
    "parameters": [
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Agentmanagementunitreference",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar agentId string // The ID of the agent to look up\n// Get the management unit to which the agent belongs\ndata, response, err := apiInstance.GetWorkforcemanagementAgentManagementunit(agentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementAgentManagementunit: %v\\n\", err)\n}"
  },
  "getworkforcemanagementagentsmemanagementunit": {
    "operationId": "getworkforcemanagementagentsmemanagementunit",
    "functionName": "GetWorkforcemanagementAgentsMeManagementunit",
    "signature": "GetWorkforcemanagementAgentsMeManagementunit()",
    "return": "Agentmanagementunitreference",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\n// Get the management unit to which the currently logged in agent belongs\ndata, response, err := apiInstance.GetWorkforcemanagementAgentsMeManagementunit()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementAgentsMeManagementunit: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunit": {
    "operationId": "getworkforcemanagementbusinessunit",
    "functionName": "GetWorkforcemanagementBusinessunit",
    "signature": "GetWorkforcemanagementBusinessunit(businessUnitId, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Businessunitresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nvar expand []string // Include to access additional data on the business unit\n// Get business unit\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunit(businessUnitId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunit: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitactivitycode": {
    "operationId": "getworkforcemanagementbusinessunitactivitycode",
    "functionName": "GetWorkforcemanagementBusinessunitActivitycode",
    "signature": "GetWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "activityCodeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Businessunitactivitycode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nvar activityCodeId string // The ID of the activity code to fetch\n// Get an activity code\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitActivitycode: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitactivitycodes": {
    "operationId": "getworkforcemanagementbusinessunitactivitycodes",
    "functionName": "GetWorkforcemanagementBusinessunitActivitycodes",
    "signature": "GetWorkforcemanagementBusinessunitActivitycodes(businessUnitId, forceDownloadService)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Businessunitactivitycodelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\n// Get activity codes\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitActivitycodes(businessUnitId, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitActivitycodes: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitintradayplanninggroups": {
    "operationId": "getworkforcemanagementbusinessunitintradayplanninggroups",
    "functionName": "GetWorkforcemanagementBusinessunitIntradayPlanninggroups",
    "signature": "GetWorkforcemanagementBusinessunitIntradayPlanninggroups(businessUnitId, date)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "date",
        "type": "time.Time",
        "required": "true"
      }
    ],
    "return": "Wfmintradayplanninggrouplisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar date time.Time // yyyy-MM-dd date string interpreted in the configured business unit time zone. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n// Get intraday planning groups for the given date\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitIntradayPlanninggroups(businessUnitId, date)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitIntradayPlanninggroups: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitmanagementunits": {
    "operationId": "getworkforcemanagementbusinessunitmanagementunits",
    "functionName": "GetWorkforcemanagementBusinessunitManagementunits",
    "signature": "GetWorkforcemanagementBusinessunitManagementunits(businessUnitId, feature, divisionId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Managementunitlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nvar feature string // If specified, the list of management units for which the user is authorized to use the requested feature will be returned\nvar divisionId string // If specified, the list of management units belonging to the specified division will be returned\n// Get all authorized management units in the business unit\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitManagementunits(businessUnitId, feature, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitManagementunits: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitplanninggroup": {
    "operationId": "getworkforcemanagementbusinessunitplanninggroup",
    "functionName": "GetWorkforcemanagementBusinessunitPlanninggroup",
    "signature": "GetWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "planningGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Planninggroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\nvar planningGroupId string // The ID of a planning group to fetch\n// Get a planning group\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitPlanninggroup: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitplanninggroups": {
    "operationId": "getworkforcemanagementbusinessunitplanninggroups",
    "functionName": "GetWorkforcemanagementBusinessunitPlanninggroups",
    "signature": "GetWorkforcemanagementBusinessunitPlanninggroups(businessUnitId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Planninggrouplist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\n// Gets list of planning groups\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitPlanninggroups(businessUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitPlanninggroups: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitschedulingrun": {
    "operationId": "getworkforcemanagementbusinessunitschedulingrun",
    "functionName": "GetWorkforcemanagementBusinessunitSchedulingRun",
    "signature": "GetWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Buschedulerun",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar runId string // The ID of the schedule run\n// Get a scheduling run\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitSchedulingRun: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitschedulingrunresult": {
    "operationId": "getworkforcemanagementbusinessunitschedulingrunresult",
    "functionName": "GetWorkforcemanagementBusinessunitSchedulingRunResult",
    "signature": "GetWorkforcemanagementBusinessunitSchedulingRunResult(businessUnitId, runId, managementUnitIds, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "managementUnitIds",
        "type": "[]string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "true"
      }
    ],
    "return": "Burescheduleresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar runId string // The ID of the schedule run\nvar managementUnitIds []string // The IDs of the management units for which to fetch the reschedule results\nvar expand []string // The fields to expand. Omitting will return an empty response\n// Get the result of a rescheduling operation\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitSchedulingRunResult(businessUnitId, runId, managementUnitIds, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitSchedulingRunResult: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitschedulingruns": {
    "operationId": "getworkforcemanagementbusinessunitschedulingruns",
    "functionName": "GetWorkforcemanagementBusinessunitSchedulingRuns",
    "signature": "GetWorkforcemanagementBusinessunitSchedulingRuns(businessUnitId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Buschedulerunlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\n// Get the list of scheduling runs\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitSchedulingRuns(businessUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitSchedulingRuns: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitservicegoaltemplate": {
    "operationId": "getworkforcemanagementbusinessunitservicegoaltemplate",
    "functionName": "GetWorkforcemanagementBusinessunitServicegoaltemplate",
    "signature": "GetWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "serviceGoalTemplateId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Servicegoaltemplate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\nvar serviceGoalTemplateId string // The ID of a service goal template to fetch\nvar expand []string // Include to access additional data on the service goal template\n// Get a service goal template\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitServicegoaltemplate: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitservicegoaltemplates": {
    "operationId": "getworkforcemanagementbusinessunitservicegoaltemplates",
    "functionName": "GetWorkforcemanagementBusinessunitServicegoaltemplates",
    "signature": "GetWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Servicegoaltemplatelist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\nvar expand []string // Include to access additional data on the service goal template\n// Gets list of service goal templates\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitServicegoaltemplates: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekschedule": {
    "operationId": "getworkforcemanagementbusinessunitweekschedule",
    "functionName": "GetWorkforcemanagementBusinessunitWeekSchedule",
    "signature": "GetWorkforcemanagementBusinessunitWeekSchedule(businessUnitId, weekId, scheduleId, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Buschedulemetadata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule\nvar expand string // expand\n// Get the metadata for the schedule, describing which management units and agents are in the scheduleSchedule data can then be loaded with the query route\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekSchedule(businessUnitId, weekId, scheduleId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekSchedule: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekschedulegenerationresults": {
    "operationId": "getworkforcemanagementbusinessunitweekschedulegenerationresults",
    "functionName": "GetWorkforcemanagementBusinessunitWeekScheduleGenerationresults",
    "signature": "GetWorkforcemanagementBusinessunitWeekScheduleGenerationresults(businessUnitId, weekId, scheduleId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Schedulegenerationresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule\n// Get the generation results for a generated schedule\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekScheduleGenerationresults(businessUnitId, weekId, scheduleId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekScheduleGenerationresults: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekscheduleheadcountforecast": {
    "operationId": "getworkforcemanagementbusinessunitweekscheduleheadcountforecast",
    "functionName": "GetWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast",
    "signature": "GetWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast(businessUnitId, weekId, scheduleId, forceDownload)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDownload",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Buheadcountforecastresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule\nvar forceDownload bool // Whether to force the result to come via download url.  For testing purposes only\n// Get the headcount forecast by planning group for the schedule\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast(businessUnitId, weekId, scheduleId, forceDownload)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekschedulehistoryagent": {
    "operationId": "getworkforcemanagementbusinessunitweekschedulehistoryagent",
    "functionName": "GetWorkforcemanagementBusinessunitWeekScheduleHistoryAgent",
    "signature": "GetWorkforcemanagementBusinessunitWeekScheduleHistoryAgent(businessUnitId, weekId, scheduleId, agentId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Buagentschedulehistoryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule\nvar agentId string // THe ID of the agent\n// Loads agent's schedule history.\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekScheduleHistoryAgent(businessUnitId, weekId, scheduleId, agentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekScheduleHistoryAgent: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekschedules": {
    "operationId": "getworkforcemanagementbusinessunitweekschedules",
    "functionName": "GetWorkforcemanagementBusinessunitWeekSchedules",
    "signature": "GetWorkforcemanagementBusinessunitWeekSchedules(businessUnitId, weekId, includeOnlyPublished, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeOnlyPublished",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Buschedulelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId string // First day of schedule week in yyyy-MM-dd format, or 'recent' (without quotes) to get recent schedules\nvar includeOnlyPublished bool // includeOnlyPublished\nvar expand string // expand\n// Get the list of week schedules for the specified week\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekSchedules(businessUnitId, weekId, includeOnlyPublished, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekSchedules: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecast": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecast",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecast",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId, weekDateId, forecastId, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Bushorttermforecast",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar forecastId string // The ID of the forecast\nvar expand []string // Include to access additional data on the forecast\n// Get a short term forecast\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId, weekDateId, forecastId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekShorttermforecast: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecastdata": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecastdata",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecastData",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecastData(businessUnitId, weekDateId, forecastId, weekNumber, forceDownloadService)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Buforecastresultresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar forecastId string // The ID of the forecast\nvar weekNumber int // The week number to fetch (for multi-week forecasts)\nvar forceDownloadService bool // Force the result of this operation to be sent via download service.  For testing/app development purposes\n// Get the result of a short term forecast calculation\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecastData(businessUnitId, weekDateId, forecastId, weekNumber, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekShorttermforecastData: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecastgenerationresults": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecastgenerationresults",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults(businessUnitId, weekDateId, forecastId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Buforecastgenerationresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar forecastId string // The ID of the forecast\n// Gets the forecast generation results\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults(businessUnitId, weekDateId, forecastId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecastlongtermforecastdata": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecastlongtermforecastdata",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata(businessUnitId, weekDateId, forecastId, forceDownloadService)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Longtermforecastresultresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar forecastId string // The ID of the forecast\nvar forceDownloadService bool // Force the result of this operation to be sent via download service.  For testing/app development purposes\n// Get the result of a long term forecast calculation\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata(businessUnitId, weekDateId, forecastId, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecastplanninggroups": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecastplanninggroups",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups(businessUnitId, weekDateId, forecastId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Forecastplanninggroupsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar forecastId string // The ID of the forecast\n// Gets the forecast planning group snapshot\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups(businessUnitId, weekDateId, forecastId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecasts": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecasts",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecasts",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecasts(businessUnitId, weekDateId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Bushorttermforecastlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId string // The week start date of the forecast in yyyy-MM-dd format or 'recent' (without quotes) to fetch recent forecasts\n// Get short term forecasts\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecasts(businessUnitId, weekDateId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitWeekShorttermforecasts: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunits": {
    "operationId": "getworkforcemanagementbusinessunits",
    "functionName": "GetWorkforcemanagementBusinessunits",
    "signature": "GetWorkforcemanagementBusinessunits(feature, divisionId)",
    "parameters": [
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Businessunitlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar feature string // If specified, the list of business units for which the user is authorized to use the requested feature will be returned\nvar divisionId string // If specified, the list of business units belonging to the specified division will be returned\n// Get business units\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunits(feature, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunits: %v\\n\", err)\n}"
  },
  "getworkforcemanagementbusinessunitsdivisionviews": {
    "operationId": "getworkforcemanagementbusinessunitsdivisionviews",
    "functionName": "GetWorkforcemanagementBusinessunitsDivisionviews",
    "signature": "GetWorkforcemanagementBusinessunitsDivisionviews(divisionId)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Businessunitlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar divisionId []string // The divisionIds to filter by. If omitted, will return business units in all divisions\n// Get business units across divisions\ndata, response, err := apiInstance.GetWorkforcemanagementBusinessunitsDivisionviews(divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementBusinessunitsDivisionviews: %v\\n\", err)\n}"
  },
  "getworkforcemanagementcalendardataics": {
    "operationId": "getworkforcemanagementcalendardataics",
    "functionName": "GetWorkforcemanagementCalendarDataIcs",
    "signature": "GetWorkforcemanagementCalendarDataIcs(calendarId)",
    "parameters": [
      {
        "name": "calendarId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar calendarId string // The id of the ics-formatted calendar\n// Get ics formatted calendar based on shareable link\ndata, response, err := apiInstance.GetWorkforcemanagementCalendarDataIcs(calendarId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementCalendarDataIcs: %v\\n\", err)\n}"
  },
  "getworkforcemanagementcalendarurlics": {
    "operationId": "getworkforcemanagementcalendarurlics",
    "functionName": "GetWorkforcemanagementCalendarUrlIcs",
    "signature": "GetWorkforcemanagementCalendarUrlIcs()",
    "return": "Calendarurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\n// Get existing calendar link for the current user\ndata, response, err := apiInstance.GetWorkforcemanagementCalendarUrlIcs()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementCalendarUrlIcs: %v\\n\", err)\n}"
  },
  "getworkforcemanagementhistoricaldatadeletejob": {
    "operationId": "getworkforcemanagementhistoricaldatadeletejob",
    "functionName": "GetWorkforcemanagementHistoricaldataDeletejob",
    "signature": "GetWorkforcemanagementHistoricaldataDeletejob()",
    "return": "Historicalimportdeletejobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\n// Retrieves delete job status for historical data imports of the organization\ndata, response, err := apiInstance.GetWorkforcemanagementHistoricaldataDeletejob()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementHistoricaldataDeletejob: %v\\n\", err)\n}"
  },
  "getworkforcemanagementhistoricaldataimportstatus": {
    "operationId": "getworkforcemanagementhistoricaldataimportstatus",
    "functionName": "GetWorkforcemanagementHistoricaldataImportstatus",
    "signature": "GetWorkforcemanagementHistoricaldataImportstatus()",
    "return": "Historicalimportstatuslisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\n// Retrieves status of the historical data imports of the organization\ndata, response, err := apiInstance.GetWorkforcemanagementHistoricaldataImportstatus()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementHistoricaldataImportstatus: %v\\n\", err)\n}"
  },
  "getworkforcemanagementintegrationshris": {
    "operationId": "getworkforcemanagementintegrationshris",
    "functionName": "GetWorkforcemanagementIntegrationsHris",
    "signature": "GetWorkforcemanagementIntegrationsHris()",
    "return": "Wfmintegrationlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\n// Get integrations\ndata, response, err := apiInstance.GetWorkforcemanagementIntegrationsHris()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementIntegrationsHris: %v\\n\", err)\n}"
  },
  "getworkforcemanagementintegrationshristimeofftypesjob": {
    "operationId": "getworkforcemanagementintegrationshristimeofftypesjob",
    "functionName": "GetWorkforcemanagementIntegrationsHrisTimeofftypesJob",
    "signature": "GetWorkforcemanagementIntegrationsHrisTimeofftypesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Hristimeofftypesjobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar jobId string // The ID of the job.\n// Query the results of time off types job\ndata, response, err := apiInstance.GetWorkforcemanagementIntegrationsHrisTimeofftypesJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementIntegrationsHrisTimeofftypesJob: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunit": {
    "operationId": "getworkforcemanagementmanagementunit",
    "functionName": "GetWorkforcemanagementManagementunit",
    "signature": "GetWorkforcemanagementManagementunit(managementUnitId, expand)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Managementunit",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar expand []string // \n// Get management unit\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunit(managementUnitId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunit: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitactivitycodes": {
    "operationId": "getworkforcemanagementmanagementunitactivitycodes",
    "functionName": "GetWorkforcemanagementManagementunitActivitycodes",
    "signature": "GetWorkforcemanagementManagementunitActivitycodes(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Activitycodecontainer",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n// Deprecated: Instead use /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes. Get the list of activity codes\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitActivitycodes(managementUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitActivitycodes: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitadherence": {
    "operationId": "getworkforcemanagementmanagementunitadherence",
    "functionName": "GetWorkforcemanagementManagementunitAdherence",
    "signature": "GetWorkforcemanagementManagementunitAdherence(managementUnitId, forceDownloadService)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Userscheduleadherencelisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\nvar forceDownloadService bool // Force the result of this operation to be sent via download service.  For testing/app development purposes\n// Get a list of user schedule adherence records for the requested management unit\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitAdherence(managementUnitId, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitAdherence: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitagent": {
    "operationId": "getworkforcemanagementmanagementunitagent",
    "functionName": "GetWorkforcemanagementManagementunitAgent",
    "signature": "GetWorkforcemanagementManagementunitAgent(managementUnitId, agentId, excludeCapabilities)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "excludeCapabilities",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Wfmagent",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar agentId string // The agent id\nvar excludeCapabilities bool // Excludes all capabilities of the agent such as queues, languages, and skills\n// Get data for agent in the management unit\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitAgent(managementUnitId, agentId, excludeCapabilities)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitAgent: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitagentshifttrades": {
    "operationId": "getworkforcemanagementmanagementunitagentshifttrades",
    "functionName": "GetWorkforcemanagementManagementunitAgentShifttrades",
    "signature": "GetWorkforcemanagementManagementunitAgentShifttrades(managementUnitId, agentId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Shifttradelistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar agentId string // The agent id\n// Gets all the shift trades for a given agent\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitAgentShifttrades(managementUnitId, agentId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitAgentShifttrades: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitshifttradesmatched": {
    "operationId": "getworkforcemanagementmanagementunitshifttradesmatched",
    "functionName": "GetWorkforcemanagementManagementunitShifttradesMatched",
    "signature": "GetWorkforcemanagementManagementunitShifttradesMatched(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Shifttradematchessummaryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n// Gets a summary of all shift trades in the matched state\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitShifttradesMatched(managementUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitShifttradesMatched: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitshifttradesusers": {
    "operationId": "getworkforcemanagementmanagementunitshifttradesusers",
    "functionName": "GetWorkforcemanagementManagementunitShifttradesUsers",
    "signature": "GetWorkforcemanagementManagementunitShifttradesUsers(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Wfmuserentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n// Gets list of users available for whom you can send direct shift trade requests\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitShifttradesUsers(managementUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitShifttradesUsers: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunittimeofflimit": {
    "operationId": "getworkforcemanagementmanagementunittimeofflimit",
    "functionName": "GetWorkforcemanagementManagementunitTimeofflimit",
    "signature": "GetWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffLimitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Timeofflimit",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar timeOffLimitId string // The ID of the time off limit to fetch\n// Gets a time off limit object\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitTimeofflimit: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunittimeofflimits": {
    "operationId": "getworkforcemanagementmanagementunittimeofflimits",
    "functionName": "GetWorkforcemanagementManagementunitTimeofflimits",
    "signature": "GetWorkforcemanagementManagementunitTimeofflimits(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Timeofflimitlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\n// Gets a list of time off limit objects under management unit.\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitTimeofflimits(managementUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitTimeofflimits: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunittimeoffplan": {
    "operationId": "getworkforcemanagementmanagementunittimeoffplan",
    "functionName": "GetWorkforcemanagementManagementunitTimeoffplan",
    "signature": "GetWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffPlanId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Timeoffplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\nvar timeOffPlanId string // The ID of the time off plan to fetch\n// Gets a time off plan\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitTimeoffplan: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunittimeoffplans": {
    "operationId": "getworkforcemanagementmanagementunittimeoffplans",
    "functionName": "GetWorkforcemanagementManagementunitTimeoffplans",
    "signature": "GetWorkforcemanagementManagementunitTimeoffplans(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Timeoffplanlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\n// Gets a list of time off plans\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitTimeoffplans(managementUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitTimeoffplans: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitusertimeoffrequest": {
    "operationId": "getworkforcemanagementmanagementunitusertimeoffrequest",
    "functionName": "GetWorkforcemanagementManagementunitUserTimeoffrequest",
    "signature": "GetWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId, userId, timeOffRequestId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Timeoffrequestresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar userId string // The userId to whom the Time Off Request applies.\nvar timeOffRequestId string // Time Off Request Id\n// Get a time off request\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId, userId, timeOffRequestId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitUserTimeoffrequest: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitusertimeoffrequesttimeofflimits": {
    "operationId": "getworkforcemanagementmanagementunitusertimeoffrequesttimeofflimits",
    "functionName": "GetWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits",
    "signature": "GetWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits(managementUnitId, userId, timeOffRequestId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Querytimeofflimitvaluesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar userId string // The userId to whom the time off request applies.\nvar timeOffRequestId string // The ID of the time off request, which dates and activityCodeId determine limit values to retrieve\n// Retrieves time off limit, allocated and waitlisted values according to specific time off request\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits(managementUnitId, userId, timeOffRequestId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitusertimeoffrequests": {
    "operationId": "getworkforcemanagementmanagementunitusertimeoffrequests",
    "functionName": "GetWorkforcemanagementManagementunitUserTimeoffrequests",
    "signature": "GetWorkforcemanagementManagementunitUserTimeoffrequests(managementUnitId, userId, recentlyReviewed)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recentlyReviewed",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Timeoffrequestlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar userId string // The userId to whom the Time Off Request applies.\nvar recentlyReviewed bool // Limit results to requests that have been reviewed within the preceding 30 days\n// Get a list of time off requests for a given user\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitUserTimeoffrequests(managementUnitId, userId, recentlyReviewed)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitUserTimeoffrequests: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitusers": {
    "operationId": "getworkforcemanagementmanagementunitusers",
    "functionName": "GetWorkforcemanagementManagementunitUsers",
    "signature": "GetWorkforcemanagementManagementunitUsers(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Wfmuserentitylisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n// Get users in the management unit\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitUsers(managementUnitId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitUsers: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitweekschedule": {
    "operationId": "getworkforcemanagementmanagementunitweekschedule",
    "functionName": "GetWorkforcemanagementManagementunitWeekSchedule",
    "signature": "GetWorkforcemanagementManagementunitWeekSchedule(managementUnitId, weekId, scheduleId, expand, forceDownloadService)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Weekscheduleresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar weekId string // First day of schedule week in yyyy-MM-dd format.\nvar scheduleId string // The ID of the schedule to fetch\nvar expand string // Which fields, if any, to expand\nvar forceDownloadService bool // Force the result of this operation to be sent via download service.  For testing/app development purposes\n// Deprecated.  Use the equivalent business unit resource instead. Get a week schedule\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitWeekSchedule(managementUnitId, weekId, scheduleId, expand, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitWeekSchedule: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitweekschedules": {
    "operationId": "getworkforcemanagementmanagementunitweekschedules",
    "functionName": "GetWorkforcemanagementManagementunitWeekSchedules",
    "signature": "GetWorkforcemanagementManagementunitWeekSchedules(managementUnitId, weekId, includeOnlyPublished, earliestWeekDate, latestWeekDate)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeOnlyPublished",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "earliestWeekDate",
        "type": "string",
        "required": "false"
      },
      {
        "name": "latestWeekDate",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Weekschedulelistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar weekId string // First day of schedule week in yyyy-MM-dd format.\nvar includeOnlyPublished bool // Return only published schedules\nvar earliestWeekDate string // The start date of the earliest week to query in yyyy-MM-dd format\nvar latestWeekDate string // The start date of the latest week to query in yyyy-MM-dd format\n// Deprecated.  Use the equivalent business unit resource instead. Get the list of schedules in a week in management unit\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitWeekSchedules(managementUnitId, weekId, includeOnlyPublished, earliestWeekDate, latestWeekDate)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitWeekSchedules: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitweekshifttrades": {
    "operationId": "getworkforcemanagementmanagementunitweekshifttrades",
    "functionName": "GetWorkforcemanagementManagementunitWeekShifttrades",
    "signature": "GetWorkforcemanagementManagementunitWeekShifttrades(managementUnitId, weekDateId, evaluateMatches, forceDownloadService)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "evaluateMatches",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Weekshifttradelistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar weekDateId time.Time // The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar evaluateMatches bool // Whether to evaluate the matches for violations\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\n// Gets all the shift trades for a given week\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitWeekShifttrades(managementUnitId, weekDateId, evaluateMatches, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitWeekShifttrades: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitworkplan": {
    "operationId": "getworkforcemanagementmanagementunitworkplan",
    "functionName": "GetWorkforcemanagementManagementunitWorkplan",
    "signature": "GetWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId, includeOnly)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeOnly",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Workplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar workPlanId string // The ID of the work plan to fetch\nvar includeOnly []string // limit response to the specified fields\n// Get a work plan\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId, includeOnly)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitWorkplan: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitworkplanrotation": {
    "operationId": "getworkforcemanagementmanagementunitworkplanrotation",
    "functionName": "GetWorkforcemanagementManagementunitWorkplanrotation",
    "signature": "GetWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanRotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Workplanrotationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar workPlanRotationId string // The ID of the work plan rotation to fetch\n// Get a work plan rotation\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitWorkplanrotation: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitworkplanrotations": {
    "operationId": "getworkforcemanagementmanagementunitworkplanrotations",
    "functionName": "GetWorkforcemanagementManagementunitWorkplanrotations",
    "signature": "GetWorkforcemanagementManagementunitWorkplanrotations(managementUnitId, expand)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Workplanrotationlistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar expand []string // \n// Get work plan rotations\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitWorkplanrotations(managementUnitId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitWorkplanrotations: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitworkplans": {
    "operationId": "getworkforcemanagementmanagementunitworkplans",
    "functionName": "GetWorkforcemanagementManagementunitWorkplans",
    "signature": "GetWorkforcemanagementManagementunitWorkplans(managementUnitId, expand)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Workplanlistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar expand []string // Include to access additional data on the work plans\n// Get work plans\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitWorkplans(managementUnitId, expand)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitWorkplans: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunits": {
    "operationId": "getworkforcemanagementmanagementunits",
    "functionName": "GetWorkforcemanagementManagementunits",
    "signature": "GetWorkforcemanagementManagementunits(pageSize, pageNumber, expand, feature, divisionId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Managementunitlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar pageSize int // Deprecated, paging is not supported\nvar pageNumber int // Deprecated, paging is not supported\nvar expand string // Deprecated, expand settings on the single MU route\nvar feature string // If specified, the list of management units for which the user is authorized to use the requested feature will be returned\nvar divisionId string // If specified, the list of management units belonging to the specified division will be returned\n// Get management units\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunits(pageSize, pageNumber, expand, feature, divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunits: %v\\n\", err)\n}"
  },
  "getworkforcemanagementmanagementunitsdivisionviews": {
    "operationId": "getworkforcemanagementmanagementunitsdivisionviews",
    "functionName": "GetWorkforcemanagementManagementunitsDivisionviews",
    "signature": "GetWorkforcemanagementManagementunitsDivisionviews(divisionId)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "[]string",
        "required": "false"
      }
    ],
    "return": "Managementunitlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar divisionId []string // The divisionIds to filter by. If omitted, will return all divisions\n// Get management units across divisions\ndata, response, err := apiInstance.GetWorkforcemanagementManagementunitsDivisionviews(divisionId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementManagementunitsDivisionviews: %v\\n\", err)\n}"
  },
  "getworkforcemanagementnotifications": {
    "operationId": "getworkforcemanagementnotifications",
    "functionName": "GetWorkforcemanagementNotifications",
    "signature": "GetWorkforcemanagementNotifications()",
    "return": "Notificationsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\n// Get a list of notifications for the current user\ndata, response, err := apiInstance.GetWorkforcemanagementNotifications()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementNotifications: %v\\n\", err)\n}"
  },
  "getworkforcemanagementschedulingjob": {
    "operationId": "getworkforcemanagementschedulingjob",
    "functionName": "GetWorkforcemanagementSchedulingjob",
    "signature": "GetWorkforcemanagementSchedulingjob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Schedulingstatusresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar jobId string // The id of the scheduling job\n// Get status of the scheduling job\ndata, response, err := apiInstance.GetWorkforcemanagementSchedulingjob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementSchedulingjob: %v\\n\", err)\n}"
  },
  "getworkforcemanagementshifttrades": {
    "operationId": "getworkforcemanagementshifttrades",
    "functionName": "GetWorkforcemanagementShifttrades",
    "signature": "GetWorkforcemanagementShifttrades()",
    "return": "Shifttradelistresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\n// Gets all of my shift trades\ndata, response, err := apiInstance.GetWorkforcemanagementShifttrades()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementShifttrades: %v\\n\", err)\n}"
  },
  "getworkforcemanagementshrinkagejob": {
    "operationId": "getworkforcemanagementshrinkagejob",
    "functionName": "GetWorkforcemanagementShrinkageJob",
    "signature": "GetWorkforcemanagementShrinkageJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Wfmhistoricalshrinkageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar jobId string // jobId\n// Request to fetch the status of the historical shrinkage query\ndata, response, err := apiInstance.GetWorkforcemanagementShrinkageJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementShrinkageJob: %v\\n\", err)\n}"
  },
  "getworkforcemanagementtimeoffbalancejob": {
    "operationId": "getworkforcemanagementtimeoffbalancejob",
    "functionName": "GetWorkforcemanagementTimeoffbalanceJob",
    "signature": "GetWorkforcemanagementTimeoffbalanceJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Timeoffbalancejobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar jobId string // The ID of the job.\n// Query the results of time off types job\ndata, response, err := apiInstance.GetWorkforcemanagementTimeoffbalanceJob(jobId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementTimeoffbalanceJob: %v\\n\", err)\n}"
  },
  "getworkforcemanagementtimeoffrequest": {
    "operationId": "getworkforcemanagementtimeoffrequest",
    "functionName": "GetWorkforcemanagementTimeoffrequest",
    "signature": "GetWorkforcemanagementTimeoffrequest(timeOffRequestId)",
    "parameters": [
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Timeoffrequestresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar timeOffRequestId string // The ID of the time off request\n// Get a time off request for the current user\ndata, response, err := apiInstance.GetWorkforcemanagementTimeoffrequest(timeOffRequestId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementTimeoffrequest: %v\\n\", err)\n}"
  },
  "getworkforcemanagementtimeoffrequestwaitlistpositions": {
    "operationId": "getworkforcemanagementtimeoffrequestwaitlistpositions",
    "functionName": "GetWorkforcemanagementTimeoffrequestWaitlistpositions",
    "signature": "GetWorkforcemanagementTimeoffrequestWaitlistpositions(timeOffRequestId)",
    "parameters": [
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Waitlistpositionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar timeOffRequestId string // The ID of the time off request\n// Get the daily waitlist positions of a time off request for the current user\ndata, response, err := apiInstance.GetWorkforcemanagementTimeoffrequestWaitlistpositions(timeOffRequestId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementTimeoffrequestWaitlistpositions: %v\\n\", err)\n}"
  },
  "getworkforcemanagementtimeoffrequests": {
    "operationId": "getworkforcemanagementtimeoffrequests",
    "functionName": "GetWorkforcemanagementTimeoffrequests",
    "signature": "GetWorkforcemanagementTimeoffrequests(recentlyReviewed)",
    "parameters": [
      {
        "name": "recentlyReviewed",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Timeoffrequestlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar recentlyReviewed bool // Limit results to requests that have been reviewed within the preceding 30 days\n// Get a list of time off requests for the current user\ndata, response, err := apiInstance.GetWorkforcemanagementTimeoffrequests(recentlyReviewed)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling GetWorkforcemanagementTimeoffrequests: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementagentadherenceexplanation": {
    "operationId": "patchworkforcemanagementagentadherenceexplanation",
    "functionName": "PatchWorkforcemanagementAgentAdherenceExplanation",
    "signature": "PatchWorkforcemanagementAgentAdherenceExplanation(agentId, explanationId, body)",
    "parameters": [
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "explanationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updateadherenceexplanationstatusrequest",
        "required": "true"
      }
    ],
    "return": "Adherenceexplanationasyncresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar agentId string // The ID of the agent to query\nvar explanationId string // The ID of the explanation to update\nvar body platformclientv2.Updateadherenceexplanationstatusrequest // The request body\n// Update an adherence explanation\ndata, response, err := apiInstance.PatchWorkforcemanagementAgentAdherenceExplanation(agentId, explanationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementAgentAdherenceExplanation: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementbusinessunit": {
    "operationId": "patchworkforcemanagementbusinessunit",
    "functionName": "PatchWorkforcemanagementBusinessunit",
    "signature": "PatchWorkforcemanagementBusinessunit(businessUnitId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updatebusinessunitrequest",
        "required": "false"
      }
    ],
    "return": "Businessunitresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nvar body platformclientv2.Updatebusinessunitrequest // body\n// Update business unit\ndata, response, err := apiInstance.PatchWorkforcemanagementBusinessunit(businessUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementBusinessunit: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementbusinessunitactivitycode": {
    "operationId": "patchworkforcemanagementbusinessunitactivitycode",
    "functionName": "PatchWorkforcemanagementBusinessunitActivitycode",
    "signature": "PatchWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "activityCodeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updateactivitycoderequest",
        "required": "false"
      }
    ],
    "return": "Businessunitactivitycode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nvar activityCodeId string // The ID of the activity code to update\nvar body platformclientv2.Updateactivitycoderequest // body\n// Update an activity code\ndata, response, err := apiInstance.PatchWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementBusinessunitActivitycode: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementbusinessunitplanninggroup": {
    "operationId": "patchworkforcemanagementbusinessunitplanninggroup",
    "functionName": "PatchWorkforcemanagementBusinessunitPlanninggroup",
    "signature": "PatchWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "planningGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updateplanninggrouprequest",
        "required": "false"
      }
    ],
    "return": "Planninggroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\nvar planningGroupId string // The ID of a planning group to update\nvar body platformclientv2.Updateplanninggrouprequest // body\n// Updates the planning group\ndata, response, err := apiInstance.PatchWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementBusinessunitPlanninggroup: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementbusinessunitschedulingrun": {
    "operationId": "patchworkforcemanagementbusinessunitschedulingrun",
    "functionName": "PatchWorkforcemanagementBusinessunitSchedulingRun",
    "signature": "PatchWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Patchbuschedulerunrequest",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar runId string // The ID of the schedule run\nvar body platformclientv2.Patchbuschedulerunrequest // body\n// Mark a schedule run as applied\nresponse, err := apiInstance.PatchWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementBusinessunitSchedulingRun: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementbusinessunitservicegoaltemplate": {
    "operationId": "patchworkforcemanagementbusinessunitservicegoaltemplate",
    "functionName": "PatchWorkforcemanagementBusinessunitServicegoaltemplate",
    "signature": "PatchWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "serviceGoalTemplateId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updateservicegoaltemplate",
        "required": "false"
      }
    ],
    "return": "Servicegoaltemplate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\nvar serviceGoalTemplateId string // The ID of a service goal template to update\nvar body platformclientv2.Updateservicegoaltemplate // body\n// Updates a service goal template\ndata, response, err := apiInstance.PatchWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementBusinessunitServicegoaltemplate: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementmanagementunit": {
    "operationId": "patchworkforcemanagementmanagementunit",
    "functionName": "PatchWorkforcemanagementManagementunit",
    "signature": "PatchWorkforcemanagementManagementunit(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updatemanagementunitrequest",
        "required": "false"
      }
    ],
    "return": "Managementunit",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar body platformclientv2.Updatemanagementunitrequest // body\n// Update the requested management unit\ndata, response, err := apiInstance.PatchWorkforcemanagementManagementunit(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementManagementunit: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementmanagementunittimeofflimit": {
    "operationId": "patchworkforcemanagementmanagementunittimeofflimit",
    "functionName": "PatchWorkforcemanagementManagementunitTimeofflimit",
    "signature": "PatchWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffLimitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updatetimeofflimitrequest",
        "required": "false"
      }
    ],
    "return": "Timeofflimit",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar timeOffLimitId string // The id of time off limit object to update\nvar body platformclientv2.Updatetimeofflimitrequest // body\n// Updates a time off limit object.\ndata, response, err := apiInstance.PatchWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementManagementunitTimeofflimit: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementmanagementunittimeoffplan": {
    "operationId": "patchworkforcemanagementmanagementunittimeoffplan",
    "functionName": "PatchWorkforcemanagementManagementunitTimeoffplan",
    "signature": "PatchWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updatetimeoffplanrequest",
        "required": "false"
      }
    ],
    "return": "Timeoffplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\nvar timeOffPlanId string // The ID of the time off plan to update\nvar body platformclientv2.Updatetimeoffplanrequest // body\n// Updates a time off plan\ndata, response, err := apiInstance.PatchWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementManagementunitTimeoffplan: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementmanagementunittimeoffrequestuserintegrationstatus": {
    "operationId": "patchworkforcemanagementmanagementunittimeoffrequestuserintegrationstatus",
    "functionName": "PatchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus",
    "signature": "PatchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus(managementUnitId, timeOffRequestId, userId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Settimeoffintegrationstatusrequest",
        "required": "false"
      }
    ],
    "return": "Usertimeoffintegrationstatusresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar timeOffRequestId string // The ID of the time off request.\nvar userId string // The ID of user to whom the time off request belongs.\nvar body platformclientv2.Settimeoffintegrationstatusrequest // body\n// Set integration status for a time off request.\ndata, response, err := apiInstance.PatchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus(managementUnitId, timeOffRequestId, userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementManagementunitTimeoffrequestUserIntegrationstatus: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementmanagementunitusertimeoffrequest": {
    "operationId": "patchworkforcemanagementmanagementunitusertimeoffrequest",
    "functionName": "PatchWorkforcemanagementManagementunitUserTimeoffrequest",
    "signature": "PatchWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId, userId, timeOffRequestId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Admintimeoffrequestpatch",
        "required": "false"
      }
    ],
    "return": "Timeoffrequestresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar userId string // The id of the user the requested time off request belongs to\nvar timeOffRequestId string // The id of the time off request to update\nvar body platformclientv2.Admintimeoffrequestpatch // body\n// Update a time off request\ndata, response, err := apiInstance.PatchWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId, userId, timeOffRequestId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementManagementunitUserTimeoffrequest: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementmanagementunitweekshifttrade": {
    "operationId": "patchworkforcemanagementmanagementunitweekshifttrade",
    "functionName": "PatchWorkforcemanagementManagementunitWeekShifttrade",
    "signature": "PatchWorkforcemanagementManagementunitWeekShifttrade(managementUnitId, weekDateId, tradeId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "tradeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Patchshifttraderequest",
        "required": "true"
      }
    ],
    "return": "Shifttraderesponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar weekDateId time.Time // The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar tradeId string // The ID of the shift trade to update\nvar body platformclientv2.Patchshifttraderequest // body\n// Updates a shift trade. This route can only be called by the initiating agent\ndata, response, err := apiInstance.PatchWorkforcemanagementManagementunitWeekShifttrade(managementUnitId, weekDateId, tradeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementManagementunitWeekShifttrade: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementmanagementunitworkplan": {
    "operationId": "patchworkforcemanagementmanagementunitworkplan",
    "functionName": "PatchWorkforcemanagementManagementunitWorkplan",
    "signature": "PatchWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId, validationMode, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "validationMode",
        "type": "string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Workplan",
        "required": "false"
      }
    ],
    "return": "Workplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar workPlanId string // The ID of the work plan to update\nvar validationMode string // Allows to update work plan even if validation result is invalid\nvar body platformclientv2.Workplan // body\n// Update a work plan\ndata, response, err := apiInstance.PatchWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId, validationMode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementManagementunitWorkplan: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementmanagementunitworkplanrotation": {
    "operationId": "patchworkforcemanagementmanagementunitworkplanrotation",
    "functionName": "PatchWorkforcemanagementManagementunitWorkplanrotation",
    "signature": "PatchWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanRotationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Updateworkplanrotationrequest",
        "required": "false"
      }
    ],
    "return": "Workplanrotationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar workPlanRotationId string // The ID of the work plan rotation to update\nvar body platformclientv2.Updateworkplanrotationrequest // body\n// Update a work plan rotation\ndata, response, err := apiInstance.PatchWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementManagementunitWorkplanrotation: %v\\n\", err)\n}"
  },
  "patchworkforcemanagementtimeoffrequest": {
    "operationId": "patchworkforcemanagementtimeoffrequest",
    "functionName": "PatchWorkforcemanagementTimeoffrequest",
    "signature": "PatchWorkforcemanagementTimeoffrequest(timeOffRequestId, body)",
    "parameters": [
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Agenttimeoffrequestpatch",
        "required": "false"
      }
    ],
    "return": "Timeoffrequestresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar timeOffRequestId string // The ID of the time off request\nvar body platformclientv2.Agenttimeoffrequestpatch // body\n// Update a time off request for the current user\ndata, response, err := apiInstance.PatchWorkforcemanagementTimeoffrequest(timeOffRequestId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PatchWorkforcemanagementTimeoffrequest: %v\\n\", err)\n}"
  },
  "postworkforcemanagementadherenceexplanations": {
    "operationId": "postworkforcemanagementadherenceexplanations",
    "functionName": "PostWorkforcemanagementAdherenceExplanations",
    "signature": "PostWorkforcemanagementAdherenceExplanations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Addadherenceexplanationagentrequest",
        "required": "true"
      }
    ],
    "return": "Adherenceexplanationasyncresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Addadherenceexplanationagentrequest // The request body\n// Submit an adherence explanation for the current user\ndata, response, err := apiInstance.PostWorkforcemanagementAdherenceExplanations(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAdherenceExplanations: %v\\n\", err)\n}"
  },
  "postworkforcemanagementadherenceexplanationsquery": {
    "operationId": "postworkforcemanagementadherenceexplanationsquery",
    "functionName": "PostWorkforcemanagementAdherenceExplanationsQuery",
    "signature": "PostWorkforcemanagementAdherenceExplanationsQuery(body, forceAsync, forceDownloadService)",
    "parameters": [
      {
        "name": "body",
        "type": "Agentqueryadherenceexplanationsrequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Queryadherenceexplanationsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Agentqueryadherenceexplanationsrequest // The request body\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\n// Query adherence explanations for the current user\ndata, response, err := apiInstance.PostWorkforcemanagementAdherenceExplanationsQuery(body, forceAsync, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAdherenceExplanationsQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementadherencehistorical": {
    "operationId": "postworkforcemanagementadherencehistorical",
    "functionName": "PostWorkforcemanagementAdherenceHistorical",
    "signature": "PostWorkforcemanagementAdherenceHistorical(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Wfmhistoricaladherencequeryforusers",
        "required": "false"
      }
    ],
    "return": "Wfmhistoricaladherenceresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Wfmhistoricaladherencequeryforusers // body\n// Deprecated. Use bulk routes instead (/adherence/historical/bulk)\ndata, response, err := apiInstance.PostWorkforcemanagementAdherenceHistorical(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAdherenceHistorical: %v\\n\", err)\n}"
  },
  "postworkforcemanagementadherencehistoricalbulk": {
    "operationId": "postworkforcemanagementadherencehistoricalbulk",
    "functionName": "PostWorkforcemanagementAdherenceHistoricalBulk",
    "signature": "PostWorkforcemanagementAdherenceHistoricalBulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Wfmhistoricaladherencebulkquery",
        "required": "false"
      }
    ],
    "return": "Wfmhistoricaladherencebulkresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Wfmhistoricaladherencebulkquery // body\n// Request a historical adherence report in bulk\ndata, response, err := apiInstance.PostWorkforcemanagementAdherenceHistoricalBulk(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAdherenceHistoricalBulk: %v\\n\", err)\n}"
  },
  "postworkforcemanagementagentadherenceexplanations": {
    "operationId": "postworkforcemanagementagentadherenceexplanations",
    "functionName": "PostWorkforcemanagementAgentAdherenceExplanations",
    "signature": "PostWorkforcemanagementAgentAdherenceExplanations(agentId, body)",
    "parameters": [
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Addadherenceexplanationadminrequest",
        "required": "true"
      }
    ],
    "return": "Adherenceexplanationasyncresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar agentId string // The ID of the agent to query\nvar body platformclientv2.Addadherenceexplanationadminrequest // The request body\n// Add an adherence explanation for the requested user\ndata, response, err := apiInstance.PostWorkforcemanagementAgentAdherenceExplanations(agentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAgentAdherenceExplanations: %v\\n\", err)\n}"
  },
  "postworkforcemanagementagentadherenceexplanationsquery": {
    "operationId": "postworkforcemanagementagentadherenceexplanationsquery",
    "functionName": "PostWorkforcemanagementAgentAdherenceExplanationsQuery",
    "signature": "PostWorkforcemanagementAgentAdherenceExplanationsQuery(agentId, body, forceAsync, forceDownloadService)",
    "parameters": [
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Agentqueryadherenceexplanationsrequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Agentqueryadherenceexplanationsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar agentId string // The ID of the agent to query\nvar body platformclientv2.Agentqueryadherenceexplanationsrequest // The request body\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\n// Query adherence explanations for the given agent across a specified range\ndata, response, err := apiInstance.PostWorkforcemanagementAgentAdherenceExplanationsQuery(agentId, body, forceAsync, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAgentAdherenceExplanationsQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementagents": {
    "operationId": "postworkforcemanagementagents",
    "functionName": "PostWorkforcemanagementAgents",
    "signature": "PostWorkforcemanagementAgents(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Moveagentsrequest",
        "required": "false"
      }
    ],
    "return": "Moveagentsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Moveagentsrequest // body\n// Move agents in and out of management unit\ndata, response, err := apiInstance.PostWorkforcemanagementAgents(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAgents: %v\\n\", err)\n}"
  },
  "postworkforcemanagementagentsintegrationshrisquery": {
    "operationId": "postworkforcemanagementagentsintegrationshrisquery",
    "functionName": "PostWorkforcemanagementAgentsIntegrationsHrisQuery",
    "signature": "PostWorkforcemanagementAgentsIntegrationsHrisQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Queryagentsintegrationsrequest",
        "required": "false"
      }
    ],
    "return": "Agentsintegrationslisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Queryagentsintegrationsrequest // body\n// Query integrations for agents\ndata, response, err := apiInstance.PostWorkforcemanagementAgentsIntegrationsHrisQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAgentsIntegrationsHrisQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementagentsmepossibleworkshifts": {
    "operationId": "postworkforcemanagementagentsmepossibleworkshifts",
    "functionName": "PostWorkforcemanagementAgentsMePossibleworkshifts",
    "signature": "PostWorkforcemanagementAgentsMePossibleworkshifts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Agentpossibleworkshiftsrequest",
        "required": "true"
      }
    ],
    "return": "Agentpossibleworkshiftsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Agentpossibleworkshiftsrequest // body\n// Get agent possible work shifts for requested time frame\ndata, response, err := apiInstance.PostWorkforcemanagementAgentsMePossibleworkshifts(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAgentsMePossibleworkshifts: %v\\n\", err)\n}"
  },
  "postworkforcemanagementagentschedulesmine": {
    "operationId": "postworkforcemanagementagentschedulesmine",
    "functionName": "PostWorkforcemanagementAgentschedulesMine",
    "signature": "PostWorkforcemanagementAgentschedulesMine(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Bugetcurrentagentschedulerequest",
        "required": "false"
      }
    ],
    "return": "Bucurrentagentschedulesearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Bugetcurrentagentschedulerequest // body\n// Get published schedule for the current user\ndata, response, err := apiInstance.PostWorkforcemanagementAgentschedulesMine(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementAgentschedulesMine: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitactivitycodes": {
    "operationId": "postworkforcemanagementbusinessunitactivitycodes",
    "functionName": "PostWorkforcemanagementBusinessunitActivitycodes",
    "signature": "PostWorkforcemanagementBusinessunitActivitycodes(businessUnitId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createactivitycoderequest",
        "required": "false"
      }
    ],
    "return": "Businessunitactivitycode",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nvar body platformclientv2.Createactivitycoderequest // body\n// Create a new activity code\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitActivitycodes(businessUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitActivitycodes: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitadherenceexplanationsquery": {
    "operationId": "postworkforcemanagementbusinessunitadherenceexplanationsquery",
    "functionName": "PostWorkforcemanagementBusinessunitAdherenceExplanationsQuery",
    "signature": "PostWorkforcemanagementBusinessunitAdherenceExplanationsQuery(businessUnitId, body, forceAsync, forceDownloadService)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Buqueryadherenceexplanationsrequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Buqueryadherenceexplanationsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar body platformclientv2.Buqueryadherenceexplanationsrequest // The request body\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\n// Query adherence explanations across an entire business unit for the requested period\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitAdherenceExplanationsQuery(businessUnitId, body, forceAsync, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitAdherenceExplanationsQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitagentschedulessearch": {
    "operationId": "postworkforcemanagementbusinessunitagentschedulessearch",
    "functionName": "PostWorkforcemanagementBusinessunitAgentschedulesSearch",
    "signature": "PostWorkforcemanagementBusinessunitAgentschedulesSearch(businessUnitId, forceAsync, forceDownloadService, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Busearchagentschedulesrequest",
        "required": "false"
      }
    ],
    "return": "Buasyncagentschedulessearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\nvar body platformclientv2.Busearchagentschedulesrequest // body\n// Search published schedules\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitAgentschedulesSearch(businessUnitId, forceAsync, forceDownloadService, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitAgentschedulesSearch: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitintraday": {
    "operationId": "postworkforcemanagementbusinessunitintraday",
    "functionName": "PostWorkforcemanagementBusinessunitIntraday",
    "signature": "PostWorkforcemanagementBusinessunitIntraday(businessUnitId, forceAsync, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Intradayplanninggrouprequest",
        "required": "false"
      }
    ],
    "return": "Asyncintradayresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes\nvar body platformclientv2.Intradayplanninggrouprequest // body\n// Get intraday data for the given date for the requested planningGroupIds\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitIntraday(businessUnitId, forceAsync, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitIntraday: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitplanninggroups": {
    "operationId": "postworkforcemanagementbusinessunitplanninggroups",
    "functionName": "PostWorkforcemanagementBusinessunitPlanninggroups",
    "signature": "PostWorkforcemanagementBusinessunitPlanninggroups(businessUnitId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createplanninggrouprequest",
        "required": "false"
      }
    ],
    "return": "Planninggroup",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\nvar body platformclientv2.Createplanninggrouprequest // body\n// Adds a new planning group\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitPlanninggroups(businessUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitPlanninggroups: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitservicegoaltemplates": {
    "operationId": "postworkforcemanagementbusinessunitservicegoaltemplates",
    "functionName": "PostWorkforcemanagementBusinessunitServicegoaltemplates",
    "signature": "PostWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createservicegoaltemplate",
        "required": "false"
      }
    ],
    "return": "Servicegoaltemplate",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit.\nvar body platformclientv2.Createservicegoaltemplate // body\n// Adds a new service goal template\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitServicegoaltemplates: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekscheduleagentschedulesquery": {
    "operationId": "postworkforcemanagementbusinessunitweekscheduleagentschedulesquery",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery(businessUnitId, weekId, scheduleId, body, forceAsync, forceDownloadService)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Buqueryagentschedulesrequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Buasyncagentschedulesqueryresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule\nvar body platformclientv2.Buqueryagentschedulesrequest // body\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\n// Loads agent schedule data from the schedule. Used in combination with the metadata route\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery(businessUnitId, weekId, scheduleId, body, forceAsync, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulecopy": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulecopy",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleCopy",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleCopy(businessUnitId, weekId, scheduleId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Bucopyschedulerequest",
        "required": "true"
      }
    ],
    "return": "Buasyncscheduleresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule to copy\nvar body platformclientv2.Bucopyschedulerequest // body\n// Copy a schedule\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleCopy(businessUnitId, weekId, scheduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekScheduleCopy: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulereschedule": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulereschedule",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleReschedule",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleReschedule(businessUnitId, weekId, scheduleId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Bureschedulerequest",
        "required": "true"
      }
    ],
    "return": "Buasyncschedulerunresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule\nvar body platformclientv2.Bureschedulerequest // body\n// Start a rescheduling run\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleReschedule(businessUnitId, weekId, scheduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekScheduleReschedule: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekscheduleupdate": {
    "operationId": "postworkforcemanagementbusinessunitweekscheduleupdate",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleUpdate",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleUpdate(businessUnitId, weekId, scheduleId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Processscheduleupdateuploadrequest",
        "required": "true"
      }
    ],
    "return": "Buasyncscheduleresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule\nvar body platformclientv2.Processscheduleupdateuploadrequest // body\n// Starts processing a schedule update\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleUpdate(businessUnitId, weekId, scheduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekScheduleUpdate: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekscheduleupdateuploadurl": {
    "operationId": "postworkforcemanagementbusinessunitweekscheduleupdateuploadurl",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl(businessUnitId, weekId, scheduleId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Uploadurlrequestbody",
        "required": "true"
      }
    ],
    "return": "Updatescheduleuploadresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar scheduleId string // The ID of the schedule\nvar body platformclientv2.Uploadurlrequestbody // body\n// Creates a signed upload URL for updating a schedule\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl(businessUnitId, weekId, scheduleId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekschedules": {
    "operationId": "postworkforcemanagementbusinessunitweekschedules",
    "functionName": "PostWorkforcemanagementBusinessunitWeekSchedules",
    "signature": "PostWorkforcemanagementBusinessunitWeekSchedules(businessUnitId, weekId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Bucreateblankschedulerequest",
        "required": "true"
      }
    ],
    "return": "Buschedulemetadata",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Bucreateblankschedulerequest // body\n// Create a blank schedule\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekSchedules(businessUnitId, weekId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekSchedules: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulesgenerate": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulesgenerate",
    "functionName": "PostWorkforcemanagementBusinessunitWeekSchedulesGenerate",
    "signature": "PostWorkforcemanagementBusinessunitWeekSchedulesGenerate(businessUnitId, weekId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Bugenerateschedulerequest",
        "required": "true"
      }
    ],
    "return": "Buasyncschedulerunresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Bugenerateschedulerequest // body\n// Generate a schedule\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekSchedulesGenerate(businessUnitId, weekId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekSchedulesGenerate: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulesimport": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulesimport",
    "functionName": "PostWorkforcemanagementBusinessunitWeekSchedulesImport",
    "signature": "PostWorkforcemanagementBusinessunitWeekSchedulesImport(businessUnitId, weekId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wfmprocessuploadrequest",
        "required": "true"
      }
    ],
    "return": "Scheduleuploadprocessingresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Wfmprocessuploadrequest // \n// Starts processing a schedule import\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekSchedulesImport(businessUnitId, weekId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekSchedulesImport: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulesimportuploadurl": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulesimportuploadurl",
    "functionName": "PostWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl",
    "signature": "PostWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl(businessUnitId, weekId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Uploadurlrequestbody",
        "required": "true"
      }
    ],
    "return": "Importscheduleuploadresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit\nvar weekId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Uploadurlrequestbody // body\n// Creates a signed upload URL for importing a schedule\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl(businessUnitId, weekId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekshorttermforecastcopy": {
    "operationId": "postworkforcemanagementbusinessunitweekshorttermforecastcopy",
    "functionName": "PostWorkforcemanagementBusinessunitWeekShorttermforecastCopy",
    "signature": "PostWorkforcemanagementBusinessunitWeekShorttermforecastCopy(businessUnitId, weekDateId, forecastId, body, forceAsync)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Copybuforecastrequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Asyncforecastoperationresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar forecastId string // The ID of the forecast to copy\nvar body platformclientv2.Copybuforecastrequest // body\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes\n// Copy a short term forecast\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekShorttermforecastCopy(businessUnitId, weekDateId, forecastId, body, forceAsync)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekShorttermforecastCopy: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekshorttermforecastsgenerate": {
    "operationId": "postworkforcemanagementbusinessunitweekshorttermforecastsgenerate",
    "functionName": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate",
    "signature": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate(businessUnitId, weekDateId, body, forceAsync)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Generatebuforecastrequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Asyncforecastoperationresult",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Generatebuforecastrequest // body\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes\n// Generate a short term forecast\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate(businessUnitId, weekDateId, body, forceAsync)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekshorttermforecastsimport": {
    "operationId": "postworkforcemanagementbusinessunitweekshorttermforecastsimport",
    "functionName": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsImport",
    "signature": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsImport(businessUnitId, weekDateId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wfmprocessuploadrequest",
        "required": "true"
      }
    ],
    "return": "Importforecastresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Wfmprocessuploadrequest // body\n// Starts importing the uploaded short term forecast\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekShorttermforecastsImport(businessUnitId, weekDateId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekShorttermforecastsImport: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunitweekshorttermforecastsimportuploadurl": {
    "operationId": "postworkforcemanagementbusinessunitweekshorttermforecastsimportuploadurl",
    "functionName": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl",
    "signature": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl(businessUnitId, weekDateId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Uploadurlrequestbody",
        "required": "true"
      }
    ],
    "return": "Importforecastuploadresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar businessUnitId string // The ID of the business unit to which the forecast belongs\nvar weekDateId time.Time // First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Uploadurlrequestbody // body\n// Creates a signed upload URL for importing a short term forecast\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl(businessUnitId, weekDateId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl: %v\\n\", err)\n}"
  },
  "postworkforcemanagementbusinessunits": {
    "operationId": "postworkforcemanagementbusinessunits",
    "functionName": "PostWorkforcemanagementBusinessunits",
    "signature": "PostWorkforcemanagementBusinessunits(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createbusinessunitrequest",
        "required": "false"
      }
    ],
    "return": "Businessunitresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Createbusinessunitrequest // body\n// Add a new business unit\ndata, response, err := apiInstance.PostWorkforcemanagementBusinessunits(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementBusinessunits: %v\\n\", err)\n}"
  },
  "postworkforcemanagementcalendarurlics": {
    "operationId": "postworkforcemanagementcalendarurlics",
    "functionName": "PostWorkforcemanagementCalendarUrlIcs",
    "signature": "PostWorkforcemanagementCalendarUrlIcs(language)",
    "parameters": [
      {
        "name": "language",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Calendarurlresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar language string // A language tag (which is sometimes referred to as a \\\"locale identifier\\\") to use to localize default activity code names in the ics-formatted calendar\n// Create a newly generated calendar link for the current user; if the current user has previously generated one, the generated link will be returned\ndata, response, err := apiInstance.PostWorkforcemanagementCalendarUrlIcs(language)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementCalendarUrlIcs: %v\\n\", err)\n}"
  },
  "postworkforcemanagementhistoricaldatadeletejob": {
    "operationId": "postworkforcemanagementhistoricaldatadeletejob",
    "functionName": "PostWorkforcemanagementHistoricaldataDeletejob",
    "signature": "PostWorkforcemanagementHistoricaldataDeletejob()",
    "return": "Historicalimportdeletejobresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\n// Delete the entries of the historical data imports in the organization\ndata, response, err := apiInstance.PostWorkforcemanagementHistoricaldataDeletejob()\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementHistoricaldataDeletejob: %v\\n\", err)\n}"
  },
  "postworkforcemanagementhistoricaldatavalidate": {
    "operationId": "postworkforcemanagementhistoricaldatavalidate",
    "functionName": "PostWorkforcemanagementHistoricaldataValidate",
    "signature": "PostWorkforcemanagementHistoricaldataValidate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Validationservicerequest",
        "required": "false"
      }
    ],
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Validationservicerequest // body\n// Trigger validation process for historical import\nresponse, err := apiInstance.PostWorkforcemanagementHistoricaldataValidate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID)\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementHistoricaldataValidate: %v\\n\", err)\n}"
  },
  "postworkforcemanagementintegrationshritimeofftypesjobs": {
    "operationId": "postworkforcemanagementintegrationshritimeofftypesjobs",
    "functionName": "PostWorkforcemanagementIntegrationsHriTimeofftypesJobs",
    "signature": "PostWorkforcemanagementIntegrationsHriTimeofftypesJobs(hrisIntegrationId)",
    "parameters": [
      {
        "name": "hrisIntegrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Hristimeofftypesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar hrisIntegrationId string // The ID of the HRIS integration for which time off types are queried.\n// Get list of time off types configured in integration\ndata, response, err := apiInstance.PostWorkforcemanagementIntegrationsHriTimeofftypesJobs(hrisIntegrationId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementIntegrationsHriTimeofftypesJobs: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitagentschedulessearch": {
    "operationId": "postworkforcemanagementmanagementunitagentschedulessearch",
    "functionName": "PostWorkforcemanagementManagementunitAgentschedulesSearch",
    "signature": "PostWorkforcemanagementManagementunitAgentschedulesSearch(managementUnitId, forceAsync, forceDownloadService, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Busearchagentschedulesrequest",
        "required": "false"
      }
    ],
    "return": "Buasyncagentschedulessearchresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\nvar body platformclientv2.Busearchagentschedulesrequest // body\n// Query published schedules for given given time range for set of users\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitAgentschedulesSearch(managementUnitId, forceAsync, forceDownloadService, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitAgentschedulesSearch: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunithistoricaladherencequery": {
    "operationId": "postworkforcemanagementmanagementunithistoricaladherencequery",
    "functionName": "PostWorkforcemanagementManagementunitHistoricaladherencequery",
    "signature": "PostWorkforcemanagementManagementunitHistoricaladherencequery(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wfmhistoricaladherencequery",
        "required": "false"
      }
    ],
    "return": "Wfmhistoricaladherenceresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\nvar body platformclientv2.Wfmhistoricaladherencequery // body\n// Request a historical adherence report\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitHistoricaladherencequery(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitHistoricaladherencequery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitmove": {
    "operationId": "postworkforcemanagementmanagementunitmove",
    "functionName": "PostWorkforcemanagementManagementunitMove",
    "signature": "PostWorkforcemanagementManagementunitMove(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Movemanagementunitrequest",
        "required": "false"
      }
    ],
    "return": "Movemanagementunitresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar body platformclientv2.Movemanagementunitrequest // body\n// Move the requested management unit to a new business unit\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitMove(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitMove: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitschedulessearch": {
    "operationId": "postworkforcemanagementmanagementunitschedulessearch",
    "functionName": "PostWorkforcemanagementManagementunitSchedulesSearch",
    "signature": "PostWorkforcemanagementManagementunitSchedulesSearch(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Userlistschedulerequestbody",
        "required": "false"
      }
    ],
    "return": "Userschedulecontainer",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar body platformclientv2.Userlistschedulerequestbody // body\n// Query published schedules for given given time range for set of users\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitSchedulesSearch(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitSchedulesSearch: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitshrinkagejobs": {
    "operationId": "postworkforcemanagementmanagementunitshrinkagejobs",
    "functionName": "PostWorkforcemanagementManagementunitShrinkageJobs",
    "signature": "PostWorkforcemanagementManagementunitShrinkageJobs(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wfmhistoricalshrinkagerequest",
        "required": "false"
      }
    ],
    "return": "Wfmhistoricalshrinkageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\nvar body platformclientv2.Wfmhistoricalshrinkagerequest // body\n// Request a historical shrinkage report\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitShrinkageJobs(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitShrinkageJobs: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunittimeofflimits": {
    "operationId": "postworkforcemanagementmanagementunittimeofflimits",
    "functionName": "PostWorkforcemanagementManagementunitTimeofflimits",
    "signature": "PostWorkforcemanagementManagementunitTimeofflimits(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createtimeofflimitrequest",
        "required": "false"
      }
    ],
    "return": "Timeofflimit",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar body platformclientv2.Createtimeofflimitrequest // body\n// Creates a new time off limit object under management unit.\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitTimeofflimits(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitTimeofflimits: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunittimeofflimitsvaluesquery": {
    "operationId": "postworkforcemanagementmanagementunittimeofflimitsvaluesquery",
    "functionName": "PostWorkforcemanagementManagementunitTimeofflimitsValuesQuery",
    "signature": "PostWorkforcemanagementManagementunitTimeofflimitsValuesQuery(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Querytimeofflimitvaluesrequest",
        "required": "false"
      }
    ],
    "return": "Querytimeofflimitvaluesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar body platformclientv2.Querytimeofflimitvaluesrequest // body\n// Retrieves time off limit related values based on a given set of filters.\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitTimeofflimitsValuesQuery(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitTimeofflimitsValuesQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunittimeoffplans": {
    "operationId": "postworkforcemanagementmanagementunittimeoffplans",
    "functionName": "PostWorkforcemanagementManagementunitTimeoffplans",
    "signature": "PostWorkforcemanagementManagementunitTimeoffplans(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createtimeoffplanrequest",
        "required": "false"
      }
    ],
    "return": "Timeoffplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\nvar body platformclientv2.Createtimeoffplanrequest // body\n// Creates a new time off plan\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitTimeoffplans(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitTimeoffplans: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunittimeoffrequests": {
    "operationId": "postworkforcemanagementmanagementunittimeoffrequests",
    "functionName": "PostWorkforcemanagementManagementunitTimeoffrequests",
    "signature": "PostWorkforcemanagementManagementunitTimeoffrequests(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Createadmintimeoffrequest",
        "required": "false"
      }
    ],
    "return": "Timeoffrequestlist",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar body platformclientv2.Createadmintimeoffrequest // body\n// Create a new time off request\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitTimeoffrequests(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitTimeoffrequests: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunittimeoffrequestsintegrationstatusquery": {
    "operationId": "postworkforcemanagementmanagementunittimeoffrequestsintegrationstatusquery",
    "functionName": "PostWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQuery",
    "signature": "PostWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQuery(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Querytimeoffintegrationstatusrequest",
        "required": "false"
      }
    ],
    "return": "Usertimeoffintegrationstatusresponselisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar body platformclientv2.Querytimeoffintegrationstatusrequest // body\n// Retrieves integration statuses for a list of time off requests\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQuery(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitTimeoffrequestsIntegrationstatusQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunittimeoffrequestsquery": {
    "operationId": "postworkforcemanagementmanagementunittimeoffrequestsquery",
    "functionName": "PostWorkforcemanagementManagementunitTimeoffrequestsQuery",
    "signature": "PostWorkforcemanagementManagementunitTimeoffrequestsQuery(managementUnitId, forceDownloadService, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Timeoffrequestquerybody",
        "required": "false"
      }
    ],
    "return": "Timeoffrequestlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\nvar body platformclientv2.Timeoffrequestquerybody // body\n// Fetches time off requests matching the conditions specified in the request body\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitTimeoffrequestsQuery(managementUnitId, forceDownloadService, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitTimeoffrequestsQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunittimeoffrequestswaitlistpositionsquery": {
    "operationId": "postworkforcemanagementmanagementunittimeoffrequestswaitlistpositionsquery",
    "functionName": "PostWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery",
    "signature": "PostWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Querywaitlistpositionsrequest",
        "required": "false"
      }
    ],
    "return": "Waitlistpositionlisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar body platformclientv2.Querywaitlistpositionsrequest // body\n// Retrieves daily waitlist position for a list of time off requests\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitusertimeoffbalancejobs": {
    "operationId": "postworkforcemanagementmanagementunitusertimeoffbalancejobs",
    "functionName": "PostWorkforcemanagementManagementunitUserTimeoffbalanceJobs",
    "signature": "PostWorkforcemanagementManagementunitUserTimeoffbalanceJobs(managementUnitId, userId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Timeoffbalancerequest",
        "required": "true"
      }
    ],
    "return": "Timeoffbalancesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\nvar userId string // The ID of the user\nvar body platformclientv2.Timeoffbalancerequest // The request body\n// Query time off balances for a given user for specified activity code and dates\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitUserTimeoffbalanceJobs(managementUnitId, userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitUserTimeoffbalanceJobs: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitusertimeoffrequesttimeoffbalancejobs": {
    "operationId": "postworkforcemanagementmanagementunitusertimeoffrequesttimeoffbalancejobs",
    "functionName": "PostWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs",
    "signature": "PostWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs(managementUnitId, userId, timeOffRequestId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Timeoffbalancesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar userId string // The userId to whom the time off request applies.\nvar timeOffRequestId string // The time off request id.\n// Query time off balances for dates spanned by a given time off request\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs(managementUnitId, userId, timeOffRequestId)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitusertimeoffrequestsestimate": {
    "operationId": "postworkforcemanagementmanagementunitusertimeoffrequestsestimate",
    "functionName": "PostWorkforcemanagementManagementunitUserTimeoffrequestsEstimate",
    "signature": "PostWorkforcemanagementManagementunitUserTimeoffrequestsEstimate(managementUnitId, userId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Estimateavailabletimeoffrequest",
        "required": "false"
      }
    ],
    "return": "Estimateavailabletimeoffresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit\nvar userId string // The id of the user for whom the time off request estimate is requested\nvar body platformclientv2.Estimateavailabletimeoffrequest // body\n// Estimates available time off for an agent\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitUserTimeoffrequestsEstimate(managementUnitId, userId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitUserTimeoffrequestsEstimate: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitweekshifttradematch": {
    "operationId": "postworkforcemanagementmanagementunitweekshifttradematch",
    "functionName": "PostWorkforcemanagementManagementunitWeekShifttradeMatch",
    "signature": "PostWorkforcemanagementManagementunitWeekShifttradeMatch(managementUnitId, weekDateId, tradeId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "tradeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Matchshifttraderequest",
        "required": "true"
      }
    ],
    "return": "Matchshifttraderesponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar weekDateId time.Time // The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar tradeId string // The ID of the shift trade to update\nvar body platformclientv2.Matchshifttraderequest // body\n// Matches a shift trade. This route can only be called by the receiving agent\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitWeekShifttradeMatch(managementUnitId, weekDateId, tradeId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitWeekShifttradeMatch: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitweekshifttrades": {
    "operationId": "postworkforcemanagementmanagementunitweekshifttrades",
    "functionName": "PostWorkforcemanagementManagementunitWeekShifttrades",
    "signature": "PostWorkforcemanagementManagementunitWeekShifttrades(managementUnitId, weekDateId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Addshifttraderequest",
        "required": "true"
      }
    ],
    "return": "Shifttraderesponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar weekDateId time.Time // The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Addshifttraderequest // body\n// Adds a shift trade\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitWeekShifttrades(managementUnitId, weekDateId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitWeekShifttrades: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitweekshifttradessearch": {
    "operationId": "postworkforcemanagementmanagementunitweekshifttradessearch",
    "functionName": "PostWorkforcemanagementManagementunitWeekShifttradesSearch",
    "signature": "PostWorkforcemanagementManagementunitWeekShifttradesSearch(managementUnitId, weekDateId, body, forceDownloadService)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Searchshifttradesrequest",
        "required": "true"
      },
      {
        "name": "forceDownloadService",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Searchshifttradesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar weekDateId time.Time // The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Searchshifttradesrequest // body\nvar forceDownloadService bool // Force the result of this operation to be sent via download service. For testing/app development purposes\n// Searches for potential shift trade matches for the current agent\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitWeekShifttradesSearch(managementUnitId, weekDateId, body, forceDownloadService)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitWeekShifttradesSearch: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitweekshifttradesstatebulk": {
    "operationId": "postworkforcemanagementmanagementunitweekshifttradesstatebulk",
    "functionName": "PostWorkforcemanagementManagementunitWeekShifttradesStateBulk",
    "signature": "PostWorkforcemanagementManagementunitWeekShifttradesStateBulk(managementUnitId, weekDateId, body, forceAsync)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "time.Time",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Bulkshifttradestateupdaterequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Bulkupdateshifttradestateresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar weekDateId time.Time // The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nvar body platformclientv2.Bulkshifttradestateupdaterequest // body\nvar forceAsync bool // Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes\n// Updates the state of a batch of shift trades\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitWeekShifttradesStateBulk(managementUnitId, weekDateId, body, forceAsync)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitWeekShifttradesStateBulk: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitworkplancopy": {
    "operationId": "postworkforcemanagementmanagementunitworkplancopy",
    "functionName": "PostWorkforcemanagementManagementunitWorkplanCopy",
    "signature": "PostWorkforcemanagementManagementunitWorkplanCopy(managementUnitId, workPlanId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Copyworkplan",
        "required": "false"
      }
    ],
    "return": "Workplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar workPlanId string // The ID of the work plan to create a copy\nvar body platformclientv2.Copyworkplan // body\n// Create a copy of work plan\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitWorkplanCopy(managementUnitId, workPlanId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitWorkplanCopy: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitworkplanvalidate": {
    "operationId": "postworkforcemanagementmanagementunitworkplanvalidate",
    "functionName": "PostWorkforcemanagementManagementunitWorkplanValidate",
    "signature": "PostWorkforcemanagementManagementunitWorkplanValidate(managementUnitId, workPlanId, expand, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "[]string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Workplanvalidationrequest",
        "required": "false"
      }
    ],
    "return": "Validateworkplanresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar workPlanId string // The ID of the work plan to validate. For new work plan, use the word 'new' for the ID.\nvar expand []string // \nvar body platformclientv2.Workplanvalidationrequest // body\n// Validate Work Plan\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitWorkplanValidate(managementUnitId, workPlanId, expand, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitWorkplanValidate: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitworkplanrotationcopy": {
    "operationId": "postworkforcemanagementmanagementunitworkplanrotationcopy",
    "functionName": "PostWorkforcemanagementManagementunitWorkplanrotationCopy",
    "signature": "PostWorkforcemanagementManagementunitWorkplanrotationCopy(managementUnitId, workPlanRotationId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanRotationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Copyworkplanrotationrequest",
        "required": "false"
      }
    ],
    "return": "Workplanrotationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar workPlanRotationId string // The ID of the work plan rotation to create a copy\nvar body platformclientv2.Copyworkplanrotationrequest // body\n// Create a copy of work plan rotation\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitWorkplanrotationCopy(managementUnitId, workPlanRotationId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitWorkplanrotationCopy: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitworkplanrotations": {
    "operationId": "postworkforcemanagementmanagementunitworkplanrotations",
    "functionName": "PostWorkforcemanagementManagementunitWorkplanrotations",
    "signature": "PostWorkforcemanagementManagementunitWorkplanrotations(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Addworkplanrotationrequest",
        "required": "false"
      }
    ],
    "return": "Workplanrotationresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar body platformclientv2.Addworkplanrotationrequest // body\n// Create a new work plan rotation\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitWorkplanrotations(managementUnitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitWorkplanrotations: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunitworkplans": {
    "operationId": "postworkforcemanagementmanagementunitworkplans",
    "functionName": "PostWorkforcemanagementManagementunitWorkplans",
    "signature": "PostWorkforcemanagementManagementunitWorkplans(managementUnitId, validationMode, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "validationMode",
        "type": "string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Createworkplan",
        "required": "false"
      }
    ],
    "return": "Workplan",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvar validationMode string // Allows to create work plan even if the validation result is invalid\nvar body platformclientv2.Createworkplan // body\n// Create a new work plan\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunitWorkplans(managementUnitId, validationMode, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunitWorkplans: %v\\n\", err)\n}"
  },
  "postworkforcemanagementmanagementunits": {
    "operationId": "postworkforcemanagementmanagementunits",
    "functionName": "PostWorkforcemanagementManagementunits",
    "signature": "PostWorkforcemanagementManagementunits(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createmanagementunitapirequest",
        "required": "false"
      }
    ],
    "return": "Managementunit",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Createmanagementunitapirequest // body\n// Add a management unit\ndata, response, err := apiInstance.PostWorkforcemanagementManagementunits(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementManagementunits: %v\\n\", err)\n}"
  },
  "postworkforcemanagementnotificationsupdate": {
    "operationId": "postworkforcemanagementnotificationsupdate",
    "functionName": "PostWorkforcemanagementNotificationsUpdate",
    "signature": "PostWorkforcemanagementNotificationsUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Updatenotificationsrequest",
        "required": "false"
      }
    ],
    "return": "Updatenotificationsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Updatenotificationsrequest // body\n// Mark a list of notifications as read or unread\ndata, response, err := apiInstance.PostWorkforcemanagementNotificationsUpdate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementNotificationsUpdate: %v\\n\", err)\n}"
  },
  "postworkforcemanagementschedules": {
    "operationId": "postworkforcemanagementschedules",
    "functionName": "PostWorkforcemanagementSchedules",
    "signature": "PostWorkforcemanagementSchedules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Currentuserschedulerequestbody",
        "required": "false"
      }
    ],
    "return": "Userschedulecontainer",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Currentuserschedulerequestbody // body\n// Get published schedule for the current user\ndata, response, err := apiInstance.PostWorkforcemanagementSchedules(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementSchedules: %v\\n\", err)\n}"
  },
  "postworkforcemanagementteamadherencehistorical": {
    "operationId": "postworkforcemanagementteamadherencehistorical",
    "functionName": "PostWorkforcemanagementTeamAdherenceHistorical",
    "signature": "PostWorkforcemanagementTeamAdherenceHistorical(teamId, body)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wfmhistoricaladherencequeryforteams",
        "required": "false"
      }
    ],
    "return": "Wfmhistoricaladherenceresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar teamId string // The ID of the team\nvar body platformclientv2.Wfmhistoricaladherencequeryforteams // body\n// Request a teams historical adherence report\ndata, response, err := apiInstance.PostWorkforcemanagementTeamAdherenceHistorical(teamId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementTeamAdherenceHistorical: %v\\n\", err)\n}"
  },
  "postworkforcemanagementteamshrinkagejobs": {
    "operationId": "postworkforcemanagementteamshrinkagejobs",
    "functionName": "PostWorkforcemanagementTeamShrinkageJobs",
    "signature": "PostWorkforcemanagementTeamShrinkageJobs(teamId, body)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Wfmhistoricalshrinkageteamsrequest",
        "required": "false"
      }
    ],
    "return": "Wfmhistoricalshrinkageresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar teamId string // The ID of the team\nvar body platformclientv2.Wfmhistoricalshrinkageteamsrequest // body\n// Request a historical shrinkage report\ndata, response, err := apiInstance.PostWorkforcemanagementTeamShrinkageJobs(teamId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementTeamShrinkageJobs: %v\\n\", err)\n}"
  },
  "postworkforcemanagementtimeoffbalancejobs": {
    "operationId": "postworkforcemanagementtimeoffbalancejobs",
    "functionName": "PostWorkforcemanagementTimeoffbalanceJobs",
    "signature": "PostWorkforcemanagementTimeoffbalanceJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Timeoffbalancerequest",
        "required": "true"
      }
    ],
    "return": "Timeoffbalancesresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Timeoffbalancerequest // The request body\n// Query time off balances for the current user for specified activity code and dates\ndata, response, err := apiInstance.PostWorkforcemanagementTimeoffbalanceJobs(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementTimeoffbalanceJobs: %v\\n\", err)\n}"
  },
  "postworkforcemanagementtimeofflimitsavailablequery": {
    "operationId": "postworkforcemanagementtimeofflimitsavailablequery",
    "functionName": "PostWorkforcemanagementTimeofflimitsAvailableQuery",
    "signature": "PostWorkforcemanagementTimeofflimitsAvailableQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Availabletimeoffrequest",
        "required": "false"
      }
    ],
    "return": "Availabletimeoffresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Availabletimeoffrequest // body\n// Queries available time off for the current user\ndata, response, err := apiInstance.PostWorkforcemanagementTimeofflimitsAvailableQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementTimeofflimitsAvailableQuery: %v\\n\", err)\n}"
  },
  "postworkforcemanagementtimeoffrequests": {
    "operationId": "postworkforcemanagementtimeoffrequests",
    "functionName": "PostWorkforcemanagementTimeoffrequests",
    "signature": "PostWorkforcemanagementTimeoffrequests(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Createagenttimeoffrequest",
        "required": "false"
      }
    ],
    "return": "Timeoffrequestresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Createagenttimeoffrequest // body\n// Create a time off request for the current user\ndata, response, err := apiInstance.PostWorkforcemanagementTimeoffrequests(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementTimeoffrequests: %v\\n\", err)\n}"
  },
  "postworkforcemanagementtimeoffrequestsestimate": {
    "operationId": "postworkforcemanagementtimeoffrequestsestimate",
    "functionName": "PostWorkforcemanagementTimeoffrequestsEstimate",
    "signature": "PostWorkforcemanagementTimeoffrequestsEstimate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Estimateavailabletimeoffrequest",
        "required": "false"
      }
    ],
    "return": "Estimateavailabletimeoffresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Estimateavailabletimeoffrequest // body\n// Estimates available time off for current user\ndata, response, err := apiInstance.PostWorkforcemanagementTimeoffrequestsEstimate(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementTimeoffrequestsEstimate: %v\\n\", err)\n}"
  },
  "postworkforcemanagementtimeoffrequestsintegrationstatusquery": {
    "operationId": "postworkforcemanagementtimeoffrequestsintegrationstatusquery",
    "functionName": "PostWorkforcemanagementTimeoffrequestsIntegrationstatusQuery",
    "signature": "PostWorkforcemanagementTimeoffrequestsIntegrationstatusQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Currentusertimeoffintegrationstatusrequest",
        "required": "false"
      }
    ],
    "return": "Timeoffintegrationstatusresponselisting",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar body platformclientv2.Currentusertimeoffintegrationstatusrequest // body\n// Retrieves integration statuses for a list of current user time off requests\ndata, response, err := apiInstance.PostWorkforcemanagementTimeoffrequestsIntegrationstatusQuery(body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PostWorkforcemanagementTimeoffrequestsIntegrationstatusQuery: %v\\n\", err)\n}"
  },
  "putworkforcemanagementagentintegrationshris": {
    "operationId": "putworkforcemanagementagentintegrationshris",
    "functionName": "PutWorkforcemanagementAgentIntegrationsHris",
    "signature": "PutWorkforcemanagementAgentIntegrationsHris(agentId, body)",
    "parameters": [
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Agentintegrationsrequest",
        "required": "true"
      }
    ],
    "return": "Agentintegrationsresponse",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar agentId string // The ID of the agent\nvar body platformclientv2.Agentintegrationsrequest // body\n// Update integrations for agent\ndata, response, err := apiInstance.PutWorkforcemanagementAgentIntegrationsHris(agentId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutWorkforcemanagementAgentIntegrationsHris: %v\\n\", err)\n}"
  },
  "putworkforcemanagementmanagementunittimeofflimitvalues": {
    "operationId": "putworkforcemanagementmanagementunittimeofflimitvalues",
    "functionName": "PutWorkforcemanagementManagementunitTimeofflimitValues",
    "signature": "PutWorkforcemanagementManagementunitTimeofflimitValues(managementUnitId, timeOffLimitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffLimitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Settimeofflimitvaluesrequest",
        "required": "false"
      }
    ],
    "return": "Timeofflimit",
    "example": "config := platformclientv2.GetDefaultConfiguration()\nconfig.BasePath = \"\"    // expected format: mypurecloud.com\nconfig.AccessToken = \"your_access_token\" // or use AuthorizeClientCredentials(...) or AuthorizeCodeGrant(...)\n\napiInstance := platformclientv2.NewWorkforceManagementApiWithConfig(config)\n\nvar managementUnitId string // The ID of the management unit.\nvar timeOffLimitId string // The ID of the time off limit object to set values for\nvar body platformclientv2.Settimeofflimitvaluesrequest // body\n// Sets daily values for a date range of time off limit object\ndata, response, err := apiInstance.PutWorkforcemanagementManagementunitTimeofflimitValues(managementUnitId, timeOffLimitId, body)\nfmt.Printf(\"Response:\\n  Success: %v\\n  Status code: %v\\n  Correlation ID: %v\\n  Body: %v\\n\", response.IsSuccess, response.StatusCode, response.CorrelationID, data.String())\nif err != nil {\n\tfmt.Printf(\"Error calling PutWorkforcemanagementManagementunitTimeofflimitValues: %v\\n\", err)\n}"
  }
}