package platformclientv2
import (
	"github.com/leekchan/timeutil"
	"encoding/json"
	"strconv"
	"strings"
)

// Localencryptionkeyrequest
type Localencryptionkeyrequest struct { 
	// ConfigId - The local configuration id that contains metadata on private local service
	ConfigId *string `json:"configId,omitempty"`


	// PublicKey - Base 64 encoded public key, generated by the local service.
	PublicKey *string `json:"publicKey,omitempty"`


	// KeypairId - The key pair id from the local service.
	KeypairId *string `json:"keypairId,omitempty"`

}

func (u *Localencryptionkeyrequest) MarshalJSON() ([]byte, error) {
	// Redundant initialization to avoid unused import errors for models with no Time values
	_  = timeutil.Timedelta{}
	type Alias Localencryptionkeyrequest

	

	return json.Marshal(&struct { 
		ConfigId *string `json:"configId,omitempty"`
		
		PublicKey *string `json:"publicKey,omitempty"`
		
		KeypairId *string `json:"keypairId,omitempty"`
		*Alias
	}{ 
		ConfigId: u.ConfigId,
		
		PublicKey: u.PublicKey,
		
		KeypairId: u.KeypairId,
		Alias:    (*Alias)(u),
	})
}

// String returns a JSON representation of the model
func (o *Localencryptionkeyrequest) String() string {
	j, _ := json.Marshal(o)
	str, _ := strconv.Unquote(strings.Replace(strconv.Quote(string(j)), `\\u`, `\u`, -1))

	return str
}
